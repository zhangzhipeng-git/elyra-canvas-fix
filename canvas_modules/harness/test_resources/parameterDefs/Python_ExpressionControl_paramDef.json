{
  "titleDefinition": {
    "title": "Python Code Support"
  },
  "current_parameters": {
    "mode": "Include"
  },
  "parameters": [
    {
      "id": "mode",
      "enum": [
        "Include",
        "Discard"
      ],
      "default": "Include"
    },
    {
      "id": "conditionExpr",
      "type": "string",
      "default": "class foo() :\n\tprint(\"test string\")\nif 1 < 2:\n\ttestVar.property = abs(-1)\n# comment\n",
      "role": "expression",
      "required": true
    }
  ],
  "uihints": {
    "id": "org.apache.spark.ml.ibm.transformers.Filter",
    "icon": "images/transformationspark.svg",
    "parameter_info": [
      {
        "parameter_ref": "mode",
        "label": {
          "default": "Mode"
        },
        "description": {
          "default": "Include or discard rows"
        },
        "orientation": "horizontal"
      },
      {
        "parameter_ref": "conditionExpr",
        "language": "text/x-python",
        "label": {
          "default": "Python Code Expression"
        },
        "description": {
          "default": "Enter a python expression to use for filtering rows"
        }
      }
    ],
    "group_info": [
      {
        "id": "basic-settings",
        "label": {
          "default": "Settings"
        },
        "type": "controls",
        "parameter_refs": [
          "mode",
          "conditionExpr"
        ]
      }
    ]
  },
  "conditions": [
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "conditionExpr",
          "message": {
            "resource_key": "condition_expression_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "conditionExpr",
            "op": "isNotEmpty"
          }
        }
      }
    }
  ],
  "dataset_metadata": [
		{
	    "fields": [
	      {
	        "name": "age",
	        "type": "integer",
	        "metadata": {
	          "description": "",
	          "measure": "range",
	          "modeling_role": "input"
	        }
	      },
	      {
	        "name": "sex",
	        "type": "string",
	        "metadata": {
	          "description": "",
	          "measure": "discrete",
	          "modeling_role": "input"
	        }
	      },
	      {
	        "name": "BP",
	        "type": "string",
	        "metadata": {
	          "description": "",
	          "measure": "discrete",
	          "modeling_role": "input"
	        }
	      },
	      {
	        "name": "cholesterol",
	        "type": "string",
	        "metadata": {
	          "description": "",
	          "measure": "discrete",
	          "modeling_role": "input"
	        }
	      },
	      {
	        "name": "Na",
	        "type": "double",
	        "metadata": {
	          "description": "",
	          "measure": "range",
	          "modeling_role": "input"
	        }
	      },
	      {
	        "name": "K",
	        "type": "double",
	        "metadata": {
	          "description": "",
	          "measure": "range",
	          "modeling_role": "input"
	        }
	      },
	      {
	        "name": "drug",
	        "type": "string",
	        "metadata": {
	          "description": "",
	          "measure": "discrete",
	          "modeling_role": "input"
	        }
	      }
	    ]
	  }
	],
  "resources": {
    "org.apache.spark.ml.ibm.transformers.Filter.label": "Filter Rows",
    "org.apache.spark.ml.ibm.transformers.Filter.desc": "Filter rows according to a condition",
    "mode.label": "Mode",
    "mode.desc": "Include or discard rows",
    "mode.Include.label": "Include",
    "mode.Discard.label": "Discard",
    "conditionExpr.label": "Condition",
    "conditionExpr.desc": "The filter condition",
    "settings.label": "Settings",
    "condition_expression_not_empty": "The condition expression cannot be empty"
  }
}
