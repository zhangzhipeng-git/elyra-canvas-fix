{"version":3,"file":"common-properties-bba2c3c1.js","sources":["../node_modules/lodash/_basePickBy.js","../node_modules/lodash/_basePick.js","../node_modules/lodash/flatten.js","../node_modules/lodash/_flatRest.js","../node_modules/lodash/pick.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_parent.js","../node_modules/lodash/_baseUnset.js","../node_modules/lodash/isPlainObject.js","../node_modules/lodash/_customOmitClone.js","../node_modules/lodash/omit.js","../src/common-properties/components/properties-modal/properties-modal.jsx","../src/common-properties/components/properties-modal/index.js","../src/common-properties/components/properties-editor/properties-editor.jsx","../src/common-properties/components/properties-editor/index.js","../src/common-properties/panels/tearsheet/tearsheet.jsx","../src/common-properties/components/main-editor-properties-buttons/main-editor-properties-buttons.jsx","../src/common-properties/actions.js","../src/common-properties/panels/selector/selector.jsx","../src/common-properties/components/wide-flyout/wide-flyout.jsx","../src/common-properties/components/wide-flyout/index.js","../src/common-properties/util/control-utils.js","../src/common-properties/panels/summary/summary.jsx","../src/common-properties/panels/twisty/twisty.jsx","../src/common-properties/panels/sub-panel/invoker.jsx","../src/common-properties/panels/sub-panel/button.jsx","../src/common-properties/panels/column/column.jsx","../src/common-properties/panels/control/control.jsx","../src/common-properties/panels/subtabs/subtabs.jsx","../src/common-properties/panels/text-panel/text-panel.jsx","../src/common-properties/panels/action-panel/action-panel.jsx","../src/common-properties/actions/button/button.jsx","../src/common-properties/actions/image/image.jsx","../src/common-properties/actions/action-factory.js","../src/common-properties/components/editor-form/editor-form.jsx","../node_modules/lodash/propertyOf.js","../src/common-properties/util/L10nProvider.js","../src/common-properties/form/GroupInfo.js","../src/common-properties/form/ActionInfo.js","../src/common-properties/form/ParameterInfo.js","../src/common-properties/form/ButtonInfo.js","../src/common-properties/form/StructureInfo.js","../src/common-properties/form/PropertyDef.js","../src/common-properties/form/ControlInfo.js","../src/common-properties/form/UIItem.js","../src/common-properties/form/EditorForm.js","../src/common-properties/form/Conditions.js","../src/common-properties/form/Form.js","../src/command-actions/commonPropertiesAction.js","../node_modules/lodash/_createAssigner.js","../node_modules/lodash/assign.js","../src/common-properties/reducers/properties.js","../src/common-properties/reducers/control-states.js","../src/common-properties/reducers/panel-states.js","../src/common-properties/reducers/action-states.js","../src/common-properties/reducers/error-messages.js","../src/common-properties/reducers/dataset-metadata.js","../src/common-properties/reducers/row-selections.js","../src/common-properties/reducers/row-static.js","../src/common-properties/reducers/component-metadata.js","../src/common-properties/reducers/disable-row-move-buttons.js","../src/common-properties/reducers/save-button-disable.js","../src/common-properties/reducers/wide-flyout-primary-button-disable.js","../src/common-properties/reducers/properties-settings.js","../src/common-properties/reducers/tearsheet-states.js","../src/common-properties/properties-store.js","../src/common-properties/ui-conditions/ui-conditions-parser.js","../src/common-properties/controls/expression/expressionInfo-parser.js","../src/common-properties/ui-conditions/ui-groups-parser.js","../node_modules/lodash/unionWith.js","../node_modules/lodash/_baseIntersection.js","../node_modules/lodash/_castArrayLikeObject.js","../node_modules/lodash/intersectionWith.js","../src/common-properties/ui-conditions/ui-conditions.js","../src/common-properties/ui-conditions/conditions-utils.js","../node_modules/lodash/intersection.js","../src/common-properties/components/validation-message/validation-message.jsx","../src/common-properties/components/validation-message/index.js","../src/common-properties/controls/readonly/readonly.jsx","../src/common-properties/controls/textfield/textfield.jsx","../src/common-properties/controls/toggletext/toggletext.jsx","../src/common-properties/controls/textarea/textarea.jsx","../src/common-properties/controls/numberfield/numberfield.jsx","../node_modules/lodash/toFinite.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/findIndex.js","../src/common-properties/components/table-buttons/table-buttons.jsx","../src/common-properties/panels/sub-panel/cell.jsx","../src/common-properties/controls/abstract-table.jsx","../src/common-properties/components/empty-table/empty-table.jsx","../src/common-properties/components/empty-table/index.js","../src/common-properties/components/moveable-table-rows/moveable-table-rows.jsx","../src/common-properties/controls/list/list.jsx","../src/common-properties/controls/expression/expression-builder/expression-select-field-function.jsx","../src/common-properties/controls/expression/expression-builder/expression-select-operator.jsx","../src/common-properties/controls/expression/expression-builder/expression-selection-panel.jsx","../src/common-properties/controls/expression/expression-builder/expression-builder.jsx","../src/common-properties/controls/expression/expression-toggle/expression-toggle.jsx","../src/common-properties/controls/expression/languages/python-hint.js","../src/common-properties/controls/expression/languages/r-hint.js","../src/common-properties/controls/expression/languages/CLEM-hint.js","../src/common-properties/controls/expression/expression.jsx","../src/common-properties/controls/passwordfield/passwordfield.jsx","../src/common-properties/controls/datefield/datefield.jsx","../src/common-properties/controls/timefield/timefield.jsx","../src/common-properties/controls/checkbox/checkbox.jsx","../src/common-properties/controls/toggle/toggle.jsx","../src/common-properties/controls/checkboxset/checkboxset.jsx","../src/common-properties/controls/radioset/radioset.jsx","../src/common-properties/controls/dropdown/dropdown.jsx","../src/common-properties/controls/multiselect/multiselect.jsx","../src/common-properties/controls/someofselect/someofselect.jsx","../src/common-properties/controls/selectcolumns/selectcolumns.jsx","../src/common-properties/controls/structureeditor/structureeditor.jsx","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/negate.js","../node_modules/lodash/reject.js","../src/common-properties/controls/structuretable/structuretable.jsx","../src/common-properties/controls/structurelisteditor/structurelisteditor.jsx","../src/common-properties/controls/readonlytable/readonlytable.jsx","../src/common-properties/components/control-item/control-item.jsx","../src/common-properties/controls/control-factory.js","../src/common-properties/ui-conditions/condition-ops/cellNotEmpty.js","../src/common-properties/ui-conditions/condition-ops/colNotExists.js","../src/common-properties/ui-conditions/condition-ops/colDoesExists.js","../node_modules/lodash/_baseValues.js","../node_modules/lodash/values.js","../node_modules/lodash/includes.js","../src/common-properties/ui-conditions/condition-ops/contains.js","../src/common-properties/ui-conditions/condition-ops/equals.js","../src/common-properties/ui-conditions/condition-ops/greaterThan.js","../src/common-properties/ui-conditions/condition-ops/isEmpty.js","../src/common-properties/ui-conditions/condition-ops/isNotEmpty.js","../src/common-properties/ui-conditions/condition-ops/lessThan.js","../src/common-properties/ui-conditions/condition-ops/matches.js","../src/common-properties/ui-conditions/condition-ops/notContains.js","../src/common-properties/ui-conditions/condition-ops/notEquals.js","../src/common-properties/ui-conditions/condition-ops/notMatches.js","../src/common-properties/ui-conditions/condition-ops/isDateTime.js","../src/common-properties/ui-conditions/condition-ops/dmTypeEquals.js","../src/common-properties/ui-conditions/condition-ops/dmTypeNotEquals.js","../src/common-properties/ui-conditions/condition-ops/dmMeasurementEquals.js","../src/common-properties/ui-conditions/condition-ops/dmMeasurementNotEquals.js","../src/common-properties/ui-conditions/condition-ops/dmRoleEquals.js","../src/common-properties/ui-conditions/condition-ops/dmRoleNotEquals.js","../src/common-properties/ui-conditions/condition-ops/lengthEquals.js","../src/common-properties/ui-conditions/condition-ops/lengthLessThan.js","../src/common-properties/ui-conditions/condition-ops/lengthGreaterThan.js","../src/common-properties/ui-conditions/condition-ops/condition-ops.js","../src/common-properties/properties-controller.js","../src/common-properties/schema-validator/properties-schema-validator.js","../src/common-properties/components/title-editor/title-editor.jsx","../src/common-properties/properties-main/properties-main.jsx","../src/common-properties/common-properties.jsx"],"sourcesContent":["var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal } from \"carbon-components-react\";\nimport classNames from \"classnames\";\nimport { Portal } from \"react-portal\";\nimport { Size } from \"./../../constants/form-constants\";\nimport { CARBON_MODAL_SIZE_XSMALL, CARBON_MODAL_SIZE_SMALL, CARBON_MODAL_SIZE_LARGE } from \"./../../constants/constants\";\n\nexport default class PropertiesModal extends Component {\n\n\t// Map the editor_size in paramDef to the Carbon modal sizes\n\tgetCarbonModalSize() {\n\t\tswitch (this.props.bsSize) {\n\t\tcase Size.SMALL: return CARBON_MODAL_SIZE_XSMALL;\n\t\tcase Size.LARGE: return CARBON_MODAL_SIZE_LARGE;\n\t\tcase Size.MAX: return CARBON_MODAL_SIZE_LARGE;\n\t\tcase Size.MEDIUM:\n\t\tdefault: return CARBON_MODAL_SIZE_SMALL;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst modalSize = this.getCarbonModalSize();\n\n\t\treturn (\n\t\t\t<Portal>\n\t\t\t\t<Modal\n\t\t\t\t\tclassName={classNames(\"properties-modal\", { \"noButtons\": this.props.showPropertiesButtons === false }, this.props.classNames)}\n\t\t\t\t\topen\n\t\t\t\t\tmodalHeading={this.props.title}\n\t\t\t\t\tprimaryButtonText={this.props.applyLabel}\n\t\t\t\t\tsecondaryButtonText={this.props.rejectLabel}\n\t\t\t\t\tonRequestSubmit={this.props.okHandler}\n\t\t\t\t\tonSecondarySubmit={this.props.cancelHandler}\n\t\t\t\t\taria-label=\"\"\n\t\t\t\t\tsize={modalSize}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"properties-modal-children\">\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t</Portal>\n\t\t);\n\t}\n}\n\nPropertiesModal.propTypes = {\n\tcancelHandler: PropTypes.func,\n\tokHandler: PropTypes.func,\n\tbsSize: PropTypes.string,\n\ttitle: PropTypes.string,\n\tchildren: PropTypes.element,\n\tshowPropertiesButtons: PropTypes.bool,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\tclassNames: PropTypes.string\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropertiesModal from \"./properties-modal.jsx\";\nexport default PropertiesModal;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PropertiesButtons from \"./../properties-buttons\";\n\nexport default class PropertiesEditor extends Component {\n\n\trender() {\n\t\tconst classSize = (typeof this.props.bsSize === \"undefined\") ? \"large\" : this.props.bsSize;\n\t\tconst propertyEditingClass = \"properties-editing properties-\" + classSize;\n\t\tconst buttons = (<PropertiesButtons\n\t\t\tokHandler={this.props.okHandler}\n\t\t\tcancelHandler={this.props.cancelHandler}\n\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\tshowPropertiesButtons={this.props.showPropertiesButtons}\n\t\t/>);\n\n\t\treturn (\n\t\t\t<div className={propertyEditingClass} >\n\t\t\t\t<h2>{this.props.title}</h2>\n\t\t\t\t<div className=\"properties-body\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t\t{buttons}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nPropertiesEditor.propTypes = {\n\tcancelHandler: PropTypes.func,\n\tokHandler: PropTypes.func,\n\tbsSize: PropTypes.string,\n\ttitle: PropTypes.string,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\tchildren: PropTypes.element,\n\tshowPropertiesButtons: PropTypes.bool\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropertiesEditor from \"./properties-editor.jsx\";\nexport default PropertiesEditor;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { ComposedModal, ModalHeader, ModalBody } from \"carbon-components-react\";\nimport { Portal } from \"react-portal\";\n\nimport PropertiesButtons from \"../../components/properties-buttons\";\n\nclass TearSheet extends Component {\n\trender() {\n\t\tconst title = this.props.tearsheet ? this.props.tearsheet.title : null;\n\t\tconst description = this.props.tearsheet ? this.props.tearsheet.description : null;\n\t\tconst content = this.props.tearsheet ? this.props.tearsheet.content : null;\n\t\tconst displayFooterButtons = this.props.showPropertiesButtons && !this.props.applyOnBlur;\n\t\tconst displayTabs = !Array.isArray(content);\n\n\t\tconst buttons = this.props.applyOnBlur\n\t\t\t? null\n\t\t\t: (<PropertiesButtons\n\t\t\t\tokHandler={this.props.okHandler}\n\t\t\t\tcancelHandler={this.props.cancelHandler}\n\t\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\t\tshowPropertiesButtons={this.props.showPropertiesButtons}\n\t\t\t/>);\n\n\t\treturn (\n\t\t\t<Portal>\n\t\t\t\t<ComposedModal\n\t\t\t\t\tclassName={classNames(\"properties-tearsheet-panel\", { \"properties-tearsheet-stacked\": this.props.stacked })}\n\t\t\t\t\topen={this.props.open}\n\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\tpreventCloseOnClickOutside\n\t\t\t\t>\n\t\t\t\t\t<ModalHeader\n\t\t\t\t\t\tclassName={classNames(\"properties-tearsheet-header\",\n\t\t\t\t\t\t\t{ \"with-buttons\": displayFooterButtons },\n\t\t\t\t\t\t\t{ \"with-tabs\": displayTabs },\n\t\t\t\t\t\t\t{ \"hide-close-button\": typeof this.props.onCloseCallback !== \"function\" })}\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tbuttonOnClick={this.props.onCloseCallback}\n\t\t\t\t\t>\n\t\t\t\t\t\t{description ? (<p>{description}</p>) : null}\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className={classNames(\"properties-tearsheet-body\",\n\t\t\t\t\t\t{ \"with-buttons\": displayFooterButtons },\n\t\t\t\t\t\t{ \"with-tabs\": displayTabs })}\n\t\t\t\t\t>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t{buttons}\n\t\t\t\t</ComposedModal>\n\t\t\t</Portal>);\n\t}\n}\nTearSheet.propTypes = {\n\topen: PropTypes.bool,\n\tstacked: PropTypes.bool,\n\tonCloseCallback: PropTypes.func,\n\ttearsheet: PropTypes.shape({\n\t\ttitle: PropTypes.string.isRequired,\n\t\tdescription: PropTypes.string,\n\t\tcontent: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object\n\t\t])\n\t}),\n\tshowPropertiesButtons: PropTypes.bool,\n\tapplyLabel: PropTypes.string, // Required if showPropertiesButtons is true\n\trejectLabel: PropTypes.string, // Required if showPropertiesButtons is true\n\tokHandler: PropTypes.func, // Required if showPropertiesButtons is true\n\tcancelHandler: PropTypes.func, // Required if showPropertiesButtons is true\n\tapplyOnBlur: PropTypes.bool.isRequired\n};\n\nTearSheet.defaultProps = {\n\topen: false,\n\tshowPropertiesButtons: false,\n\tapplyOnBlur: false,\n\tstacked: false\n};\n\nexport default TearSheet;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport PropertiesButtons from \"../properties-buttons\";\n\n\nclass MainEditorPropertiesButtons extends Component {\n\n\tshouldEnabledSaveButton() {\n\t\tif (this.props.saveButtonEnabled) {\n\t\t\tif (this.props.disableSaveOnRequiredErrors) {\n\t\t\t\t// Return false if any required fields are not filled in\n\t\t\t\treturn Object.keys(this.props.requiredErrorMessages).length === 0;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\trender() {\n\t\tconst saveButtonEnabled = this.shouldEnabledSaveButton();\n\t\treturn (<PropertiesButtons\n\t\t\tokHandler={this.props.okHandler}\n\t\t\tcancelHandler={this.props.cancelHandler}\n\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\tshowPropertiesButtons={this.props.showPropertiesButtons}\n\t\t\tapplyButtonEnabled={saveButtonEnabled}\n\t\t/>);\n\t}\n}\n\nMainEditorPropertiesButtons.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tokHandler: PropTypes.func,\n\tcancelHandler: PropTypes.func,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\tshowPropertiesButtons: PropTypes.bool,\n\tdisableSaveOnRequiredErrors: PropTypes.bool,\n\tsaveButtonEnabled: PropTypes.bool, // pass in by redux\n\trequiredErrorMessages: PropTypes.object // pass in by redux\n};\n\nMainEditorPropertiesButtons.defaultProps = {\n\tsaveButtonEnabled: true\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tsaveButtonEnabled: !ownProps.controller.getSaveButtonDisable(),\n\trequiredErrorMessages: ownProps.controller.getRequiredErrorMessages()\n});\n\nexport default connect(mapStateToProps, null)(MainEditorPropertiesButtons);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * action types\n */\n\nexport const SET_PROPERTY_VALUES = \"SET_PROPERTY_VALUES\";\nexport const UPDATE_PROPERTY_VALUE = \"UPDATE_PROPERTY_VALUE\";\nexport const REMOVE_PROPERTY_VALUE = \"REMOVE_PROPERTY_VALUE\";\nexport const SET_CONTROL_STATES = \"SET_CONTROL_STATES\";\nexport const UPDATE_CONTROL_STATE = \"UPDATE_CONTROL_STATE\";\nexport const SET_PANEL_STATES = \"SET_PANEL_STATES\";\nexport const UPDATE_PANEL_STATE = \"UPDATE_PANEL_STATE\";\nexport const SET_ACTION_STATES = \"SET_ACTION_STATES\";\nexport const UPDATE_ACTION_STATE = \"UPDATE_ACTION_STATE\";\nexport const SET_ERROR_MESSAGES = \"SET_ERROR_MESSAGES\";\nexport const UPDATE_ERROR_MESSAGE = \"UPDATE_ERROR_MESSAGE\";\nexport const CLEAR_ERROR_MESSAGE = \"CLEAR_ERROR_MESSAGE\";\nexport const SET_DATASET_METADATA = \"SET_DATASET_METADATA\";\nexport const UPDATE_SELECTED_ROWS = \"UPDATE_SELECTED_ROWS\";\nexport const CLEAR_SELECTED_ROWS = \"CLEAR_SELECTED_ROWS\";\nexport const SET_TITLE = \"SET_TITLE\";\nexport const SET_ACTIVE_TAB = \"SET_ACTIVE_TAB\";\nexport const DISABLE_ROW_MOVE_BUTTONS = \"DISABLE_ROW_MOVE_BUTTONS\";\nexport const SET_SAVE_BUTTON_DISABLE = \"SET_SAVE_BUTTON_DISABLE\";\nexport const SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED = \"SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED\";\nexport const SET_ADD_REMOVE_ROWS = \"SET_ADD_REMOVE_ROWS\";\nexport const UPDATE_STATIC_ROWS = \"UPDATE_STATIC_ROWS\";\nexport const CLEAR_STATIC_ROWS = \"CLEAR_STATIC_ROWS\";\nexport const SET_TABLE_BUTTON_ENABLED = \"SET_TABLE_BUTTON_ENABLED\";\nexport const SET_HIDE_EDIT_BUTTON = \"SET_HIDE_EDIT_BUTTON\";\nexport const SET_ACTIVE_TEARSHEET = \"SET_ACTIVE_TEARSHEET\";\n\n\n/*\n * action creators\n */\nexport function setHideEditButton(disableState) {\n\treturn { type: SET_HIDE_EDIT_BUTTON, info: disableState };\n}\n\nexport function setPropertyValues(properties) {\n\treturn { type: SET_PROPERTY_VALUES, properties };\n}\n\nexport function updatePropertyValue(property) {\n\treturn { type: UPDATE_PROPERTY_VALUE, property };\n}\n\nexport function removePropertyValue(property) {\n\treturn { type: REMOVE_PROPERTY_VALUE, property };\n}\n\n\nexport function setControlStates(states) {\n\treturn { type: SET_CONTROL_STATES, states };\n}\n\nexport function updateControlState(state) {\n\treturn { type: UPDATE_CONTROL_STATE, state };\n}\n\nexport function setPanelStates(states) {\n\treturn { type: SET_PANEL_STATES, states };\n}\n\nexport function updatePanelState(state) {\n\treturn { type: UPDATE_PANEL_STATE, state };\n}\n\nexport function setActionStates(states) {\n\treturn { type: SET_ACTION_STATES, states };\n}\n\nexport function updateActionState(state) {\n\treturn { type: UPDATE_ACTION_STATE, state };\n}\n\n\nexport function setErrorMessages(messages) {\n\treturn { type: SET_ERROR_MESSAGES, messages };\n}\n\nexport function updateErrorMessage(message) {\n\treturn { type: UPDATE_ERROR_MESSAGE, message };\n}\n\nexport function clearErrorMessage(message) {\n\treturn { type: CLEAR_ERROR_MESSAGE, message };\n}\n\nexport function setDatasetMetadata(datasetMetadata) {\n\treturn { type: SET_DATASET_METADATA, datasetMetadata };\n}\n\nexport function updateSelectedRows(info) {\n\treturn { type: UPDATE_SELECTED_ROWS, info };\n}\n\nexport function clearSelectedRows(info) {\n\treturn { type: CLEAR_SELECTED_ROWS, info };\n}\n\nexport function setTitle(title) {\n\treturn { type: SET_TITLE, title };\n}\n\nexport function setActiveTab(activeTab) {\n\treturn { type: SET_ACTIVE_TAB, activeTab };\n}\n\nexport function disableRowMoveButtons(propertyIds) {\n\treturn { type: DISABLE_ROW_MOVE_BUTTONS, propertyIds };\n}\n\nexport function setSaveButtonDisable(disableState) {\n\treturn { type: SET_SAVE_BUTTON_DISABLE, disableState };\n}\n\nexport function setWideFlyoutPrimaryButtonDisabled(info) {\n\treturn { type: SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED, info };\n}\n\nexport function setAddRemoveRows(info) {\n\treturn { type: SET_ADD_REMOVE_ROWS, info };\n}\n\nexport function updateStaticRows(info) {\n\treturn { type: UPDATE_STATIC_ROWS, info };\n}\n\nexport function clearStaticRows(info) {\n\treturn { type: CLEAR_STATIC_ROWS, info };\n}\n\nexport function setTableButtonEnabled(info) {\n\treturn { type: SET_TABLE_BUTTON_ENABLED, info };\n}\n\nexport function setTearsheetState(tearsheetId) {\n\treturn { type: SET_ACTIVE_TEARSHEET, tearsheetId };\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass SelectorPanel extends React.Component {\n\n\trender() {\n\t\tlet panel = this.props.panel;\n\t\tif (typeof panel === \"undefined\") {\n\t\t\tpanel = <div className=\"properties-control-panel\" />;\n\t\t}\n\t\treturn (panel);\n\t}\n}\n\nSelectorPanel.propTypes = {\n\tpanels: PropTypes.object,\n\tdependsOn: PropTypes.string,\n\tcontroller: PropTypes.object.isRequired,\n\tpanel: PropTypes.object // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanel: ownProps.panels[ownProps.controller.getPropertyValue({ name: ownProps.dependsOn })]\n});\n\nexport default connect(mapStateToProps, null)(SelectorPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport PropertiesButtons from \"./../properties-buttons\";\nimport classNames from \"classnames\";\nimport { Portal } from \"react-portal\";\n\nexport default class WideFlyout extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tstyle: {\n\t\t\t\theight: 0\n\t\t\t}\n\t\t};\n\t\tthis.updateDimensions = this.updateDimensions.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateDimensions();\n\t\twindow.addEventListener(\"resize\", this.updateDimensions);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"resize\", this.updateDimensions);\n\t}\n\n\tupdateDimensions() {\n\t\tif (this.wideFlyout) {\n\t\t\t// used to find correct parent\n\t\t\tif (!this.commonPropertiesParent) {\n\t\t\t\tthis.commonPropertiesParent = this.findPropertyWrapper(this.wideFlyout);\n\t\t\t}\n\t\t\tif (this.commonPropertiesParent) {\n\t\t\t\tconst commonProperties = ReactDOM.findDOMNode(this.commonPropertiesParent).getBoundingClientRect();\n\t\t\t\tthis.setState({\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\theight: commonProperties.height + \"px\",\n\t\t\t\t\t\ttop: commonProperties.top + \"px\",\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tfindPropertyWrapper(node) {\n\t\tif (node && node.parentNode && node.parentNode.className && node.parentNode.className.includes(\"properties-right-flyout\")) {\n\t\t\treturn node.parentNode;\n\t\t} else if (node && node.parentNode) {\n\t\t\treturn this.findPropertyWrapper(node.parentNode);\n\t\t}\n\t\treturn null;\n\t}\n\n\trender() {\n\t\tconst overlay = (<div className={classNames(\"properties-wf-overlay\", { \"show\": this.props.show })} />);\n\t\tlet title;\n\t\tlet buttons;\n\t\tlet children;\n\t\tif (this.props.show) {\n\t\t\tif (this.props.title) {\n\t\t\t\ttitle = (<div className=\"properties-wf-title\">{this.props.title}</div>);\n\t\t\t}\n\t\t\tbuttons = (<PropertiesButtons\n\t\t\t\tokHandler={this.props.okHandler}\n\t\t\t\tcancelHandler={this.props.cancelHandler}\n\t\t\t\tshowPropertiesButtons={this.props.showPropertiesButtons}\n\t\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\t\tapplyButtonEnabled={this.props.okButtonEnabled}\n\t\t\t/>);\n\t\t\tchildren = (<div className=\"properties-wf-children\"> {this.props.children} </div>);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"properties-wf-modal\" ref={ (ref) => (this.wideFlyout = ref) }>\n\t\t\t\t<Portal node={this.commonPropertiesParent}>\n\t\t\t\t\t{ overlay }\n\t\t\t\t\t<div className={classNames(\"properties-wf-content\", { \"show\": this.props.show, \"properties-light-disabled\": !this.props.light })} style={this.state.style}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t\t{children}\n\t\t\t\t\t\t{buttons}\n\t\t\t\t\t</div>\n\t\t\t\t</Portal>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nWideFlyout.propTypes = {\n\tchildren: PropTypes.element,\n\tcancelHandler: PropTypes.func,\n\tokHandler: PropTypes.func,\n\tshow: PropTypes.bool,\n\tshowPropertiesButtons: PropTypes.bool,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\ttitle: PropTypes.string,\n\tlight: PropTypes.bool,\n\tokButtonEnabled: PropTypes.bool\n};\n\nWideFlyout.defaultProps = {\n\tshow: false,\n\tokButtonEnabled: true\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WideFlyout from \"./wide-flyout.jsx\";\nexport default WideFlyout;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { v4 as uuid4 } from \"uuid\";\nimport { TRUNCATE_LIMIT } from \"../constants/constants\";\n\n/**\n* Used to return a unique id for a control that requires an html id\n* @param propertyId (required)\n* @param id (optional)\n* @return returns a unique id used for control DOM ids\n*/\nfunction getControlId(propertyId, id) {\n\tconst uuid = id ? id : uuid4();\n\treturn `${getDataId(propertyId)}-${uuid}`;\n}\n\nfunction getDataId(propertyId) {\n\tlet id = propertyId.name;\n\tif (typeof propertyId.row !== \"undefined\") {\n\t\tid += \"_\" + propertyId.row;\n\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\tid += \"_\" + propertyId.col;\n\t\t}\n\t} else if (typeof propertyId.col !== \"undefined\") {\n\t\tid += \"_\" + propertyId.col;\n\t}\n\treturn \"properties-\" + id;\n}\n\nfunction\tgetCharLimit(control, defaultLimit) {\n\tlet limit = defaultLimit;\n\tif (control.charLimit) {\n\t\tlimit = control.charLimit;\n\t}\n\treturn limit;\n}\n\nfunction splitNewlines(text, splitValue) {\n\tif (text.length > 0) {\n\t\tconst split = text.split(splitValue);\n\t\tif (Array.isArray(split)) {\n\t\t\treturn split;\n\t\t}\n\t\treturn [split];\n\t}\n\treturn [];\n}\n\n// returns an object\n//\tvalue = string: the concatenated string\n//\ttruncated = boolean: indicating if any value was too long and had to be truncated\nfunction joinNewlines(list, joinValue) {\n\tlet truncated = false;\n\tif (Array.isArray(list)) {\n\t\tif (list.length === 0) {\n\t\t\treturn { value: \"\", truncated };\n\t\t}\n\n\t\tlet concatenatedValue = \"\";\n\t\tlist.forEach((value, index) => {\n\t\t\tconst truncatedValue = truncateDisplayValue(value);\n\t\t\tconst join = index === list.length - 1 ? \"\" : joinValue; // Do not add joinValue to last value in array\n\t\t\tconcatenatedValue += truncatedValue + join;\n\t\t\tif (!truncated) { // we only need this to be set true once\n\t\t\t\ttruncated = truncatedValue.length !== value.length;\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\tvalue: concatenatedValue,\n\t\t\ttruncated\n\t\t};\n\t}\n\treturn { value: list, truncated };\n}\n\n// truncate the value that gets displayed if its too long\nfunction truncateDisplayValue(value) {\n\tif (value.length > TRUNCATE_LIMIT) {\n\t\treturn value.substring(0, TRUNCATE_LIMIT) + \"...\";\n\t}\n\treturn value;\n}\n\nfunction getValidationProps(messageInfo, inTable) {\n\tconst validationProps = {};\n\t// inline in tables don't show carbon error/warn\n\tif (!messageInfo || inTable) {\n\t\treturn validationProps;\n\t}\n\tif (messageInfo.type === \"error\") {\n\t\tvalidationProps.invalid = true;\n\t\tvalidationProps.invalidText = messageInfo.text;\n\t} else if (messageInfo.type === \"warning\") {\n\t\tvalidationProps.warn = true;\n\t\tvalidationProps.warnText = messageInfo.text;\n\t}\n\treturn validationProps;\n}\n\nexport {\n\tgetCharLimit,\n\tgetControlId,\n\tgetDataId,\n\tsplitNewlines,\n\tjoinNewlines,\n\ttruncateDisplayValue,\n\tgetValidationProps\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint max-depth: [\"error\", 6] */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"carbon-components-react\";\nimport { Add16 } from \"@carbon/icons-react\";\nimport WideFlyout from \"./../../components/wide-flyout\";\nimport Icon from \"./../../../icons/icon.jsx\";\n\nimport { isEmpty } from \"lodash\";\nimport * as PropertyUtils from \"./../../util/property-utils\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { MESSAGE_KEYS, CONDITION_MESSAGE_TYPE } from \"./../../constants/constants\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { Type, ParamRole } from \"./../../constants/form-constants.js\";\nimport classNames from \"classnames\";\n\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\n\nclass SummaryPanel extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowWideFlyout: false\n\t\t};\n\t\tthis.handleLinkClicked = this.handleLinkClicked.bind(this);\n\t\tthis.hideWideFlyout = this.hideWideFlyout.bind(this);\n\t\tthis.cancelWideFlyout = this.cancelWideFlyout.bind(this);\n\t\tthis._getSummaryTables = this._getSummaryTables.bind(this);\n\t}\n\t_onMouseMove(evt) {\n\t\tthis.setState({ mousePos: { x: evt.clientX, y: evt.clientY } });\n\t}\n\n\thideWideFlyout() {\n\t\tthis.props.controller.setIsSummaryPanelShowing(false);\n\t\tthis.setState({ showWideFlyout: false });\n\t\t// on close clear *all* selected rows\n\t\tthis.props.controller.clearSelectedRows();\n\t}\n\tcancelWideFlyout() {\n\t\t// on cancel reset back to original value\n\t\tthis.props.controller.setPropertyValues(this.initialControlValues);\n\t\tthis.props.controller.setErrorMessages(this.initialMessages);\n\t\tthis.props.controller.setControlStates(this.initialStates);\n\t\tthis.hideWideFlyout();\n\t}\n\n\thandleLinkClicked() {\n\t\tif (this.props.children) {\n\t\t\tthis.props.controller.setIsSummaryPanelShowing(true);\n\t\t\tthis.setState({ showWideFlyout: true });\n\t\t}\n\t\t// sets the current value for parameter.  Used on cancel\n\t\tthis.initialControlValues = this.props.controller.getPropertyValues();\n\t\tthis.initialMessages = this.props.controller.getAllErrorMessages();\n\t\tthis.initialStates = this.props.controller.getControlStates();\n\t}\n\n\t/*\n\t* Returns summary tables to be displayed in summary panel\n\t*/\n\t_getSummaryTables() {\n\t\tconst summaryTables = [];\n\t\tconst summaryControls = this.props.controller.getSummaryPanelControls(this.props.panel.id);\n\t\t// no controls in summary panel\n\t\tif (!Array.isArray(summaryControls)) {\n\t\t\treturn summaryTables;\n\t\t}\n\t\tfor (const controlName of summaryControls) {\n\t\t\tconst propertyId = { name: controlName };\n\t\t\tconst summaryControl = this.props.controller.getControl(propertyId);\n\t\t\t// get filtered controlValue (filters out hidden and disabled values)\n\t\t\tlet controlValue = this.props.controller.getPropertyValue(propertyId, { filterHiddenDisabled: true });\n\n\t\t\t// let custom control set their own value to be displayed\n\t\t\tconst customValue = this.props.controller.getCustPropSumPanelValue(propertyId);\n\t\t\tlet showCustom = false;\n\t\t\tif (typeof customValue !== \"undefined\" && customValue !== null) {\n\t\t\t\tcontrolValue = customValue.value;\n\t\t\t\tsummaryControl.summaryLabel = customValue.label;\n\t\t\t\tshowCustom = true;\n\t\t\t}\n\t\t\tconst summaryValues = [];\n\t\t\tif (Array.isArray(controlValue)) {\n\t\t\t\tlet summaryColumns = 0;\n\t\t\t\tif (summaryControl.subControls) {\n\t\t\t\t\tfor (let idx = 0; idx < summaryControl.subControls.length; idx++) {\n\t\t\t\t\t\tconst colPropertyId = {\n\t\t\t\t\t\t\tname: propertyId.name,\n\t\t\t\t\t\t\tcol: idx\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (this.props.controller.isSummary(colPropertyId) || showCustom) {\n\t\t\t\t\t\t\tsummaryColumns++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (summaryControl.summary) {\n\t\t\t\t\tsummaryColumns = 1;\n\t\t\t\t}\n\t\t\t\t// subtract 2 px for some buffer between columns\n\t\t\t\tconst colWidth = summaryColumns !== 0 ? \"calc((100% / \" + summaryColumns + \") - 2px)\" : \"100%\";\n\n\t\t\t\tfor (let rowIdx = 0; rowIdx < controlValue.length; rowIdx++) {\n\t\t\t\t\tconst rowValue = controlValue[rowIdx];\n\t\t\t\t\tconst rowData = [];\n\t\t\t\t\t// table value\n\t\t\t\t\tif (Array.isArray(rowValue)) {\n\t\t\t\t\t\tfor (let colIdx = 0; colIdx < rowValue.length; colIdx++) {\n\t\t\t\t\t\t\tconst colPropertyId = {\n\t\t\t\t\t\t\t\tname: propertyId.name,\n\t\t\t\t\t\t\t\tcol: colIdx\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (this.props.controller.isSummary(colPropertyId) || showCustom) {\n\t\t\t\t\t\t\t\t// This allows array cell content to look acceptable\n\t\t\t\t\t\t\t\tconst displayValue = this._getSummaryDisplayValue(rowValue[colIdx], colPropertyId);\n\t\t\t\t\t\t\t\tconst contentValue = typeof displayValue === \"undefined\" ? \"\"\n\t\t\t\t\t\t\t\t\t: JSON.stringify(displayValue).replace(\"\\\"\", \"\")\n\t\t\t\t\t\t\t\t\t\t.replace(new RegExp(\"\\\"\", \"g\"), \"\") + \" \";\n\t\t\t\t\t\t\t\trowData.push(\n\t\t\t\t\t\t\t\t\t<td key={\"summary-table-data-\" + colIdx}\n\t\t\t\t\t\t\t\t\t\tclassName={\"properties-summary-row-data \"}\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: colWidth }}\n\t\t\t\t\t\t\t\t\t\tonMouseMove={this._onMouseMove.bind(this)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Tooltip id={uuid4()} tip={contentValue} mousePos={this.state.mousePos} showToolTipIfTruncated>\n\t\t\t\t\t\t\t\t\t\t\t<span id={\"span_\" + uuid4()}>{contentValue}</span>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t</td>);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.props.controller.isSummary(propertyId) || showCustom) { // only push row data if control is in summary\n\t\t\t\t\t\tconst displayValue = this._getSummaryDisplayValue(rowValue, propertyId);\n\t\t\t\t\t\trowData.push(\n\t\t\t\t\t\t\t<td key={\"summary-table-row-data-\" + rowIdx} className={\"properties-summary-row-data \"}>\n\t\t\t\t\t\t\t\t<Tooltip id={uuid4()} tip={displayValue} mousePos={this.state.mousePos} showToolTipIfTruncated>\n\t\t\t\t\t\t\t\t\t<span id={\"span_\" + uuid4()}>{displayValue}</span>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</td>);\n\t\t\t\t\t}\n\t\t\t\t\tif (rowData.length > 0) {\n\t\t\t\t\t\tsummaryValues.push(\n\t\t\t\t\t\t\t<tr key={\"summary-table-row-\" + rowIdx} className={\"properties-summary-row\"}>\n\t\t\t\t\t\t\t\t{rowData}\n\t\t\t\t\t\t\t</tr>);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (controlValue) {\n\t\t\t\t// assume simple parameter\n\t\t\t\tif (this.props.controller.isSummary(propertyId) || showCustom) {\n\t\t\t\t\tconst displayValue = this._getSummaryDisplayValue(controlValue, propertyId);\n\t\t\t\t\tsummaryValues.push(\n\t\t\t\t\t\t<tr key={\"summary-row-\" + controlName} className=\"properties-summary-row\">\n\t\t\t\t\t\t\t<td key={\"summary-table-row-data-\" + controlName} className={\"properties-summary-rows-data\"}>\n\t\t\t\t\t\t\t\t{ displayValue }\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (summaryValues.length > 0) {\n\t\t\t\t// Added role presentation to fix a11y violation - no headers in the table\n\t\t\t\tlet summaryBody = (<table role=\"presentation\" key={\"summary-table-\" + controlName} className=\"properties-summary-table\">\n\t\t\t\t\t<tbody key={\"summary-body-\" + controlName}>\n\t\t\t\t\t\t{summaryValues}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>);\n\t\t\t\tif (summaryValues.length > 10) {\n\t\t\t\t\tconst largeTableLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\t\t\tMESSAGE_KEYS.LONG_TABLE_SUMMARY_PLACEHOLDER);\n\t\t\t\t\tsummaryBody = (<div className={\"properties-summary-table\"}><span>{largeTableLabel}</span></div>);\n\t\t\t\t}\n\t\t\t\tsummaryTables.push(\n\t\t\t\t\t<div key={\"summary-container-\" + controlName} className={\"properties-summary-values\"}>\n\t\t\t\t\t\t<span key={\"summary-text-\" + controlName} className={\"properties-summary-label\"}>{summaryControl.summaryLabel}</span>\n\t\t\t\t\t\t{summaryBody}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn summaryTables;\n\t}\n\n\t/**\n\t * Retrieves a properly formatted summary display value.\n\t *\n\t * @param displayValue The default value to display\n\t * @param propertyId The id of the property to display\n\t * @return A formatted display value\n\t */\n\t_getSummaryDisplayValue(displayValue, propertyId) {\n\t\tlet returnValue = displayValue;\n\t\tconst control = this.props.controller.getControl(propertyId);\n\n\t\t// Use label for controlValue if possible\n\t\tif (control.values && control.valueLabels) {\n\t\t\tconst displayIndex = control.values.indexOf(displayValue);\n\t\t\tif (displayIndex > -1 && control.valueLabels[displayIndex]) {\n\t\t\t\treturnValue = control.valueLabels[displayIndex];\n\t\t\t}\n\t\t}\n\t\tif (PropertyUtils.toType(returnValue) === \"object\") {\n\t\t\tif (control.valueDef.propType === Type.STRUCTURE && control.role === ParamRole.COLUMN) {\n\t\t\t\treturnValue = PropertyUtils.stringifyFieldValue(displayValue, control);\n\t\t\t} else {\n\t\t\t\t// We don't know what this object is, but we know we can't display it as an object\n\t\t\t\treturnValue = JSON.stringify(returnValue);\n\t\t\t}\n\t\t}\n\n\t\treturn returnValue;\n\t}\n\n\t_getSummaryIconState() {\n\t\tconst controls = this.props.controller.getSummaryPanelControls(this.props.panel.id);\n\t\tlet msg = {};\n\t\tlet errorCount = 0;\n\t\tlet warningCount = 0;\n\t\tif (Array.isArray(controls)) {\n\t\t\tcontrols.forEach((controlId) => {\n\t\t\t\tconst controlMsg = this.props.controller.getErrorMessage({ name: controlId }, true);\n\t\t\t\tif (!isEmpty(controlMsg)) {\n\t\t\t\t\tif (controlMsg.type === CONDITION_MESSAGE_TYPE.WARNING) {\n\t\t\t\t\t\twarningCount += 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (controlMsg.type === CONDITION_MESSAGE_TYPE.ERROR) {\n\t\t\t\t\t\terrorCount += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isEmpty(controlMsg) && (!isEmpty(msg) || msg.type !== \"error\")) {\n\t\t\t\t\tmsg = controlMsg;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (!isEmpty(msg)) {\n\t\t\tlet descriptionText = \"\";\n\t\t\tif (errorCount > 0 && warningCount === 0) {\n\t\t\t\tdescriptionText = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\t\tMESSAGE_KEYS.CONTROL_SUMMARY_ERROR, { errorMsgCount: errorCount });\n\t\t\t} else if (errorCount > 0 && warningCount > 0) {\n\t\t\t\tdescriptionText = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\t\tMESSAGE_KEYS.CONTROL_SUMMARY_ERROR_WARNING,\n\t\t\t\t\t{ errorMsgCount: errorCount, warningMsgCount: warningCount });\n\t\t\t} else if (errorCount === 0 && warningCount > 0) {\n\t\t\t\tdescriptionText = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\t\tMESSAGE_KEYS.CONTROL_SUMMARY_WARNING, { warningMsgCount: warningCount });\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Tooltip\n\t\t\t\t\tid= {uuid4() + \"summary-icon\"}\n\t\t\t\t\ttip={descriptionText}\n\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t>\n\t\t\t\t\t{<Icon type={msg.type} className={`properties-summary-link-icon ${msg.type}`} />}\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\trender() {\n\t\tconst icon = this._getSummaryIconState();\n\t\tconst link = (<div className=\"properties-summary-link-container\">\n\t\t\t<Button\n\t\t\t\tclassName=\"properties-summary-link-button\"\n\t\t\t\tonClick={this.handleLinkClicked}\n\t\t\t\tsize=\"small\"\n\t\t\t\tkind=\"ghost\"\n\t\t\t\trenderIcon={Add16}\n\t\t\t>\n\t\t\t\t{this.props.panel.label}\n\t\t\t</Button>\n\t\t\t{icon}\n\t\t</div>);\n\t\tconst applyLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.APPLYBUTTON_LABEL);\n\t\tconst rejectLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.REJECTBUTTON_LABEL);\n\t\tconst flyout = this.state.showWideFlyout ? (<WideFlyout\n\t\t\tcancelHandler={this.cancelWideFlyout}\n\t\t\tokHandler={this.hideWideFlyout}\n\t\t\tshow\n\t\t\tapplyLabel={applyLabel}\n\t\t\trejectLabel={rejectLabel}\n\t\t\ttitle={this.props.panel.label}\n\t\t\tlight={this.props.controller.getLight()}\n\t\t\tokButtonEnabled={this.props.okButtonEnabled}\n\t\t>\n\t\t\t<div>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t</WideFlyout>) : <div />;\n\t\tconst panelClassName = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst className = classNames(\n\t\t\t\"properties-summary-panel\",\n\t\t\t\"properties-control-panel\",\n\t\t\t{ \"hide\": this.props.panelState === STATES.HIDDEN },\n\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\tpanelClassName\n\t\t);\n\t\treturn (\n\t\t\t<div className={className} disabled={this.props.panelState === STATES.DISABLED} data-id={ControlUtils.getDataId({ name: this.props.panel.id })}>\n\t\t\t\t{flyout}\n\t\t\t\t{link}\n\t\t\t\t{this._getSummaryTables()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSummaryPanel.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.array,\n\tpanel: PropTypes.object.isRequired,\n\tpanelState: PropTypes.string, // set by redux\n\tokButtonEnabled: PropTypes.bool // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id }),\n\tokButtonEnabled: !ownProps.controller.getWideFlyoutPrimaryButtonDisabled({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(SummaryPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { Accordion, AccordionItem } from \"carbon-components-react\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\n\n\nclass TwistyPanel extends React.Component {\n\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst disabled = this.props.panelState === STATES.DISABLED;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-twisty-panel\",\n\t\t\t\t\t{ \"hide\": this.props.panelState === STATES.HIDDEN },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\tclassName\n\t\t\t\t)} data-id={ControlUtils.getDataId({ name: this.props.panel.id })}\n\t\t\t>\n\t\t\t\t<Accordion disabled={disabled}>\n\t\t\t\t\t<AccordionItem disabled={disabled} open={this.props.panel.open} title={this.props.panel.label}>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</AccordionItem>\n\t\t\t\t</Accordion>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTwistyPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.array,\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(TwistyPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PropertiesModal from \"./../../components/properties-modal\";\nimport WideFlyout from \"./../../components/wide-flyout\";\n\nexport default class SubPanelInvoker extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpanel: null,\n\t\t\ttitle: null,\n\t\t\thideHandler: null,\n\t\t\tsubPanelVisible: false\n\t\t};\n\t\tthis.showSubDialog = this.showSubDialog.bind(this);\n\t\tthis.hideSubDialog = this.hideSubDialog.bind(this);\n\t}\n\n\tshowSubDialog(title, panel, hideHandler) {\n\t\tthis.props.controller.increaseVisibleSubPanelCounter();\n\t\tthis.setState({\n\t\t\tpanel: panel,\n\t\t\ttitle: title,\n\t\t\thideHandler: hideHandler,\n\t\t\tsubPanelVisible: true\n\t\t});\n\t}\n\n\thideSubDialog(applyChanges) {\n\t\tthis.props.controller.decreaseVisibleSubPanelCounter();\n\t\tthis.state.hideHandler(applyChanges);\n\t\tthis.setState({\n\t\t\tpanel: null,\n\t\t\ttitle: null,\n\t\t\thideHandler: null,\n\t\t\tsubPanelVisible: false\n\t\t});\n\t}\n\n\trender() {\n\t\tlet propertiesDialog = [];\n\t\tif (this.state.subPanelVisible && !this.props.rightFlyout) {\n\t\t\tconst className = this.props.controller.isTearsheetContainer() ? \"properties-subpanel-modal-in-tearsheet\" : \"\";\n\t\t\tpropertiesDialog = (<PropertiesModal\n\t\t\t\ttitle={this.state.title}\n\t\t\t\tokHandler={this.hideSubDialog.bind(this, true)}\n\t\t\t\tcancelHandler={this.hideSubDialog.bind(this, false)}\n\t\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\t\tclassNames={className}\n\t\t\t>\n\t\t\t\t{this.state.panel}\n\t\t\t</PropertiesModal>);\n\t\t} else if (this.props.rightFlyout && this.state.subPanelVisible) {\n\t\t\tpropertiesDialog = (<WideFlyout\n\t\t\t\tcancelHandler={this.hideSubDialog.bind(this, false)}\n\t\t\t\tokHandler={this.hideSubDialog.bind(this, true)}\n\t\t\t\tshow\n\t\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\t\ttitle={this.state.title}\n\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.panel}\n\t\t\t\t</div>\n\t\t\t</WideFlyout>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{propertiesDialog}\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSubPanelInvoker.propTypes = {\n\tchildren: PropTypes.element,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\trightFlyout: PropTypes.bool,\n\tcontroller: PropTypes.object.isRequired\n};\n\nSubPanelInvoker.defaultProps = {\n\trightFlyout: false\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"carbon-components-react\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { MESSAGE_KEYS } from \"./../../constants/constants\";\n\n\nimport SubPanelInvoker from \"./invoker.jsx\";\n\nexport default class SubPanelButton extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.showSubPanel = this.showSubPanel.bind(this);\n\t\tthis.onSubPanelHidden = this.onSubPanelHidden.bind(this);\n\t}\n\n\n\tonSubPanelHidden(applyChanges) {\n\t\tlogger.info(\"onSubPanelHidden(): applyChanges=\" + applyChanges);\n\t}\n\n\tshowSubPanel() {\n\t\tthis.subPanelInvoker.showSubDialog(this.props.title, this.props.panel, this.onSubPanelHidden);\n\t}\n\n\trender() {\n\t\tconst applyLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.APPLYBUTTON_LABEL);\n\t\tconst rejectLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.REJECTBUTTON_LABEL);\n\n\t\tconst button = (<Button\n\t\t\tclassName=\"properties-subpanel-button\"\n\t\t\ttype=\"button\"\n\t\t\tsmall\n\t\t\tkind=\"secondary\"\n\t\t\tonClick={this.showSubPanel}\n\t\t>\n\t\t\t{this.props.label || \"\"}\n\t\t</Button>);\n\t\treturn (\n\t\t\t<SubPanelInvoker ref={ (ref) => (this.subPanelInvoker = ref) }\n\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t>\n\t\t\t\t{button}\n\t\t\t</SubPanelInvoker>\n\t\t);\n\t}\n}\n\nSubPanelButton.propTypes = {\n\tlabel: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\trightFlyout: PropTypes.bool,\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\n\n\nclass ColumnPanel extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tlet gridColumns = \"\";\n\t\tprops.children.forEach((item, idx) => {\n\t\t\tif (idx === 0) {\n\t\t\t\tgridColumns = \"1fr\";\n\t\t\t} else {\n\t\t\t\tgridColumns += \" 1fr\";\n\t\t\t}\n\t\t});\n\t\tthis.style = {\n\t\t\t\"gridTemplateColumns\": gridColumns\n\t\t};\n\t}\n\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\t// grid-template-columns\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-column-panel\",\n\t\t\t\t\t{ \"hide\": this.props.panelState === STATES.HIDDEN },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tdisabled={this.props.panelState === STATES.DISABLED} data-id={ControlUtils.getDataId({ name: this.props.panel.id })}\n\t\t\t\tstyle={this.style}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nColumnPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.array.isRequired,\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(ColumnPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\n\n\nclass ControlPanel extends React.Component {\n\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst controlPanel = this.props.children.length > 0\n\t\t\t? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\"properties-control-panel\",\n\t\t\t\t\t\t{ \"hide\": this.props.panelState === STATES.HIDDEN },\n\t\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\t\t{ \"tearsheet-container\": this.props.controller.isTearsheetContainer() },\n\t\t\t\t\t\tclassName\n\t\t\t\t\t)}\n\t\t\t\t\tdisabled={this.props.panelState === STATES.DISABLED} data-id={ControlUtils.getDataId({ name: this.props.panel.id })}\n\t\t\t\t>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t)\n\t\t\t: null;\n\t\treturn controlPanel;\n\t}\n}\n\nControlPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.array.isRequired,\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(ControlPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Tabs, Tab } from \"carbon-components-react\";\nimport { getDataId } from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\n\nclass Subtabs extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveTabId: \"\"\n\t\t};\n\t}\n\n\tonClick(tabId) {\n\t\tthis.setState({ activeTabId: tabId });\n\t}\n\n\trender() {\n\t\tconst subTabs = [];\n\t\tlet activeTab = 0;\n\t\tlet tabIdx = 0;\n\t\tconst className = this.props.className ? this.props.className : \"\";\n\t\tfor (let i = 0; i < this.props.tabs.length; i++) {\n\t\t\tconst tab = this.props.tabs[i];\n\t\t\t// TODO this might not work once we don't rerender on each change\n\t\t\tconst panelState = this.props.controller.getPanelState({ name: tab.group });\n\t\t\tif (panelState !== STATES.HIDDEN) {\n\t\t\t\tconst subPanelItems = this.props.genUIItem(i, tab.content);\n\t\t\t\tif (this.state.activeTabId === tab.group && panelState !== STATES.DISABLED) {\n\t\t\t\t\tactiveTab = tabIdx;\n\t\t\t\t}\n\n\t\t\t\tsubTabs.push(\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tkey={\"subtabs.tab.\" + i}\n\t\t\t\t\t\tdisabled={panelState === STATES.DISABLED}\n\t\t\t\t\t\tclassName={classNames(\"properties-subtab\", { \"properties-leftnav-subtab-item\": this.props.leftnav })}\n\t\t\t\t\t\ttabIndex={tabIdx}\n\t\t\t\t\t\tlabel={tab.text}\n\t\t\t\t\t\ttitle={tab.text}\n\t\t\t\t\t\tonClick={this.onClick.bind(this, tab.group)}\n\t\t\t\t\t\tdata-id={getDataId({ name: tab.group })}\n\t\t\t\t\t>\n\t\t\t\t\t\t{subPanelItems}\n\t\t\t\t\t</Tab>\n\t\t\t\t);\n\t\t\t\ttabIdx++;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-sub-tab-container\",\n\t\t\t\t\t{ vertical: !this.props.rightFlyout },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.nestedPanel },\n\t\t\t\t\t{ \"properties-leftnav-container\": this.props.leftnav },\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<Tabs className={classNames(\"properties-subtabs\", { \"properties-leftnav-subtabs\": this.props.leftnav })}\n\t\t\t\t\tselected={activeTab}\n\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t>\n\t\t\t\t\t{subTabs}\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSubtabs.propTypes = {\n\ttabs: PropTypes.array.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\trightFlyout: PropTypes.bool,\n\tgenUIItem: PropTypes.func.isRequired,\n\tclassName: PropTypes.string,\n\tnestedPanel: PropTypes.bool,\n\tleftnav: PropTypes.bool\n};\n\nSubtabs.defaultProps = {\n\tleftnav: false\n};\n\nexport default Subtabs;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { evaluateText } from \"./../../util/property-utils.js\";\nimport classNames from \"classnames\";\nimport { STATES, CARBON_ICONS } from \"./../../constants/constants\";\nimport { isEmpty } from \"lodash\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport Icon from \"./../../../icons/icon.jsx\";\n\nclass TextPanel extends Component {\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst hidden = this.props.panelState === STATES.HIDDEN;\n\t\tconst disabled = this.props.panelState === STATES.DISABLED;\n\t\tlet label = this.props.panel.label ? (<div className=\"panel-label\">{this.props.panel.label}</div>) : null;\n\t\tlet description;\n\t\tif (this.props.panel.description && !isEmpty(this.props.panel.description.text)) {\n\t\t\tconst dynamicDescriptionText = evaluateText(this.props.panel.description.text, this.props.controller);\n\t\t\tif (this.props.panel.description.placement === \"as_tooltip\") {\n\t\t\t\t// If tooltip has a link, add propertyId in the link object\n\t\t\t\tif (this.props.panel.description.link) {\n\t\t\t\t\tthis.props.panel.description.link.propertyId = { name: this.props.panel.id };\n\t\t\t\t}\n\t\t\t\tconst tooltip = (<Tooltip\n\t\t\t\t\tid={`tooltip-label-${this.props.panel.id}`}\n\t\t\t\t\ttip={dynamicDescriptionText}\n\t\t\t\t\tlink={this.props.panel.description.link ? this.props.panel.description.link : null}\n\t\t\t\t\ttooltipLinkHandler={this.props.controller.getHandlers().tooltipLinkHandler}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t>\n\t\t\t\t\t<Icon type={CARBON_ICONS.INFORMATION} className=\"properties-control-description-icon-info\" />\n\t\t\t\t</Tooltip>);\n\t\t\t\tlabel = (\n\t\t\t\t\t<div className={classNames(\"properties-label-container\")}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t\t{tooltip}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdescription = <div className=\"panel-description\">{dynamicDescriptionText}</div>;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-text-panel\",\n\t\t\t\t\t{ \"hide\": hidden },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t\t{description}\n\t\t\t</div>);\n\t}\n}\n\nTextPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id }),\n\tpropertyValues: ownProps.controller.getPropertyValues() // not used locally but needed to cause a rerender to evaluate text with a property value\n});\n\nexport default connect(mapStateToProps, null)(TextPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES, CARBON_ICONS } from \"./../../constants/constants\";\nimport { evaluateText } from \"./../../util/property-utils.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport Icon from \"./../../../icons/icon.jsx\";\nimport { isEmpty } from \"lodash\";\n\nclass ActionPanel extends Component {\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst hidden = this.props.panelState === STATES.HIDDEN;\n\t\tconst disabled = this.props.panelState === STATES.DISABLED;\n\t\tlet label;\n\t\tif (this.props.panel.label) {\n\t\t\tlet tooltip;\n\t\t\tif (this.props.panel.description && !isEmpty(this.props.panel.description.text)) {\n\t\t\t\tconst dynamicDescriptionText = evaluateText(this.props.panel.description.text, this.props.controller);\n\t\t\t\t// If tooltip has a link, add propertyId in the link object\n\t\t\t\tif (this.props.panel.description.link) {\n\t\t\t\t\tthis.props.panel.description.link.propertyId = { name: this.props.panel.id };\n\t\t\t\t}\n\t\t\t\ttooltip = (<Tooltip\n\t\t\t\t\tid={`tooltip-label-${this.props.panel.id}`}\n\t\t\t\t\ttip={dynamicDescriptionText}\n\t\t\t\t\tlink={this.props.panel.description.link ? this.props.panel.description.link : null}\n\t\t\t\t\ttooltipLinkHandler={this.props.controller.getHandlers().tooltipLinkHandler}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t>\n\t\t\t\t\t<Icon type={CARBON_ICONS.INFORMATION} className=\"properties-control-description-icon-info\" />\n\t\t\t\t</Tooltip>);\n\t\t\t}\n\t\t\tlabel = (\n\t\t\t\t<div className={classNames(\"properties-label-container\")}>\n\t\t\t\t\t<label className=\"properties-control-label\">{this.props.panel.label}</label>\n\t\t\t\t\t{tooltip}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-action-panel\",\n\t\t\t\t\t{ \"hide\": hidden },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tdata-id={ControlUtils.getDataId({ name: this.props.panel.id })}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t\t{this.props.children}\n\t\t\t</div>);\n\t}\n}\n\nActionPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.element,\n\t\tPropTypes.array\n\t]),\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(ActionPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"carbon-components-react\";\nimport { STATES, CARBON_BUTTON_KIND, CARBON_BUTTON_SIZE } from \"./../../constants/constants.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport classNames from \"classnames\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { has } from \"lodash\";\n\nclass ButtonAction extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t};\n\t\tthis.applyAction = this.applyAction.bind(this);\n\t\tthis.uuid = uuid4();\n\t}\n\n\tgetActionButtonKind() {\n\t\tif (!has(this.props, \"action.button.kind\")) {\n\t\t\treturn CARBON_BUTTON_KIND.TERTIARY;\n\t\t}\n\t\tswitch (this.props.action.button.kind) {\n\t\tcase CARBON_BUTTON_KIND.PRIMARY: return CARBON_BUTTON_KIND.PRIMARY;\n\t\tcase CARBON_BUTTON_KIND.SECONDARY: return CARBON_BUTTON_KIND.SECONDARY;\n\t\tcase CARBON_BUTTON_KIND.TERTIARY: return CARBON_BUTTON_KIND.TERTIARY;\n\t\tcase CARBON_BUTTON_KIND.GHOST: return CARBON_BUTTON_KIND.GHOST;\n\t\tcase CARBON_BUTTON_KIND.DANGER: return CARBON_BUTTON_KIND.DANGER;\n\t\tcase CARBON_BUTTON_KIND.DANGER_TERTIARY: return CARBON_BUTTON_KIND.DANGER_TERTIARY;\n\t\tcase CARBON_BUTTON_KIND.DANGER_GHOST: return CARBON_BUTTON_KIND.DANGER_GHOST;\n\t\tdefault: return CARBON_BUTTON_KIND.TERTIARY;\n\t\t}\n\t}\n\n\tgetActionButtonSize() {\n\t\tif (!has(this.props, \"action.button.size\")) {\n\t\t\treturn CARBON_BUTTON_SIZE.SMALL;\n\t\t}\n\t\tswitch (this.props.action.button.size) {\n\t\tcase CARBON_BUTTON_SIZE.SMALL: return CARBON_BUTTON_SIZE.SMALL;\n\t\tcase CARBON_BUTTON_SIZE.MEDIUM: return CARBON_BUTTON_SIZE.DEFAULT; // TODO: update this after upgrading to carbon 11.x\n\t\tcase CARBON_BUTTON_SIZE.LARGE: return CARBON_BUTTON_SIZE.LARGE;\n\t\tcase CARBON_BUTTON_SIZE.EXTRA_LARGE: return CARBON_BUTTON_SIZE.EXTRA_LARGE;\n\t\tdefault: return CARBON_BUTTON_SIZE.SMALL;\n\t\t}\n\t}\n\n\tapplyAction() {\n\t\t// fire event and let the application determine how to handle the action\n\t\tconst actionHandler = this.props.controller.getHandlers().actionHandler;\n\t\tif (typeof actionHandler === \"function\") {\n\t\t\tactionHandler(this.props.action.name,\n\t\t\t\tthis.props.controller.getAppData(), this.props.action.data);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst className = classNames(\"properties-action-button\", { \"hide\": this.props.state === STATES.HIDDEN });\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\t\tconst actionButtonKind = this.getActionButtonKind();\n\t\tconst actionButtonSize = this.getActionButtonSize();\n\t\tconst button = (\n\t\t\t<Button\n\t\t\t\ttype=\"button\"\n\t\t\t\tsize={actionButtonSize}\n\t\t\t\tkind={actionButtonKind}\n\t\t\t\tonClick={this.applyAction}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t{this.props.action.label.text}\n\t\t\t</Button>\n\t\t);\n\n\t\tlet display = button;\n\t\tif (this.props.action.description) {\n\t\t\tconst tooltipId = this.uuid + \"-tooltip-action-\" + this.props.action.name;\n\t\t\tconst tooltip = (\n\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t{this.props.action.description.text}\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t\tdisplay = (<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tdirection=\"bottom\"\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tdisable={disabled}\n\t\t\t>\n\t\t\t\t{button}\n\t\t\t</Tooltip>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={className} data-id={this.props.action.name}>\n\t\t\t\t{display}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nButtonAction.propTypes = {\n\taction: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tstate: PropTypes.string, // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tstate: ownProps.controller.getActionState(ownProps.controller.convertPropertyId(ownProps.action.name)),\n});\n\nexport default connect(mapStateToProps, null)(ButtonAction);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport classNames from \"classnames\";\nimport { v4 as uuid4 } from \"uuid\";\n\nclass ImageAction extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t};\n\t\tthis.applyAction = this.applyAction.bind(this);\n\t\tthis.uuid = uuid4();\n\t}\n\n\tapplyAction() {\n\t\tif (this.props.state !== STATES.DISABLED) { // this is needed to mimic disabled action button\n\t\t\t// fire event and let the application determine how to handle the action\n\t\t\tconst actionHandler = this.props.controller.getHandlers().actionHandler;\n\t\t\tif (typeof actionHandler === \"function\") {\n\t\t\t\tactionHandler(this.props.action.name,\n\t\t\t\t\tthis.props.controller.getAppData(), this.props.action.data);\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tlet height = {};\n\t\tlet width = {};\n\t\tif (this.props.action.image.size) {\n\t\t\theight = this.props.action.image.size.height ? { \"height\": this.props.action.image.size.height } : {};\n\t\t\twidth = this.props.action.image.size.width ? { \"width\": this.props.action.image.size.width } : {};\n\t\t}\n\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\t\tconst className = classNames(\"properties-action-image\", { \"left\": this.props.action.image.placement === \"left\" },\n\t\t\t{ \"right\": this.props.action.image.placement === \"right\" }, { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\t{ \"disabled\": disabled });\n\n\t\tconst image = (\n\t\t\t<div data-id={this.props.action.name}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={this.props.action.image.url}\n\t\t\t\t\tonClick={this.applyAction}\n\t\t\t\t\t{...height}\n\t\t\t\t\t{...width}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\n\t\tlet display = image;\n\t\tif (this.props.action.description) {\n\t\t\tconst tooltipId = this.uuid + \"-tooltip-action-\" + this.props.action.name;\n\t\t\tconst tooltip = (\n\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t{this.props.action.description.text}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tconst directions = [\"left\", \"right\", \"top\", \"bottom\"];\n\t\t\tconst tooltipDirection = this.props.action.image.tooltip_direction && directions.includes(this.props.action.image.tooltip_direction.toLowerCase())\n\t\t\t\t? this.props.action.image.tooltip_direction.toLowerCase()\n\t\t\t\t: \"bottom\";\n\n\t\t\tdisplay = (<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tdirection={tooltipDirection}\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tdisable={disabled}\n\t\t\t>\n\t\t\t\t{image}\n\t\t\t</Tooltip>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t{display}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nImageAction.propTypes = {\n\taction: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tstate: PropTypes.string, // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tstate: ownProps.controller.getActionState(ownProps.controller.convertPropertyId(ownProps.action.name)),\n});\n\nexport default connect(mapStateToProps, null)(ImageAction);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\n\nimport ButtonAction from \"./button\";\nimport ImageAction from \"./image\";\n\n\nexport default class ActionFactory {\n\n\tconstructor(controller) {\n\t\tthis.controller = controller;\n\t}\n\n\n\tgenerateAction(key, action) {\n\t\tif (action) {\n\t\t\tif (action.actionType === \"button\") {\n\t\t\t\treturn (\n\t\t\t\t\t<ButtonAction\n\t\t\t\t\t\tkey={\"action.\" + key}\n\t\t\t\t\t\taction={action}\n\t\t\t\t\t\tcontroller={this.controller}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else if (action.actionType === \"image\") {\n\t\t\t\treturn (\n\t\t\t\t\t<ImageAction\n\t\t\t\t\t\tkey={\"action.\" + key}\n\t\t\t\t\t\taction={action}\n\t\t\t\t\t\tcontroller={this.controller}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setActiveTab } from \"./../../actions\";\nimport { Tab, Tabs, Link } from \"carbon-components-react\";\nimport * as PropertyUtil from \"./../../util/property-utils\";\nimport { MESSAGE_KEYS, CARBON_ICONS, CONDITION_MESSAGE_TYPE, STATES } from \"./../../constants/constants\";\nimport { cloneDeep, isEmpty, sortBy, get } from \"lodash\";\nimport logger from \"./../../../../utils/logger\";\nimport classNames from \"classnames\";\n\nimport SelectorPanel from \"./../../panels/selector\";\nimport SummaryPanel from \"./../../panels/summary\";\nimport TwistyPanel from \"./../../panels/twisty\";\nimport SubPanelButton from \"./../../panels/sub-panel/button\";\nimport ColumnPanel from \"./../../panels/column\";\nimport ControlPanel from \"./../../panels/control\";\nimport Subtabs from \"./../../panels/subtabs\";\n\nimport WideFlyout from \"./../wide-flyout\";\nimport TearSheet from \"../../panels/tearsheet\";\nimport FieldPicker from \"./../field-picker\";\nimport TextPanel from \"./../../panels/text-panel\";\nimport ActionPanel from \"./../../panels/action-panel\";\n\nimport ActionFactory from \"./../../actions/action-factory\";\nimport Icon from \"./../../../icons/icon\";\nimport { ItemType } from \"../../constants/form-constants\";\n\nconst ALERT_TAB_GROUP = \"alertMsgs\";\nclass EditorForm extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowFieldPicker: false\n\t\t};\n\n\t\tthis.genPanel = this.genPanel.bind(this);\n\t\tthis.genUIContent = this.genUIContent.bind(this);\n\t\tthis.genUIItem = this.genUIItem.bind(this);\n\t\tthis._getGroupedMessages = this._getGroupedMessages.bind(this);\n\n\t\tthis.closeFieldPicker = this.closeFieldPicker.bind(this);\n\t\tthis.openFieldPicker = this.openFieldPicker.bind(this);\n\t\tthis.generateSharedControlNames = this.generateSharedControlNames.bind(this);\n\n\t\tthis.messages = this._getGroupedMessages(props.messages);\n\n\t\t// initialize ControlFactory with correct values\n\t\tthis.ControlFactory = props.controller.getControlFactory();\n\t\tthis.ControlFactory.setFunctions(this.openFieldPicker, this.genUIItem);\n\t\tthis.ControlFactory.setRightFlyout(props.rightFlyout);\n\n\t\tthis.actionFactory = new ActionFactory(this.props.controller);\n\n\t\tthis.FIRST_TEARSHEET_ID = null;\n\t\tthis.TEARSHEETS = {};\n\t\tthis.visibleTearsheet = null;\n\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\tif (!this.props.controller.isSummaryPanelShowing() && !this.props.controller.isSubPanelsShowing()) {\n\t\t\t// only update list of error messages when no summary panel or sub-panel is shown,\n\t\t\t// otherwise changes in the summary/sub panel might trigger a re-render and the\n\t\t\t// summary/sub panel to disappear because the alerts tab is added/removed\n\t\t\tthis.messages = this._getGroupedMessages(nextProps.messages);\n\t\t}\n\t\treturn true;\n\t}\n\n\t_getMessageCountForCategory(tab) {\n\t\tif (tab.group === ALERT_TAB_GROUP) {\n\t\t\treturn \" (\" + this.messages.length + \")\";\n\t\t}\n\t\tlet result = 0;\n\t\tthis.messages.forEach((msg) => {\n\t\t\tconst ctrl = this.props.controller.getControl({ \"name\": msg.id_ref });\n\t\t\tif (ctrl && ctrl.parentCategoryId === tab.group) {\n\t\t\t\tresult++;\n\t\t\t}\n\t\t});\n\t\treturn result > 0 ? \" (\" + result + \")\" : null;\n\t}\n\n\t_getGroupedMessages(messages) {\n\t\t// returns messages grouped by type, first errors, then warnings\n\t\tif (!isEmpty(messages)) {\n\t\t\treturn sortBy(messages, [\"type\"]);\n\t\t}\n\t\treturn [];\n\t}\n\n\t_getTabId(tab) {\n\t\treturn tab.group;\n\t}\n\n\t_showCategoryPanel(panelId) {\n\t\tlet activeTab = panelId;\n\t\tif (this.props.activeTab === panelId) {\n\t\t\tactiveTab = \"\";\n\t\t}\n\t\tthis.props.setActiveTab(activeTab);\n\t}\n\n\t_handleMessageClick(controlId, ev) {\n\t\tconst control = this.props.controller.getControl(controlId);\n\t\tthis.props.setActiveTab(control.parentCategoryId);\n\t}\n\n\t_modalTabsOnClick(tabId) {\n\t\tthis.props.setActiveTab(tabId);\n\t}\n\n\tgenPrimaryTabs(key, tabs, propertyId, indexof) {\n\t\tconst tabContent = [];\n\t\tlet hasAlertsTab = false;\n\t\tlet modalSelected = 0;\n\t\tconst nonTearsheetTabs = tabs.filter((t) => t.content.itemType !== ItemType.TEARSHEET);\n\t\tconst tearsheetTabs = tabs.filter((t) => t.content.itemType === ItemType.TEARSHEET);\n\t\tconst totalTabs = tearsheetTabs.concat(nonTearsheetTabs);\n\n\t\tfor (let i = 0; i < totalTabs.length; i++) {\n\t\t\tconst tab = totalTabs[i];\n\t\t\tconst tabState = this.props.controller.getPanelState({ name: tab.group });\n\t\t\tif (tabState === STATES.HIDDEN) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (i === 0 && tab.group === ALERT_TAB_GROUP) {\n\t\t\t\thasAlertsTab = true;\n\t\t\t}\n\t\t\tconst panelItems = this.genUIItem(this._getContainerIndex(hasAlertsTab, i), tab.content, propertyId, indexof);\n\t\t\tlet additionalComponent = null;\n\t\t\tif (this.props.additionalComponents) {\n\t\t\t\tadditionalComponent = this.props.additionalComponents[tab.group];\n\t\t\t}\n\t\t\t// if only 1 tab AND\n\t\t\t// if total non-tearsheet tabs is 1; don't show any tabs\n\t\t\tif (totalTabs.length === 1 && nonTearsheetTabs.length === 1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={\"cat.\" + key} className=\"properties-single-category\">\n\t\t\t\t\t\t{panelItems}\n\t\t\t\t\t\t{additionalComponent}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.props.rightFlyout) {\n\t\t\t\tlet panelArrow = <Icon type={CARBON_ICONS.CHEVRONARROWS.DOWN} className=\"properties-category-caret-down\" />;\n\t\t\t\tlet categoryOpen = false;\n\t\t\t\tif (this.props.activeTab === tab.group) {\n\t\t\t\t\tpanelArrow = <Icon type={CARBON_ICONS.CHEVRONARROWS.UP} className=\"properties-category-caret-up\" />;\n\t\t\t\t\tcategoryOpen = true;\n\t\t\t\t}\n\t\t\t\tif (tab.content.itemType !== ItemType.TEARSHEET && nonTearsheetTabs.length === 1) {\n\t\t\t\t\ttabContent.push(\n\t\t\t\t\t\t<div key={\"cat.\" + key} className=\"properties-single-category\">\n\t\t\t\t\t\t\t{panelItems}\n\t\t\t\t\t\t\t{additionalComponent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttabContent.push(\n\t\t\t\t\t\t<div key={this._getContainerIndex(hasAlertsTab, i) + \"-\" + key}\n\t\t\t\t\t\t\tclassName={classNames(\"properties-category-container\", { \"properties-hidden-container\": tab.content.itemType === ItemType.TEARSHEET })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button type=\"button\" onClick={this._showCategoryPanel.bind(this, tab.group)}\n\t\t\t\t\t\t\t\tclassName={classNames(\"properties-category-title\", { \"properties-light-enabled\": this.props.controller.getLight() }) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{tab.text}{this._getMessageCountForCategory(tab)}\n\t\t\t\t\t\t\t\t{panelArrow}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<div className={classNames(\"properties-category-content\", { \"show\": categoryOpen }) }>\n\t\t\t\t\t\t\t\t{panelItems}\n\t\t\t\t\t\t\t\t{additionalComponent}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.props.activeTab === tab.group) {\n\t\t\t\t\tmodalSelected = i;\n\t\t\t\t}\n\t\t\t\ttabContent.push(\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tkey={this._getContainerIndex(hasAlertsTab, i) + \"-\" + key}\n\t\t\t\t\t\ttabIndex={i}\n\t\t\t\t\t\tlabel={tab.text}\n\t\t\t\t\t\ttitle={tab.text}\n\t\t\t\t\t\tclassName={classNames({ \"properties-hidden-container\": tab.content.itemType === ItemType.TEARSHEET })}\n\t\t\t\t\t\tonClick={this._modalTabsOnClick.bind(this, tab.group)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{panelItems}\n\t\t\t\t\t\t{additionalComponent}\n\t\t\t\t\t</Tab>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (this.props.rightFlyout) {\n\t\t\treturn (\n\t\t\t\t<div key={\"cat.\" + key} className=\"properties-categories\">\n\t\t\t\t\t{tabContent}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Tabs key={\"tab.\" + key}\n\t\t\t\tclassName=\"properties-primaryTabs\"\n\t\t\t\tselected={modalSelected}\n\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\ttabContentClassName={classNames(\"properties-primary-tab-panel\", { \"tearsheet-container\": this.props.controller.isTearsheetContainer() })}\n\t\t\t>\n\t\t\t\t{tabContent}\n\t\t\t</Tabs>\n\t\t);\n\t}\n\n\t_getContainerIndex(hasAlertsTab, index) {\n\t\t// need to ensure that when alert tab is rendered, the existing tabs get the same id\n\t\t// otherwise re-render will cause controls to lose focus\n\t\tif (hasAlertsTab && index === 0) {\n\t\t\treturn \"alerts\";\n\t\t}\n\t\tif (hasAlertsTab) {\n\t\t\treturn index - 1;\n\t\t}\n\t\treturn index;\n\t}\n\n\tgenPanelSelector(key, tabs, dependsOn, propertyId, indexof, panelId, className) {\n\t\tconst subPanels = this.generateAdditionalPanels(tabs, key, propertyId, indexof, false, className);\n\t\treturn (\n\t\t\t<SelectorPanel\n\t\t\t\tkey={\"selectorPanel\" + key}\n\t\t\t\tpanels={subPanels}\n\t\t\t\tdependsOn={dependsOn}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateAdditionalPanels(tabs, key, propertyId, indexof, indent, groupClassName) {\n\t\tconst subPanels = {};\n\t\tfor (let i = 0; i < tabs.length; i++) {\n\t\t\tconst tab = tabs[i];\n\t\t\tlet className = \"properties-control-panel\";\n\t\t\tif (tab.content && tab.content.itemType === \"textPanel\") {\n\t\t\t\tclassName = \"\";\n\t\t\t}\n\t\t\t// Always show indentation when insert_panels set to true\n\t\t\tif (indent) {\n\t\t\t\tclassName += \" properties-control-nested-panel\";\n\t\t\t}\n\t\t\tsubPanels[tab.group] = (\n\t\t\t\t<div className={classNames(className, groupClassName)} key={tab.group + key}>\n\t\t\t\t\t{this.genUIItem(i, tab.content, propertyId, indexof)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn subPanels;\n\t}\n\n\tgenUIContent(uiItems, propertyId, indexof) {\n\t\tvar uiContent = [];\n\t\tfor (var i = 0; i < uiItems.length; i++) {\n\t\t\tuiContent.push(this.genUIItem(i, uiItems[i], propertyId, indexof));\n\t\t}\n\t\treturn uiContent;\n\t}\n\n\t/*\n\t*  inPropertyId and indexOf only used for subpanel in tables\n\t*/\n\tgenUIItem(key, uiItem, inPropertyId, indexof) {\n\t\tlet textClass = \"\";\n\t\tlet icon = null;\n\t\tlet text = \"\";\n\t\tswitch (uiItem.itemType) {\n\t\tcase (\"control\"): {\n\t\t\t// If the uiItem has additonalPanels, this indicates that the uiItem is\n\t\t\t// a vertical radio button set followed by a SelectorPanel which has the\n\t\t\t// insert_panels boolean set to true.\n\t\t\tif (uiItem.additionalItems && uiItem.additionalItems.length > 0) {\n\t\t\t\tuiItem.control.additionalItems = uiItem.additionalItems;\n\t\t\t\tuiItem.control.optionalPanels =\n\t\t\t\t\tthis.generateAdditionalPanels(uiItem.additionalItems, key, null, indexof, true);\n\t\t\t}\n\n\t\t\tconst propertyId = { name: uiItem.control.name };\n\n\t\t\t// Used for subpanels in tables\n\t\t\tif (inPropertyId) {\n\t\t\t\tconst parentPropertyId = cloneDeep(inPropertyId);\n\t\t\t\t// This control is the last child in parentPropertyId, need to update the child's col index\n\t\t\t\tthis.props.controller.updateLastChildPropertyId(parentPropertyId, { col: indexof(uiItem.control.name) });\n\t\t\t\treturn this.ControlFactory.createControlItem(uiItem.control, parentPropertyId);\n\t\t\t}\n\n\t\t\treturn this.ControlFactory.createControlItem(uiItem.control, propertyId);\n\t\t}\n\t\tcase (\"additionalLink\"):\n\t\t\tvar subPanel = this.genPanel(key, uiItem.panel, inPropertyId, indexof);\n\t\t\treturn (<SubPanelButton key={\"sub-panel-button.\" + key}\n\t\t\t\tlabel={uiItem.text}\n\t\t\t\ttitle={uiItem.secondaryText}\n\t\t\t\tpanel={subPanel}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t/>);\n\t\tcase (\"staticText\"):\n\t\t\ttextClass = classNames(\"properties-static-text\", uiItem.textType);\n\t\t\ticon = uiItem.textType === \"info\" ? <div><Icon type={CARBON_ICONS.INFORMATION} className=\"properties-static-text-icon-info\" /></div> : null;\n\t\t\ttext = <div className={textClass}>{PropertyUtil.evaluateText(uiItem.text, this.props.controller)}</div>;\n\t\t\treturn <div key={\"static-text.\" + key} className=\"properties-static-text-container\">{icon}{text}</div>;\n\t\tcase (\"linkText\"): // linkText used for Alerts tab. Only used internally\n\t\t\ttextClass = classNames(\"properties-link-text-container\", uiItem.textType);\n\t\t\tif (uiItem.textType === \"warning\") {\n\t\t\t\ticon = <Icon type={CONDITION_MESSAGE_TYPE.WARNING} />;\n\t\t\t} else if (uiItem.textType === \"error\") {\n\t\t\t\ticon = <Icon type={CONDITION_MESSAGE_TYPE.ERROR} />;\n\t\t\t}\n\t\t\ttext = (\n\t\t\t\t<Link className=\"properties-link-text\" onClick={this._handleMessageClick.bind(this, uiItem.controlId)} >\n\t\t\t\t\t{PropertyUtil.evaluateText(uiItem.text, this.props.controller)}\n\t\t\t\t</Link>);\n\t\t\treturn <div key={\"link-text.\" + key} className={textClass} >{icon}{text}</div>;\n\t\tcase (\"hSeparator\"):\n\t\t\treturn <hr key={\"h-separator.\" + key} className=\"properties-h-separator\" />;\n\t\tcase (\"panel\"):\n\t\tcase (\"tearsheet\"):\n\t\t\treturn this.genPanel(key, uiItem.panel, inPropertyId, indexof);\n\t\tcase (\"subTabs\"):\n\t\t\t// All Subtabs will become a LeftNav if displayed inside a Tearsheet container\n\t\t\treturn (<Subtabs key={\"subtabs.\" + key}\n\t\t\t\ttabs={uiItem.tabs}\n\t\t\t\tclassName={uiItem.className}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\tgenUIItem={this.genUIItem}\n\t\t\t\tnestedPanel={uiItem.nestedPanel}\n\t\t\t\tleftnav={this.props.controller.isTearsheetContainer()}\n\t\t\t/>);\n\t\tcase (\"primaryTabs\"):\n\t\t\treturn this.genPrimaryTabs(key, uiItem.tabs, inPropertyId, indexof);\n\t\tcase (\"panelSelector\"):\n\t\t\treturn this.genPanelSelector(key, uiItem.tabs, uiItem.dependsOn, inPropertyId, indexof, uiItem.id, uiItem.className);\n\t\tcase (\"checkboxSelector\"):\n\t\t\treturn this.genPanel(key, uiItem.panel, inPropertyId, indexof);\n\t\tcase (\"customPanel\"):\n\t\t\treturn this.generateCustomPanel(key, uiItem.panel);\n\t\t\t// only generate summary panel for right side flyout\n\t\tcase (\"action\"):\n\t\t\treturn this.actionFactory.generateAction(key, uiItem.action);\n\t\tcase (\"textPanel\"):\n\t\t\tif (uiItem.panel) {\n\t\t\t\treturn (<TextPanel key={\"text-panel-\" + key} panel={uiItem.panel} controller={this.props.controller} />);\n\t\t\t}\n\t\t\treturn <div key={\"unknown.\" + key}>Unknown: {uiItem.itemType}</div>;\n\t\tdefault:\n\t\t\treturn <div key={\"unknown.\" + key}>Unknown: {uiItem.itemType}</div>;\n\t\t}\n\t}\n\n\tgenerateCustomPanel(key, panel) {\n\t\tif (this.props.customPanels) {\n\t\t\tfor (const custPanel of this.props.customPanels) {\n\t\t\t\tif (custPanel.id() === panel.id) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={classNames(\"properties-custom-panel\", { \"properties-control-nested-panel\": get(panel, \"nestedPanel\", false) }) }\n\t\t\t\t\t\t\t\tkey={\"custom.\" + key}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{new custPanel(panel.parameters, this.props.controller, panel.data).renderPanel()}\n\t\t\t\t\t\t\t</div>);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tlogger.warn(\"Error thrown creating custom panel: \" + error);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn <div key={\"custom.\" + key}>Panel Not Found: {panel.id}</div>;\n\t}\n\n\tgenerateSharedControlNames(panel) {\n\t\tfor (const info of this.props.controller.getSharedCtrlInfo()) {\n\t\t\tif (typeof info.id !== \"undefined\" && info.id === panel.id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tconst sharedCtrlNames = [];\n\t\tfor (const panelItem of panel.uiItems) {\n\t\t\t// only push uiItems with controls.  Some uiItems are for display only and shouldn't be added.\n\t\t\tif (panelItem.control && panelItem.control.name) {\n\t\t\t\tconst controlName = panelItem.control.name;\n\t\t\t\tsharedCtrlNames.push({\n\t\t\t\t\t\"controlName\": controlName\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.props.controller.addSharedControls(panel.id, sharedCtrlNames);\n\t}\n\n\tgenPanel(key, panel, propertyId, indexof) {\n\t\tlet content = this.genUIContent(panel.uiItems, propertyId, indexof);\n\t\tconst id = \"panel.\" + key;\n\t\tswitch (panel.panelType) {\n\t\tcase (\"columnSelection\"):\n\t\t\tthis.generateSharedControlNames(panel);\n\t\t\t// needs to be ran after setting shared controls to get correct fields in shared controls\n\t\t\tcontent = this.genUIContent(panel.uiItems, propertyId, indexof);\n\t\t\treturn (<ControlPanel\n\t\t\t\tkey={id}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\tpanel={panel}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t</ControlPanel>);\n\t\tcase (\"summary\"):\n\t\t\tif (this.props.rightFlyout) {\n\t\t\t\treturn (\n\t\t\t\t\t<SummaryPanel\n\t\t\t\t\t\tkey={\"summary-panel-\" + id}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tpanel={panel}\n\t\t\t\t\t>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</SummaryPanel>);\n\t\t\t}\n\t\t\treturn content;\n\t\tcase (\"actionPanel\"):\n\t\t\treturn (\n\t\t\t\t<ActionPanel key={\"action-panel-\" + key} controller={this.props.controller} panel={panel}>\n\t\t\t\t\t{content}\n\t\t\t\t</ActionPanel>);\n\t\tcase (\"twisty\"):\n\t\t\treturn (\n\t\t\t\t<TwistyPanel\n\t\t\t\t\tkey={id}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpanel={panel}\n\t\t\t\t>\n\t\t\t\t\t{content}\n\t\t\t\t</TwistyPanel>);\n\t\tcase (\"tearsheet\"):\n\t\t\tthis.TEARSHEETS[panel.id] = {\n\t\t\t\tpanel: panel,\n\t\t\t\ttitle: panel.label,\n\t\t\t\tdescription: panel.description ? panel.description.text : null,\n\t\t\t\tcontent: content\n\t\t\t};\n\t\t\tif (this.props.controller.getActiveTearsheet() !== null) {\n\t\t\t\tthis.visibleTearsheet = this.TEARSHEETS[this.props.controller.getActiveTearsheet()];\n\t\t\t} else {\n\t\t\t\tthis.visibleTearsheet = null;\n\t\t\t}\n\t\t\tif (!this.FIRST_TEARSHEET_ID || this.FIRST_TEARSHEET_ID === panel.id) {\n\t\t\t\tthis.FIRST_TEARSHEET_ID = panel.id;\n\t\t\t\tconst onCloseCallback = () => {\n\t\t\t\t\tthis.props.controller.clearActiveTearsheet();\n\t\t\t\t};\n\t\t\t\treturn (\n\t\t\t\t\t<TearSheet\n\t\t\t\t\t\topen={this.props.controller.getActiveTearsheet() !== null}\n\t\t\t\t\t\tonCloseCallback={onCloseCallback}\n\t\t\t\t\t\tkey={panel.id}\n\t\t\t\t\t\ttearsheet={this.visibleTearsheet}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn null;\n\t\tcase (\"column\"):\n\t\t\treturn (\n\t\t\t\t<ColumnPanel\n\t\t\t\t\tkey={id}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpanel={panel}\n\t\t\t\t>\n\t\t\t\t\t{content}\n\t\t\t\t</ColumnPanel>);\n\t\tdefault:\n\t\t\treturn (<ControlPanel\n\t\t\t\tkey={id}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\tpanel={panel}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t</ControlPanel>);\n\t\t}\n\t}\n\n\t/**\n\t* Close the field picker and invoke callback function\n\t* @param newSelectedFields all fields selected, includes newSelections\n\t* @param newSelections the newly selected rows\n\t*/\n\tcloseFieldPicker(newSelectedFields, newSelections) {\n\t\tif (this.closeFieldPickerCallback) {\n\t\t\tthis.closeFieldPickerCallback(newSelectedFields, newSelections);\n\t\t\tthis.closeFieldPickerCallback = null;\n\t\t}\n\t\tthis.props.showPropertiesButtons(true);\n\t\tthis.fieldPickerPropertyId = null;\n\t\tthis.setState({\n\t\t\tshowFieldPicker: false\n\t\t});\n\t}\n\n\t/**\n\t* Opens the field picker\n\t* @param propertyId of the control opening the field picker\n\t* @param callback function to invoke when closing the field picker\n\t*/\n\topenFieldPicker(propertyId, callback) {\n\t\tthis.props.showPropertiesButtons(false);\n\t\tthis.fieldPickerPropertyId = propertyId;\n\t\tthis.closeFieldPickerCallback = callback;\n\t\tthis.setState({\n\t\t\tshowFieldPicker: true\n\t\t});\n\t}\n\n\t/**\n\t* Renders the field picker with the control's current selected values and fields\n\t* @param title string to display as the field picker's title\n\t*/\n\tfieldPicker(title) {\n\t\tif (this.fieldPickerPropertyId && this.fieldPickerPropertyId.name) {\n\t\t\tconst currentControlValues = this.props.controller.getPropertyValue(this.fieldPickerPropertyId);\n\t\t\t// if in columnSelectionPanel, filter out fields that are in the other controls\n\t\t\tconst fields = this.props.controller.getFilteredDatasetMetadata(this.fieldPickerPropertyId);\n\n\t\t\t// create a list of field names to be passed into the field picker\n\t\t\tconst control = this.props.controller.getControl(this.fieldPickerPropertyId);\n\t\t\tlet dmImage;\n\t\t\tconst tableFieldIndex = PropertyUtil.getTableFieldIndex(control);\n\t\t\tconst subControls = control.subControls;\n\t\t\tif (tableFieldIndex !== -1) {\n\t\t\t\tif (!subControls) {\n\t\t\t\t\tdmImage = control.dmImage;\n\t\t\t\t} else {\n\t\t\t\t\tdmImage = subControls[tableFieldIndex].dmImage;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst formattedFieldsList = PropertyUtil.getFieldsFromControlValues(control, currentControlValues, fields);\n\n\t\t\treturn (<div className=\"properties-fp-table\">\n\t\t\t\t<FieldPicker\n\t\t\t\t\tkey=\"field-picker-control\"\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tcloseFieldPicker={this.closeFieldPicker}\n\t\t\t\t\tcurrentFields={formattedFieldsList}\n\t\t\t\t\tfields={fields}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\t\tdmIcon={dmImage}\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t}\n\t\treturn <div />;\n\t}\n\n\tgenAlertsTab(messages) {\n\t\tconst msgUIItems = messages.map((msg) => (\n\t\t\t{\n\t\t\t\t\"itemType\": \"linkText\",\n\t\t\t\t\"text\": msg.text,\n\t\t\t\t\"textType\": msg.type,\n\t\t\t\t\"controlId\": { \"name\": msg.id_ref }\n\t\t\t}));\n\n\t\treturn {\n\t\t\t\"text\": PropertyUtil.formatMessage(\n\t\t\t\tthis.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.ALERTS_TAB_TITLE),\n\t\t\t\"group\": ALERT_TAB_GROUP,\n\t\t\t\"content\":\n\t\t\t\t{ \"itemType\": \"panel\",\n\t\t\t\t\t\"panel\": {\n\t\t\t\t\t\t\"id\": \"alerts-panel\",\n\t\t\t\t\t\t\"panelType\": \"general\",\n\t\t\t\t\t\t\"uiItems\": msgUIItems\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\t}\n\n\trender() {\n\t\tlet uiItems = this.props.controller.getUiItems();\n\t\tif (!isEmpty(this.messages) && uiItems[0].itemType === \"primaryTabs\" && uiItems[0].tabs && uiItems[0].tabs.length > 1) {\n\t\t\t// create a new copy for uiItems object so that alerts are not added multiple times\n\t\t\tuiItems = cloneDeep(uiItems);\n\t\t\tuiItems[0].tabs.unshift(this.genAlertsTab(this.messages)); // add alerts tab to the beginning of the tabs array\n\t\t}\n\n\t\tlet content = this.genUIContent(uiItems);\n\t\tlet wideFly = <div />;\n\t\tlet stackedTearsheet;\n\n\t\tconst form = this.props.controller.getForm();\n\t\tconst title = PropertyUtil.formatMessage(this.props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.FIELDPICKER_SAVEBUTTON_LABEL) + \" \" + form.label;\n\n\t\tif (this.state.showFieldPicker) {\n\t\t\tif (this.props.rightFlyout) {\n\t\t\t\twideFly = (<WideFlyout\n\t\t\t\t\tshowPropertiesButtons={false}\n\t\t\t\t\tshow\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t>\n\t\t\t\t\t{this.fieldPicker(title)}\n\t\t\t\t</WideFlyout>);\n\t\t\t} else if (this.props.controller.isTearsheetContainer()) {\n\t\t\t\tstackedTearsheet = (<TearSheet\n\t\t\t\t\topen\n\t\t\t\t\tstacked\n\t\t\t\t\ttearsheet={{\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tcontent: this.fieldPicker()\n\t\t\t\t\t}}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcontent = this.fieldPicker(title);\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={classNames(\"properties-editor-form\",\n\t\t\t\t{ \"tearsheet-container\": this.props.controller.isTearsheetContainer() },\n\t\t\t\t{ \"field-picker\": this.state.showFieldPicker })}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t\t{wideFly}\n\t\t\t\t{stackedTearsheet}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nEditorForm.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tadditionalComponents: PropTypes.object,\n\tshowPropertiesButtons: PropTypes.func,\n\tcustomPanels: PropTypes.array,\n\trightFlyout: PropTypes.bool,\n\tactiveTab: PropTypes.string, // set by redux\n\tsetActiveTab: PropTypes.func, // set by redux\n\tmessages: PropTypes.array // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tactiveTab: state.componentMetadataReducer.activeTab,\n\tmessages: ownProps.controller.getErrorMessages(true, true, true)\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\tsetActiveTab: (tabId) => {\n\t\tdispatch(setActiveTab(tabId));\n\t}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorForm);\n","var baseGet = require('./_baseGet');\n\n/**\n * The opposite of `_.property`; this method creates a function that returns\n * the value at a given path of `object`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var array = [0, 1, 2],\n *     object = { 'a': array, 'b': array, 'c': array };\n *\n * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n * // => [2, 0]\n *\n * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n * // => [2, 0]\n */\nfunction propertyOf(object) {\n  return function(path) {\n    return object == null ? undefined : baseGet(object, path);\n  };\n}\n\nmodule.exports = propertyOf;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { propertyOf } from \"lodash\";\n\nexport class L10nProvider {\n\tconstructor(resources) {\n\t\tthis.resources = resources;\n\t}\n\n\t/**\n\t * Look up a localised resource using the supplied key.\n\t */\n\tl10n(key, defaultVal) {\n\t\tif (this.resources) {\n\t\t\tconst value = propertyOf(this.resources)(key);\n\t\t\tif (value || value === \"\") {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t\tif (defaultVal) {\n\t\t\treturn defaultVal;\n\t\t}\n\t\treturn key;\n\t}\n\n\t/**\n\t * Look up a localised resource.  Check for resource first, then fall back to default value\n\t */\n\tl10nResource(resourceObj) {\n\t\tlet text;\n\t\tif (resourceObj) {\n\t\t\tif (resourceObj.resource_key) {\n\t\t\t\ttext = this.l10n(resourceObj.resource_key);\n\t\t\t\tif ((!text || text === resourceObj.resource_key) && resourceObj.default) {\n\t\t\t\t\ttext = resourceObj.default;\n\t\t\t\t}\n\t\t\t} else if (resourceObj.default) {\n\t\t\t\ttext = resourceObj.default;\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t}\n\n\t/**\n\t * Look up a localised resource label using the supplied base key with \".label\" appended.\n\t */\n\tl10nLabel(uiObject, key) {\n\t\treturn this.l10nResource(uiObject.label) ? this.l10nResource(uiObject.label) : this.l10n(key + \".label\", key);\n\t}\n\n\t/**\n\t * Look up a localised resource description/tooltip using the supplied base key with \".desc\" appended.\n\t */\n\tl10nDesc(uiObject, key) {\n\t\treturn this.l10nResource(uiObject.description) ? this.l10nResource(uiObject.description) : this.l10n(key + \".desc\", key);\n\t}\n\n\t/**\n\t * Look up a localised resource label for an enumerated value using the supplied\n\t * base key with the value and \".label\" appended e.g. \"measurement.continous.label\".\n\t */\n\tl10nValueLabel(baseKey, value) {\n\t\tconst lookupKey = baseKey + \".\" + value + \".label\";\n\t\treturn this.l10n(lookupKey, value);\n\t}\n\n\tl10nValueDesc(baseKey, value) {\n\t\tconst lookupKey = baseKey + \".\" + value + \".desc\";\n\t\tconst desc = this.l10n(lookupKey, value);\n\t\treturn (desc !== value ? desc : null);\n\t}\n}\n\nexport class ResourceDef {\n\tstatic make(resourceObj) {\n\t\tlet resource;\n\t\tif (resourceObj) {\n\t\t\tresource = new ResourceDef();\n\t\t\tresource.default = resourceObj.default;\n\t\t\tresource.resource_key = resourceObj.resource_key;\n\t\t\tif (resourceObj.placement) {\n\t\t\t\tresource.placement = resourceObj.placement;\n\t\t\t}\n\t\t\tif (resourceObj.type) {\n\t\t\t\tresource.type = resourceObj.type;\n\t\t\t}\n\t\t\tif (resourceObj.link) {\n\t\t\t\tresource.link = resourceObj.link;\n\t\t\t}\n\t\t}\n\t\treturn resource;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GroupType } from \"../constants/form-constants\";\nimport { ResourceDef } from \"../util/L10nProvider\";\nimport { has, propertyOf } from \"lodash\";\nimport { v4 as uuid4 } from \"uuid\";\n\nclass Group {\n\tconstructor(cname, parameters, actions, type, label, dependsOn, insertPanels, nestedPanel, subGroups, description, data, className, copen) {\n\t\tthis.name = cname;\n\t\tthis.parameters = parameters;\n\t\tthis.actions = actions;\n\t\tthis.type = type;\n\t\tthis.label = ResourceDef.make(label);\n\t\tthis.dependsOn = dependsOn;\n\t\tthis.insertPanels = insertPanels;\n\t\tthis.nestedPanel = nestedPanel;\n\t\tthis.subGroups = subGroups;\n\t\tthis.description = ResourceDef.make(description);\n\t\tthis.data = data;\n\t\tthis.className = className;\n\t\tthis.open = copen;\n\t}\n\n\tparameterNames() {\n\t\treturn this.parameters;\n\t}\n\n\tactionIds() {\n\t\treturn this.actions;\n\t}\n\n\tgroupType() {\n\t\treturn (this.type ? this.type : GroupType.CONTROLS);\n\t}\n\n\tstatic makeGroup(uiGroup) {\n\t\tif (uiGroup) {\n\t\t\tlet subGroups;\n\t\t\tif (has(uiGroup, \"group_info\")) {\n\t\t\t\tsubGroups = [];\n\t\t\t\tfor (const group of uiGroup.group_info) {\n\t\t\t\t\tconst newGroup = Group.makeGroup(group);\n\t\t\t\t\tif (newGroup !== null) {\n\t\t\t\t\t\tsubGroups.push(newGroup);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new Group(\n\t\t\t\tpropertyOf(uiGroup)(\"id\"),\n\t\t\t\tpropertyOf(uiGroup)(\"parameter_refs\"),\n\t\t\t\tpropertyOf(uiGroup)(\"action_refs\"),\n\t\t\t\tpropertyOf(uiGroup)(\"type\"),\n\t\t\t\tpropertyOf(uiGroup)(\"label\"),\n\t\t\t\tpropertyOf(uiGroup)(\"depends_on_ref\"),\n\t\t\t\tpropertyOf(uiGroup)(\"insert_panels\"),\n\t\t\t\tpropertyOf(uiGroup)(\"nested_panel\"),\n\t\t\t\tsubGroups,\n\t\t\t\tpropertyOf(uiGroup)(\"description\"),\n\t\t\t\tpropertyOf(uiGroup)(\"data\"),\n\t\t\t\tpropertyOf(uiGroup)(\"class_name\"),\n\t\t\t\tpropertyOf(uiGroup)(\"open\")\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class GroupMetadata {\n\tconstructor(groups) {\n\t\tthis.groups = groups;\n\t}\n\n\tstatic makeGroupMetadata(uiGroups, parameters) {\n\t\tconst groups = [];\n\t\tif (uiGroups) {\n\t\t\tfor (const group of uiGroups) {\n\t\t\t\tconst newGroup = Group.makeGroup(group);\n\t\t\t\tif (newGroup !== null) {\n\t\t\t\t\tgroups.push(newGroup);\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\t// if no group create a default group with controls\n\t\t\tgroups.push(new Group(uuid4(), parameters, null, GroupType.CONTROLS));\n\t\t}\n\t\treturn new GroupMetadata(groups);\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ResourceDef } from \"../util/L10nProvider\";\n\nexport class Action {\n\tconstructor(actionName, label, description, control, data, image, button) {\n\t\tthis.name = actionName;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t\tthis.actionType = control;\n\t\tthis.data = data;\n\t\tthis.image = image;\n\t\tthis.button = button;\n\t}\n}\n\nclass ActionDef {\n\tstatic makeActionDef(action) {\n\t\tif (action) {\n\t\t\tconst actionDef = new ActionDef();\n\t\t\tactionDef.id = action.id;\n\t\t\tactionDef.label = ResourceDef.make(action.label);\n\t\t\tactionDef.description = ResourceDef.make(action.description);\n\t\t\tactionDef.control = action.control;\n\t\t\tactionDef.data = action.data;\n\t\t\tactionDef.image = action.image;\n\t\t\tactionDef.button = action.button;\n\t\t\treturn actionDef;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class ActionMetadata {\n\tconstructor(actionDefs) {\n\t\tthis.actionDefs = actionDefs;\n\t}\n\n\t// Return a single action\n\tgetAction(actionId) {\n\t\tlet actionDef;\n\t\tthis.actionDefs.forEach(function(action) {\n\t\t\tif (action.id === actionId) {\n\t\t\t\tactionDef = action;\n\t\t\t}\n\t\t});\n\t\treturn actionDef;\n\t}\n\n\tstatic makeActionMetadata(uihintsActions) {\n\t\tif (uihintsActions) {\n\t\t\tconst actionsDefs = [];\n\t\t\tfor (const action of uihintsActions) {\n\t\t\t\tconst actionDef = ActionDef.makeActionDef(action);\n\t\t\t\tif (actionDef) {\n\t\t\t\t\tactionsDefs.push(actionDef);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new ActionMetadata(actionsDefs);\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Separator } from \"../constants/form-constants\";\nimport { Type, ParamRole, EditStyle } from \"../constants/form-constants\";\nimport { ResourceDef } from \"../util/L10nProvider\";\nimport { propertyOf } from \"lodash\";\nimport { toType } from \"../util/property-utils\";\n\nexport class ParameterDef {\n\tconstructor(settings) {\n\t\tif (settings.id) {\n\t\t\tthis.name = settings.id;\n\t\t}\n\t\tif (settings.label) {\n\t\t\tthis.label = ResourceDef.make(settings.label);\n\t\t}\n\t\tif (settings.description) {\n\t\t\tthis.description = ResourceDef.make(settings.description);\n\t\t}\n\t\tif (settings.type) {\n\t\t\tthis.type = settings.type;\n\t\t}\n\t\tif (settings.role) {\n\t\t\tthis.role = settings.role;\n\t\t}\n\t\tif (settings.valueRestriction) {\n\t\t\tthis.valueRestriction = settings.valueRestriction;\n\t\t}\n\t\tif (settings.defaultValue !== null && toType(settings.defaultValue) !== \"undefined\") {\n\t\t\tif (settings.defaultValue.parameter_ref) {\n\t\t\t\tthis.defaultValue = {};\n\t\t\t\tthis.defaultValue.parameterRef = settings.defaultValue.parameter_ref;\n\t\t\t} else {\n\t\t\t\tthis.defaultValue = settings.defaultValue;\n\t\t\t}\n\t\t} else if (typeof settings.defaultValue === \"undefined\" && (this.isList() || this.isMapValue())) {\n\t\t\tthis.defaultValue = []; // This is a nested structure\n\t\t}\n\t\tif (typeof settings.labelVisible === \"boolean\") {\n\t\t\tthis.labelVisible = settings.labelVisible;\n\t\t}\n\t\tif (settings.control) {\n\t\t\tthis.control = settings.control;\n\t\t}\n\t\tif (settings.orientation) {\n\t\t\tthis.orientation = settings.orientation;\n\t\t}\n\t\tif (settings.width) {\n\t\t\tthis.width = settings.width;\n\t\t}\n\t\tif (settings.charLimit) {\n\t\t\tthis.charLimit = settings.charLimit;\n\t\t}\n\t\tif (settings.placeHolderText) {\n\t\t\tthis.placeHolderText = ResourceDef.make(settings.placeHolderText);\n\t\t}\n\t\tif (settings.separator) {\n\t\t\tthis.separator = settings.separator;\n\t\t}\n\t\tif (settings.resource_key) {\n\t\t\tthis.resource_key = settings.resource_key;\n\t\t}\n\t\tif (toType(settings.visible) === \"boolean\") {\n\t\t\tthis.visible = settings.visible;\n\t\t} else {\n\t\t\tthis.visible = true;\n\t\t}\n\t\tif (settings.valueIcons) {\n\t\t\tthis.valueIcons = settings.valueIcons;\n\t\t}\n\t\tif (toType(settings.sortable) === \"boolean\") {\n\t\t\tthis.sortable = settings.sortable;\n\t\t}\n\t\tif (toType(settings.filterable) === \"boolean\") {\n\t\t\tthis.filterable = settings.filterable;\n\t\t}\n\t\tif (toType(settings.resizable) === \"boolean\") {\n\t\t\tthis.resizable = settings.resizable;\n\t\t}\n\t\tif (settings.editStyle) {\n\t\t\tthis.editStyle = settings.editStyle;\n\t\t}\n\t\tif (toType(settings.required) === \"boolean\") {\n\t\t\tthis.required = settings.required;\n\t\t}\n\t\tif (settings.numberGenerator) {\n\t\t\tsettings.numberGenerator.label = ResourceDef.make(settings.numberGenerator.label);\n\t\t\tthis.numberGenerator = settings.numberGenerator;\n\t\t}\n\t\tif (settings.isKey) {\n\t\t\tthis.isKey = settings.isKey;\n\t\t}\n\t\tif (settings.dmDefault) {\n\t\t\tthis.dmDefault = settings.dmDefault;\n\t\t}\n\t\tif (settings.dmImage) {\n\t\t\tthis.dmImage = settings.dmImage;\n\t\t}\n\t\tif (settings.language) {\n\t\t\tthis.language = settings.language;\n\t\t}\n\t\tif (settings.enableMaximize) {\n\t\t\tthis.enableMaximize = settings.enableMaximize;\n\t\t}\n\n\t\tif (toType(settings.summary) === \"boolean\") {\n\t\t\tthis.summary = settings.summary;\n\t\t}\n\t\tif (settings.increment) {\n\t\t\tthis.increment = settings.increment;\n\t\t}\n\t\tif (settings.textAfter) {\n\t\t\tthis.textAfter = ResourceDef.make(settings.textAfter);\n\t\t}\n\t\tif (settings.textBefore) {\n\t\t\tthis.textBefore = ResourceDef.make(settings.textBefore);\n\t\t}\n\t\tif (toType(settings.moveableRows) === \"boolean\") {\n\t\t\tthis.moveableRows = settings.moveableRows;\n\t\t}\n\t\tif (settings.generatedValues) {\n\t\t\tthis.generatedValues = settings.generatedValues;\n\t\t}\n\t\tif (settings.dateFormat) {\n\t\t\tthis.dateFormat = settings.dateFormat;\n\t\t}\n\t\tif (settings.timeFormat) {\n\t\t\tthis.timeFormat = settings.timeFormat;\n\t\t}\n\t\tif (settings.customControlId) {\n\t\t\tthis.customControlId = settings.customControlId;\n\t\t}\n\t\tif (settings.data) {\n\t\t\tthis.data = settings.data;\n\t\t}\n\t\tif (settings.rows) {\n\t\t\tthis.rows = settings.rows;\n\t\t}\n\t\tif (settings.displayChars) {\n\t\t\tthis.displayChars = settings.displayChars;\n\t\t}\n\t\tif (settings.uionly) {\n\t\t\tthis.uionly = settings.uionly;\n\t\t}\n\t\tif (settings.actionRef) {\n\t\t\tthis.actionRef = settings.actionRef;\n\t\t}\n\t\tif (toType(settings.customValueAllowed) === \"boolean\") {\n\t\t\tthis.customValueAllowed = settings.customValueAllowed;\n\t\t}\n\t\tif (settings.className) {\n\t\t\tthis.className = settings.className;\n\t\t}\n\t\tif (settings.showRequiredLabel) {\n\t\t\tthis.showRequiredLabel = settings.showRequiredLabel;\n\t\t}\n\t}\n\n\tisList() {\n\t\tif (this.type) {\n\t\t\treturn this.type.startsWith(\"array[\");\n\t\t}\n\t\treturn false;\n\t}\n\n\tisMapValue() {\n\t\tif (this.type) {\n\t\t\treturn this.type.startsWith(\"map[\");\n\t\t}\n\t\treturn false;\n\t}\n\n\tisSubPanelEdit() {\n\t\tif (this.editStyle === EditStyle.SUBPANEL) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines if the given parameter object represents a compound field.\n\t *\n\t * @return True if the parameter represents a compound field\n\t */\n\tisCompoundField() {\n\t\tif (this.role && this.type) {\n\t\t\tconst isObject = this.type === Type.OBJECT || this.baseType() === Type.OBJECT;\n\t\t\treturn isObject && this.role === ParamRole.COLUMN;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpropType() {\n\t\t// If we don't recognize the base type as one of the built-in types, assume it's a structure\n\t\tlet value;\n\t\tfor (const key in Type) {\n\t\t\tif (this.baseType() === Type[key]) {\n\t\t\t\tvalue = Type[key];\n\t\t\t}\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = Type.STRUCTURE;\n\t\t}\n\t\treturn value;\n\t}\n\n\tgetRole() {\n\t\tif (this.role) {\n\t\t\treturn this.role;\n\t\t} else if (this.getValidValues()) {\n\t\t\t// Assume valueRestriction implies ENUM\n\t\t\treturn ParamRole.ENUM;\n\t\t}\n\t\treturn ParamRole.UNSPECIFIED;\n\t}\n\n\t/**\n\t * Returns the type of a parameter.\n\t */\n\tbaseType() {\n\t\tconst typ = this.type;\n\t\tif (this.isList()) {\n\t\t\t// \"array[<value-type>]\" so remove the leading \"array[\" and trailing \"]\"\n\t\t\treturn typ.substring(6, this.type.length - 1);\n\t\t} else if (this.isMapValue()) {\n\t\t\t// \"map[<key-type>,<value-type>]\" so remove everything up to and including \",\" and drop the trailing \"]\"\n\t\t\treturn typ.substring(typ.indexOf(\",\") + 1, this.type.length - 1).trim();\n\t\t} else if (this.valueRestriction && !this.type) { // assume String for enums\n\t\t\treturn Type.STRING;\n\t\t}\n\t\treturn typ;\n\t}\n\n\tgetValidValues() {\n\t\tvar undef;\n\t\tif (this.valueRestriction) {\n\t\t\treturn this.valueRestriction;\n\t\t} else if (this.type === Type.BOOLEAN) {\n\t\t\treturn [true, false];\n\t\t}\n\t\treturn undef;\n\t}\n\n\tgetValidValueCount() {\n\t\treturn (this.getValidValues() ? this.getValidValues().length : 0);\n\t}\n\n\t/**\n\t * Returns the \"additionalText\" attribute which can be used to include additional\n\t * text associated with the property control on the UI.\n\t */\n\tgetAdditionalText(l10nProvider) {\n\t\treturn l10nProvider.l10nResource(this.placeHolderText);\n\t}\n\n\tgetTextAfter(l10nProvider) {\n\t\treturn l10nProvider.l10nResource(this.textAfter);\n\t}\n\tgetTextAfterType() {\n\t\treturn this.textAfter ? this.textAfter.type : null;\n\t}\n\tgetTextBefore(l10nProvider) {\n\t\treturn l10nProvider.l10nResource(this.textBefore);\n\t}\n\tgetTextBeforeType() {\n\t\treturn this.textBefore ? this.textBefore.type : null;\n\t}\n\n\t/**\n\t * Returns the \"control\" attribute which can be used to define which control should be used\n\t * for editing a property. The control should be valid for the associated property.\n\t */\n\tgetControl(defaultControl) {\n\t\treturn (this.control ? this.control : defaultControl);\n\t}\n\n\t/**\n\t * Returns the \"columns\" uihint or the default value if a \"columns\" hint has not been supplied.\n\t */\n\tcolumns(defaultCol) {\n\t\treturn (this.width ? this.width : defaultCol);\n\t}\n\n\t/**\n\t * Returns the \"separatorAfter\" attribute which can be used to insert a horizontal\n\t * separator before the control in the UI.\n\t */\n\tseparatorAfter() {\n\t\tif (this.separator === Separator.AFTER) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the \"separatorBefore\" attribute which can be used to insert a horizontal\n\t * separator before the control in the UI.\n\t */\n\tseparatorBefore() {\n\t\tif (this.separator === Separator.BEFORE) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tstatic makeParameterDef(param, uihint, isKey) {\n\t\tif (param) {\n\t\t\treturn new ParameterDef({\n\t\t\t\t\"id\": propertyOf(param)(\"id\"),\n\t\t\t\t\"enableMaximize\": propertyOf(uihint)(\"enable_maximize\"),\n\t\t\t\t\"label\": propertyOf(uihint)(\"label\"),\n\t\t\t\t\"description\": propertyOf(uihint)(\"description\"),\n\t\t\t\t\"type\": propertyOf(param)(\"type\"),\n\t\t\t\t\"role\": propertyOf(param)(\"role\"),\n\t\t\t\t\"valueRestriction\": propertyOf(param)(\"enum\"),\n\t\t\t\t\"defaultValue\": propertyOf(param)(\"default\"),\n\t\t\t\t\"labelVisible\": propertyOf(uihint)(\"label_visible\"),\n\t\t\t\t\"control\": propertyOf(uihint)(\"control\"),\n\t\t\t\t\"orientation\": propertyOf(uihint)(\"orientation\"),\n\t\t\t\t\"width\": propertyOf(uihint)(\"width\"),\n\t\t\t\t\"charLimit\": propertyOf(uihint)(\"char_limit\"),\n\t\t\t\t\"placeHolderText\": propertyOf(uihint)(\"place_holder_text\"),\n\t\t\t\t\"separator\": propertyOf(uihint)(\"separator\"),\n\t\t\t\t\"resource_key\": propertyOf(uihint)(\"resource_key\"),\n\t\t\t\t\"visible\": propertyOf(uihint)(\"visible\"),\n\t\t\t\t\"valueIcons\": propertyOf(uihint)(\"value_icons\"),\n\t\t\t\t\"sortable\": propertyOf(uihint)(\"sortable\"),\n\t\t\t\t\"filterable\": propertyOf(uihint)(\"filterable\"),\n\t\t\t\t\"resizable\": propertyOf(uihint)(\"resizable\"),\n\t\t\t\t\"editStyle\": propertyOf(uihint)(\"edit_style\"),\n\t\t\t\t\"required\": propertyOf(param)(\"required\"),\n\t\t\t\t\"numberGenerator\": propertyOf(uihint)(\"number_generator\"),\n\t\t\t\t\"isKey\": isKey,\n\t\t\t\t\"dmDefault\": propertyOf(uihint)(\"dm_default\"),\n\t\t\t\t\"dmImage\": propertyOf(uihint)(\"dm_image\"),\n\t\t\t\t\"language\": propertyOf(uihint)(\"language\"),\n\t\t\t\t\"summary\": propertyOf(uihint)(\"summary\"),\n\t\t\t\t\"increment\": propertyOf(uihint)(\"increment\"),\n\t\t\t\t\"textAfter\": propertyOf(uihint)(\"text_after\"),\n\t\t\t\t\"textBefore\": propertyOf(uihint)(\"text_before\"),\n\t\t\t\t\"moveableRows\": propertyOf(uihint)(\"moveable_rows\"),\n\t\t\t\t\"generatedValues\": propertyOf(uihint)(\"generated_values\"),\n\t\t\t\t\"dateFormat\": propertyOf(uihint)(\"date_format\"),\n\t\t\t\t\"timeFormat\": propertyOf(uihint)(\"time_format\"),\n\t\t\t\t\"customControlId\": propertyOf(uihint)(\"custom_control_id\"),\n\t\t\t\t\"data\": propertyOf(uihint)(\"data\"),\n\t\t\t\t\"rows\": propertyOf(uihint)(\"rows\"),\n\t\t\t\t\"displayChars\": propertyOf(uihint)(\"display_chars\"),\n\t\t\t\t\"uionly\": propertyOf(param)(\"uionly\"),\n\t\t\t\t\"actionRef\": propertyOf(uihint)(\"action_ref\"),\n\t\t\t\t\"customValueAllowed\": propertyOf(uihint)(\"custom_value_allowed\"),\n\t\t\t\t\"className\": propertyOf(uihint)(\"class_name\"),\n\t\t\t\t\"showRequiredLabel\": propertyOf(param)(\"showRequiredLabel\")\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n}\n\n// searches uihints to match up with parameter\nfunction getParamUIHint(paramName, uihints) {\n\tif (uihints) {\n\t\tfor (const uihint of uihints) {\n\t\t\tif (paramName === uihint.parameter_ref) {\n\t\t\t\treturn uihint;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\n// PropertyProvider\nexport class ParameterMetadata {\n\tconstructor(paramDefs) {\n\t\tthis.paramDefs = paramDefs;\n\t}\n\n\t// Return a single parameter\n\tgetParameter(paramName) {\n\t\tlet paramDef;\n\t\tthis.paramDefs.forEach(function(param) {\n\t\t\tif (param.name === paramName) {\n\t\t\t\tparamDef = param;\n\t\t\t}\n\t\t});\n\t\treturn paramDef;\n\t}\n\n\t// Return a single parameter\n\tgetParameters() {\n\t\treturn this.paramDefs.map((param) => param.name);\n\t}\n\n\t// operation arguments\n\tstatic makeParameterMetadata(parameters, uihintsParams, uihintsUiParams) {\n\t\tconst paramDefs = [];\n\t\tif (parameters) {\n\t\t\t// Add a new option for showing \"required\" or \"optional\" indicator in control-item\n\t\t\tconst requiredParameters = parameters.filter((parameter) => parameter.required === true);\n\t\t\tconst half = parameters.length / 2;\n\t\t\tparameters.forEach((parameter) => {\n\t\t\t\tif (requiredParameters.length <= half) {\n\t\t\t\t\tparameter.showRequiredLabel = true;\n\t\t\t\t} else {\n\t\t\t\t\tparameter.showRequiredLabel = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (Array.isArray(parameters)) {\n\t\t\tfor (const param of parameters) {\n\t\t\t\tconst paramDef = ParameterDef.makeParameterDef(param, getParamUIHint(param.id, uihintsParams));\n\t\t\t\tif (paramDef) {\n\t\t\t\t\tparamDefs.push(paramDef);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Add any ui_parameters\n\t\tif (Array.isArray(uihintsUiParams)) {\n\t\t\tfor (const param of uihintsUiParams) {\n\t\t\t\tconst paramDef = ParameterDef.makeParameterDef(param, getParamUIHint(param.id, uihintsParams));\n\t\t\t\tif (paramDef) {\n\t\t\t\t\tparamDef.uionly = true;\n\t\t\t\t\tparamDefs.push(paramDef);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ParameterMetadata(paramDefs);\n\t}\n}\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ResourceDef } from \"../util/L10nProvider\";\n\nexport class Button {\n\tconstructor(id, label, description, icon, carbonIcon, enabled, divider) {\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t\tthis.icon = icon;\n\t\tthis.carbonIcon = carbonIcon;\n\t\tthis.enabled = enabled;\n\t\tthis.divider = divider;\n\t}\n}\n\nclass ButtonDef {\n\tstatic makeButtonDef(button) {\n\t\tif (button) {\n\t\t\tconst buttonDef = new ButtonDef();\n\t\t\tbuttonDef.id = button.id;\n\t\t\tbuttonDef.label = ResourceDef.make(button.label);\n\t\t\tbuttonDef.description = ResourceDef.make(button.description);\n\t\t\tbuttonDef.icon = button.icon;\n\t\t\tbuttonDef.carbonIcon = button.carbon_icon;\n\t\t\tbuttonDef.enabled = button.enabled;\n\t\t\tbuttonDef.divider = button.divider;\n\t\t\treturn buttonDef;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class ButtonMetadata {\n\tconstructor(buttonDefs) {\n\t\tthis.buttonDefs = buttonDefs;\n\t}\n\n\tgetButton(buttonId) {\n\t\tlet buttonDef;\n\t\tthis.buttonDefs.forEach(function(button) {\n\t\t\tif (button.id === buttonId) {\n\t\t\t\tbuttonDef = button;\n\t\t\t}\n\t\t});\n\t\treturn buttonDef;\n\t}\n\n\tstatic makeButtonMetadata(uihintsButtons) {\n\t\tif (uihintsButtons) {\n\t\t\tconst buttonDefs = [];\n\t\t\tfor (const button of uihintsButtons) {\n\t\t\t\tconst buttonDef = ButtonDef.makeButtonDef(button);\n\t\t\t\tif (buttonDef) {\n\t\t\t\t\tbuttonDefs.push(buttonDef);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new ButtonMetadata(buttonDefs);\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ParameterDef, ParameterMetadata } from \"./ParameterInfo\";\nimport { ButtonMetadata } from \"./ButtonInfo\";\nimport { propertyOf } from \"lodash\";\nimport { ResourceDef } from \"../util/L10nProvider\";\n\nexport class StructureDef {\n\tconstructor(cname, keyDefinition, parameterMetadata, moveableRows, label,\n\t\trowSelection, addRemoveRows, header, includeAllFields, layout, buttons, type) {\n\t\tthis.name = cname;\n\t\tthis.keyDefinition = keyDefinition;\n\t\tthis.parameterMetadata = parameterMetadata;\n\t\tthis.moveableRows = moveableRows;\n\t\tthis.label = ResourceDef.make(label);\n\t\tthis.rowSelection = rowSelection;\n\t\tthis.buttons = buttons;\n\t\tif (typeof addRemoveRows === \"boolean\") {\n\t\t\tthis.addRemoveRows = addRemoveRows;\n\t\t} else {\n\t\t\tthis.addRemoveRows = true; // set the default value\n\t\t}\n\t\tif (typeof header === \"boolean\") {\n\t\t\tthis.header = header;\n\t\t} else {\n\t\t\tthis.header = true; // set the default value\n\t\t}\n\t\tif (typeof includeAllFields === \"boolean\") {\n\t\t\tthis.includeAllFields = includeAllFields;\n\t\t}\n\t\tif (Array.isArray(layout)) {\n\t\t\tthis.layout = layout;\n\t\t}\n\t\tif (typeof type === \"undefined\") {\n\t\t\tthis.type = \"array\"; // set the default value\n\t\t} else {\n\t\t\tthis.type = type;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a array of parameter names\n\t */\n\tparameterNames() {\n\t\tconst params = [];\n\t\tif (this.parameterMetadata) {\n\t\t\tfor (const param of this.parameterMetadata.paramDefs) {\n\t\t\t\tparams.push(param.name);\n\t\t\t}\n\t\t}\n\t\treturn params;\n\t}\n\thasSubPanel() {\n\t\tif (this.parameterMetadata) {\n\t\t\tfor (const param of this.parameterMetadata.paramDefs) {\n\t\t\t\tif (param.isSubPanelEdit()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tkeyAttributeIndex() {\n\t\tif (this.keyDefinition) {\n\t\t\t// Assume the key is always in the first column\n\t\t\treturn 0;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tdefaultStructure() {\n\t\tconst defaults = [];\n\t\tthis.parameterMetadata.paramDefs.forEach(function(param) {\n\t\t\tdefaults.push(param.defaultValue);\n\t\t});\n\t\tif (this.keyDefinition) {\n\t\t\t// Assume the key is always in the first column\n\t\t\tdefaults.unshift(this.keyDefinition.defaultValue);\n\t\t}\n\t\treturn defaults;\n\t}\n\n\tstatic makeStructure(structure, uihints) {\n\t\tif (structure) {\n\t\t\treturn new StructureDef(\n\t\t\t\tpropertyOf(structure)(\"id\"),\n\t\t\t\tParameterDef.makeParameterDef(propertyOf(structure)(\"key_definition\"), propertyOf(uihints)(\"key_definition\"), true),\n\t\t\t\tParameterMetadata.makeParameterMetadata(propertyOf(structure)(\"parameters\"), propertyOf(uihints)(\"parameters\")),\n\t\t\t\tpropertyOf(uihints)(\"moveable_rows\"),\n\t\t\t\tpropertyOf(uihints)(\"label\"),\n\t\t\t\tpropertyOf(uihints)(\"row_selection\"),\n\t\t\t\tpropertyOf(uihints)(\"add_remove_rows\"),\n\t\t\t\tpropertyOf(uihints)(\"header\"),\n\t\t\t\tpropertyOf(uihints)(\"include_all_fields\"),\n\t\t\t\tpropertyOf(uihints)(\"layout\"),\n\t\t\t\tButtonMetadata.makeButtonMetadata(propertyOf(uihints)(\"buttons\")),\n\t\t\t\tpropertyOf(structure)(\"type\")\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n\n// searches uihints to match up with parameter\nfunction getStructureUIHint(structureName, uihints) {\n\tif (uihints) {\n\t\tfor (const uihint of uihints) {\n\t\t\tif (structureName === uihint.complex_type_ref) {\n\t\t\t\treturn uihint;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\nexport class StructureMetadata {\n\tconstructor(structures) {\n\t\tthis.structures = structures;\n\t}\n\n\tgetStructure(structName) {\n\t\tlet structureDef;\n\t\tthis.structures.forEach(function(structure) {\n\t\t\tif (structure.name === structName) {\n\t\t\t\tstructureDef = structure;\n\t\t\t}\n\t\t});\n\t\treturn structureDef;\n\t}\n\n\n\tstatic makeStructureMetadata(structures, uihintsStructures) {\n\t\tif (structures) {\n\t\t\tconst structureDefs = [];\n\t\t\tfor (const structure of structures) {\n\t\t\t\tconst struct = StructureDef.makeStructure(structure, getStructureUIHint(structure.id, uihintsStructures));\n\t\t\t\tif (struct !== null) {\n\t\t\t\t\tstructureDefs.push(struct);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new StructureMetadata(structureDefs);\n\t\t}\n\t\treturn null;\n\t}\n\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GroupMetadata } from \"./GroupInfo\";\nimport { ActionMetadata } from \"./ActionInfo\";\nimport { ParameterMetadata } from \"./ParameterInfo\";\nimport { StructureMetadata } from \"./StructureInfo\";\nimport { DEFAULT_LABEL_EDITABLE } from \"../constants/constants\";\nimport { Size } from \"../constants/form-constants\";\nimport { ResourceDef } from \"../util/L10nProvider\";\nimport { propertyOf } from \"lodash\";\n\nexport class PropertyDef {\n\tconstructor(cname, icon, editorSize, pixelWidth, label, labelEditable, help, description, structureMetadata, parameterMetadata, groupMetadata, actionMetadata, heading) {\n\t\tthis.name = cname;\n\t\tthis.icon = icon;\n\t\tthis.editorSize = editorSize;\n\t\tthis.pixelWidth = pixelWidth;\n\t\tthis.label = label;\n\t\tthis.labelEditable = labelEditable;\n\t\tthis.help = help;\n\t\tthis.description = ResourceDef.make(description);\n\t\tthis.structureMetadata = structureMetadata;\n\t\tthis.parameterMetadata = parameterMetadata;\n\t\tthis.groupMetadata = groupMetadata;\n\t\tthis.actionMetadata = actionMetadata;\n\t\tthis.heading = heading;\n\t}\n\n\t/**\n\t * Returns the \"editorSize\" attribute which can be used to define how large\n\t * a node editor should be in the UI. Default to small editor unless defaultValue is set.\n\t */\n\teditorSizeHint(defaultValue) {\n\t\tif (this.editorSize) {\n\t\t\treturn this.editorSize;\n\t\t}\n\t\tif (defaultValue) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn Size.SMALL;\n\t}\n\n\n\tstatic makePropertyDef(titleDefinition, parameters, structures, uihints) {\n\t\tconst structureMetadata = StructureMetadata.makeStructureMetadata(structures, propertyOf(uihints)(\"complex_type_info\"));\n\t\tconst parameterMetadata = ParameterMetadata.makeParameterMetadata(parameters,\n\t\t\tpropertyOf(uihints)(\"parameter_info\"), propertyOf(uihints)(\"ui_parameters\"));\n\t\tconst actionMetadata = ActionMetadata.makeActionMetadata(propertyOf(uihints)(\"action_info\"));\n\t\tconst groupMetadata = GroupMetadata.makeGroupMetadata(propertyOf(uihints)(\"group_info\"), parameterMetadata.getParameters());\n\n\t\tconst label = titleDefinition && titleDefinition.title ? titleDefinition.title : \"\";\n\t\tconst labelEditable = titleDefinition && typeof titleDefinition.editable !== \"undefined\" ? titleDefinition.editable : DEFAULT_LABEL_EDITABLE;\n\n\t\treturn new PropertyDef(\n\t\t\tpropertyOf(uihints)(\"id\"),\n\t\t\tpropertyOf(uihints)(\"icon\"),\n\t\t\tpropertyOf(uihints)(\"editor_size\"),\n\t\t\tpropertyOf(uihints)(\"pixel_width\"),\n\t\t\tlabel,\n\t\t\tlabelEditable,\n\t\t\tpropertyOf(uihints)(\"help\"),\n\t\t\tpropertyOf(uihints)(\"description\"),\n\t\t\tstructureMetadata,\n\t\t\tparameterMetadata,\n\t\t\tgroupMetadata,\n\t\t\tactionMetadata,\n\t\t\tpropertyOf(uihints)(\"label\")\n\t\t);\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { get } from \"lodash\";\n\nimport { EditStyle } from \"../constants/form-constants\";\n\n\nexport class Control {\n\tconstructor(settings) {\n\t\tthis.name = settings.name;\n\t\tif (settings.label) {\n\t\t\tthis.label = settings.label;\n\t\t}\n\t\tif (settings.description) {\n\t\t\tthis.description = settings.description;\n\t\t}\n\t\tif (typeof settings.labelVisible === \"boolean\") {\n\t\t\tthis.labelVisible = settings.labelVisible;\n\t\t}\n\t\tif (settings.controlType) {\n\t\t\tthis.controlType = settings.controlType;\n\t\t}\n\t\tif (settings.valueDef) {\n\t\t\tthis.valueDef = settings.valueDef;\n\t\t}\n\t\tif (settings.role) {\n\t\t\tthis.role = settings.role;\n\t\t}\n\t\tif (settings.additionalText) {\n\t\t\tthis.additionalText = settings.additionalText;\n\t\t}\n\t\tif (settings.orientation) {\n\t\t\tthis.orientation = settings.orientation;\n\t\t}\n\t\tif (settings.values) {\n\t\t\tthis.values = settings.values;\n\t\t}\n\t\tif (settings.valueLabels) {\n\t\t\tthis.valueLabels = settings.valueLabels;\n\t\t}\n\t\tif (settings.valueDescs) {\n\t\t\tthis.valueDescs = settings.valueDescs;\n\t\t}\n\t\tif (settings.valueIcons) {\n\t\t\tthis.valueIcons = settings.valueIcons;\n\t\t}\n\t\tif (typeof settings.sortable === \"boolean\") {\n\t\t\tthis.sortable = settings.sortable;\n\t\t}\n\t\tif (typeof settings.filterable === \"boolean\") {\n\t\t\tthis.filterable = settings.filterable;\n\t\t}\n\t\tif (typeof settings.resizable === \"boolean\") {\n\t\t\tthis.resizable = settings.resizable;\n\t\t}\n\t\tif (settings.language) {\n\t\t\tthis.language = settings.language;\n\t\t}\n\t\tif (settings.enableMaximize) {\n\t\t\tthis.enableMaximize = settings.enableMaximize;\n\t\t}\n\t\tif (settings.charLimit) {\n\t\t\tthis.charLimit = settings.charLimit;\n\t\t}\n\t\tif (settings.summary) {\n\t\t\tthis.summary = settings.summary;\n\t\t}\n\t\tif (settings.increment) {\n\t\t\tthis.increment = settings.increment;\n\t\t}\n\t\tif (settings.generatedValues) {\n\t\t\tthis.generatedValues = {};\n\t\t\tif (settings.generatedValues.operation) {\n\t\t\t\tthis.generatedValues.operation = settings.generatedValues.operation;\n\t\t\t}\n\t\t\tif (settings.generatedValues.start_value) {\n\t\t\t\tthis.generatedValues.startValue = settings.generatedValues.start_value;\n\t\t\t}\n\t\t}\n\t\tif (settings.dateFormat) {\n\t\t\tthis.dateFormat = settings.dateFormat;\n\t\t}\n\t\tif (settings.timeFormat) {\n\t\t\tthis.timeFormat = settings.timeFormat;\n\t\t}\n\t\tif (settings.customControlId) {\n\t\t\tthis.customControlId = settings.customControlId;\n\t\t}\n\t\tif (settings.data) {\n\t\t\tthis.data = settings.data;\n\t\t}\n\t\tif (settings.rows) {\n\t\t\tthis.rows = settings.rows;\n\t\t}\n\t\tif (settings.displayChars) {\n\t\t\tthis.displayChars = settings.displayChars;\n\t\t}\n\t\tif (settings.action) {\n\t\t\tthis.action = settings.action;\n\t\t}\n\t\tif (settings.structureType) {\n\t\t\tthis.structureType = settings.structureType;\n\t\t}\n\t\tif (settings.subControls) {\n\t\t\tthis.subControls = settings.subControls;\n\t\t}\n\t\tif (settings.childItem) {\n\t\t\tthis.childItem = settings.childItem;\n\t\t}\n\t\tif (settings.layout) {\n\t\t\tthis.layout = settings.layout;\n\t\t}\n\t\tif (typeof settings.keyIndex === \"number\") {\n\t\t\tthis.keyIndex = settings.keyIndex;\n\t\t}\n\t\tif (settings.defaultRow) {\n\t\t\tthis.defaultRow = settings.defaultRow;\n\t\t}\n\t\tif (typeof settings.moveableRows === \"boolean\") {\n\t\t\tthis.moveableRows = settings.moveableRows;\n\t\t}\n\t\tif (typeof settings.required === \"boolean\") {\n\t\t\tthis.required = settings.required;\n\t\t}\n\t\tif (settings.rowSelection) {\n\t\t\tthis.rowSelection = settings.rowSelection;\n\t\t}\n\t\tif (typeof settings.addRemoveRows === \"boolean\") {\n\t\t\tthis.addRemoveRows = settings.addRemoveRows;\n\t\t}\n\n\t\tif (typeof settings.hideEditButton === \"boolean\") {\n\t\t\tthis.hideEditButton = settings.hideEditButton;\n\t\t}\n\n\t\tif (typeof settings.header === \"boolean\") {\n\t\t\tthis.header = settings.header;\n\t\t}\n\t\tif (typeof settings.uionly === \"boolean\") {\n\t\t\tthis.uionly = settings.uionly;\n\t\t}\n\t\tif (typeof settings.includeAllFields === \"boolean\") {\n\t\t\tthis.includeAllFields = settings.includeAllFields;\n\t\t}\n\t\tif (settings.dmImage) {\n\t\t\tthis.dmImage = settings.dmImage;\n\t\t}\n\n\t\tif (typeof settings.visible === \"boolean\") {\n\t\t\tthis.visible = settings.visible;\n\t\t}\n\t\tif (typeof settings.width === \"number\") {\n\t\t\tthis.width = settings.width;\n\t\t}\n\t\tif (settings.editStyle) {\n\t\t\tthis.editStyle = settings.editStyle;\n\t\t} else if (!settings.isKeyField && typeof settings.structureType !== \"undefined\") {\n\t\t\tthis.editStyle = EditStyle.INLINE; // Should only be set for structure controls\n\t\t}\n\t\tif (settings.dmDefault) {\n\t\t\tthis.dmDefault = settings.dmDefault;\n\t\t}\n\t\tif (settings.dmImage) {\n\t\t\tthis.dmImage = settings.dmImage;\n\t\t}\n\t\tif (settings.customValueAllowed) {\n\t\t\tthis.customValueAllowed = settings.customValueAllowed;\n\t\t}\n\t\tif (settings.className) {\n\t\t\tthis.className = settings.className;\n\t\t}\n\t\tif (settings.showRequiredLabel) {\n\t\t\tthis.showRequiredLabel = settings.showRequiredLabel;\n\t\t}\n\t\tif (settings.buttons) {\n\t\t\tthis.buttons = settings.buttons;\n\t\t}\n\t\tthis.light = get(settings, \"light\", true);\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ItemType } from \"../constants/form-constants\";\nimport { propertyOf } from \"lodash\";\n\nexport class UIItem {\n\tconstructor(elements) {\n\t\tthis.id = propertyOf(elements)(\"id\");\n\t\tthis.itemType = propertyOf(elements)(\"itemType\");\n\t\tthis.tabs = propertyOf(elements)(\"tabs\"); // when PRIMARY_TABS, SUB_TABS or PANEL_SELECTOR\n\t\tthis.panel = propertyOf(elements)(\"panel\"); // when PANEL or ADDITIONAL_LINK\n\t\tthis.control = propertyOf(elements)(\"control\"); // when CONTROL\n\t\tthis.text = propertyOf(elements)(\"text\"); // when ADDITIONAL_LINK (link label) or STATIC_TEXT\n\t\tthis.textType = propertyOf(elements)(\"textType\"); // when STATIC_TEXT\n\t\tthis.secondaryText = propertyOf(elements)(\"secondaryText\"); // when ADDITIONAL_LINK (subpanel label)\n\t\tthis.dependsOn = propertyOf(elements)(\"dependsOn\"); // when PANEL_SELECTOR (control to obtain value from)\n\t\tthis.action = propertyOf(elements)(\"action\"); // when ACTION\n\t\tthis.className = propertyOf(elements)(\"className\");\n\t\tthis.nestedPanel = propertyOf(elements)(\"nestedPanel\"); // when SUB_TABS\n\t}\n\n\tstatic makePrimaryTabs(tabs) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.PRIMARY_TABS,\n\t\t\ttabs: tabs\n\t\t});\n\t}\n\n\tstatic makeSubTabs(tabs, className, nestedPanel) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.SUB_TABS,\n\t\t\ttabs: tabs,\n\t\t\tclassName: className,\n\t\t\tnestedPanel: nestedPanel\n\t\t});\n\t}\n\n\tstatic makePanelSelector(groupName, tabs, dependsOn, className) {\n\t\treturn new UIItem({\n\t\t\tid: groupName,\n\t\t\titemType: ItemType.PANEL_SELECTOR,\n\t\t\ttabs: tabs,\n\t\t\tdependsOn: dependsOn,\n\t\t\tclassName: className\n\t\t});\n\t}\n\n\tstatic makePanel(panel) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.PANEL,\n\t\t\tpanel: panel\n\t\t});\n\t}\n\n\tstatic makeAdditionalLink(text, dialogText, panel) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.ADDITIONAL_LINK,\n\t\t\tpanel: panel,\n\t\t\ttext: text,\n\t\t\tsecondaryText: dialogText\n\t\t});\n\t}\n\n\tstatic makeControl(control) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.CONTROL,\n\t\t\tcontrol: control\n\t\t});\n\t}\n\n\tstatic makeAction(action) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.ACTION,\n\t\t\taction: action\n\t\t});\n\t}\n\n\tstatic makeHSeparator() {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.HORIZONTAL_SEPARATOR\n\t\t});\n\t}\n\n\tstatic makeStaticText(text, textType) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.STATIC_TEXT,\n\t\t\ttext: text,\n\t\t\ttextType: textType\n\t\t});\n\t}\n\n\tstatic makeTextPanel(groupName, label, description, className, nestedPanel) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.TEXT_PANEL,\n\t\t\tpanel: {\n\t\t\t\tid: groupName,\n\t\t\t\tlabel: label,\n\t\t\t\tdescription: description,\n\t\t\t\tclassName: className,\n\t\t\t\tnestedPanel: nestedPanel\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic makeCustomPanel(panel, className) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.CUSTOM_PANEL,\n\t\t\tpanel: panel,\n\t\t\tclassName: className\n\t\t});\n\t}\n\n\tstatic makeTearsheetPanel(control, description) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.TEARSHEET,\n\t\t\tpanel: {\n\t\t\t\t...control,\n\t\t\t\tdescription\n\t\t\t}\n\t\t});\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint max-depth: [\"error\", 5] */\n\nimport { Control } from \"./ControlInfo\";\nimport { UIItem } from \"./UIItem\";\nimport { GroupType, PanelType, Type, ControlType, ParamRole, ORIENTATIONS } from \"../constants/form-constants\";\nimport { CONTAINER_TYPE } from \"../constants/constants\";\nimport logger from \"../../../utils/logger\";\nimport { StructureDef } from \"./StructureInfo\";\nimport { Action } from \"./ActionInfo\";\nimport { Button } from \"./ButtonInfo\";\nimport { get } from \"lodash\";\n\n/**\n * The Editor is the primary container for the editing controls. It defines the tabs within the\n * form which themselves contain the controls and other UI artifacts.\n */\nexport class EditorTab {\n\tconstructor(label, cname, uiItem) {\n\t\tthis.text = label;\n\t\tthis.group = cname;\n\t\tthis.content = uiItem;\n\t}\n}\n\nclass ValueDef {\n\tconstructor(propType, isList, isMap, defaultValue) {\n\t\tthis.propType = propType === Type.OBJECT ? Type.STRUCTURE : propType;\n\t\tthis.isList = isList;\n\t\tthis.isMap = isMap;\n\t\tthis.defaultValue = defaultValue;\n\t}\n\tstatic make(parameter) {\n\t\treturn new ValueDef(parameter.propType(), parameter.isList(),\n\t\t\tparameter.isMapValue(), parameter.defaultValue);\n\t}\n}\n\nclass Label {\n\tconstructor(text, numberGenerator) {\n\t\tthis.text = text;\n\t\tif (numberGenerator) {\n\t\t\tthis.numberGenerator = numberGenerator;\n\t\t}\n\t}\n}\n\nclass Description {\n\tconstructor(text, placement, link) {\n\t\tthis.text = text;\n\t\tif (placement) {\n\t\t\tthis.placement = placement;\n\t\t}\n\t\tif (link) {\n\t\t\tthis.link = link;\n\t\t}\n\t}\n}\n\nclass ControlPanel {\n\tconstructor(id, panelType, className, nestedPanel, controls, label, copen = false) {\n\t\tthis.id = id;\n\t\tthis.panelType = panelType;\n\t\tthis.nestedPanel = nestedPanel;\n\t\tthis.uiItems = controls;\n\t\tthis.open = copen;\n\t\tif (label) {\n\t\t\tthis.label = label;\n\t\t}\n\t\tif (className) {\n\t\t\tthis.className = className;\n\t\t}\n\t}\n}\n\nclass ActionPanel {\n\tconstructor(id, panelType, className, nestedPanel, actions, label, description) {\n\t\tthis.id = id;\n\t\tthis.panelType = panelType;\n\t\tthis.nestedPanel = nestedPanel;\n\t\tthis.uiItems = actions;\n\t\tif (className) {\n\t\t\tthis.className = className;\n\t\t}\n\t\tif (label) {\n\t\t\tthis.label = label;\n\t\t}\n\t\tif (description) {\n\t\t\tthis.description = description;\n\t\t}\n\t}\n}\n\nclass CustomControlPanel {\n\tconstructor(id, panelType, className, nestedPanel, parameters, data) {\n\t\tthis.id = id;\n\t\tthis.panelType = panelType;\n\t\tthis.nestedPanel = nestedPanel;\n\t\tthis.parameters = parameters;\n\t\tthis.data = data;\n\t\tif (className) {\n\t\t\tthis.className = className;\n\t\t}\n\t}\n}\n\nclass NumberGenerator {\n\tconstructor(text, numberGenerator) {\n\t\tthis.text = text;\n\t\tif (numberGenerator.range) {\n\t\t\tthis.range = numberGenerator.range;\n\t\t}\n\t}\n}\n\n/**\n * Creates tab based on parameter definition\n */\nfunction makePrimaryTab(propertyDef, group, l10nProvider, containerType) {\n\tconst label = l10nProvider.l10nLabel(group, group.name);\n\tconst additionalInfo = {\n\t\tlight: true,\n\t\tcontainerType\n\t};\n\treturn new EditorTab(label, group.name,\n\t\t_makeUIItem(propertyDef.parameterMetadata, propertyDef.actionMetadata, group, propertyDef.structureMetadata, l10nProvider, additionalInfo));\n}\n\nfunction _makeUIItem(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo) {\n\tconst groupName = group.name;\n\tlet groupItem = null;\n\tlet groupLabel = null;\n\tconst groupClassName = group.className;\n\tconst nestedPanel = get(group, \"nestedPanel\", false);\n\tswitch (group.groupType()) {\n\tcase GroupType.CONTROLS:\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.GENERAL, groupClassName, nestedPanel,\n\t\t\t_makeControls(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo)));\n\tcase GroupType.COLUMN_SELECTION:\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.COLUMN_SELECTION, groupClassName, nestedPanel,\n\t\t\t_makeControls(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo)));\n\tcase GroupType.ADDITIONAL: {\n\t\tconst panel = new ControlPanel(groupName, PanelType.GENERAL, groupClassName, nestedPanel,\n\t\t\t_makeControls(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo));\n\t\tgroupLabel = l10nProvider.l10nLabel(group, group.name);\n\t\treturn UIItem.makeAdditionalLink(groupLabel, groupLabel, panel);\n\t}\n\tcase GroupType.SUB_TABS: {\n\t\t// Defines a sub-tab group where each child group represents a sub-tab.\n\t\tconst subTabItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tconst subGroupName = subGroup.name;\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tgroupLabel = l10nProvider.l10nLabel(subGroup, subGroup.name);\n\t\t\t\tsubTabItems.push(new EditorTab(groupLabel, subGroupName, groupItem));\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makeSubTabs(subTabItems, groupClassName, nestedPanel);\n\t}\n\tcase GroupType.PANEL_SELECTOR: {\n\t\t// Defines a sub-tab group where each child group represents a sub-tab.\n\t\tconst panSelSubItems = _genPanelSelectorPanels(group, parameterMetadata, actionMetadata, structureMetadata, l10nProvider, additionalInfo);\n\t\treturn UIItem.makePanelSelector(groupName, panSelSubItems, group.dependsOn, groupClassName);\n\t}\n\tcase GroupType.PANELS: {\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.GENERAL, groupClassName, nestedPanel, panSubItems));\n\t}\n\tcase GroupType.COLUMN_PANEL: {\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.COLUMN_PANEL, groupClassName, nestedPanel, panSubItems));\n\t}\n\tcase GroupType.CUSTOM_PANEL: {\n\t\treturn UIItem.makeCustomPanel(new CustomControlPanel(groupName, PanelType.CUSTOM, groupClassName, nestedPanel, group.parameterNames(), group.data));\n\t}\n\tcase GroupType.SUMMARY_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nLabel(group, group.name);\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.SUMMARY, groupClassName, nestedPanel, panSubItems, groupLabel));\n\t}\n\tcase GroupType.ACTION_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nResource(group.label);\n\t\tlet groupDesc;\n\t\tif (group.description) {\n\t\t\tgroupDesc = new Description(l10nProvider.l10nResource(group.description),\n\t\t\t\tnull,\n\t\t\t\tgroup.description ? group.description.link : null);\n\t\t}\n\t\treturn UIItem.makePanel(new ActionPanel(groupName, PanelType.ACTION_PANEL, groupClassName, nestedPanel,\n\t\t\t_makeActions(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider), groupLabel, groupDesc));\n\t}\n\tcase GroupType.TEXT_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nResource(group.label);\n\t\tlet groupDesc;\n\t\tif (group.description) {\n\t\t\tgroupDesc = new Description(l10nProvider.l10nResource(group.description),\n\t\t\t\tgroup.description ? group.description.placement : null,\n\t\t\t\tgroup.description ? group.description.link : null);\n\t\t}\n\t\treturn UIItem.makeTextPanel(groupName, groupLabel, groupDesc, groupClassName, nestedPanel);\n\t}\n\tcase GroupType.TWISTY_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nLabel(group, group.name);\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.TWISTY_PANEL, groupClassName, nestedPanel, panSubItems, groupLabel, group.open));\n\t}\n\tcase GroupType.TEARSHEET_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nLabel(group, group.name);\n\t\tlet groupDesc;\n\t\tif (group.description) {\n\t\t\tgroupDesc = new Description(l10nProvider.l10nResource(group.description));\n\t\t}\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tconst additionalInfoUpdated = Object.assign({}, additionalInfo, { light: false });\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfoUpdated);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makeTearsheetPanel(new ControlPanel(groupName, PanelType.TEARSHEET, groupClassName, nestedPanel, panSubItems, groupLabel, false), groupDesc);\n\t}\n\tdefault:\n\t\tlogger.warn(\"(Unknown group type '\" + group.groupType() + \"')\");\n\t\treturn null;\n\t}\n}\n\n/**\n * Called on a base property group.\n */\nfunction _makeControls(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo) {\n\tconst uiItems = [];\n\tconst panelInsertedFor = [];\n\tif (!Array.isArray(group.parameterNames())) {\n\t\treturn uiItems;\n\t}\n\tgroup.parameterNames().forEach(function(paramName) {\n\t\t// Assume property definition exists\n\t\tconst prop = parameterMetadata.getParameter(paramName);\n\t\tlet structureDef;\n\t\tif (prop.propType() === Type.STRUCTURE && structureMetadata) {\n\t\t\tstructureDef = structureMetadata.getStructure(prop.baseType());\n\t\t}\n\t\tif (!(group instanceof StructureDef) || (group instanceof StructureDef && prop.isSubPanelEdit())) {\n\t\t\tconst ctrl = _makeControl(parameterMetadata, paramName, group, structureDef, l10nProvider, actionMetadata, structureMetadata, null, additionalInfo);\n\t\t\tconst control = UIItem.makeControl(ctrl);\n\t\t\tif (prop.separatorBefore()) {\n\t\t\t\tuiItems.push(UIItem.makeHSeparator());\n\t\t\t}\n\t\t\tif (prop.textBefore) {\n\t\t\t\tuiItems.push(UIItem.makeStaticText(prop.getTextBefore(l10nProvider), prop.getTextBeforeType()));\n\t\t\t}\n\t\t\tuiItems.push(control);\n\t\t\tif (prop.textAfter) {\n\t\t\t\tuiItems.push(UIItem.makeStaticText(prop.getTextAfter(l10nProvider), prop.getTextAfterType()));\n\t\t\t}\n\t\t\tif (prop.separatorAfter()) {\n\t\t\t\tuiItems.push(UIItem.makeHSeparator());\n\t\t\t}\n\n\t\t\t// If this control is a vertical radio button set and any element of\n\t\t\t// the associated subgroups is a panel of type panelSelector which has\n\t\t\t// the insertPanels boolean set to true and has its 'depends on' field\n\t\t\t// set to the name of the parameter being displayed by this radio\n\t\t\t// button control, then process the subgroup in the usual way but add\n\t\t\t// each to the additionalItems in the control. This allows them to be\n\t\t\t// inserted into the radio button set at display time.\n\t\t\tif (group.subGroups && group.subGroups.length > 0) {\n\t\t\t\tfor (var i = 0; i < group.subGroups.length; i++) {\n\t\t\t\t\tif (control.control.controlType === ControlType.RADIOSET &&\n\t\t\t\t\t\t\tcontrol.control.orientation === ORIENTATIONS.VERTICAL &&\n\t\t\t\t\t\t\tgroup.subGroups[i].type === GroupType.PANEL_SELECTOR &&\n\t\t\t\t\t\t\tgroup.subGroups[i].insertPanels === true &&\n\t\t\t\t\t\t\tgroup.subGroups[i].dependsOn === control.control.name) {\n\t\t\t\t\t\tpanelInsertedFor.push(group.subGroups[i].dependsOn);\n\t\t\t\t\t\tcontrol.additionalItems =\n\t\t\t\t\t\t\t_genPanelSelectorPanels(group.subGroups[i], parameterMetadata, actionMetadata, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Process any subgroups which have not already been inserted into a\n\t// radio button set (see code in loop above).\n\tif (Array.isArray(group.subGroups)) {\n\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\tif (!_hasPanelBeenInserted(panelInsertedFor, subGroup.dependsOn)) {\n\t\t\t\tconst uiItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tuiItems.push(uiItem);\n\t\t\t}\n\t\t});\n\t}\n\treturn uiItems;\n}\n\n/* Returns true if the panelInsertedFor array contains the dependsOn\n * value passed in.\n */\nfunction _hasPanelBeenInserted(panelInsertedFor, dependsOn) {\n\tif (dependsOn) {\n\t\tfor (var i = 0; i < panelInsertedFor.length; i++) {\n\t\t\tif (panelInsertedFor[i] === dependsOn) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/* Creates a set of panel objects for a panelSelector panel. The UIItem for\n * each panel is wrapped in an EditorTab object which pairs together the UIItem\n * and its ID. The ID is subsequently used by the radioset control to decide\n * which panel is displayed with which radio button.\n */\nfunction _genPanelSelectorPanels(group, parameterMetadata, actionMetadata, structureMetadata, l10nProvider, additionalInfo) {\n\tconst panSelSubItems = [];\n\tif (Array.isArray(group.subGroups)) {\n\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\tconst subGroupName = subGroup.name;\n\t\t\tconst groupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\tconst groupLabel = l10nProvider.l10nLabel(subGroup, subGroup.name);\n\t\t\tpanSelSubItems.push(new EditorTab(groupLabel, subGroupName, groupItem));\n\t\t});\n\t}\n\treturn panSelSubItems;\n}\n\nfunction _makeStringControl(parameter, isSubControl) {\n\tlet controlType;\n\tlet role = parameter.getRole();\n\tif (parameter.isList()) {\n\t\tconst controlObj = _processListParameter(parameter);\n\t\tcontrolType = controlObj.controlType;\n\t\tif (controlObj.role) {\n\t\t\trole = controlObj.role;\n\t\t}\n\t} else {\n\t\tswitch (parameter.getRole()) {\n\t\tcase ParamRole.TEXT:\n\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\tbreak;\n\t\tcase ParamRole.ENUM:\n\t\t\t// show oneofselect when inside a table cell\n\t\t\tif (parameter.getValidValueCount() > 4 || (isSubControl && !_isEmbeddedOption(parameter))) {\n\t\t\t\tcontrolType = ControlType.ONEOFSELECT;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.RADIOSET;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ParamRole.COLUMN:\n\t\t\trole = ParamRole.COLUMN;\n\t\t\tif (isSubControl && _isEmbeddedMultiOption(parameter)) {\n\t\t\t\tcontrolType = ControlType.SELECTCOLUMNS;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.SELECTCOLUMN;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ParamRole.EXPRESSION:\n\t\t\tcontrolType = ControlType.EXPRESSION;\n\t\t\tbreak;\n\t\tcase ParamRole.EMAIL:\n\t\t\trole = ParamRole.EMAIL;\n\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t\tbreak;\n\t\tcase ParamRole.URL:\n\t\t\trole = ParamRole.URL;\n\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t\tbreak;\n\t\tcase ParamRole.COLOR:\n\t\t\trole = ParamRole.COLOR;\n\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t}\n\t}\n\treturn { controlType: controlType, role: role };\n}\n\n/**\n * Creates a control for the supplied property.\n */\nfunction _makeControl(parameterMetadata, paramName, group, structureDefinition, l10nProvider, actionMetadata, structureMetadata, subControl, additionalInfo) {\n\tconst isSubControl = typeof subControl !== \"undefined\" && subControl;\n\n\t// Assume the property is defined\n\tconst parameter = isSubControl ? subControl : parameterMetadata.getParameter(paramName);\n\n\tconst additionalText = parameter.getAdditionalText(l10nProvider);\n\tconst orientation = parameter.orientation;\n\tconst required = parameter.required;\n\tif (parameter.numberGenerator) {\n\t\tparameter.numberGenerator = new NumberGenerator(l10nProvider.l10nLabel(parameter.numberGenerator, parameter.name), parameter.numberGenerator);\n\t}\n\tconst controlLabel = new Label(l10nProvider.l10nLabel(parameter, parameter.name), parameter.numberGenerator);\n\tlet controlDesc;\n\tif (parameter.description) {\n\t\tcontrolDesc = new Description(l10nProvider.l10nDesc(parameter, parameter.name),\n\t\t\tparameter.description ? parameter.description.placement : null,\n\t\t\tparameter.description ? parameter.description.link : null);\n\t}\n\n\t// The role is used to modify the behaviour of certain controls\n\tlet labelVisible = true;\n\tlet role;\n\tlet controlType;\n\tlet subControls;\n\tlet keyIndex;\n\tlet defaultRow;\n\tlet childItem;\n\tlet moveableRows = parameter.moveableRows;\n\tlet rowSelection;\n\tlet addRemoveRows;\n\tlet header;\n\tlet includeAllFields;\n\tlet layout;\n\tlet buttons;\n\tlet structureType = parameter.structureType;\n\n\t// The control type defines the basic UI element that should be used to edit the property\n\tif (!isSubControl && parameter.getRole() === ParamRole.CUSTOM) {\n\t\tcontrolType = ControlType.CUSTOM;\n\t} else {\n\t\tswitch (parameter.propType()) {\n\t\tcase Type.STRING: {\n\t\t\tconst returnObject = _makeStringControl(parameter, isSubControl);\n\t\t\tcontrolType = returnObject.controlType;\n\t\t\trole = returnObject.role;\n\t\t\tbreak;\n\t\t}\n\t\tcase Type.PASSWORD:\n\t\t\tcontrolType = ControlType.PASSWORDFIELD;\n\t\t\tbreak;\n\t\tcase Type.BOOLEAN:\n\t\t\tif (!parameter.control || parameter.control === ControlType.CHECKBOX) {\n\t\t\t\tlabelVisible = false;\n\t\t\t\tcontrolType = ControlType.CHECKBOX;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Type.INTEGER:\n\t\tcase Type.LONG:\n\t\tcase Type.DOUBLE:\n\t\t\tif (parameter.isList()) {\n\t\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.NUMBERFIELD;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Type.DATE:\n\t\t\trole = Type.DATE;\n\t\t\tif (parameter.isList()) {\n\t\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.DATEFIELD;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Type.TIME:\n\t\t\trole = Type.TIME;\n\t\t\tif (parameter.isList()) {\n\t\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.TIMEFIELD;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Type.TIMESTAMP:\n\t\t\tcontrolType = ControlType.TIMESTAMP;\n\t\t\tbreak;\n\t\tcase Type.STRUCTURE: {\n\t\t\tconst structureDef = isSubControl ? structureMetadata.getStructure(parameter.baseType()) : structureDefinition;\n\n\t\t\tif (structureDef) {\n\t\t\t\tif (structureDef.hasSubPanel()) {\n\t\t\t\t\tchildItem = _makeEditStyleSubPanel(structureDef, l10nProvider, structureMetadata, additionalInfo);\n\t\t\t\t}\n\t\t\t\tkeyIndex = structureDef.keyAttributeIndex();\n\t\t\t\t// The defaultRow allows the UI to create a new row with sensible settings\n\t\t\t\t// when needed\n\t\t\t\tdefaultRow = structureDef.defaultStructure();\n\t\t\t\t// For inline/row editing, create definitions for all the columns that can be edited\n\t\t\t\tsubControls = [];\n\t\t\t\tif (structureDef.parameterMetadata && Array.isArray(structureDef.parameterMetadata.paramDefs)) {\n\t\t\t\t\tstructureDef.parameterMetadata.paramDefs.forEach(function(param) {\n\t\t\t\t\t\tconst newSubControl = _makeSubControl(param, l10nProvider, structureMetadata, additionalInfo);\n\t\t\t\t\t\tsubControls.push(newSubControl);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// If the property is a keyed property or a structure list then the key should not be included in the\n\t\t\t\t// structure definition. However it will still need to be included in the table column definitions.\n\t\t\t\tif ((parameter.isMapValue() || parameter.isList()) && structureDef.keyDefinition) {\n\t\t\t\t\tconst newSubControl = _makeSubControl(structureDef.keyDefinition, l10nProvider, structureMetadata, additionalInfo);\n\t\t\t\t\tsubControls.unshift(newSubControl);\n\t\t\t\t}\n\t\t\t\tif (parameter.isList() || parameter.isMapValue()) {\n\t\t\t\t\tif ((!isSubControl && group && typeof group.groupType !== \"undefined\" && group.groupType() === GroupType.COLUMN_SELECTION) ||\n\t\t\t\t\t\t\tparameter.control === ControlType.STRUCTURETABLE ||\n\t\t\t\t\t\t\tparameter.getRole() === ParamRole.COLUMN) {\n\t\t\t\t\t\tcontrolType = ControlType.STRUCTURETABLE;\n\t\t\t\t\t\tmoveableRows = structureDef.moveableRows;\n\t\t\t\t\t\trowSelection = structureDef.rowSelection;\n\t\t\t\t\t\taddRemoveRows = structureDef.addRemoveRows;\n\t\t\t\t\t\theader = structureDef.header;\n\t\t\t\t\t\tincludeAllFields = structureDef.includeAllFields;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontrolType = ControlType.STRUCTURELISTEDITOR;\n\t\t\t\t\t\tmoveableRows = structureDef.moveableRows;\n\t\t\t\t\t\trowSelection = structureDef.rowSelection;\n\t\t\t\t\t\taddRemoveRows = structureDef.addRemoveRows;\n\t\t\t\t\t\theader = structureDef.header;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (structureDef.buttons) {\n\t\t\t\t\t\tbuttons = _makeButtons(structureDef.buttons, l10nProvider);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontrolType = ControlType.STRUCTUREEDITOR;\n\t\t\t\t\tif (structureDef.layout) {\n\t\t\t\t\t\tlayout = structureDef.layout;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstructureType = structureDef.type;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase Type.OBJECT:\n\t\t\tif (isSubControl) {\n\t\t\t\trole = parameter.getRole();\n\t\t\t\tif (role === ParamRole.COLUMN) {\n\t\t\t\t\tcontrolType = ControlType.SELECTCOLUMN;\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\"Complex subControl type that is not a field! Name: \" + parameter.name);\n\t\t\t\t\tcontrolType = ControlType.READONLY;\n\t\t\t\t}\n\t\t\t} else if (parameter.isCompoundField()) {\n\t\t\t\tconst returnObject = _makeStringControl(parameter, isSubControl);\n\t\t\t\tcontrolType = returnObject.controlType;\n\t\t\t\trole = returnObject.role;\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Complex parameter type that is not a field! Name: \" + parameter.name);\n\t\t\t\tcontrolType = ControlType.READONLY;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\trole = \"???\" + parameter.propType() + \"???\";\n\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\tbreak;\n\t\t}\n\t}\n\tlet valueLabels;\n\tif (parameter.getRole() === ParamRole.ENUM) {\n\t\tvalueLabels = _parameterValueLabels(parameter, l10nProvider);\n\t}\n\n\tlet valueDescs;\n\tif (parameter.getRole() === ParamRole.ENUM) {\n\t\tvalueDescs = _parameterValueDescription(parameter, l10nProvider);\n\t}\n\tlet action;\n\tif (!isSubControl && parameter.actionRef) {\n\t\taction = _makeAction(actionMetadata.getAction(parameter.actionRef), l10nProvider);\n\t}\n\tconst settings = {};\n\tsettings.name = parameter.name;\n\tsettings.label = controlLabel;\n\tsettings.description = controlDesc;\n\tsettings.labelVisible = typeof parameter.labelVisible === \"boolean\" ? parameter.labelVisible : labelVisible;\n\tsettings.controlType = parameter.getControl(controlType);\n\tsettings.valueDef = ValueDef.make(parameter);\n\tsettings.structureType = structureType;\n\tsettings.role = role;\n\tsettings.additionalText = additionalText;\n\tsettings.orientation = orientation;\n\tsettings.values = parameter.getValidValues();\n\tsettings.valueLabels = valueLabels;\n\tsettings.valueDescs = valueDescs;\n\tsettings.valueIcons = parameter.valueIcons;\n\tsettings.sortable = parameter.sortable;\n\tsettings.filterable = parameter.filterable;\n\tsettings.resizable = parameter.resizable;\n\tsettings.charLimit = parameter.charLimit;\n\tsettings.subControls = subControls;\n\tsettings.keyIndex = keyIndex;\n\tsettings.defaultRow = defaultRow;\n\tsettings.childItem = childItem;\n\tsettings.moveableRows = moveableRows;\n\tsettings.required = required;\n\tsettings.language = parameter.language;\n\tsettings.enableMaximize = parameter.enableMaximize;\n\tsettings.summary = parameter.summary;\n\tsettings.increment = parameter.increment;\n\tsettings.rowSelection = rowSelection;\n\tsettings.generatedValues = parameter.generatedValues;\n\tsettings.addRemoveRows = addRemoveRows;\n\tsettings.dateFormat = parameter.dateFormat;\n\tsettings.timeFormat = parameter.timeFormat;\n\tsettings.customControlId = parameter.customControlId;\n\tsettings.data = parameter.data;\n\tsettings.rows = parameter.rows;\n\tsettings.displayChars = parameter.displayChars;\n\tsettings.header = header;\n\tsettings.uionly = parameter.uionly;\n\tsettings.includeAllFields = includeAllFields;\n\tsettings.layout = layout;\n\tsettings.dmImage = parameter.dmImage;\n\tsettings.action = action;\n\tsettings.customValueAllowed = parameter.customValueAllowed;\n\tsettings.className = parameter.className;\n\tsettings.showRequiredLabel = parameter.showRequiredLabel;\n\tsettings.buttons = buttons;\n\tsettings.light = _isControlLight(additionalInfo.light, additionalInfo.containerType, parameter.isSubPanelEdit());\n\tif (isSubControl) {\n\t\tsettings.visible = parameter.visible;\n\t\tsettings.width = parameter.columns(8);\n\t\tsettings.editStyle = parameter.editStyle;\n\t\tsettings.isKeyField = parameter.isKey;\n\t\tsettings.dmDefault = parameter.dmDefault;\n\t}\n\treturn new Control(settings);\n}\n\nfunction _isControlLight(light, containerType, isSubPanelEdit) {\n\treturn light &&\n\t\t(containerType !== CONTAINER_TYPE.TEARSHEET || // Controls displayed in a Tearsheet are not light themed\n\t\t(containerType === CONTAINER_TYPE.TEARSHEET && isSubPanelEdit)); // Controls inside a subpanel of tearsheet container are light themed\n}\n\nfunction _processListParameter(parameter) {\n\tconst controlObj = {};\n\tswitch (parameter.getRole()) {\n\tcase ParamRole.TEXT:\n\t\tcontrolObj.controlType = ControlType.TEXTAREA;\n\t\tbreak;\n\tcase ParamRole.ENUM:\n\t\tif (parameter.getValidValueCount() < 5) {\n\t\t\tcontrolObj.controlType = ControlType.CHECKBOXSET;\n\t\t} else {\n\t\t\tcontrolObj.controlType = ControlType.SOMEOFSELECT;\n\t\t}\n\t\tbreak;\n\tcase ParamRole.COLUMN:\n\t\tcontrolObj.role = ParamRole.COLUMN;\n\t\tcontrolObj.controlType = ControlType.SELECTCOLUMNS;\n\t\tbreak;\n\tdefault:\n\t\tcontrolObj.controlType = ControlType.TEXTAREA;\n\t}\n\treturn controlObj;\n}\n\nfunction _makeEditStyleSubPanel(structureDef, l10nProvider, structureMetadata, additionalInfo) {\n\t// If we\"re not editing in-line then create a sub-panel that can be used to edit the attributes\n\tconst panel = new ControlPanel(\n\t\tstructureDef.name,\n\t\tPanelType.GENERAL,\n\t\t\"properties-editstyle-sub-panel\",\n\t\tfalse,\n\t\t_makeControls(structureDef.parameterMetadata,\n\t\t\tstructureDef.actionMetadata,\n\t\t\tstructureDef,\n\t\t\tstructureMetadata,\n\t\t\tl10nProvider,\n\t\t\tadditionalInfo)\n\t);\n\tconst groupLabel = l10nProvider.l10nLabel(structureDef, structureDef.name);\n\treturn UIItem.makeAdditionalLink(\"...\", groupLabel, panel);\n}\n\n/**\n * Creates a column control for the supplied property/attribute.\n */\nfunction _makeSubControl(parameter, l10nProvider, structureMetadata, additionalInfo) {\n\tconst parameterMetadata = null;\n\tconst paramName = null;\n\tconst group = null;\n\tconst structureDef = parameter.propType() === Type.STRUCTURE ? structureMetadata.getStructure(parameter.baseType()) : null;\n\tconst actionMetadata = null;\n\tconst subControl = parameter;\n\treturn _makeControl(parameterMetadata, paramName, group, structureDef, l10nProvider, actionMetadata, structureMetadata, subControl, additionalInfo);\n}\n\n/**\n * Returns true if the given parameter is a multi-option type that can be embedded within a table cell.\n */\nfunction _isEmbeddedMultiOption(parameter) {\n\tif (parameter.isList() || parameter.isMapValue()) {\n\t\treturn _isEmbeddedOption(parameter);\n\t}\n\treturn false;\n}\n\n/**\n * Returns true if the given parameter is a multi-option type that can be embedded within a table cell.\n */\nfunction _isEmbeddedOption(parameter) {\n\treturn parameter.editStyle === \"on_panel\" || parameter.editStyle === \"subpanel\";\n}\n\n/**\n * Called on a base property group.\n */\nfunction _makeActions(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider) {\n\tconst uiItems = [];\n\tif (Array.isArray(group.actionIds())) {\n\t\tgroup.actionIds().forEach(function(actionId) {\n\t\t\t// Assume property definition exists\n\t\t\tconst action = UIItem.makeAction(_makeAction(actionMetadata.getAction(actionId), l10nProvider));\n\t\t\tuiItems.push(action);\n\t\t});\n\t}\n\treturn uiItems;\n}\n\nfunction _makeAction(action, l10nProvider) {\n\tconst actionLabel = new Label(l10nProvider.l10nLabel(action, action.id));\n\tlet actionDesc;\n\tif (action.description) {\n\t\tactionDesc = new Description(l10nProvider.l10nDesc(action, action.id));\n\t}\n\treturn new Action(action.id, actionLabel, actionDesc, action.control, action.data, action.image, action.button);\n}\n\nfunction _makeButtons(buttonMetadata, l10nProvider) {\n\tconst buttons = [];\n\tbuttonMetadata.buttonDefs.forEach((buttonDef) => {\n\t\tbuttons.push(_makeButton(buttonMetadata.getButton(buttonDef.id), l10nProvider));\n\t});\n\treturn buttons;\n}\n\nfunction _makeButton(button, l10nProvider) {\n\tlet buttonLabel;\n\tif (button.label) {\n\t\tbuttonLabel = new Label(l10nProvider.l10nLabel(button, button.id));\n\t}\n\tlet buttonDescription;\n\tif (button.description) {\n\t\tbuttonDescription = new Description(l10nProvider.l10nDesc(button, button.description));\n\t}\n\treturn new Button(button.id, buttonLabel, buttonDescription, button.icon, button.carbonIcon, button.enabled, button.divider);\n}\n\nfunction _parameterValueLabels(parameter, l10nProvider) {\n\tif (Array.isArray(parameter.getValidValues())) {\n\t\tlet key;\n\t\tif (parameter.resource_key) {\n\t\t\tkey = parameter.resource_key;\n\t\t} else {\n\t\t\tkey = parameter.name;\n\t\t}\n\t\tconst paramLabels = [];\n\t\tparameter.getValidValues().forEach(function(paramValue) {\n\t\t\tparamLabels.push(l10nProvider.l10nValueLabel(key, String(paramValue)));\n\t\t});\n\t\treturn paramLabels;\n\t}\n\treturn [];\n}\n\nfunction _parameterValueDescription(parameter, l10nProvider) {\n\tif (Array.isArray(parameter.getValidValues())) {\n\t\tlet key;\n\t\tif (parameter.resource_key) {\n\t\t\tkey = parameter.resource_key;\n\t\t} else {\n\t\t\tkey = parameter.name;\n\t\t}\n\t\tconst paramDescs = [];\n\t\tparameter.getValidValues().forEach(function(paramValue) {\n\t\t\tparamDescs.push(l10nProvider.l10nValueDesc(key, String(paramValue)));\n\t\t});\n\t\treturn paramDescs;\n\t}\n\treturn [];\n}\n\n\nexport {\n\tmakePrimaryTab, _makeControl as makeControl\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { has } from \"lodash\";\n\n/*\n* Iterates over the conditions and replaces the default message with translated message\n*/\nfunction translateMessages(conditions, l10nProvider) {\n\tif (conditions && Array.isArray(conditions)) {\n\t\tfor (var condition of conditions) {\n\t\t\tsearchMessage(condition, l10nProvider);\n\t\t}\n\t}\n\treturn conditions;\n}\n\nfunction searchMessage(object, l10nProvider) {\n\tfor (var x in object) {\n\t\tif (has(object, x)) {\n\t\t\tif (typeof object[x] === \"object\" && object[x] !== null) {\n\t\t\t\tif (object[x].message) {\n\t\t\t\t\tobject[x].message.default = l10nProvider.l10nResource(object[x].message);\n\t\t\t\t} else {\n\t\t\t\t\tsearchMessage(object[x], l10nProvider);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport { translateMessages };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyDef } from \"./PropertyDef\";\nimport { propertyOf } from \"lodash\";\nimport { makePrimaryTab } from \"./EditorForm\";\nimport { UIItem } from \"./UIItem\";\nimport { L10nProvider } from \"../util/L10nProvider\";\nimport { translateMessages } from \"./Conditions\";\nimport { convertValueDataTypes } from \"../util/property-utils\";\nimport { Size } from \"../constants/form-constants\";\nimport { CONTAINER_TYPE } from \"../constants/constants\";\n\nexport default class Form {\n\tconstructor(componentId, label, labelEditable, help, editorSize, pixelWidth, uiItems, buttons, data, conditions, resources, icon, heading) {\n\t\tthis.componentId = componentId;\n\t\tthis.label = label;\n\t\tthis.labelEditable = labelEditable;\n\t\tthis.help = help;\n\t\tthis.editorSize = editorSize;\n\t\tthis.pixelWidth = pixelWidth;\n\t\tthis.uiItems = uiItems;\n\t\tthis.buttons = buttons;\n\t\tthis.data = data;\n\t\tthis.conditions = conditions;\n\t\tthis.resources = resources;\n\t\tthis.icon = icon;\n\t\tthis.heading = heading;\n\t}\n\n\t/**\n\t* Returns a new Form\n\t* @param paramDef Parameter definition\n\t* @param containerType Type of container common properties will be displayed in, set in propertiesConfig\n\t* @param shouldConvertValueDataTypes Boolean, if true, convert the currentParameters values into the type defined in parameterDef\n\t*/\n\tstatic makeForm(paramDef, containerType, shouldConvertValueDataTypes) {\n\t\tconst propDef = PropertyDef.makePropertyDef(propertyOf(paramDef)(\"titleDefinition\"), propertyOf(paramDef)(\"parameters\"), propertyOf(paramDef)(\"complex_types\"),\n\t\t\tpropertyOf(paramDef)(\"uihints\"));\n\t\tconst resources = propertyOf(paramDef)(\"resources\");\n\t\tconst conditions = propertyOf(paramDef)(\"conditions\");\n\t\tif (propDef) {\n\t\t\tconst l10nProvider = new L10nProvider(resources);\n\t\t\tconst tabs = [];\n\t\t\tif (propDef.groupMetadata && propDef.groupMetadata.groups) {\n\t\t\t\tfor (const group of propDef.groupMetadata.groups) {\n\t\t\t\t\ttabs.push(makePrimaryTab(propDef, group, l10nProvider, containerType));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet currentParameters = propertyOf(paramDef)(\"current_parameters\");\n\t\t\tif (shouldConvertValueDataTypes) {\n\t\t\t\tcurrentParameters = convertValueDataTypes(currentParameters, propDef.parameterMetadata.paramDefs);\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\tcurrentParameters: currentParameters,\n\t\t\t\tuiCurrentParameters: propertyOf(paramDef)(\"current_ui_parameters\"),\n\t\t\t\tdatasetMetadata: propertyOf(paramDef)(\"dataset_metadata\")\n\t\t\t};\n\t\t\tconst isModal = containerType === CONTAINER_TYPE.TEARSHEET || containerType === CONTAINER_TYPE.MODAL;\n\t\t\tconst editorSizeDefault = isModal ? Size.LARGE : Size.SMALL;\n\t\t\treturn new Form(propDef.name,\n\t\t\t\tpropDef.label,\n\t\t\t\tpropDef.labelEditable,\n\t\t\t\tpropDef.help,\n\t\t\t\tpropDef.editorSizeHint(editorSizeDefault),\n\t\t\t\tpropDef.pixelWidth,\n\t\t\t\t[UIItem.makePrimaryTabs(tabs)],\n\t\t\t\t_defaultButtons(),\n\t\t\t\tdata,\n\t\t\t\ttranslateMessages(conditions, l10nProvider),\n\t\t\t\tresources,\n\t\t\t\tpropDef.icon,\n\t\t\t\tl10nProvider.l10nResource(propDef.heading)\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nfunction _defaultButtons() {\n\tconst okBtn = new Button(\"ok\", \"OK\", true, \"\");\n\tconst cancelBtn = new Button(\"cancel\", \"Cancel\", false, \"\");\n\treturn [okBtn, cancelBtn];\n}\n\nclass Button {\n\tconstructor(id, text, isPrimary, url) {\n\t\tthis.id = id;\n\t\tthis.text = text;\n\t\tthis.isPrimary = isPrimary;\n\t\tthis.url = url;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Action from \"../command-stack/action.js\";\n\nexport default class CommonPropertiesAction extends Action {\n\tconstructor(newValues, initialValues, appData, applyPropertyChanges, propertiesActionLabel) {\n\t\tsuper(newValues);\n\t\tthis.newValues = newValues;\n\t\tthis.initialValues = initialValues;\n\t\tthis.appData = appData;\n\t\tthis.applyPropertyChanges = applyPropertyChanges;\n\t\tthis.propertiesActionLabel = propertiesActionLabel;\n\t}\n\n\t// Standard methods\n\tdo() {\n\t\tthis.applyPropertyChanges(this.newValues.properties, this.appData, this.newValues.additionalInfo, this.newValues.undoInfo, this.newValues.uiProperties);\n\t}\n\n\tundo() {\n\t\tthis.applyPropertyChanges(this.initialValues.properties, this.appData, this.initialValues.additionalInfo, this.initialValues.undoInfo, this.initialValues.uiProperties);\n\t}\n\n\tredo() {\n\t\tthis.applyPropertyChanges(this.newValues.properties, this.appData, this.newValues.additionalInfo, this.newValues.undoInfo, this.newValues.uiProperties);\n\t}\n\n\tgetLabel() {\n\t\treturn this.propertiesActionLabel;\n\t}\n}\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_PROPERTY_VALUE, SET_PROPERTY_VALUES, REMOVE_PROPERTY_VALUE } from \"../actions\";\n\nfunction properties(state = {}, action) {\n\tconst propertyId = action.property && action.property.propertyId ? action.property.propertyId : null;\n\tswitch (action.type) {\n\tcase UPDATE_PROPERTY_VALUE: {\n\t\tif (propertyId === null) {\n\t\t\treturn state;\n\t\t}\n\t\tvar newState = state;\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\t\tnewState[propertyId.name] = [];\n\t\t\t}\n\t\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\t\tif (typeof newState[propertyId.name][propertyId.row] === \"undefined\") {\n\t\t\t\t\tnewState[propertyId.name][propertyId.row] = [];\n\t\t\t\t}\n\n\t\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\t\tupdateNestedPropertyValue(propertyId.propertyId, newState[propertyId.name][propertyId.row][propertyId.col], action.property.value);\n\t\t\t\t} else {\n\t\t\t\t\tnewState[propertyId.name][propertyId.row][propertyId.col] = action.property.value;\n\t\t\t\t}\n\t\t\t} else if (typeof propertyId.propertyId !== \"undefined\") { // nested structureeditor\n\t\t\t\tupdateNestedPropertyValue(propertyId.propertyId, newState[propertyId.name][propertyId.row], action.property.value);\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][propertyId.row] = action.property.value;\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name] = action.property.value;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_PROPERTY_VALUES: {\n\t\treturn Object.assign({}, action.properties);\n\t}\n\tcase REMOVE_PROPERTY_VALUE: {\n\t\tconst nextState = state;\n\t\tif (propertyId !== null && typeof propertyId.name !== \"undefined\") {\n\t\t\tdelete nextState[propertyId.name];\n\t\t}\n\t\treturn Object.assign({}, state, nextState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nfunction updateNestedPropertyValue(propertyId, newState, value) {\n\tif (typeof propertyId.row !== \"undefined\") {\n\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\tif (typeof newState[propertyId.row] === \"undefined\") {\n\t\t\t\tnewState[propertyId.row] = [];\n\t\t\t}\n\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\tupdateNestedPropertyValue(propertyId.propertyId, newState[propertyId.row][propertyId.col], value);\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.row][propertyId.col] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.row] = value;\n\t\t}\n\t}\n}\n\nexport default properties;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_CONTROL_STATE, SET_CONTROL_STATES } from \"../actions\";\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_CONTROL_STATE: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.state.propertyId;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tconst strRow = propertyId.row.toString();\n\t\t\tif (typeof newState[propertyId.name][strRow] === \"undefined\") {\n\t\t\t\tnewState[propertyId.name][strRow] = {};\n\t\t\t}\n\t\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\t\tconst strCol = propertyId.col.toString();\n\t\t\t\tif (typeof newState[propertyId.name][strRow][strCol] === \"undefined\") {\n\t\t\t\t\tnewState[propertyId.name][strRow][strCol] = {};\n\t\t\t\t}\n\t\t\t\tnewState[propertyId.name][strRow][strCol] = {\n\t\t\t\t\tvalue: action.state.value\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][strRow] = {\n\t\t\t\t\tvalue: action.state.value\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name] = {\n\t\t\t\tvalue: action.state.value\n\t\t\t};\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_CONTROL_STATES: {\n\t\treturn Object.assign({}, action.states);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_PANEL_STATE, SET_PANEL_STATES } from \"../actions\";\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_PANEL_STATE: {\n\t\tconst newState = state;\n\t\tnewState[action.state.panelId.name] = {\n\t\t\tvalue: action.state.value\n\t\t};\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_PANEL_STATES: {\n\t\treturn Object.assign({}, action.states);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_ACTION_STATE, SET_ACTION_STATES } from \"../actions\";\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_ACTION_STATE: {\n\t\tconst newState = state;\n\t\tnewState[action.state.actionId.name] = {\n\t\t\tvalue: action.state.value\n\t\t};\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_ACTION_STATES: {\n\t\treturn Object.assign({}, action.states);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_ERROR_MESSAGE, SET_ERROR_MESSAGES, CLEAR_ERROR_MESSAGE } from \"../actions\";\nimport { isEmpty } from \"lodash\";\n/* eslint max-depth: [\"error\", 6] */\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction messages(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_ERROR_MESSAGE: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.message.propertyId;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tconst strRow = propertyId.row.toString();\n\t\t\tif (typeof newState[propertyId.name][strRow] === \"undefined\") {\n\t\t\t\tnewState[propertyId.name][strRow] = {};\n\t\t\t}\n\t\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\t\tconst strCol = propertyId.col.toString();\n\t\t\t\tif (typeof newState[propertyId.name][strRow][strCol] === \"undefined\") {\n\t\t\t\t\tnewState[propertyId.name][strRow][strCol] = {};\n\t\t\t\t}\n\t\t\t\tnewState[propertyId.name][strRow][strCol] = action.message.value;\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][strRow] = Object.assign({}, action.message.value);\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name] = Object.assign({}, action.message.value);\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase CLEAR_ERROR_MESSAGE: {\n\t\tconst newState = state;\n\t\tif (newState[action.message.propertyId.name]) {\n\t\t\tif (typeof action.message.propertyId.row !== \"undefined\") {\n\t\t\t\tif (typeof action.message.propertyId.col !== \"undefined\") {\n\t\t\t\t\tdelete newState[action.message.propertyId.name][action.message.propertyId.row][action.message.propertyId.col];\n\t\t\t\t} else {\n\t\t\t\t\tdelete newState[action.message.propertyId.name][action.message.propertyId.row];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete newState[action.message.propertyId.name].type;\n\t\t\t\tdelete newState[action.message.propertyId.name].text;\n\t\t\t\tdelete newState[action.message.propertyId.name].validation_id;\n\t\t\t\tdelete newState[action.message.propertyId.name].required;\n\t\t\t\tdelete newState[action.message.propertyId.name].propertyId;\n\t\t\t\tdelete newState[action.message.propertyId.name].displayError;\n\t\t\t\tif (isEmpty(newState[action.message.propertyId.name])) {\n\t\t\t\t\tdelete newState[action.message.propertyId.name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_ERROR_MESSAGES: {\n\t\treturn Object.assign({}, action.messages);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default messages;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_DATASET_METADATA } from \"../actions\";\n\nfunction datasetMetadata(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_DATASET_METADATA:\n\t\treturn Object.assign({}, state, action.datasetMetadata);\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default datasetMetadata;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_SELECTED_ROWS, CLEAR_SELECTED_ROWS } from \"../actions\";\n/* eslint max-depth: [\"error\", 6] */\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_SELECTED_ROWS: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.info.propertyId;\n\t\tif (!newState[propertyId.name]) {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\tconst strRow = String(propertyId.row);\n\t\t\tif (!newState[propertyId.name][strRow]) {\n\t\t\t\tnewState[propertyId.name][strRow] = {};\n\t\t\t}\n\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\tconst strCol = String(propertyId.col);\n\t\t\t\tif (!newState[propertyId.name][strRow][strCol]) {\n\t\t\t\t\tnewState[propertyId.name][strRow][strCol] = {};\n\t\t\t\t}\n\t\t\t\tnewState[propertyId.name][strRow][strCol].selectedRows = action.info.selectedRows;\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][strRow].selectedRows = action.info.selectedRows;\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name].selectedRows = action.info.selectedRows;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase CLEAR_SELECTED_ROWS: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.info.propertyId;\n\t\tif (action.info.propertyId) {\n\t\t\tif (newState[propertyId.name]) {\n\t\t\t\tif (Number.isInteger(propertyId.row) && newState[propertyId.name][String(propertyId.row)]) {\n\t\t\t\t\tconst strRow = String(propertyId.row);\n\t\t\t\t\tif (Number.isInteger(propertyId.col) && newState[propertyId.name][strRow][String(propertyId.col)]) {\n\t\t\t\t\t\tnewState[propertyId.name][strRow][String(propertyId.col)].selectedRows = [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewState[propertyId.name][strRow].selectedRows = [];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewState[propertyId.name].selectedRows = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Object.assign({}, state, newState);\n\t\t}\n\t\treturn {};\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_STATIC_ROWS, CLEAR_STATIC_ROWS } from \"../actions\";\n/* eslint max-depth: [\"error\", 6] */\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_STATIC_ROWS: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.info.propertyId;\n\t\tif (!newState[propertyId.name]) {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\tconst strRow = String(propertyId.row);\n\t\t\tif (!newState[propertyId.name][strRow]) {\n\t\t\t\tnewState[propertyId.name][strRow] = {};\n\t\t\t}\n\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\tconst strCol = String(propertyId.col);\n\t\t\t\tif (!newState[propertyId.name][strRow][strCol]) {\n\t\t\t\t\tnewState[propertyId.name][strRow][strCol] = {};\n\t\t\t\t}\n\t\t\t\tnewState[propertyId.name][strRow][strCol].staticRows = action.info.staticRows;\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][strRow].staticRows = action.info.staticRows;\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name].staticRows = action.info.staticRows;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase CLEAR_STATIC_ROWS: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.info.propertyId;\n\t\tif (action.info.propertyId) {\n\t\t\tif (newState[propertyId.name]) {\n\t\t\t\tif (Number.isInteger(propertyId.row) && newState[propertyId.name][String(propertyId.row)]) {\n\t\t\t\t\tconst strRow = String(propertyId.row);\n\t\t\t\t\tif (Number.isInteger(propertyId.col) && newState[propertyId.name][strRow][String(propertyId.col)]) {\n\t\t\t\t\t\tnewState[propertyId.name][strRow][String(propertyId.col)].staticRows = [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewState[propertyId.name][strRow].staticRows = [];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewState[propertyId.name].staticRows = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Object.assign({}, state, newState);\n\t\t}\n\t\treturn {};\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_TITLE, SET_ACTIVE_TAB } from \"../actions\";\n\n\nfunction componentMetadata(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_TITLE: {\n\t\tconst newState = state;\n\t\tnewState.title = action.title;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_ACTIVE_TAB: {\n\t\tconst newState = state;\n\t\tnewState.activeTab = action.activeTab;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default componentMetadata;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DISABLE_ROW_MOVE_BUTTONS } from \"../actions\";\n\nfunction disableRowMoveButtons(state = [], action) {\n\tswitch (action.type) {\n\tcase DISABLE_ROW_MOVE_BUTTONS: {\n\t\tconst newState = state;\n\t\tnewState.propertyIds = action.propertyIds;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default disableRowMoveButtons;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_SAVE_BUTTON_DISABLE } from \"../actions\";\n\nfunction setSaveButtonDisable(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_SAVE_BUTTON_DISABLE: {\n\t\tconst newState = state;\n\t\tnewState.disable = action.disableState;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default setSaveButtonDisable;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED } from \"../actions\";\n\nfunction setWideFlyoutPrimaryButtonDisabled(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED: {\n\t\tconst newState = state;\n\t\tnewState[action.info.panelId.name] = action.info.disableState;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default setWideFlyoutPrimaryButtonDisabled;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { set } from \"lodash\";\nimport { SET_ADD_REMOVE_ROWS, SET_TABLE_BUTTON_ENABLED, SET_HIDE_EDIT_BUTTON } from \"../actions\";\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tconst propertyId = action.info && action.info.propertyId ? action.info.propertyId : null;\n\tswitch (action.type) {\n\tcase SET_ADD_REMOVE_ROWS: {\n\t\tif (propertyId === null) {\n\t\t\treturn state;\n\t\t}\n\t\tconst newState = state;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tupdateNestedPropertySetting(propertyId, newState[propertyId.name], \"addRemoveRows\", action.info.value);\n\t\t} else {\n\t\t\tnewState[propertyId.name].addRemoveRows = action.info.value;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_TABLE_BUTTON_ENABLED: {\n\t\tif (propertyId === null) {\n\t\t\treturn state;\n\t\t}\n\t\tconst newState = state;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = { };\n\t\t}\n\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tupdateNestedPropertySetting(propertyId, newState[propertyId.name], `tableButtons.${action.info.buttonId}`, action.info.value);\n\t\t} else {\n\t\t\tset(newState[propertyId.name], `tableButtons.${action.info.buttonId}`, action.info.value);\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_HIDE_EDIT_BUTTON: {\n\t\tif (propertyId === null) {\n\t\t\treturn state;\n\t\t}\n\t\tconst newState = state;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tupdateNestedPropertySetting(propertyId, newState[propertyId.name], \"hideEditButton\", action.info.value);\n\t\t} else {\n\t\t\tnewState[propertyId.name].hideEditButton = action.info.value;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nfunction updateNestedPropertySetting(propertyId, newState, setting, value) {\n\tif (typeof propertyId.row !== \"undefined\") {\n\t\tif (typeof newState[propertyId.row] === \"undefined\") {\n\t\t\tnewState[propertyId.row] = {};\n\t\t}\n\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\tif (typeof newState[propertyId.row][propertyId.col] === \"undefined\") {\n\t\t\t\tnewState[propertyId.row][propertyId.col] = {};\n\t\t\t}\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\tupdateNestedPropertySetting(propertyId.propertyId, newState[propertyId.row][propertyId.col], setting, value);\n\t\t\t} else {\n\t\t\t\tset(newState[propertyId.row][propertyId.col], setting, value);\n\t\t\t}\n\t\t} else if (typeof propertyId.propertyId !== \"undefined\") { // nested structureeditor\n\t\t\tupdateNestedPropertySetting(propertyId.propertyId, newState[propertyId.row], setting, value);\n\t\t} else {\n\t\t\tset(newState[propertyId.row], setting, value);\n\t\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_ACTIVE_TEARSHEET } from \"../actions\";\n\nfunction states(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_ACTIVE_TEARSHEET: {\n\t\treturn Object.assign({}, state, action.tearsheetId);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createStore, combineReducers } from \"redux\";\nimport { has, get, isEqual, cloneDeep } from \"lodash\";\nimport { setTearsheetState } from \"./actions\";\nimport { setPropertyValues, updatePropertyValue, removePropertyValue } from \"./actions\";\nimport { setControlStates, updateControlState } from \"./actions\";\nimport { setPanelStates, updatePanelState } from \"./actions\";\nimport { setActionStates, updateActionState } from \"./actions\";\n\nimport { clearSelectedRows, updateSelectedRows, disableRowMoveButtons } from \"./actions\";\nimport { clearStaticRows, updateStaticRows } from \"./actions\";\nimport { setErrorMessages, updateErrorMessage, clearErrorMessage } from \"./actions\";\nimport { setDatasetMetadata, setSaveButtonDisable, setWideFlyoutPrimaryButtonDisabled, setAddRemoveRows, setTableButtonEnabled, setHideEditButton } from \"./actions\";\nimport { setTitle, setActiveTab } from \"./actions\";\nimport propertiesReducer from \"./reducers/properties\";\nimport controlStatesReducer from \"./reducers/control-states\";\nimport panelStatesReducer from \"./reducers/panel-states\";\nimport actionStatesReducer from \"./reducers/action-states\";\nimport errorMessagesReducer from \"./reducers/error-messages\";\nimport datasetMetadataReducer from \"./reducers/dataset-metadata\";\nimport rowSelectionsReducer from \"./reducers/row-selections\";\nimport rowFreezeReducer from \"./reducers/row-static\";\nimport componentMetadataReducer from \"./reducers/component-metadata\";\nimport disableRowMoveButtonsReducer from \"./reducers/disable-row-move-buttons\";\nimport saveButtonDisableReducer from \"./reducers/save-button-disable\";\nimport wideFlyoutPrimaryButtonDisableReducer from \"./reducers/wide-flyout-primary-button-disable\";\nimport propertiesSettingsReducer from \"./reducers/properties-settings\";\nimport tearsheetStatesReducer from \"./reducers/tearsheet-states\";\nimport * as PropertyUtils from \"./util/property-utils.js\";\nimport { CONDITION_MESSAGE_TYPE, MESSAGE_KEYS } from \"./constants/constants.js\";\n\n/* eslint max-depth: [\"error\", 6] */\n\nexport default class PropertiesStore {\n\tconstructor() {\n\t\tthis.combinedReducer = combineReducers({ propertiesReducer, controlStatesReducer, panelStatesReducer,\n\t\t\terrorMessagesReducer, datasetMetadataReducer, rowSelectionsReducer, componentMetadataReducer,\n\t\t\tdisableRowMoveButtonsReducer, actionStatesReducer, wideFlyoutPrimaryButtonDisableReducer, tearsheetStatesReducer,\n\t\t\tsaveButtonDisableReducer, propertiesSettingsReducer, rowFreezeReducer });\n\t\tlet enableDevTools = false;\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tenableDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\t\t}\n\t\tthis.store = createStore(this.combinedReducer, enableDevTools);\n\t}\n\n\tdispatch(action) {\n\t\tthis.store.dispatch(action);\n\t}\n\n\tgetStore() {\n\t\treturn this.store;\n\t}\n\tsubscribe(callback) {\n\t\tthis.store.subscribe(callback);\n\t}\n\n\tgetPropertyValue(propertyId) {\n\t\tconst state = this.store.getState();\n\t\tconst propValue = state.propertiesReducer[propertyId.name];\n\t\treturn this.getNestedPropertyValue(propertyId, propValue);\n\t}\n\n\tgetNestedPropertyValue(propertyId, propValue) {\n\t\tif (typeof propertyId.row !== \"undefined\" && (typeof propValue !== \"undefined\" && propValue !== null)) {\n\t\t\tconst rowValue = propValue[propertyId.row];\n\t\t\tif (typeof propertyId.col !== \"undefined\" && (typeof rowValue !== \"undefined\" && rowValue !== null) && Array.isArray(rowValue)) {\n\t\t\t\tif (typeof propertyId.index !== \"undefined\") {\n\t\t\t\t\treturn rowValue[propertyId.col][propertyId.index];\n\t\t\t\t}\n\n\t\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\t\treturn this.getNestedPropertyValue(propertyId.propertyId, rowValue[propertyId.col]);\n\t\t\t\t}\n\t\t\t\treturn rowValue[propertyId.col];\n\t\t\t}\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") { // nested structureeditor\n\t\t\t\treturn this.getNestedPropertyValue(propertyId.propertyId, rowValue);\n\t\t\t}\n\t\t\treturn rowValue;\n\t\t}\n\t\treturn propValue;\n\t}\n\tgetPropertyValues() {\n\t\tconst state = this.store.getState();\n\t\treturn PropertyUtils.copy(state.propertiesReducer);\n\t}\n\tsetPropertyValues(values) {\n\t\tthis.store.dispatch(setPropertyValues(values));\n\t}\n\n\tupdatePropertyValue(propertyId, value) {\n\t\tthis.store.dispatch(updatePropertyValue({ propertyId: propertyId, value: value }));\n\t}\n\n\tremovePropertyValue(propertyId) {\n\t\tthis.store.dispatch(removePropertyValue({ propertyId: propertyId }));\n\t}\n\n\tgetControlState(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tlet locState = state.controlStatesReducer[propertyId.name];\n\t\t// in a table return state of parent if set.\n\t\tif (locState && (locState.value === \"hidden\" || locState.value === \"disabled\")) {\n\t\t\treturn locState;\n\t\t}\n\n\t\t// First check for control-level, then column level, and finally cell level property addressing\n\t\tconst colId = typeof propertyId.col !== \"undefined\" ? propertyId.col.toString() : null;\n\t\tconst rowId = typeof propertyId.row !== \"undefined\" ? propertyId.row.toString() : null;\n\t\tif (colId !== null && locState && locState[colId] &&\n\t\t\t\t(typeof locState[colId].value !== \"undefined\" || (locState[colId][rowId] &&\n\t\t\t\t\t(typeof locState[colId][rowId].value !== \"undefined\" ||\n\t\t\t\t\t\ttypeof locState[colId][rowId].values !== \"undefined\")))) {\n\t\t\t// Column level state\n\t\t\tlocState = locState[colId];\n\t\t\tif (rowId !== null && locState && locState[rowId] &&\n\t\t\t\t(typeof locState[rowId].value !== \"undefined\" || typeof locState[rowId].values !== \"undefined\")) {\n\t\t\t\t// Cell level state\n\t\t\t\tlocState = locState[rowId];\n\t\t\t}\n\t\t}\n\t\tif (locState) {\n\t\t\treturn locState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetControlStates() {\n\t\tconst state = this.store.getState();\n\t\t// get a copy and not direct reference\n\t\treturn PropertyUtils.copy(state.controlStatesReducer);\n\t}\n\n\tsetControlStates(values) {\n\t\t// check to see if values are equal before firing event\n\t\tif (!isEqual(this.getControlStates(), values)) {\n\t\t\tthis.store.dispatch(setControlStates(values));\n\t\t}\n\t}\n\n\tupdateControlState(propertyId, value) {\n\t\tthis.store.dispatch(updateControlState({ propertyId: propertyId, value: value }));\n\t}\n\n\tgetPanelState(panelId) {\n\t\tif (typeof panelId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tconst locState = state.panelStatesReducer[panelId.name];\n\t\tif (locState && locState.value) {\n\t\t\treturn locState.value;\n\t\t}\n\t\treturn null;\n\t}\n\tgetPanelStates() {\n\t\tconst state = this.store.getState();\n\t\t// get a copy and not direct reference\n\t\treturn PropertyUtils.copy(state.panelStatesReducer);\n\t}\n\tsetPanelStates(values) {\n\t\t// check to see if values are equal before firing event\n\t\tif (!isEqual(this.getPanelStates(), values)) {\n\t\t\tthis.store.dispatch(setPanelStates(values));\n\t\t}\n\t}\n\tupdatePanelState(panelId, value) {\n\t\tthis.store.dispatch(updatePanelState({ panelId: panelId, value: value }));\n\t}\n\n\tgetActionState(actionId) {\n\t\tif (typeof actionId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tconst locState = state.actionStatesReducer[actionId.name];\n\t\tif (locState && locState.value) {\n\t\t\treturn locState.value;\n\t\t}\n\t\treturn null;\n\t}\n\tgetActionStates() {\n\t\tconst state = this.store.getState();\n\t\t// get a copy and not direct reference\n\t\treturn PropertyUtils.copy(state.actionStatesReducer);\n\t}\n\tsetActionStates(values) {\n\t\t// check to see if values are equal before firing event\n\t\tif (!isEqual(this.getActionStates(), values)) {\n\t\t\tthis.store.dispatch(setActionStates(values));\n\t\t}\n\t}\n\tupdateActionState(actionId, value) {\n\t\tthis.store.dispatch(updateActionState({ actionId: actionId, value: value }));\n\t}\n\n\tsetSaveButtonDisable(disableState) {\n\t\tthis.store.dispatch(setSaveButtonDisable(disableState));\n\t}\n\n\tgetSaveButtonDisable() {\n\t\tconst state = this.store.getState();\n\t\treturn state.saveButtonDisableReducer.disable;\n\t}\n\n\tsetWideFlyoutPrimaryButtonDisabled(panelId, disableState) {\n\t\tthis.store.dispatch(setWideFlyoutPrimaryButtonDisabled({ panelId: panelId, disableState: disableState }));\n\t}\n\n\tgetWideFlyoutPrimaryButtonDisabled(panelId) {\n\t\tif (typeof panelId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tconst disablePrimaryButtonForPanel = state.wideFlyoutPrimaryButtonDisableReducer[panelId.name];\n\t\tif (typeof disablePrimaryButtonForPanel !== \"undefined\") {\n\t\t\treturn disablePrimaryButtonForPanel;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/*\n\t* Retrieves filtered enumeration values for the given propertyId.\n\t*/\n\tgetFilteredEnumItems(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\t// First check for control-level, then column level, and finally cell level property addressing\n\t\tconst state = this.store.getState();\n\t\tlet locState = state.controlStatesReducer[propertyId.name];\n\t\tif (typeof propertyId.col !== \"undefined\" && locState && locState[propertyId.col.toString()]) {\n\t\t\t// Column level filtering\n\t\t\tlocState = locState[propertyId.col.toString()];\n\t\t\tif (typeof propertyId.row !== \"undefined\" && locState[propertyId.row.toString()]) {\n\t\t\t\t// Cell level filtering\n\t\t\t\tlocState = locState[propertyId.row.toString()];\n\t\t\t}\n\t\t}\n\t\tif (locState) {\n\t\t\treturn locState.enumFilter;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/*\n\t* Returns the message for a propertyId.  Iterates over row and cell level messages\n\t* and returns an error message summary for all cell level errors.\n\t*/\n\tgetErrorMessage(propertyId, intl) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tlet controlMsg = state.errorMessagesReducer[propertyId.name];\n\t\tif (typeof propertyId.row !== \"undefined\" && controlMsg) {\n\t\t\tcontrolMsg = controlMsg[propertyId.row.toString()];\n\t\t\tif (typeof propertyId.col !== \"undefined\" && controlMsg) {\n\t\t\t\treturn controlMsg[propertyId.col.toString()]; // return cell message\n\t\t\t}\n\t\t\tif (controlMsg && controlMsg.text) {\n\t\t\t\treturn controlMsg;\n\t\t\t}\n\t\t}\n\t\tlet controlMessage = null;\n\t\tlet returnMessage = null;\n\t\tif (controlMsg && controlMsg.text) { // save the control level message\n\t\t\tcontrolMessage = controlMsg;\n\t\t}\n\t\tif (controlMsg) {\n\t\t\tconst clonedControlMsg = cloneDeep(controlMsg); // Prevent modifying state directly\n\t\t\treturnMessage = this._getTableCellErrors(clonedControlMsg, intl);\n\t\t}\n\t\tif (controlMessage !== null && returnMessage !== null) {\n\t\t\tcontrolMessage.text = controlMessage.text + \" \" + returnMessage.text;\n\t\t} else if (controlMessage === null) {\n\t\t\tcontrolMessage = returnMessage;\n\t\t}\n\t\treturn controlMessage;\n\t}\n\n\t// get the table cell level error messages. if more than one cell is in error, return summary message;\n\t_getTableCellErrors(controlMsg, intl) {\n\t\tlet returnMessage = null;\n\t\tlet errorMsgCount = 0;\n\t\tlet warningMsgCount = 0;\n\t\t// search message for param and return first error message found, else first warning\n\t\tfor (const rowKey in controlMsg) {\n\t\t\tif (!has(controlMsg, rowKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (rowKey === \"text\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst rowMessage = controlMsg[rowKey];\n\t\t\tif (rowMessage && rowMessage.text) {\n\t\t\t\treturnMessage = rowMessage;\n\t\t\t\terrorMsgCount += (rowMessage.type === CONDITION_MESSAGE_TYPE.ERROR) ? 1 : 0;\n\t\t\t\twarningMsgCount += (rowMessage.type === CONDITION_MESSAGE_TYPE.WARNING) ? 1 : 0;\n\t\t\t}\n\t\t\tif (rowMessage) { // table cell\n\t\t\t\tfor (const colKey in rowMessage) {\n\t\t\t\t\tif (!has(rowMessage, colKey)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (colKey === \"text\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst colMessage = rowMessage[colKey];\n\t\t\t\t\tif (colMessage && colMessage.text) {\n\t\t\t\t\t\treturnMessage = colMessage;\n\t\t\t\t\t\terrorMsgCount += (colMessage.type === CONDITION_MESSAGE_TYPE.ERROR) ? 1 : 0;\n\t\t\t\t\t\twarningMsgCount += (colMessage.type === CONDITION_MESSAGE_TYPE.WARNING) ? 1 : 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ((errorMsgCount + warningMsgCount) !== 1 && returnMessage) {\n\t\t\treturnMessage.type = (errorMsgCount > 0) ? CONDITION_MESSAGE_TYPE.ERROR : CONDITION_MESSAGE_TYPE.WARNING;\n\t\t\treturnMessage.text = (errorMsgCount > 0)\n\t\t\t\t? PropertyUtils.formatMessage(intl,\n\t\t\t\t\tMESSAGE_KEYS.TABLE_SUMMARY_ERROR, { errorMsgCount: errorMsgCount })\n\t\t\t\t: \"\";\n\t\t\treturnMessage.text += (warningMsgCount > 0)\n\t\t\t\t? PropertyUtils.formatMessage(intl,\n\t\t\t\t\tMESSAGE_KEYS.TABLE_SUMMARY_WARNING, { warningMsgCount: warningMsgCount })\n\t\t\t\t: \"\";\n\t\t}\n\t\treturn returnMessage;\n\t}\n\n\tgetErrorMessages() {\n\t\tconst state = this.store.getState();\n\t\treturn PropertyUtils.copy(state.errorMessagesReducer);\n\t}\n\tsetErrorMessages(values) {\n\t\t// check to see if values are equal before firing event\n\t\tif (!isEqual(this.getErrorMessages(), values)) {\n\t\t\tthis.store.dispatch(setErrorMessages(values));\n\t\t}\n\t}\n\tupdateErrorMessage(propertyId, value) {\n\t\tif (!isEqual(this.getErrorMessage(propertyId), value)) {\n\t\t\tthis.store.dispatch(updateErrorMessage({ propertyId: propertyId, value: value }));\n\t\t}\n\t}\n\tclearErrorMessage(propertyId) {\n\t\tif (this.getErrorMessage(propertyId) !== null) {\n\t\t\tthis.store.dispatch(clearErrorMessage({ propertyId: propertyId }));\n\t\t}\n\t}\n\n\t/*\n\t* DataModel methods\n\t*/\n\tsetDatasetMetadata(datasetMetadata) {\n\t\tthis.store.dispatch(setDatasetMetadata(datasetMetadata));\n\t}\n\tgetDatasetMetadata() {\n\t\tconst state = this.store.getState();\n\t\treturn state.datasetMetadataReducer;\n\t}\n\n\t/*\n\t* Row Selection Methods\n\t*/\n\tgetSelectedRows(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn [];\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tlet rowSelections = state.rowSelectionsReducer[propertyId.name];\n\t\tif (Number.isInteger(propertyId.row) && rowSelections) {\n\t\t\trowSelections = rowSelections[String(propertyId.row)]; // row selection\n\t\t\tif (Number.isInteger(propertyId.col) && rowSelections) {\n\t\t\t\trowSelections = rowSelections[String(propertyId.col)]; // cell selection\n\t\t\t}\n\t\t}\n\t\treturn rowSelections && rowSelections.selectedRows ? rowSelections.selectedRows : [];\n\t}\n\n\tupdateSelectedRows(propertyId, selection) {\n\t\tthis.store.dispatch(updateSelectedRows({ propertyId: propertyId, selectedRows: selection }));\n\t}\n\n\tclearSelectedRows(propertyId) {\n\t\tthis.store.dispatch(clearSelectedRows({ propertyId: propertyId }));\n\t}\n\n\tgetStaticRows(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn [];\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tlet rowStatic = state.rowFreezeReducer[propertyId.name];\n\t\tif (Number.isInteger(propertyId.row) && rowStatic) {\n\t\t\trowStatic = rowStatic[String(propertyId.row)]; // row selection\n\t\t\tif (Number.isInteger(propertyId.col) && rowStatic) {\n\t\t\t\trowStatic = rowStatic[String(propertyId.col)]; // cell selection\n\t\t\t}\n\t\t}\n\t\treturn rowStatic && rowStatic.staticRows ? rowStatic.staticRows : [];\n\t}\n\n\tupdateStaticRows(propertyId, staticRows) {\n\t\tthis.store.dispatch(updateStaticRows({ propertyId: propertyId, staticRows: staticRows }));\n\t}\n\n\tclearStaticRows(propertyId) {\n\t\tthis.store.dispatch(clearStaticRows({ propertyId: propertyId }));\n\t}\n\n\t/**\n\t * Disable table row move buttons for all propertyIds in given array\n\t * @param propertyIds Array of propertyIds\n\t */\n\tsetDisableRowMoveButtons(propertyIds) {\n\t\tthis.store.dispatch(disableRowMoveButtons(propertyIds));\n\t}\n\n\tgetDisableRowMoveButtons() {\n\t\tconst state = this.store.getState();\n\t\treturn state.disableRowMoveButtonsReducer.propertyIds;\n\t}\n\n\tsetTitle(title) {\n\t\tthis.store.dispatch(setTitle(title));\n\t}\n\n\tgetTitle() {\n\t\tconst state = this.store.getState();\n\t\treturn state.componentMetadataReducer.title;\n\t}\n\n\tsetActiveTab(activeTab) {\n\t\tthis.store.dispatch(setActiveTab(activeTab));\n\t}\n\n\tgetActiveTab() {\n\t\tconst state = this.store.getState();\n\t\treturn state.componentMetadataReducer.activeTab;\n\t}\n\n\t/**\n\t* Set the addRemoveRows attribute to 'enabled' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param enabled boolean value to enable or disable addRemoveRows\n\t*/\n\tsetAddRemoveRows(propertyId, enabled) {\n\t\tthis.store.dispatch(setAddRemoveRows({ propertyId: propertyId, value: enabled }));\n\t}\n\n\t/**\n\t* Returns true if addRemoveRows is enabled for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetAddRemoveRows(propertyId) {\n\t\tconst state = this.store.getState();\n\t\tconst defaultValue = true; // Default to true to show the addRemoveRows buttons\n\t\tif (state.propertiesSettingsReducer[propertyId.name]) {\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId, state.propertiesSettingsReducer[propertyId.name], \"addRemoveRows\", defaultValue);\n\t\t\t}\n\t\t\treturn state.propertiesSettingsReducer[propertyId.name].addRemoveRows;\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\tsetTableButtonEnabled(propertyId, buttonId, enabled) {\n\t\tthis.store.dispatch(setTableButtonEnabled({ propertyId: propertyId, buttonId: buttonId, value: enabled }));\n\t}\n\n\tgetTableButtons(propertyId) {\n\t\tconst state = this.store.getState();\n\t\tconst defaultValue = {};\n\t\tif (state.propertiesSettingsReducer[propertyId.name]) {\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId, state.propertiesSettingsReducer[propertyId.name], \"tableButtons\", defaultValue);\n\t\t\t}\n\t\t\treturn state.propertiesSettingsReducer[propertyId.name].tableButtons || defaultValue;\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\tgetTableButtonEnabled(propertyId, buttonId) {\n\t\tconst state = this.store.getState();\n\t\tconst defaultValue = false; // Disable button by default\n\t\tif (state.propertiesSettingsReducer[propertyId.name]) {\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId, state.propertiesSettingsReducer[propertyId.name], `tableButtons.${buttonId}`, defaultValue);\n\t\t\t}\n\t\t\treturn state.propertiesSettingsReducer[propertyId.name].tableButtons[buttonId];\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\t/**\n\t* Set the hideEditButton attribute to 'true' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param enabled boolean value for disable or enable edit button by state hideEditButton\n\t*/\n\tsetHideEditButton(propertyId, enabled) {\n\t\tthis.store.dispatch(setHideEditButton({ propertyId: propertyId, value: enabled }));\n\t}\n\n\t/**\n\t* Returns true if hideEditButton is true for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetHideEditButton(propertyId) {\n\t\tconst state = this.store.getState();\n\t\tconst defaultValue = false; // Default to false to show disable edit buttons\n\t\tif (state.propertiesSettingsReducer[propertyId.name]) {\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId, state.propertiesSettingsReducer[propertyId.name], \"hideEditButton\", defaultValue);\n\t\t\t}\n\t\t\treturn state.propertiesSettingsReducer[propertyId.name].hideEditButton;\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\tsetActiveTearsheetId(tearsheetId) {\n\t\tthis.store.dispatch(setTearsheetState({ tearsheetId: tearsheetId }));\n\t}\n\n\tgetActiveTearsheetId() {\n\t\tconst state = this.store.getState();\n\t\tconst tearsheetId = state.tearsheetStatesReducer.tearsheetId;\n\t\tif (typeof tearsheetId !== \"undefined\") {\n\t\t\treturn tearsheetId;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nfunction getNestedPropertySetting(propertyId, state, setting, defaultValue) {\n\tif (typeof propertyId.row !== \"undefined\" && state[propertyId.row]) {\n\t\tif (typeof propertyId.col !== \"undefined\" && state[propertyId.row][propertyId.col]) {\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId.propertyId, state[propertyId.row][propertyId.col], setting, defaultValue);\n\t\t\t}\n\t\t\treturn get(state[propertyId.row][propertyId.col], setting);\n\t\t} else if (typeof propertyId.propertyId !== \"undefined\") { // nested structureeditor\n\t\t\treturn getNestedPropertySetting(propertyId.propertyId, state[propertyId.row], setting, defaultValue);\n\t\t}\n\t\treturn get(state[propertyId.row], setting);\n\t}\n\treturn defaultValue;\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"../../../utils/logger\";\nimport { ItemType, PanelType } from \"../constants/form-constants\";\n\n\nfunction parseInput(definition) {\n\tvar data = definition;\n\tif (data.evaluate) {\n\t\tvar paramsList = [];\n\t\tif (data.parameter_refs) {\n\t\t\tevaluate(data.evaluate, paramsList, data.parameter_refs);\n\t\t} else {\n\t\t\tevaluate(data.evaluate, paramsList, data.parameter_ref);\n\t\t}\n\t\t// remove duplicates in paramsList array\n\t\tvar uniqueList = Array.from(new Set(paramsList));\n\t\tif (uniqueList.length > 1) {\n\t\t\treturn uniqueList;\n\t\t}\n\t\t// return single control; this will never be an empty list\n\t\tvar controlName = uniqueList[0];\n\t\treturn controlName;\n\t}\n\tthrow new Error(\"Invalid validation schema\");\n}\n\n\n/**\n * Evaluate Definition\n */\nfunction evaluate(data, paramsList, defaultParameter) {\n\tif (data.or) {\n\t\tor(data.or, paramsList, defaultParameter);\n\t} else if (data.and) {\n\t\tand(data.and, paramsList, defaultParameter);\n\t} else if (data.condition) { // condition\n\t\tcondition(data.condition, paramsList, defaultParameter);\n\t} else {\n\t\tthrow new Error(\"Failed to parse definition\");\n\t}\n}\n\n/**\n * The 'or' condition.\n */\nfunction or(data, paramsList, defaultParameter) {\n\tfor (let i = 0; i < data.length; i++) {\n\t\tevaluate(data[i], paramsList, defaultParameter);\n\t}\n}\n\n/**\n * The 'and' condition. All sub-conditions evaluate to true.\n * Can nest any number of additional conditional types.\n * @param {Object} data an array of items\n * @return {boolean}\n */\nfunction and(data, paramsList, defaultParameter) {\n\tfor (let i = 0; i < data.length; i++) {\n\t\tevaluate(data[i], paramsList, defaultParameter);\n\t}\n}\n\n/**\n * A parameter condition.\n */\nfunction condition(data, paramsList, defaultParameter) {\n\tif (data.parameter_ref) {\n\t\tparamsList.push(data.parameter_ref);\n\t\tif (data.parameter_2_ref) {\n\t\t\tparamsList.push(data.parameter_2_ref);\n\t\t}\n\t} else {\n\t\t// needed for filtering of dm fields\n\t\tparamsList.push(defaultParameter);\n\t}\n}\n\n// Parse the set of Controls from the form data\nfunction parseControls(controls, actions, formData) {\n\tif (formData.uiItems) {\n\t\tfor (const uiItem of formData.uiItems) {\n\t\t\tparseUiItem(controls, actions, uiItem);\n\t\t}\n\t}\n}\n\nfunction parseControl(controls, control, parentCategoryId) {\n\tif (control.label) {\n\t\tcontrol.summaryLabel = control.label.text;\n\t}\n\tif (parentCategoryId) {\n\t\tcontrol.parentCategoryId = parentCategoryId;\n\t}\n\tcontrols.push(control);\n\tif (control.subControls) {\n\t\tfor (let idx = 0; idx < control.subControls.length; idx++) {\n\t\t\tconst subControl = control.subControls[idx];\n\t\t\tsubControl.parameterName = control.name;\n\t\t\tsubControl.columnIndex = idx;\n\t\t\tif (parentCategoryId) {\n\t\t\t\tsubControl.parentCategoryId = parentCategoryId;\n\t\t\t}\n\t\t\tcontrols.push(subControl);\n\t\t}\n\t}\n}\n\nfunction parseUiItem(controls, actions, uiItem, panelId, parentCategoryId) {\n\tswitch (uiItem.itemType) {\n\tcase ItemType.CONTROL: {\n\t\tconst control = uiItem.control;\n\t\tif (panelId) {\n\t\t\tcontrol.summaryPanelId = panelId;\n\t\t}\n\t\tif (parentCategoryId) {\n\t\t\tcontrol.parentCategoryId = parentCategoryId;\n\t\t}\n\t\tparseControl(controls, control, parentCategoryId);\n\t\t// If some panels from a Selector Panel have been inserted in a\n\t\t// radio set control the control will have additionalItems which need\n\t\t// to be parsed.\n\t\tif (uiItem.additionalItems) {\n\t\t\tfor (const additionalItem of uiItem.additionalItems) {\n\t\t\t\tparseUiItem(controls, actions, additionalItem.content, panelId, parentCategoryId);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.ADDITIONAL_LINK:\n\tcase ItemType.CHECKBOX_SELECTOR:\n\tcase ItemType.TEARSHEET:\n\tcase ItemType.PANEL: {\n\t\tif (uiItem.panel && uiItem.panel.uiItems) {\n\t\t\tlet locPanelId = panelId;\n\t\t\tif (uiItem.panel.panelType === PanelType.SUMMARY) {\n\t\t\t\tlocPanelId = uiItem.panel.id;\n\t\t\t}\n\t\t\tfor (const panelUiItem of uiItem.panel.uiItems) {\n\t\t\t\tparseUiItem(controls, actions, panelUiItem, locPanelId, parentCategoryId);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.PRIMARY_TABS:\n\tcase ItemType.PANEL_SELECTOR:\n\tcase ItemType.SUB_TABS: {\n\t\tif (uiItem.tabs) {\n\t\t\tfor (const tab of uiItem.tabs) {\n\t\t\t\tparseUiItem(controls, actions, tab.content, panelId,\n\t\t\t\t\tuiItem.itemType === ItemType.PANEL_SELECTOR || uiItem.itemType === ItemType.SUB_TABS\n\t\t\t\t\t\t? parentCategoryId\n\t\t\t\t\t\t: tab.group);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.CUSTOM_PANEL:\n\t\tif (uiItem.panel && uiItem.panel.parameters) {\n\t\t\tfor (const param of uiItem.panel.parameters) {\n\t\t\t\tconst control = {\n\t\t\t\t\tname: param,\n\t\t\t\t\tcontrolType: \"custom\"\n\t\t\t\t};\n\t\t\t\tif (panelId) {\n\t\t\t\t\tcontrol.summaryPanelId = panelId;\n\t\t\t\t}\n\t\t\t\tif (parentCategoryId) {\n\t\t\t\t\tcontrol.parentCategoryId = parentCategoryId;\n\t\t\t\t}\n\t\t\t\tcontrols.push(control);\n\t\t\t}\n\t\t}\n\t\tbreak; // required parameters are handled by panel\n\tcase ItemType.ACTION:\n\t\tif (uiItem.action && uiItem.action.name) {\n\t\t\tactions[uiItem.action.name] = uiItem.action;\n\t\t}\n\t\tbreak;\n\tcase ItemType.STATIC_TEXT:\n\tcase ItemType.TEXT_PANEL:\n\tcase ItemType.HORIZONTAL_SEPARATOR: {\n\t\tbreak;\n\t}\n\tdefault:\n\t\tlogger.warn(\"Unknown UiItem type when parsing ui conditions: \" + uiItem.itemType);\n\t\tbreak;\n\n\t}\n\treturn controls;\n\n}\n\n// Parse the condition section of the form data\nfunction parseConditions(container, uiCondition, conditionType) {\n\ttry {\n\t\tvar controls = parseInput(uiCondition[conditionType]);\n\t\tvar groupDef = {\n\t\t\t\"params\": controls,\n\t\t\t\"definition\": uiCondition\n\t\t};\n\t\t_setDefinitions(container.controls, controls, groupDef);\n\t\tlet refs = uiCondition[conditionType].parameter_refs;\n\t\tif (uiCondition[conditionType].group_refs) {\n\t\t\trefs = uiCondition[conditionType].group_refs;\n\t\t} else if (uiCondition[conditionType].action_refs) {\n\t\t\trefs = uiCondition[conditionType].action_refs;\n\t\t} else if (uiCondition[conditionType].target && uiCondition[conditionType].target.parameter_ref) {\n\t\t\trefs = [uiCondition[conditionType].target.parameter_ref];\n\t\t}\n\t\tif (refs) {\n\t\t\t_setDefinitions(container.refs, refs, groupDef);\n\t\t}\n\t} catch (error) { // invalid\n\t\tlogger.info(\"Error parsing ui conditions: \" + error);\n\t}\n\treturn container;\n}\n\nfunction _setDefinitions(container, controls, groupDef) {\n\tif (Array.isArray(controls) === true) {\n\t\tfor (let j = 0; j < controls.length; j++) {\n\t\t\tif (typeof container[controls[j]] === \"undefined\") {\n\t\t\t\tcontainer[controls[j]] = [];\n\t\t\t}\n\t\t\tcontainer[controls[j]].push(groupDef);\n\t\t}\n\t} else { // single control\n\t\tif (typeof container[controls] === \"undefined\") {\n\t\t\tcontainer[controls] = [];\n\t\t}\n\t\tcontainer[controls].push(groupDef);\n\t}\n}\n\nexport {\n\tparseInput,\n\tparseControls,\n\tparseConditions,\n\tparseControl\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"../../../../utils/logger\";\nimport { L10nProvider, ResourceDef } from \"../../util/L10nProvider\";\nimport { cloneDeep, propertyOf } from \"lodash\";\n\nfunction setExpressionInfo(inExpressionInfo) {\n\tconst expressionFunctionInfo = {};\n\tif (inExpressionInfo && inExpressionInfo.functions) {\n\t\tconst l10nProvider = new L10nProvider(propertyOf(inExpressionInfo)(\"resources\"));\n\t\tconst expressionInfo = cloneDeep(inExpressionInfo.functions);\n\t\tif (Array.isArray(expressionInfo.function_info) && Array.isArray(expressionInfo.function_categories)) {\n\t\t\t// build up the visible function labels from the input label and the parameter information.\n\t\t\tconst functionInfoList = expressionInfo.parmsSet ? expressionInfo.function_info : _genFunctionParameters(expressionInfo.function_info, l10nProvider);\n\t\t\texpressionInfo.parmsSet = true;\n\n\t\t\t// build up the categories for the functions and associate the category with the function info detail.\n\t\t\texpressionFunctionInfo.functionCategories = [];\n\t\t\texpressionInfo.function_categories.forEach((category) => {\n\t\t\t\texpressionFunctionInfo.functionCategories[category.id] = {};\n\t\t\t\texpressionFunctionInfo.functionCategories[category.id].locLabel = l10nProvider.l10nLabel(category, category.id);\n\t\t\t\texpressionFunctionInfo.functionCategories[category.id].functionList = [];\n\t\t\t\tcategory.function_refs.forEach((functionId) => {\n\t\t\t\t\tconst functionInfo = _getFunctionInfo(functionId, functionInfoList);\n\t\t\t\t\tif (functionInfo) {\n\t\t\t\t\t\texpressionFunctionInfo.functionCategories[category.id].functionList.push(functionInfo);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// build up the operator buttons list with the operator function info detail.\n\t\t\texpressionFunctionInfo.operators = [];\n\t\t\tif (expressionInfo.operator_refs) {\n\t\t\t\texpressionInfo.operator_refs.forEach((functionId) => {\n\t\t\t\t\tconst functionInfo = _getFunctionInfo(functionId, functionInfoList);\n\t\t\t\t\tif (functionInfo) {\n\t\t\t\t\t\texpressionFunctionInfo.operators.push(functionInfo);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\texpressionFunctionInfo.fields = { \"field_categories\": [], \"field_table_info\": [] };\n\t\t\tif (inExpressionInfo.fields) {\n\t\t\t\tif (inExpressionInfo.fields.field_categories) {\n\t\t\t\t\tinExpressionInfo.fields.field_categories.forEach((fieldCat) => {\n\t\t\t\t\t\tfieldCat.locLabel = l10nProvider.l10nLabel(fieldCat, fieldCat.id);\n\n\t\t\t\t\t\tfieldCat.field_columns.field_column_info.locLabel = l10nProvider.l10nLabel(fieldCat.field_columns.field_column_info, fieldCat.id + \".field_column_info\");\n\t\t\t\t\t\tfieldCat.field_columns.value_column_info.locLabel = l10nProvider.l10nLabel(fieldCat.field_columns.value_column_info, fieldCat.id + \".value_column_info\");\n\n\t\t\t\t\t\tconst fieldColInfoDesc = l10nProvider.l10nDesc(fieldCat.field_columns.field_column_info, fieldCat.id + \".field_column_info\");\n\t\t\t\t\t\tif (fieldColInfoDesc !== fieldCat.id + \".field_column_info\") {\n\t\t\t\t\t\t\tfieldCat.field_columns.field_column_info.descLabel = fieldColInfoDesc;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst valueColInfoDesc = l10nProvider.l10nDesc(fieldCat.field_columns.value_column_info, fieldCat.id + \".value_column_info\");\n\t\t\t\t\t\tif (valueColInfoDesc !== fieldCat.id + \".value_column_info\") {\n\t\t\t\t\t\t\tfieldCat.field_columns.value_column_info.descLabel = valueColInfoDesc;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fieldCat.field_columns.additional_column_info) {\n\t\t\t\t\t\t\tfieldCat.field_columns.additional_column_info.forEach((col) => {\n\t\t\t\t\t\t\t\tcol.locLabel = l10nProvider.l10nLabel(col, fieldCat.id + \".additional_column_info.\" + col.id);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\texpressionFunctionInfo.fields.field_categories.push(fieldCat);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (inExpressionInfo.fields.field_table_info) {\n\t\t\t\t\tinExpressionInfo.fields.field_table_info.forEach((fieldInfo) => {\n\t\t\t\t\t\texpressionFunctionInfo.fields.field_table_info.push(fieldInfo);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (inExpressionInfo && inExpressionInfo.resources) {\n\t\texpressionFunctionInfo.resources = inExpressionInfo.resources;\n\t}\n\n\treturn expressionFunctionInfo;\n}\n\n// build up the visible function labels from the label and the parameter information.\nfunction _genFunctionParameters(functionInfoList, l10nProvider) {\n\treturn functionInfoList.map((functionInfo) => {\n\t\tconst newEntry = functionInfo;\n\t\tnewEntry.locLabel = l10nProvider.l10nLabel(newEntry, newEntry.id);\n\t\tnewEntry.help = l10nProvider.l10nDesc(newEntry, newEntry.locLabel);\n\t\tnewEntry.value = newEntry.locLabel;\n\t\t// Translatable return type of function\n\t\tif (newEntry.return_type_label) {\n\t\t\tconst returnTypeLabel = ResourceDef.make(newEntry.return_type_label);\n\t\t\tnewEntry.locReturnType = l10nProvider.l10nResource(returnTypeLabel);\n\t\t}\n\t\tif (Array.isArray(functionInfo.parameters)) {\n\t\t\t// if the function label has any parameter substituion char '?' then replace with parameter label\n\t\t\tif (newEntry.locLabel && newEntry.locLabel.indexOf(\"?\") !== -1) {\n\t\t\t\tfunctionInfo.parameters.forEach((parameter) => {\n\t\t\t\t\tconst paramIndex = newEntry.locLabel.indexOf(\"?\");\n\t\t\t\t\tif (paramIndex !== -1) {\n\t\t\t\t\t\tnewEntry.locLabel = newEntry.locLabel.replace(\"?\", \" \" + l10nProvider.l10nLabel(parameter, parameter.id) + \" \");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// build up function label as a function call with parameters.\n\t\t\t\tnewEntry.value += \"(\";\n\t\t\t\tnewEntry.locLabel += \"(\";\n\t\t\t\tfunctionInfo.parameters.forEach((parameter, index) => {\n\t\t\t\t\tconst separator = (index > 0) ? \", \" : \"\";\n\t\t\t\t\tnewEntry.locLabel += separator + l10nProvider.l10nLabel(parameter, parameter.id);\n\t\t\t\t\tnewEntry.value += separator + \"?\";\n\t\t\t\t});\n\t\t\t\tnewEntry.locLabel += \")\";\n\t\t\t\tnewEntry.value += \")\";\n\t\t\t}\n\t\t}\n\t\treturn newEntry;\n\t});\n\n}\n\nfunction _getFunctionInfo(functionId, functionInfoList) {\n\tconst functionInfo = functionInfoList.find((functionElem) => functionElem.id === functionId);\n\tif (!functionInfo) {\n\t\tlogger.warn(\"Expression function information list, no function information found for \" + functionId);\n\t\treturn null;\n\t}\n\treturn functionInfo;\n}\n\n\nexport default setExpressionInfo;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { has } from \"lodash\";\n\nimport logger from \"../../../utils/logger\";\nimport { ItemType } from \"../constants/form-constants\";\n\n// Parse the set of panelTree from the form data\nfunction parseUiContent(panelTree, formData, panelTreeRoot) {\n\tif (formData.uiItems) {\n\t\tfor (const uiItem of formData.uiItems) {\n\t\t\tparseUiItem(panelTree, uiItem, panelTreeRoot);\n\t\t}\n\t}\n\treturn panelTree;\n}\n\nfunction parseUiItem(panelTree, uiItem, currentPanel) {\n\tswitch (uiItem.itemType) {\n\tcase ItemType.PRIMARY_TABS:\n\tcase ItemType.SUB_TABS: {\n\t\tif (uiItem.tabs) {\n\t\t\tfor (const tab of uiItem.tabs) {\n\t\t\t\tparseUiItem(panelTree, tab.content, currentPanel);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.TEXT_PANEL:\n\tcase ItemType.PANEL:\n\tcase ItemType.CUSTOM_PANEL:\n\tcase ItemType.ADDITIONAL_LINK:\n\tcase ItemType.TEARSHEET:\n\tcase ItemType.CHECKBOX_SELECTOR: {\n\t\tif (uiItem.panel && uiItem.panel.id) {\n\t\t\tpanelTree[currentPanel].panels.push(uiItem.panel.id);\n\t\t\t_newPanelTreeObject(panelTree, uiItem.panel.id);\n\t\t\tif (uiItem.panel.uiItems) {\n\t\t\t\tfor (const panelUiItem of uiItem.panel.uiItems) {\n\t\t\t\t\tparseUiItem(panelTree, panelUiItem, uiItem.panel.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.CONTROL: {\n\t\tpanelTree[currentPanel].controls.push(uiItem.control.name);\n\t\t// a control item may have an action ref associated with it.\n\t\tif (uiItem.control.action) {\n\t\t\tpanelTree[currentPanel].actions.push(uiItem.control.action.name);\n\t\t}\n\t\t// This is a special case for the radio button set which has panels\n\t\t// inserted after each radio button. Those panels are provided in the\n\t\t// additionalItems array which is an array of EditorTab objects.\n\t\tif (uiItem.control.additionalItems) {\n\t\t\tfor (const editorTab of uiItem.control.additionalItems) {\n\t\t\t\tparseUiItem(panelTree, editorTab.content, currentPanel);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.PANEL_SELECTOR: {\n\t\tpanelTree[currentPanel].panels.push(uiItem.id);\n\t\t_newPanelTreeObject(panelTree, uiItem.id);\n\t\tif (uiItem.dependsOn) {\n\t\t\tpanelTree[uiItem.id].controls.push(uiItem.dependsOn);\n\t\t}\n\t\tif (uiItem.tabs) {\n\t\t\tfor (const tab of uiItem.tabs) {\n\t\t\t\tparseUiItem(panelTree, tab.content, uiItem.id);\n\t\t\t}\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tcase ItemType.ACTION:\n\t{\n\t\tpanelTree[currentPanel].actions.push(uiItem.action.name);\n\t\tbreak;\n\t}\n\tcase ItemType.STATIC_TEXT:\n\tcase ItemType.HORIZONTAL_SEPARATOR: {\n\t\tbreak;\n\t}\n\tdefault:\n\t\tlogger.warn(\"Unknown UiItem type when parsing ui conditions: \" + uiItem.itemType);\n\t\tbreak;\n\t}\n}\n\nfunction _newPanelTreeObject(panelTree, panelId) {\n\tif (has(panelTree, panelId)) {\n\t\tlogger.warn(\"Duplicate panel ids, each panel id must be unique.  Panel id = \" + panelId);\n\t}\n\tpanelTree[panelId] = { controls: [], panels: [], actions: [] };\n}\n\nexport { parseUiContent };\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. The order and references\n * of result values are determined by the first array. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = baseRest(function(arrays) {\n  var comparator = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  if (comparator) {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, undefined, comparator)\n    : [];\n});\n\nmodule.exports = intersectionWith;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint max-depth: [\"error\", 7] */\n\nimport logger from \"./../../../utils/logger\";\nimport { cloneDeep, intersectionWith, unionWith, isEqual } from \"lodash\";\n\n/**\n* @param {Object} definition Condition definition\n* @param {Any} userInput Contains the control value entered by the user\n* @param {Object} fields Optional datasetMetadata fields\n* @param {Object} cellCoordinates Cell coordinates for tables\n*/\n\nfunction validateInput(definition, propertyId, controller) {\n\tconst data = definition;\n\tif (data.validation) {\n\t\treturn validation(data.validation, propertyId, controller);\n\t} else if (data.enabled) {\n\t\treturn enabled(data.enabled, propertyId, controller);\n\t} else if (data.visible) {\n\t\treturn visible(data.visible, propertyId, controller);\n\t} else if (data.enum_filter) {\n\t\treturn filteredEnum(data.enum_filter, propertyId, controller);\n\t} else if (data.allow_change) {\n\t\treturn allowChange(data.allow_change, propertyId, controller);\n\t} else if (data.default_value) {\n\t\treturn conditionalDefault(data.default_value, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid user input validation definition schema\");\n}\n\n/**\n * A single validation. The fail_message is displayed upon validation failure.\n * @param {Object} validationData contains an object that adheres to the validation_definition\n * @param {Any} userInput Contains the control value entered by the user\n * @param {Object} info optional dataset fields and cell coordinates info\n * @return {boolean} true if valid, failMessage {Object} if false.\n */\nfunction validation(data, propertyId, controller) {\n\tif (data.fail_message && data.evaluate) {\n\t\tconst evaluateData = data.evaluate;\n\t\tevaluateData.isValidation = true;\n\t\tconst result = evaluate(evaluateData, propertyId, controller);\n\t\tif (typeof result === \"object\") {\n\t\t\treturn result;\n\t\t}\n\t\treturn result || failedMessage(data.fail_message);\n\t}\n\tthrow new Error(\"Invalid validation schema\");\n}\n\n/**\n * Enablement test. Disables controls if evaluate is false.\n * @param {Object} enabledData contains an object that adheres to the enabled_definition\n * @return {boolean} true if valid.\n */\nfunction enabled(data, propertyId, controller) {\n\tif ((data.parameter_refs || data.group_refs || data.action_refs) && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid enabled schema\");\n}\n\n/**\n * Visibility test. Hides controls if evaluate is false.\n * @param {Object} data contains an object that adheres to the visible_definition\n * @return {boolean} true if valid.\n */\nfunction visible(data, propertyId, controller) {\n\tif ((data.parameter_refs || data.group_refs || data.action_refs) && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid visible schema\");\n}\n\n/**\n * Filters fields based on conditions.\n *\n * @param propertyId Id of the control being filtered\n * @param filterDef A filter definition for this item\n * @param controller Properties controller\n * @param fields Fields to filter\n * @return Array of filtered fields\n */\nfunction filter(propertyId, filterDef, controller, fields) {\n\tif (filterDef && filterDef.filter && filterDef.filter.evaluate) {\n\t\treturn evaluateFilter(propertyId, filterDef.filter, filterDef.filter.evaluate, controller, fields);\n\t}\n\treturn fields;\n}\n\nfunction filteredEnum(data, propertyId, controller) {\n\tif (data.target && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid filteredEnum schema\");\n}\n\nfunction allowChange(data, propertyId, controller) {\n\tif ((data.parameter_refs || data.group_refs) && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid allow change schema\");\n}\n\n/**\n * Set default value for a field if conditions evaluate to true.\n *\n * @param data conditional default definition\n * @param propertyId Id of the control\n * @param controller Properties controller\n * @return {boolean} true if conditions are met.\n */\nfunction conditionalDefault(data, propertyId, controller) {\n\tif (data.parameter_ref && data.value && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid conditional default schema\");\n}\n\n/**\n * Evaluate Definition\n */\nfunction evaluate(data, propertyId, controller) {\n\tif (data.or) {\n\t\treturn or(data.or, propertyId, controller);\n\t} else if (data.and) {\n\t\treturn and(data.and, propertyId, controller);\n\t} else if (data.condition) { // condition\n\t\treturn condition(data.condition, propertyId, controller, data.isValidation);\n\t}\n\tthrow new Error(\"Failed to parse definition\");\n}\n\n/**\n * Evaluate Definition.\n */\nfunction evaluateFilter(propertyId, filterItem, conditionItem, controller, fields) {\n\tif (conditionItem.or) {\n\t\treturn orFilter(propertyId, filterItem, conditionItem.or, controller, fields);\n\t} else if (conditionItem.and) {\n\t\treturn andFilter(propertyId, filterItem, conditionItem.and, controller, fields);\n\t} else if (conditionItem.condition) { // condition\n\t\treturn conditionFilter(propertyId, filterItem, conditionItem.condition, controller, fields);\n\t}\n\tthrow new Error(\"Failed to parse filter definition\");\n}\n\n/**\n * The 'or' condition. Any sub-condition evaluates to true.\n * Can nest any number of additional conditional types.\n * @param {Object} data an array of items\n * @param {string} userInput User-entered value to evaluate\n * @param {Object} info optional dataset fields and cell coordinates info\n * @return {boolean}\n */\nfunction or(data, propertyId, controller) {\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst evaluated = evaluate(data[i], propertyId, controller);\n\t\tif (evaluated === true) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction orFilter(propertyId, filterItem, conditionItems, controller, inFields) {\n\tlet fields = [];\n\tfor (const item of conditionItems) {\n\t\tconst newFields = evaluateFilter(propertyId, filterItem, item, controller, inFields);\n\t\tfields = unionWith(fields, newFields, isEqual);\n\t}\n\treturn fields;\n}\n\n/**\n * The 'and' condition. All sub-conditions evaluate to true.\n * Can nest any number of additional conditional types.\n * @param {Object} data an array of items\n * @param {string} userInput User-entered value to evaluate\n * @param {Object} info optional dataset fields and cell coordinates info\n * @return {boolean}\n */\nfunction and(data, propertyId, controller) {\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst evaluated = evaluate(data[i], propertyId, controller);\n\t\tif (evaluated === false) {\n\t\t\treturn false;\n\t\t} else if (typeof evaluated === \"object\") {\n\t\t\treturn evaluated;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction andFilter(propertyId, filterItem, conditionItems, controller, inFields) {\n\tlet fields = cloneDeep(inFields);\n\tfor (const item of conditionItems) {\n\t\tconst newFields = evaluateFilter(propertyId, filterItem, item, controller, fields);\n\t\tfields = intersectionWith(fields, newFields, isEqual);\n\t}\n\treturn fields;\n}\n\n/**\n * A parameter condition. Evaluates to true or false.\n * @param {Object} data.op A single operator for the properties of the condition.\n * @param {Object} data.parameter_ref required parameter the condition checks for\n * @param {Object} data.parameter_2_ref optional parameter the condition checks for\n * @param {Object} data.value optional value the condition checks for\n * @param {Object} info optional dataset fields and cell coordinates info\n * @param {boolean} isValidation optional parameter used to determine type of condition\n * @return {boolean} true if the parameter(s) satisfy the condition\n */\nfunction condition(data, propertyId, controller, isValidation) {\n\tconst op = data.op;\n\tconst param = data.parameter_ref;\n\tconst param2 = data.parameter_2_ref;\n\tconst value = data.value;\n\n\t// get configuration options to determine how properties values are handled in condition logic\n\t// get actual value for input validation (isValidation)\n\tconst options = {};\n\tconst propertiesConfig = controller.getPropertiesConfig();\n\tif (!isValidation && propertiesConfig.conditionDisabledPropertyHandling === \"null\") {\n\t\toptions.filterDisabled = true;\n\t}\n\tif (!isValidation && propertiesConfig.conditionHiddenPropertyHandling === \"null\") {\n\t\toptions.filterHidden = true;\n\t}\n\n\tconst paramInfo = { param: param, id: _getPropertyIdFromParam(propertyId, param) };\n\n\tparamInfo.value = controller.getPropertyValue(paramInfo.id, options, null);\n\tparamInfo.control = controller.getControl(paramInfo.id);\n\n\tif (typeof paramInfo.control === \"undefined\") {\n\t\tlogger.warn(\"Control not found when validating condition for \" + param);\n\t}\n\n\tlet param2Info;\n\n\tif (typeof param2 !== \"undefined\") {\n\t\tparam2Info = {\n\t\t\tparam: param2,\n\t\t\tid: _getPropertyIdFromParam(propertyId, param2),\n\t\t};\n\t\tparam2Info.value = controller.getPropertyValue(param2Info.id, options, null);\n\t\tparam2Info.control = controller.getControl(param2Info.id);\n\t}\n\tconst operation = controller.getConditionOp(op);\n\tif (operation) {\n\t\treturn operation(paramInfo, param2Info, value, controller);\n\t}\n\tlogger.warn(\"Ignoring unknown condition operation '\" + op + \"' for parameter_ref \" + param);\n\treturn true;\n}\n\n/**\n * A filter parameter condition. Evaluates to an array of field names.\n *\n * @param {Object} propertyId Id of the property being operated upon\n * @param {Object} filterItem Top level filter entry for the property\n * @param {Object} conditionItem A single condition to evaluate\n * @param {Object} controller The properties controller\n * @param {Object} fields Array of fields to filter\n * @return {Object} Array of filtered field names\n */\nfunction conditionFilter(propertyId, filterItem, conditionItem, controller, fields) {\n\tconst op = conditionItem.op;\n\tconst values = [];\n\tif (typeof conditionItem.value !== \"undefined\" && conditionItem.value !== null) {\n\t\tvalues.push(conditionItem.value);\n\t} else if (Array.isArray(conditionItem.values)) {\n\t\tvalues.push(...conditionItem.values); // add all values into array\n\t}\n\tswitch (op) {\n\tcase \"dmMeasurement\":\n\t\treturn _handleDmMeasurement(fields, values);\n\tcase \"dmType\":\n\t\treturn _handleDmType(fields, values);\n\tcase \"dmModelingRole\":\n\t\treturn _handleDmModelingRole(fields, values);\n\tcase \"dmSharedFields\":\n\t\treturn _handleSharedFields(propertyId, filterItem, controller, fields);\n\tdefault:\n\t\tlogger.warn(\"Ignoring unknown condition operation '\" + op + \"'\");\n\t\treturn fields;\n\t}\n}\n\nfunction _handleDmMeasurement(inFields, measurementValues) {\n\tlet fields = cloneDeep(inFields);\n\tif (fields) {\n\t\tfields = fields.filter(function(field) {\n\t\t\tfor (const measurementValue of measurementValues) {\n\t\t\t\tif (field.metadata && field.metadata.measure === measurementValue) {\n\t\t\t\t\t// return true of any value meets condition\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\treturn fields;\n}\n\nfunction _handleDmType(inFields, typeValues) {\n\tlet fields = cloneDeep(inFields);\n\tif (fields) {\n\t\tfields = fields.filter(function(field) {\n\t\t\tfor (const typeValue of typeValues) {\n\t\t\t\tif (field.type === typeValue) {\n\t\t\t\t\t// return true of any value meets condition\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\treturn fields;\n}\n\nfunction _handleDmModelingRole(inFields, roleValues) {\n\tlet fields = cloneDeep(inFields);\n\tif (fields) {\n\t\tfields = fields.filter(function(field) {\n\t\t\tfor (const roleValue of roleValues) {\n\t\t\t\tif (field.metadata && field.metadata.modeling_role === roleValue) {\n\t\t\t\t\t// return true of any value meets condition\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\treturn fields;\n}\n\nfunction _handleSharedFields(propertyId, filterItem, controller, fields) {\n\tlet returnFields = fields;\n\tif (filterItem.parameter_refs) {\n\t\treturnFields = controller.filterFieldsFromSharedProps(fields, filterItem.parameter_refs, propertyId.name);\n\t}\n\treturn returnFields;\n}\n\n/**\n *\n * @param {Object}  failed message object with \"focus_parameter_ref\" and \"message\"\n * @return {String} failed message\n */\nfunction failedMessage(failedErrorMessage) {\n\tif (failedErrorMessage.focus_parameter_ref && failedErrorMessage.message) {\n\t\treturn {\n\t\t\t\"text\": failedErrorMessage.message.default,\n\t\t\t\"type\": failedErrorMessage.type\n\t\t};\n\t}\n\treturn \"Failed to parse failedMessage\";\n}\n\nfunction _getPropertyIdFromParam(propertyId, param) {\n\tlet paramPropertyID = {};\n\tconst offset = param.indexOf(\"[\");\n\tif (offset > -1) {\n\t\tparamPropertyID = cloneDeep(propertyId);\n\t\tparamPropertyID.name = param.substring(0, offset);\n\t\tparamPropertyID.col = _getColumnNumber(param);\n\t} else {\n\t\tparamPropertyID.name = param;\n\t}\n\treturn paramPropertyID;\n}\n\n// returns -1 if no column specified in parameter\nfunction _getColumnNumber(param) {\n\tconst startCol = param.indexOf(\"[\");\n\tif (startCol > -1) {\n\t\tconst endCol = param.indexOf(\"]\");\n\t\tif (endCol > -1) {\n\t\t\treturn parseInt(param.substring(startCol + 1, endCol), 10);\n\t\t}\n\t\treturn -1;\n\t}\n\treturn -1;\n}\n\nexport {\n\tvalidateInput,\n\tfilter\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\teslint max-depth: [\"error\", 10]*/\n\nimport logger from \"../../../utils/logger\";\nimport * as UiConditions from \"./ui-conditions\";\nimport { formatMessage } from \"../util/property-utils\";\nimport { DEFAULT_VALIDATION_MESSAGE, STATES, PANEL_TREE_ROOT,\n\tCONDITION_TYPE, CONDITION_DEFINITION_INDEX,\n\tMESSAGE_KEYS, DEFAULT_DATE_FORMAT, DEFAULT_TIME_FORMAT } from \"../constants/constants\";\nimport { isEmpty, cloneDeep, has, union, isEqual } from \"lodash\";\nimport seedrandom from \"seedrandom\";\n\n\n// ========= APIs ==================\n// ========= Validate all properties\n\n/**\n* This function will get all controls and validate each properties value.\n*\n* @param {object} properties controller. required\n* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n*/\nfunction validatePropertiesValues(controller, showErrors = true) {\n\tconst controls = controller.getControls();\n\tvalidatePropertiesListValues(controller, controls, showErrors);\n}\n\n/**\n* This function will get all controls and validate each one for visible,\n* enables and filteredEnum.\n*\n* @param {object} properties controller. required\n*/\nfunction validatePropertiesConditions(controller) {\n\tconst newStates = {\n\t\tcontrols: controller.getControlStates(),\n\t\tpanels: controller.getPanelStates(),\n\t\tactions: controller.getActionStates()\n\t};\n\n\tconst controls = controller.getControls();\n\tvalidatePropertiesListConditions(controller, controls, newStates);\n\t// propagate parent panel states\n\t_propagateParentPanelStates(controller.panelTree, newStates, PANEL_TREE_ROOT);\n\n\t// get property values before any states have been updated\n\tconst prevPropertyValues = _getConditionPropertyValues(controller);\n\n\tcontroller.setControlStates(newStates.controls);\n\tcontroller.setPanelStates(newStates.panels);\n\tcontroller.setActionStates(newStates.actions);\n\t// get property values before any states have been updated\n\tconst newPropertyValues = _getConditionPropertyValues(controller);\n\t// compared values to see if any values change based on state updates\n\tconst updatedPropertyIds = _comparePropertyValues(prevPropertyValues, newPropertyValues);\n\tfor (const updatePropertyId of updatedPropertyIds) {\n\t\tvalidateConditions(updatePropertyId, controller, 1);\n\t}\n}\n\n// ========= Validate a list of properties\n\n/**\n* This function will take a list of controls or properties names\n* and validate each properties value.\n*\n* @param {object} properties controller. required\n* @param {object} list of control objects or properties. required\n* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n*/\nfunction validatePropertiesListValues(controller, controls, showErrors) {\n\tif (Object.keys(controls).length > 0) {\n\t\tfor (const controlKey in controls) {\n\t\t\tif (!has(controls, controlKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst control = controls[controlKey];\n\t\t\t// control is a subcontrol\n\t\t\tif (control.parameterName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst propertyId = control.name ? { name: control.name } : { name: control };\n\t\t\tvalidateInput(propertyId, controller, showErrors);\n\t\t}\n\t}\n}\n\n/**\n* This function will take a list of controls or properties names\n* and validate each properties for visible, enabled or filteredEnum.\n*\n* @param {object} properties controller. required\n* @param {object} list of control objects or properties. required\n* @param {object} list of states for controls and panels. required\n*/\nfunction validatePropertiesListConditions(controller, controls, newStates) {\n\tif (Object.keys(controls).length > 0) {\n\t\tfor (const controlKey in controls) {\n\t\t\tif (!has(controls, controlKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst control = controls[controlKey];\n\t\t\t// control is a subcontrol\n\t\t\tif (control.parameterName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst propertyId = control.name ? { name: control.name } : { name: control };\n\t\t\tconst controlValue = controller.getPropertyValue(propertyId);\n\t\t\tif (control.subControls) {\n\t\t\t\tif (control.valueDef.isList || control.valueDef.isMap) {\n\t\t\t\t\t// validate the table as a whole\n\t\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t\t\t// validate each cell\n\t\t\t\t\tif (Array.isArray(controlValue)) {\n\t\t\t\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\t\t\t\tpropertyId.row = rowIndex;\n\t\t\t\t\t\t\t\tpropertyId.col = colIndex;\n\t\t\t\t\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// An 'unrolled' structure not within a table\n\t\t\t\t\tconst subPropId = {\n\t\t\t\t\t\tname: propertyId.name\n\t\t\t\t\t};\n\t\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\t\tsubPropId.col = colIndex;\n\t\t\t\t\t\t_validateConditionsByType(subPropId, newStates, controller);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// ========= Validate a single property\n\n/**\n* This function will validate a single properties value.\n* If the propertyId is a table it will also validate each cell in the table\n*\n* @param {object} propertyId. required\n* @param {object} properties controller. required\n* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n*/\nfunction validateInput(inPropertyId, controller, showErrors = true) {\n\tconst control = controller.getControl(inPropertyId);\n\tif (!control) {\n\t\tlogger.warn(\"Control not found for \" + inPropertyId.name);\n\t\treturn;\n\t}\n\tconst propertyId = cloneDeep(inPropertyId);\n\tconst controlValue = controller.getPropertyValue(propertyId);\n\tif (Array.isArray(controlValue)) {\n\t// validate the table as a whole\n\t\t_validateInput(propertyId, controller, control, showErrors);\n\t\t// validate each cell\n\t\tif (control.subControls) {\n\t\t\tif (control.valueDef.isList || control.valueDef.isMap) {\n\t\t\t\t// Handle tables\n\t\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\t\tpropertyId.row = rowIndex;\n\t\t\t\t\t\tpropertyId.col = colIndex;\n\t\t\t\t\t\t_validateInput(propertyId, controller, control.subControls[colIndex], showErrors);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Handle 'unrolled' structs outside of tables\n\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\tconst subPropId = {\n\t\t\t\t\t\tname: inPropertyId.name,\n\t\t\t\t\t\tcol: colIndex\n\t\t\t\t\t};\n\t\t\t\t\t_validateInput(subPropId, controller, control.subControls[colIndex], showErrors);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof propertyId.row === \"undefined\") { // validate each row in array for controls that are not within a table.\n\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\tpropertyId.row = rowIndex;\n\t\t\t\tpropertyId.col = 0;\n\t\t\t\t_validateInput(propertyId, controller, control, showErrors);\n\t\t\t}\n\t\t}\n\n\t} else {\n\t\t_validateInput(propertyId, controller, control, showErrors);\n\t}\n}\n\n/**\n* This function will validate a single properties for visible, enabled and\n* filteredEnum.\n*\n* @param {object} propertyId. required\n* @param {object} properties controller. required\n* @param {int} runCount. Used to prevent an infinite loop of rerun conditions\n*/\nfunction validateConditions(inPropertyId, controller, runCount = 0) {\n\tconst control = controller.getControl(inPropertyId);\n\tif (!control) {\n\t\tlogger.warn(\"Control not found for \" + inPropertyId.name);\n\t\treturn;\n\t}\n\tconst newStates = {\n\t\tcontrols: controller.getControlStates(),\n\t\tpanels: controller.getPanelStates(),\n\t\tactions: controller.getActionStates()\n\t};\n\tconst propertyId = cloneDeep(inPropertyId);\n\tconst controlValue = controller.getPropertyValue(propertyId);\n\tif (Array.isArray(controlValue) && control.subControls) {\n\t\tif (!(control.valueDef.isList || control.valueDef.isMap)) {\n\t\t\t// An unrolled structure on a panel (e.g. not a row in a table)\n\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\tpropertyId.col = colIndex;\n\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t}\n\t\t} else {\n\t\t\t// validate the table as a whole\n\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t// validate each cell\n\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\tpropertyId.row = rowIndex;\n\t\t\t\t\tpropertyId.col = colIndex;\n\t\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t}\n\t// get property values before any states have been updated\n\tconst prevPropertyValues = _getConditionPropertyValues(controller);\n\n\tcontroller.setControlStates(newStates.controls);\n\tcontroller.setPanelStates(newStates.panels);\n\tcontroller.setActionStates(newStates.actions);\n\n\t// get property values before any states have been updated\n\tconst newPropertyValues = _getConditionPropertyValues(controller);\n\t// compared values to see if any values change based on state updates\n\tconst updatedPropertyIds = _comparePropertyValues(prevPropertyValues, newPropertyValues, runCount);\n\t// rerun validation on controls where value changes based on state updates\n\tfor (const updatePropertyId of updatedPropertyIds) {\n\t\tvalidateConditions(updatePropertyId, controller, runCount + 1);\n\t}\n\tif (runCount > 0) {\n\t\t// need to make sure all children of panels get correct states after rerun\n\t\t_propagateParentPanelStates(controller.panelTree, newStates, PANEL_TREE_ROOT);\n\t}\n}\n\nfunction _comparePropertyValues(prevPropertyValues, newPropertyValues, runCount) {\n\tconst updatePropertyIds = [];\n\tif (runCount > 10) { // stop at top reruns.  After this it's most likely an infinite loop\n\t\tlogger.warn(\"More than 10 iteration of processing conditions found. Check your conditions for loops. Updated properties: \" + JSON.stringify(newPropertyValues));\n\t\treturn [];\n\t}\n\tconst keys = union(Object.keys(prevPropertyValues), Object.keys(newPropertyValues));\n\tfor (const key of keys) {\n\t\tconst prevPropertyValue = prevPropertyValues[key];\n\t\tconst newPropertyValue = newPropertyValues[key];\n\t\tif (!isEqual(prevPropertyValue, newPropertyValue)) {\n\t\t\tupdatePropertyIds.push({ name: key });\n\t\t}\n\t}\n\treturn updatePropertyIds;\n}\n\nfunction _getConditionPropertyValues(controller) {\n\tconst propertiesConfig = controller.getPropertiesConfig();\n\tconst options = {};\n\tif (propertiesConfig.conditionDisabledPropertyHandling === \"null\") {\n\t\toptions.filterDisabled = true;\n\t}\n\tif (propertiesConfig.conditionHiddenPropertyHandling === \"null\") {\n\t\toptions.filterHidden = true;\n\t}\n\tif (isEmpty(options)) {\n\t\treturn {};\n\t}\n\treturn controller.getPropertyValues(options);\n}\n\n/**\n* This function will validate a single properties for allow_change.\n*\n* @param {object} propertyId. required\n* @param {object} properties controller. required\n*/\nfunction allowConditions(inPropertyId, controller) {\n\tlet result = true;\n\tconst control = controller.getControl(inPropertyId);\n\tif (!control) {\n\t\tlogger.warn(\"Control not found for \" + inPropertyId.name);\n\t\treturn result;\n\t}\n\tconst allowValidations = controller.getDefinitions(inPropertyId, CONDITION_TYPE.ALLOWCHANGE, CONDITION_DEFINITION_INDEX.CONTROLS);\n\tif (allowValidations.length > 0) {\n\t\ttry {\n\t\t\tfor (const validation of allowValidations) {\n\t\t\t\tresult = UiConditions.validateInput(validation.definition, inPropertyId, controller);\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in validation: \" + error);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n* Set default value for a field if conditions evaluate to true.\n* This function sets parameter_ref and default value in conditionalDefaultValues object using pass-by-reference.\n* Return value is never used anywhere. Calling function works on the updated conditionalDefaultValues object.\n*\n* @param {object} propertyId. required\n* @param {object} properties controller. required\n* @param {object} conditionalDefaultValues. required\n*/\nfunction setConditionalDefaultValue(inPropertyId, controller, conditionalDefaultValues) {\n\tconst control = controller.getControl(inPropertyId);\n\tif (!control) {\n\t\tlogger.warn(\"Control not found for \" + inPropertyId.name);\n\t\treturn null;\n\t}\n\tconst validations = controller.getDefinitions(inPropertyId, CONDITION_TYPE.CONDITIONALDEFAULT, CONDITION_DEFINITION_INDEX.CONTROLS);\n\tif (validations.length > 0) {\n\t\ttry {\n\t\t\tfor (const validation of validations) {\n\t\t\t\tconst parameterRef = validation.definition.default_value.parameter_ref;\n\t\t\t\t//  For a given parameter_ref, only the first default_value condition is used.\n\t\t\t\tif (!(parameterRef in conditionalDefaultValues)) {\n\t\t\t\t\tconst result = UiConditions.validateInput(validation.definition, inPropertyId, controller);\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\t// Condition evaluate to true\n\t\t\t\t\t\tconditionalDefaultValues[parameterRef] = validation.definition.default_value.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in validation: \" + error);\n\t\t}\n\t}\n\treturn null;\n}\n\n/**\n* Filters the datamodel fields for the given parameter.\n*\n* @param {object} propertyId. required\n* @param {object} list of filter definitions. required.\n* @param {object} properties controller. required\n* @param {object} list of fields to filter. required\n* @return {object} list of filtered fields\n*/\nfunction filterConditions(propertyId, filterDefinitions, controller, fields) {\n\t// Check each definition\n\tlet returnFields = fields;\n\tif (filterDefinitions && Array.isArray(filterDefinitions[propertyId.name])) {\n\t\ttry {\n\t\t\tconst defs = filterDefinitions[propertyId.name];\n\t\t\tfor (let i = 0; i < defs.length; i++) {\n\t\t\t\treturnFields = UiConditions.filter(propertyId, filterDefinitions[propertyId.name][i].definition, controller, returnFields);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in filter for propertyId (\" + propertyId.name + \"): \" + error);\n\t\t}\n\t}\n\treturn returnFields;\n}\n\n// ========= miscellanious APIs\n\n/**\n* Takes an array of panel IDs and updates the states of the children of\n* the panels identified by those IDs to be the same as the states of the panels.\n*/\nfunction updatePanelChildrenStatesForPanelIds(panelIds, controller) {\n\tconst newStates = {\n\t\tcontrols: controller.getControlStates(),\n\t\tpanels: controller.getPanelStates(),\n\t\tactions: controller.getActionStates()\n\t};\n\n\tfor (let i = 0; i < panelIds.length; i++) {\n\t\tconst state = controller.getPanelState({ \"name\": panelIds[i] });\n\t\t_updatePanelChildrenState(newStates, { \"name\": panelIds[i] }, state, controller);\n\t}\n\n\tcontroller.setControlStates(newStates.controls);\n\tcontroller.setPanelStates(newStates.panels);\n\tcontroller.setActionStates(newStates.actions);\n\n}\n\n/**\n* Update the stated of a property\n*\n* @param {object} a list of controls and panels states.  This will be modified to contain\n*                 the updated state. required.\n* @param {object} propertyId. required.\n* @param {string} proposed new state value. required.\n*/\nfunction updateState(refState, propertyId, value, controller) {\n\tlet propState = refState[propertyId.name];\n\tif (!propState) {\n\t\tpropState = {};\n\t}\n\tconst newPropState = Object.assign({}, propState);\n\tconst topLevelId = typeof propertyId.row === \"undefined\" && typeof propertyId.col === \"undefined\";\n\tif (topLevelId && newPropState.value === STATES.HIDDEN && (value === STATES.DISABLED || value === STATES.ENABLED)) {\n\t\tnewPropState.value = STATES.HIDDEN;\n\t} else {\n\t\tnewPropState.value = value;\n\t}\n\n\t// First allow for table level state, then column level state, and finally cell level state\n\tif (typeof propertyId.col !== \"undefined\") {\n\t\tconst colId = propertyId.col.toString();\n\t\tif (!propState[colId]) {\n\t\t\tpropState[colId] = {};\n\t\t}\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tconst rowId = propertyId.row.toString();\n\t\t\tif (!propState[colId][rowId]) {\n\t\t\t\tpropState[colId][rowId] = {};\n\t\t\t}\n\t\t\t// Table cell level\n\t\t\tpropState[colId][rowId].value = newPropState.value;\n\t\t} else {\n\t\t\t// Table column level\n\t\t\tpropState[colId].value = newPropState.value;\n\t\t\t// if all cells are \"hidden\", hide an entire column\n\t\t\tconst hideColumn = (value === \"hidden\");\n\t\t\tconst updateColumnVisibility = controller.getColumnVisibility(propertyId, propertyId.col) !== !hideColumn;\n\t\t\tif (typeof controller !== \"undefined\" && updateColumnVisibility) {\n\t\t\t\tcontroller.toggleColumnVisibility(propertyId, propertyId.col, !hideColumn);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Control level\n\t\tpropState.value = newPropState.value;\n\t}\n\trefState[propertyId.name] = propState;\n}\n\n/**\n* Update the state of a value in an enumeration property.\n*\n* @param {object} a list of controls and panels states.  This will be modified to contain\n*                 the updated state. required.\n* @param {object} propertyId. required.\n* @param {string} enumValue The enumeration value to operate upon. required.\n* @param {string} proposed new state value. required.\n*/\nfunction updateEnumerationState(refState, propertyId, enumValue, value) {\n\tlet propState = refState[propertyId.name];\n\tif (!propState) {\n\t\tpropState = {};\n\t}\n\tif (!propState.values) {\n\t\tpropState.values = {};\n\t}\n\tif (!propState.values[enumValue]) {\n\t\tpropState.values[enumValue] = {};\n\t}\n\tconst newPropState = Object.assign({}, propState);\n\tconst topLevelId = typeof propertyId.row === \"undefined\" && typeof propertyId.col === \"undefined\";\n\tif (topLevelId && newPropState.values[enumValue].value === STATES.HIDDEN && (value === STATES.DISABLED || value === STATES.ENABLED)) {\n\t\tnewPropState.values[enumValue].value = STATES.HIDDEN;\n\t} else {\n\t\tnewPropState.values[enumValue].value = value;\n\t}\n\n\t// First allow for table level state, then column level state, and finally cell level state\n\tif (typeof propertyId.col !== \"undefined\") {\n\t\tconst colId = propertyId.col.toString();\n\t\tif (!propState[colId]) {\n\t\t\tpropState[colId] = {};\n\t\t}\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tconst rowId = propertyId.row.toString();\n\t\t\tif (!propState[colId][rowId]) {\n\t\t\t\tpropState[colId][rowId] = {};\n\t\t\t}\n\t\t\tif (!propState[colId][rowId].values) {\n\t\t\t\tpropState[colId][rowId].values = {};\n\t\t\t}\n\t\t\tif (!propState[colId][rowId].values[enumValue]) {\n\t\t\t\tpropState[colId][rowId].values[enumValue] = {};\n\t\t\t}\n\t\t\t// Table cell level\n\t\t\tpropState[colId][rowId].values[enumValue].value = newPropState.values[enumValue].value;\n\t\t} else {\n\t\t\t// Table column level\n\t\t\tif (!propState[colId].values) {\n\t\t\t\tpropState[colId].values = {};\n\t\t\t}\n\t\t\tif (!propState[colId].values[enumValue]) {\n\t\t\t\tpropState[colId].values[enumValue] = {};\n\t\t\t}\n\t\t\tpropState[colId].values[enumValue].value = newPropState.values[enumValue].value;\n\t\t}\n\t} else {\n\t\t// Control level\n\t\tpropState.values[enumValue] = newPropState.values[enumValue];\n\t}\n\trefState[propertyId.name] = propState;\n}\n\n/**\n* Generate a propertyId from a parameter_ref.  The new propertyId will include the row\n* value from the control propertyId. If the controlPropertyId is a member of an\n* unrolled structure, that propertyId will be returned.\n*\n* @param {string} parameter_ref value. required.\n* @param {object} control propertyId. optional.\n* @return {object} generated propertyId.\n*/\nfunction getParamRefPropertyId(paramRef, controlPropertyId) {\n\tconst baseParam = {\n\t\tname: paramRef\n\t};\n\tconst offset = paramRef.indexOf(\"[\");\n\tif (offset > -1) {\n\t\tbaseParam.name = paramRef.substring(0, offset);\n\t\tbaseParam.col = parseInt(paramRef.substring(offset + 1, paramRef.indexOf(\"]\")), 10);\n\t}\n\tif (controlPropertyId) {\n\t\tbaseParam.row = controlPropertyId.row;\n\t}\n\treturn baseParam;\n}\n\n/**\n* This function will inject validation definitions for controls with the following attributes.\n*    Required: validation definition to ensure that the required parameter is not is not empty.\n*    Date format: validation definition to ensure parameter has a proper date format.\n*    Time format: validation definition to ensure parameter has a propert time format.\n*\n* @param {object} a list of control objects. required.\n* @param {object} a list of validation definition objects. required.\n* @return {object} a modified validation defintion object with any injected definitions.\n*/\nfunction injectDefaultValidations(controls, validationDefinitions, requiredDefinitionsIds, intl) {\n\tfor (const keyName in controls) {\n\t\tif (!has(controls, keyName)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst control = controls[keyName];\n\t\t// for the validation id we need a repeatable random number to ensure uniqueness within the form.\n\t\tconst rng = seedrandom(keyName);\n\t\tconst controlValId = 1000 * rng();\n\n\t\tif (control.required === true) {\n\t\t\t_injectRequiredDefinition(control, validationDefinitions, requiredDefinitionsIds, keyName, controlValId, intl);\n\t\t}\n\t\tif (control.role === \"date\" || control.role === \"time\") {\n\t\t\t_injectDateTimeDefinition(control, validationDefinitions, keyName, controlValId, intl);\n\t\t}\n\t\tif (control.role === \"column\") {\n\t\t\t// used for selectcolumns control\n\t\t\tlet locKeyName = keyName;\n\t\t\tif (control.valueDef.isList) {\n\t\t\t\tlocKeyName += \"[0]\";\n\t\t\t}\n\t\t\t_injectInvalidFieldDefinition(control, validationDefinitions, locKeyName, controlValId, intl);\n\t\t}\n\n\t\tif (control.subControls) {\n\t\t\tconst subControls = {};\n\t\t\tfor (let idx = 0; idx < control.subControls.length; idx++) {\n\t\t\t\tconst subKeyName = keyName + \"[\" + idx + \"]\";\n\t\t\t\tsubControls[subKeyName] = control.subControls[idx];\n\t\t\t}\n\t\t\tinjectDefaultValidations(subControls, validationDefinitions, requiredDefinitionsIds, intl);\n\t\t}\n\t}\n}\n\n\n// ========= internal functions\n\n// This function will traverse the panel tree and propogate the state so that a higher order\n// panel state will be set for lower order panels.  The disableOnly flag will only propagate the\n// disable state.\nfunction \t_propagateParentPanelStates(panelTree, newStates, currentPanel, disabledOnly) {\n\tconst currentPanelState = newStates.panels[currentPanel];\n\tconst allowUpdate = (disabledOnly) ? (currentPanelState && (currentPanelState.value === STATES.DISABLED))\n\t\t: (currentPanelState && (currentPanelState.value === STATES.HIDDEN || currentPanelState.value === STATES.DISABLED));\n\t\t// only propagate if parent panel is hidden or disabled\n\tif (allowUpdate && panelTree[currentPanel]) {\n\t\t// propagate panel state to children controls\n\t\tif (panelTree[currentPanel].controls) {\n\t\t\tfor (const control of panelTree[currentPanel].controls) {\n\t\t\t\tif (disabledOnly) {\n\t\t\t\t\tif (newStates.controls[control].value !== STATES.HIDDEN) {\n\t\t\t\t\t\tupdateState(newStates.controls, { name: control }, currentPanelState.value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tupdateState(newStates.controls, { name: control }, currentPanelState.value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// propagate panel state to children actions\n\t\tif (panelTree[currentPanel].actions) {\n\t\t\tfor (const action of panelTree[currentPanel].actions) {\n\t\t\t\tif (disabledOnly) {\n\t\t\t\t\tif (newStates.actions[action].value !== STATES.HIDDEN) {\n\t\t\t\t\t\tupdateState(newStates.actions, { name: action }, currentPanelState.value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tupdateState(newStates.actions, { name: action }, currentPanelState.value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//  check all children panels\n\tif (panelTree[currentPanel] && panelTree[currentPanel].panels) {\n\t\tfor (const panel of panelTree[currentPanel].panels) {\n\t\t\tif (allowUpdate) {\n\t\t\t\tif (disabledOnly) {\n\t\t\t\t\tif (newStates.panels[panel].value !== STATES.HIDDEN) {\n\t\t\t\t\t\tupdateState(newStates.panels, { name: panel }, currentPanelState.value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tupdateState(newStates.panels, { name: panel }, currentPanelState.value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_propagateParentPanelStates(panelTree, newStates, panel, disabledOnly);\n\t\t}\n\t}\n}\n\n// This will validate a single propertyID value\nfunction _validateInput(propertyId, controller, control, showErrors) {\n\tlet errorSet = false;\n\tconst validations = controller.getDefinitions(propertyId, CONDITION_TYPE.VALIDATION, CONDITION_DEFINITION_INDEX.CONTROLS);\n\tif (validations.length > 0) {\n\t\tconst requiredDefinitionsIds = controller.getRequiredDefinitionIds();\n\t\ttry {\n\t\t\tlet output = false;\n\t\t\tfor (const validation of validations) {\n\t\t\t\tlet errorMessage = DEFAULT_VALIDATION_MESSAGE;\n\t\t\t\toutput = UiConditions.validateInput(validation.definition, propertyId, controller);\n\t\t\t\tlet isError = false;\n\t\t\t\tif (typeof output === \"object\") {\n\t\t\t\t\tisError = true;\n\t\t\t\t\terrorMessage = {\n\t\t\t\t\t\ttype: output.type,\n\t\t\t\t\t\ttext: output.text\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// msgPropertyId is where the message should be set\n\t\t\t\tlet msgPropertyId = cloneDeep(propertyId);\n\t\t\t\tif (validation.definition.validation &&\n\t\t\t\t\tvalidation.definition.validation.fail_message &&\n\t\t\t\t\tvalidation.definition.validation.fail_message.focus_parameter_ref) {\n\t\t\t\t\tmsgPropertyId = getParamRefPropertyId(validation.definition.validation.fail_message.focus_parameter_ref, msgPropertyId);\n\t\t\t\t}\n\t\t\t\t// don't set column if not a subcontrol\n\t\t\t\tif (typeof msgPropertyId.col !== \"undefined\" && typeof control.columnIndex === \"undefined\") {\n\t\t\t\t\tdelete msgPropertyId.col;\n\t\t\t\t}\n\t\t\t\terrorMessage.validation_id = msgPropertyId.name;\n\t\t\t\tif (validation.definition.validation &&\n\t\t\t\t\tvalidation.definition.validation.id) {\n\t\t\t\t\terrorMessage.validation_id = validation.definition.validation.id;\n\t\t\t\t}\n\n\t\t\t\tif (typeof msgPropertyId.row === \"undefined\") {\n\t\t\t\t\tdelete msgPropertyId.row;\n\t\t\t\t}\n\t\t\t\terrorMessage.propertyId = msgPropertyId;\n\n\t\t\t\t// Determine if this condition is for required parameters\n\t\t\t\terrorMessage.required = requiredDefinitionsIds.indexOf(validation.definition.validation.id) > -1;\n\t\t\t\t// Only show warning messages for \"colDoesExists\" condition\n\t\t\t\tif (!showErrors && !validation.alwaysShow) {\n\t\t\t\t\terrorMessage.displayError = false;\n\t\t\t\t}\n\n\t\t\t\t// if error message has not been set for this msgPropertyId/focus_parameter_ref, clear errorSet\n\t\t\t\tif (!controller.getErrorMessage(msgPropertyId, true, true, false)) {\n\t\t\t\t\terrorSet = false;\n\t\t\t\t}\n\t\t\t\tif (isError && !errorSet) {\n\t\t\t\t\tcontroller.updateErrorMessage(msgPropertyId, errorMessage);\n\t\t\t\t\tif (isError) {\n\t\t\t\t\t\terrorSet = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (!isError && !errorSet) {\n\t\t\t\t\tconst msg = controller.getErrorMessage(msgPropertyId, false, false, false);\n\t\t\t\t\tif (!isEmpty(msg) && (msg.validation_id === errorMessage.validation_id)) {\n\t\t\t\t\t\tcontroller.updateErrorMessage(msgPropertyId, DEFAULT_VALIDATION_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in validation: \" + error);\n\t\t}\n\t}\n}\n\n// This function allows a single interface to perform all conditions validation.\n// It enables common code for the various APIs by delaying the exapnsion of all three\n// conditions test until this point.\nfunction _validateConditionsByType(propertyId, newStates, controller) {\n\t_validateDefinitionsByType(propertyId, newStates, controller, CONDITION_TYPE.VISIBLE);\n\t_validateDefinitionsByType(propertyId, newStates, controller, CONDITION_TYPE.ENABLED);\n\t_validateDefinitionsByType(propertyId, newStates, controller, CONDITION_TYPE.FILTEREDENUM);\n}\n\n// This is a common routine that will get the appropriate definitions for the property id\n// by type and validate that set of definitions.\nfunction _validateDefinitionsByType(propertyId, newStates, controller, condType) {\n\tconst definitions = controller.getDefinitions(propertyId, condType, CONDITION_DEFINITION_INDEX.CONTROLS);\n\t_validateByType(definitions, propertyId, newStates, controller, condType);\n}\n\n// This function will validate a set of definitions for the propertyId.  This is needed because\n// it is invoked in various places in the code where we have a set of definitions that need to be validated.\nfunction _validateByType(definitions, propertyId, newStates, controller, condType) {\n\tif (definitions.length > 0) {\n\t\ttry {\n\t\t\tdefinitions.forEach((definition, idx) => {\n\t\t\t\tconst evalState = UiConditions.validateInput(definition.definition, propertyId, controller);\n\t\t\t\t// After the evalution, there is different processing of the result based on the condition type.\n\t\t\t\tswitch (condType) {\n\t\t\t\tcase CONDITION_TYPE.VISIBLE:\n\t\t\t\t\t_updateControlState(evalState, definition.definition.visible, propertyId, newStates, controller, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CONDITION_TYPE.ENABLED:\n\t\t\t\t\t_updateControlState(evalState, definition.definition.enabled, propertyId, newStates, controller, false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CONDITION_TYPE.FILTEREDENUM: {\n\t\t\t\t\tconst lastDefinition = _isLastDefintiionForParameter(definitions, idx);\n\t\t\t\t\t_updateFilteredState(definition.definition, propertyId, newStates, evalState, lastDefinition);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in validation: \" + error);\n\t\t}\n\t}\n}\n\n// Returns true if the defintion is the last definition for the target.parameter_ref from the list of 'definitions'\n// This is only used for 'enum_filter' conditions\nfunction _isLastDefintiionForParameter(definitions, index) {\n\tconst currentDefinition = definitions[index];\n\tconst currentParameter = currentDefinition.definition.enum_filter.target.parameter_ref;\n\n\tlet lastDefinition = true;\n\tdefinitions.forEach((definition, idx) => {\n\t\t// definitions are evaluated in order, so assume any defition before 'idx' are already evaluated\n\t\tif (idx > index && definition.definition.enum_filter.target.parameter_ref === currentParameter) {\n\t\t\tlastDefinition = false;\n\t\t}\n\t});\n\treturn lastDefinition;\n}\n\n// This function will update the control state of the control and all it children panels and controls.\nfunction _updateControlState(stateOn, definition, propertyId, newStates, controller, visibleControl) {\n\tif (definition.parameter_refs) {\n\t\t_updateRefsState(stateOn, definition, propertyId, newStates, controller, visibleControl, definition.parameter_refs, \"control\");\n\t}\n\tif (definition.action_refs) {\n\t\t_updateRefsState(stateOn, definition, propertyId, newStates, controller, visibleControl, definition.action_refs, \"action\");\n\t}\n\tif (definition.group_refs) {\n\t\t_updateGroupRefsControlState(stateOn, definition, propertyId, newStates, controller, visibleControl);\n\t}\n}\n\n// This function will update the control state of the refs in the condition and all it children panels and controls.\nfunction _updateGroupRefsControlState(stateOn, definition, propertyId, newStates, controller, visibleControl) {\n\tconst newOnState = (visibleControl) ? STATES.VISIBLE : STATES.ENABLED;\n\tconst newOffState = (visibleControl) ? STATES.HIDDEN : STATES.DISABLED;\n\tconst notAllowedState = (visibleControl) ? STATES.ENABLED : STATES.HIDDEN;\n\n\tfor (const groupRef of definition.group_refs) {\n\t\tconst groupReferenceId = getParamRefPropertyId(groupRef);\n\t\tconst currentState = _getState(newStates.panels, groupReferenceId);\n\t\t// check for visible or enabled so we aren't resetting the state all the time\n\t\tif (stateOn === true) { // control|panel should be visible || enabled\n\t\t\tif (groupReferenceId && currentState !== newOnState && currentState !== notAllowedState) {\n\t\t\t\tconst updated = _updateStateIfParent(newStates, groupReferenceId, newOnState, controller);\n\t\t\t\t// only update the children if parent's state changed or is set for the first time\n\t\t\t\tif (updated) {\n\t\t\t\t\t_updatePanelChildrenState(newStates, groupReferenceId, newOnState, controller);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (groupReferenceId && (visibleControl || (!visibleControl && currentState !== notAllowedState))) {\n\t\t\tconst updated = _updateStateIfParent(newStates, groupReferenceId, newOffState, controller);\n\t\t\t// only update the children if parent's state changed or is set for the first time\n\t\t\tif (updated) {\n\t\t\t\t_updatePanelChildrenState(newStates, groupReferenceId, newOffState, controller);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// This function will update the control state of the refs in the condition and all it children panels and controls.\nfunction _updateRefsState(stateOn, definition, propertyId, newStates, controller, visibleControl, refsList, refsType) {\n\tconst newOnState = (visibleControl) ? STATES.VISIBLE : STATES.ENABLED;\n\tconst newOffState = (visibleControl) ? STATES.HIDDEN : STATES.DISABLED;\n\tconst notAllowedState = (visibleControl) ? STATES.ENABLED : STATES.HIDDEN;\n\tconst refStates = (refsType === \"control\") ? newStates.controls : newStates.actions;\n\tfor (const ref of refsList) {\n\t\tconst referenceId = getParamRefPropertyId(ref, propertyId);\n\t\tconst currentState = _getState(refStates, referenceId);\n\t\t// check for visible or enabled so we aren't resetting the state all the time\n\t\tif (Array.isArray(definition.values)) {\n\t\t\t// Short-circuit for disabling individual enumeration items\n\t\t\tfor (const value of definition.values) {\n\t\t\t\tif (stateOn === true) { // control|panel should be visible || enabled\n\t\t\t\t\tupdateEnumerationState(refStates, referenceId, value, newOnState);\n\t\t\t\t} else { // control|panel should be hidden || disabled\n\t\t\t\t\tupdateEnumerationState(refStates, referenceId, value, newOffState);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (stateOn === true) { // control|panel should be visible || enabled\n\t\t\tif (referenceId && currentState !== newOnState && currentState !== notAllowedState) {\n\t\t\t\tupdateState(refStates, referenceId, newOnState, controller);\n\t\t\t}\n\t\t} else if (referenceId && (visibleControl || (!visibleControl && currentState !== notAllowedState))) {\n\t\t\t_updateStateIfPanel(newStates, referenceId, newOffState, refStates, controller);\n\t\t}\n\t}\n}\n\n// Filtered state is stored in objects rather than arrays\nfunction _updateFilteredState(definition, inPropertyId, newStates, filtered, lastDefinition) {\n\tif (definition.enum_filter.target && definition.enum_filter.target.parameter_ref) {\n\t\tconst refState = newStates.controls;\n\t\tconst propertyId = getParamRefPropertyId(definition.enum_filter.target.parameter_ref, inPropertyId);\n\t\tlet propState = refState[propertyId.name];\n\t\tif (!propState) {\n\t\t\tpropState = {};\n\t\t}\n\t\t// First allow for table level state, then column level state, and finally cell level state\n\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\tconst colId = propertyId.col.toString();\n\t\t\tif (!propState[colId]) {\n\t\t\t\tpropState[colId] = {};\n\t\t\t}\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\tconst rowId = propertyId.row.toString();\n\t\t\t\tif (!propState[colId][rowId]) {\n\t\t\t\t\tpropState[colId][rowId] = {};\n\t\t\t\t}\n\t\t\t\t// Cells\n\t\t\t\tconst enumFilters = _getFilteredEnumItems(definition, filtered, propState[colId][rowId].enumFilter, propState[colId][rowId].enumFilterApplied, lastDefinition);\n\t\t\t\tpropState[colId][rowId].enumFilter = enumFilters.values;\n\t\t\t\tpropState[colId][rowId].enumFilterApplied = enumFilters.filterApplied;\n\t\t\t} else {\n\t\t\t\t// Columns\n\t\t\t\tconst enumFilters = _getFilteredEnumItems(definition, filtered, propState[colId].enumFilter, propState[colId].enumFilterApplied, lastDefinition);\n\t\t\t\tpropState[colId].enumFilter = enumFilters.values;\n\t\t\t\tpropState[colId].enumFilterApplied = enumFilters.filterApplied;\n\t\t\t}\n\t\t} else {\n\t\t\t// Control-level state\n\t\t\tconst enumFilters = _getFilteredEnumItems(definition, filtered, propState.enumFilter, propState.enumFilterApplied, lastDefinition);\n\t\t\tpropState.enumFilter = enumFilters.values;\n\t\t\tpropState.enumFilterApplied = enumFilters.filterApplied;\n\t\t}\n\t\trefState[propertyId.name] = propState;\n\t}\n}\n\n// This function will updatethe state all the children of a panel when that parent panel state\n// has changed.  It will update the state of the child.  If the state is transitioning to\n// enabled or visible, then the child state may need to be set by other conditions or panels states.\nfunction _updatePanelChildrenState(newStates, referenceId, state, controller) {\n\tif (controller.panelTree[referenceId.name]) {\n\t\tconst panelTree = controller.panelTree[referenceId.name];\n\t\tfor (const panel of panelTree.panels) {\n\t\t\tconst panelPropertyId = { name: panel };\n\t\t\tupdateState(newStates.panels, panelPropertyId, state);\n\t\t\t// recurse to get the children of the panel\n\t\t\t_updatePanelChildrenState(newStates, panelPropertyId, state, controller);\n\t\t\t// after recursing down the panelTree, re-run defintions to ensure the panel is in the proper state.\n\t\t\tif (state === STATES.ENABLED) {\n\t\t\t\t_runRefsValidateDefinitions(panelPropertyId, controller, CONDITION_TYPE.ENABLED, newStates);\n\t\t\t} else if (state === STATES.VISIBLE) {\n\t\t\t\t// if the current panel is in disable state.\n\t\t\t\tif (newStates.panels[referenceId.name].disabled) {\n\t\t\t\t\t// propagate the state to all the children in the panel.\n\t\t\t\t\t_propagateParentPanelStates(controller.panelTree, newStates, referenceId.name, true);\n\t\t\t\t}\n\t\t\t\t_runRefsValidateDefinitions(panelPropertyId, controller, CONDITION_TYPE.ENABLED, newStates);\n\t\t\t\t_runRefsValidateDefinitions(panelPropertyId, controller, CONDITION_TYPE.VISIBLE, newStates);\n\t\t\t}\n\t\t}\n\t\tfor (const control of panelTree.controls) {\n\t\t\tconst ctrlPropertyId = { name: control };\n\t\t\t_updatePanelChildrenObjectState(newStates, referenceId, state, controller, ctrlPropertyId, newStates.controls);\n\t\t}\n\t\tfor (const action of panelTree.actions) {\n\t\t\tconst ctrlPropertyId = { name: action };\n\t\t\t_updatePanelChildrenObjectState(newStates, referenceId, state, controller, ctrlPropertyId, newStates.actions);\n\t\t}\n\n\t}\n}\n\n// In this context \"Object\" menas either a control or an action.\nfunction _updatePanelChildrenObjectState(newStates, referenceId, state, controller, objectId, objectStates) {\n\tupdateState(objectStates, objectId, state);\n\t// re-run ref conditions to see if they should override this new state.\n\tif (state === STATES.ENABLED) {\n\t\t_runRefsValidateDefinitions(objectId, controller, CONDITION_TYPE.ENABLED, newStates);\n\t\t_runRefsValidateDefinitions(objectId, controller, CONDITION_TYPE.VISIBLE, newStates);\n\t} else if (state === STATES.VISIBLE) {\n\t\t// need to run the controls visible conditions in case a higher level panel changed the state.\n\t\t_validateDefinitionsByType(objectId, newStates, controller, CONDITION_TYPE.VISIBLE);\n\t\t_runRefsValidateDefinitions(objectId, controller, CONDITION_TYPE.VISIBLE, newStates);\n\t\t// if parent panel is disable then set control to disabled.\n\t\tif (newStates.panels[referenceId.name].value === STATES.DISABLED) {\n\t\t\tupdateState(objectStates, objectId, STATES.DISABLED);\n\t\t} else {\n\t\t\t// otherwise run any enable definition that would set the control.\n\t\t\t_runRefsValidateDefinitions(objectId, controller, CONDITION_TYPE.ENABLED, newStates);\n\t\t}\n\t}\n}\n\n// validate all conditions of the type that set the propertyID state as a result of the condition.\nfunction _runRefsValidateDefinitions(propertyId, controller, dfnType, newStates) {\n\tconst refsDefinitions = controller.getDefinitions(propertyId, dfnType, CONDITION_DEFINITION_INDEX.REFS);\n\tif (refsDefinitions.length > 0) {\n\t\t_validateByType(refsDefinitions, propertyId, newStates, controller, dfnType);\n\t}\n\n}\n\n// Only parent panels can override state of its children\nfunction _updateStateIfParent(newStates, panel, state, controller, referenceId) {\n\tconst panelName = panel.name;\n\tif (newStates.panels[panelName]) {\n\t\tconst prevValue = newStates.panels[panelName].value;\n\t\t// if prevState is disabled, cannot set newState to visible. if prevState is hidden, cannot set newState to enabled\n\t\tif (((prevValue === STATES.ENABLED || prevValue === STATES.VISIBLE) && (state === STATES.DISABLED || state === STATES.HIDDEN)) ||\n\t\t\t\t(prevValue === STATES.DISABLED && state === STATES.ENABLED) ||\n\t\t\t\t(prevValue === STATES.HIDDEN && state === STATES.VISIBLE)) {\n\t\t\tupdateState(newStates.panels, panel, state);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tupdateState(newStates.panels, panel, state);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n// A control can only set a state to enabled if it was previously disabled. The same applies to hidden and visible\nfunction _updateStateIfPanel(newStates, referenceId, state, refStates, controller) {\n\tconst controlName = referenceId.name;\n\tif (refStates[controlName]) {\n\t\tlet prevValue = refStates[controlName].value;\n\t\tif (typeof referenceId.col !== \"undefined\") {\n\t\t\t// control is in a table\n\t\t\tif (refStates[controlName][referenceId.col]) {\n\t\t\t\tif (typeof referenceId.row !== \"undefined\" && refStates[controlName][referenceId.col][referenceId.row]) {\n\t\t\t\t\tprevValue = refStates[controlName][referenceId.col][referenceId.row].value;\n\t\t\t\t} else { // first time setting control state for each row in the column\n\t\t\t\t\tupdateState(refStates, referenceId, state, controller);\n\t\t\t\t}\n\t\t\t} else { // first time setting control state for the column\n\t\t\t\tupdateState(refStates, referenceId, state, controller);\n\t\t\t}\n\t\t}\n\t\t// Can only set a state to enabled if it was previously disabled. The same applies to hidden and visible\n\t\tif (((prevValue === STATES.ENABLED || prevValue === STATES.VISIBLE) && (state === STATES.DISABLED || state === STATES.HIDDEN)) ||\n\t\t\t\t(prevValue === STATES.DISABLED && state === STATES.ENABLED) ||\n\t\t\t\t(prevValue === STATES.DISABLED && state === STATES.HIDDEN) ||\n\t\t\t\t(prevValue === STATES.HIDDEN && state === STATES.VISIBLE)) {\n\t\t\tupdateState(refStates, referenceId, state, controller);\n\t\t}\n\t} else { // first time setting control state\n\t\tupdateState(refStates, referenceId, state, controller);\n\t}\n}\n\nfunction _getFilteredEnumItems(definition, filtered, previousValues, filterApplied, lastDefinition) {\n\tconst enumFilter = {\n\t\tvalues: previousValues,\n\t\tfilterApplied: lastDefinition ? false : filterApplied || true // default to true if null\n\t};\n\n\tlet filterValues = null; // original values\n\tif (filtered) {\n\t\tfilterValues = definition.enum_filter.target.values;\n\t}\n\n\t// values should be null if there are no other definitions that already modified this parameter\n\tif (filterValues || !filterApplied) {\n\t\tenumFilter.values = filterValues;\n\t\tenumFilter.filterApplied = true;\n\t}\n\n\t// reset the filters for the next validation cycle\n\tif (lastDefinition) {\n\t\tenumFilter.filterApplied = false;\n\t}\n\n\treturn enumFilter;\n}\n\n// state is stored in objects rather than arrays\nfunction _getState(refState, propertyId) {\n\tlet propState = refState[propertyId.name];\n\tif (typeof propertyId.col !== \"undefined\" && propState) {\n\t\tpropState = propState[propertyId.col.toString()];\n\t\tif (typeof propertyId.row !== \"undefined\" && propState) {\n\t\t\tpropState = propState[propertyId.row.toString()];\n\t\t}\n\t}\n\tif (propState) {\n\t\treturn propState.value;\n\t}\n\treturn null;\n}\n\nfunction _injectRequiredDefinition(control, valDefinitions, requiredDefinitionsIds, keyName, controlValId, intl) {\n\t// inject required validation definition\n\tconst label = (control.label && control.label.text) ? control.label.text : keyName;\n\tconst errorMsg = formatMessage(intl,\n\t\tMESSAGE_KEYS.REQUIRED_ERROR, { label: label });\n\tconst definitionId = \"required_\" + keyName + \"_\" + controlValId;\n\tconst injectedDefinition = {\n\t\tparams: keyName,\n\t\tdefinition: {\n\t\t\tvalidation: {\n\t\t\t\tid: definitionId,\n\t\t\t\tfail_message: {\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\tmessage: {\n\t\t\t\t\t\tdefault: errorMsg\n\t\t\t\t\t},\n\t\t\t\t\tfocus_parameter_ref: keyName\n\t\t\t\t},\n\t\t\t\tevaluate: {\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tparameter_ref: keyName,\n\t\t\t\t\t\top: \"isNotEmpty\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\t// add the new definition to the set of validation definitions for this control.\n\tif (valDefinitions.controls[keyName]) {\n\t\tvalDefinitions.controls[keyName].push(injectedDefinition);\n\t} else {\n\t\tvalDefinitions.controls[keyName] = [injectedDefinition];\n\t}\n\trequiredDefinitionsIds.push(definitionId); // Save to list of required definition IDs\n}\n\nfunction _injectDateTimeDefinition(control, valDefinitions, keyName, controlValId, intl) {\n\t// inject date format validation definition\n\tconst format = (control.dateFormat) ? control.dateFormat : control.timeFormat;\n\tconst defaultFormat = (control.dateFormat) ? DEFAULT_DATE_FORMAT : DEFAULT_TIME_FORMAT;\n\tconst dtFormat = (format) ? format : defaultFormat;\n\tconst errorMsg = formatMessage(intl,\n\t\tMESSAGE_KEYS.DATETIME_FORMAT_ERROR, { role: control.role, format: dtFormat });\n\tconst injectedDefinition = {\n\t\tparams: keyName,\n\t\tdefinition: {\n\t\t\tvalidation: {\n\t\t\t\tid: \"Format_\" + keyName + \"_\" + controlValId,\n\t\t\t\tfail_message: {\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\tmessage: {\n\t\t\t\t\t\tdefault: errorMsg\n\t\t\t\t\t},\n\t\t\t\t\tfocus_parameter_ref: keyName\n\t\t\t\t},\n\t\t\t\tevaluate: {\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tparameter_ref: keyName,\n\t\t\t\t\t\top: \"isDateTime\",\n\t\t\t\t\t\tvalue: control.role\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// add the new definition to the set of validation definitions for this control.\n\tif (valDefinitions.controls[keyName]) {\n\t\tvalDefinitions.controls[keyName].push(injectedDefinition);\n\t} else {\n\t\tvalDefinitions.controls[keyName] = [injectedDefinition];\n\t}\n}\n\nfunction _injectInvalidFieldDefinition(control, valDefinitions, keyName, controlValId, intl) {\n\t// inject invalid field validation definition\n\tconst label = (control.label && control.label.text) ? control.label.text : keyName;\n\tconst errorMsg = formatMessage(intl,\n\t\tMESSAGE_KEYS.INVALID_FIELD_ERROR, { label: label });\n\t// Note: Please don't update \"validField_\" in validation id. It is used as identifier in another condition.\n\tconst injectedDefinition = {\n\t\tparams: keyName,\n\t\tdefinition: {\n\t\t\tvalidation: {\n\t\t\t\tid: \"validField_\" + keyName + \"_\" + controlValId,\n\t\t\t\tfail_message: {\n\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\tmessage: {\n\t\t\t\t\t\tdefault: errorMsg\n\t\t\t\t\t},\n\t\t\t\t\tfocus_parameter_ref: keyName\n\t\t\t\t},\n\t\t\t\tevaluate: {\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tparameter_ref: keyName,\n\t\t\t\t\t\top: \"colDoesExists\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\talwaysShow: true\n\t};\n\t\t// add the new definition to the set of validation definitions for this control.\n\tif (valDefinitions.controls[keyName]) {\n\t\tvalDefinitions.controls[keyName].push(injectedDefinition);\n\t} else {\n\t\tvalDefinitions.controls[keyName] = [injectedDefinition];\n\t}\n}\n\n// key should be 'type', 'measure', or 'modeling_role'. Return the matching metadata given the paramInfo\nfunction getMetadataFieldMatch(paramInfo, metadata, key) {\n\tif (paramInfo.value) {\n\t\tif (typeof paramInfo.value === \"string\") {\n\t\t\tfor (let i = 0; i < metadata.length; i++) {\n\t\t\t\tvar field = metadata[i];\n\t\t\t\tif (field.name === paramInfo.value) {\n\t\t\t\t\tif (key === \"type\") {\n\t\t\t\t\t\treturn field.type;\n\t\t\t\t\t}\n\t\t\t\t\treturn field.metadata[key];\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof paramInfo.value === \"object\") {\n\t\t\tfor (var j = 0; j < metadata.length; j++) {\n\t\t\t\tvar field2 = metadata[j];\n\t\t\t\tif (field2.origName === paramInfo.value.field_name && field2.schema === paramInfo.value.link_ref) {\n\t\t\t\t\tif (key === \"type\") {\n\t\t\t\t\t\treturn field2.type;\n\t\t\t\t\t}\n\t\t\t\t\treturn field2.metadata[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\nexport {\n\tvalidatePropertiesValues,\n\tvalidateConditions,\n\tvalidatePropertiesConditions,\n\tvalidateInput,\n\tfilterConditions,\n\tallowConditions,\n\tsetConditionalDefaultValue,\n\tupdateState,\n\tgetParamRefPropertyId,\n\tinjectDefaultValidations,\n\tupdatePanelChildrenStatesForPanelIds,\n\tgetMetadataFieldMatch\n};\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"./../../../icons/icon.jsx\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport { v4 as uuid4 } from \"uuid\";\n\nexport default class ValidationMessage extends React.Component {\n\n\trender() {\n\t\t// some controls use carbon's error/warnings instead of this component\n\t\tif (!this.props.messageInfo || (this.props.tableOnly && !this.props.inTable)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst msgText = this.props.inTable ? null : <span>{this.props.messageInfo.text}</span>;\n\t\tconst icon = (<div className=\"icon\">\n\t\t\t{<Icon type={this.props.messageInfo.type} />}\n\t\t</div>);\n\t\tconst msgIcon = this.props.inTable\n\t\t\t? (<div className=\"properties-tooltips-container table-cell-msg-icon\">\n\t\t\t\t<Tooltip\n\t\t\t\t\tid={uuid4() + \"-table-cell-msg-icon\"}\n\t\t\t\t\ttip={this.props.messageInfo.text}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t>\n\t\t\t\t\t{icon}\n\t\t\t\t</Tooltip>\n\t\t\t</div>)\n\t\t\t: null;\n\t\tconst className = classNames(\"properties-validation-message\", this.props.messageInfo.type,\n\t\t\t{ \"hide\": this.props.state === STATES.HIDDEN || this.props.state === STATES.DISABLED, \"inTable\": this.props.inTable });\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t{msgIcon}\n\t\t\t\t{msgText}\n\t\t\t</div>);\n\t}\n}\n\nValidationMessage.propTypes = {\n\tmessageInfo: PropTypes.shape({\n\t\ttext: PropTypes.string,\n\t\ttype: PropTypes.string\n\t}),\n\tstate: PropTypes.string,\n\tinTable: PropTypes.bool,\n\ttableOnly: PropTypes.bool\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ValidationMessage from \"./validation-message.jsx\";\nexport default ValidationMessage;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { FormattedDate } from \"react-intl\";\nimport { isValid } from \"date-fns\";\nimport { isEqual, intersection } from \"lodash\";\nimport classNames from \"classnames\";\n\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport TruncatedContentTooltip from \"./../../components/truncated-content-tooltip\";\nimport { STATES, DATA_TYPE } from \"./../../constants/constants\";\nimport Icon from \"./../../../icons/icon\";\n\nimport { ControlType } from \"./../../constants/form-constants\";\nimport { stringifyFieldValue } from \"./../../util/property-utils\";\n\nclass ReadonlyControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput) {\n\t\t// update property value if value isn't in current enum value.  Don't filter custom control values.\n\t\tif (Array.isArray(this.props.value) && Array.isArray(this.props.controlOpts.values) && this.props.control.controlType !== ControlType.CUSTOM) {\n\t\t\tconst newValue = intersection(this.props.value, this.props.controlOpts.values);\n\t\t\tif (!isEqual(this.props.value, newValue)) {\n\t\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue, skipValidateInput);\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tlet controlValue = this.props.value;\n\n\t\t// Use label for controlValue if possible\n\t\tif (this.props.control.values && this.props.control.valueLabels) {\n\t\t\tconst controlIndex = this.props.control.values.indexOf(this.props.value);\n\t\t\tif (controlIndex > -1 && this.props.control.valueLabels[controlIndex]) {\n\t\t\t\tcontrolValue = this.props.control.valueLabels[controlIndex];\n\t\t\t}\n\t\t}\n\t\tif (typeof controlValue === \"undefined\" || controlValue === null) {\n\t\t\tcontrolValue = \"\";\n\t\t} else if (typeof controlValue === \"object\" && controlValue.link_ref) {\n\t\t\tcontrolValue = stringifyFieldValue(controlValue, this.props.control);\n\t\t} else if (Array.isArray(controlValue)) {\n\t\t\t// this is needed to comma separate an array of readonly strings.\n\t\t\tcontrolValue = controlValue.join(\", \");\n\t\t} else if (typeof controlValue === \"boolean\") {\n\t\t\tcontrolValue = controlValue.toString();\n\t\t}\n\n\t\tcontrolValue = ControlUtils.truncateDisplayValue(controlValue);\n\n\t\tif (this.props.control.controlType === ControlType.CUSTOM) {\n\t\t\tcontrolValue = this.props.controller.getCustomControl(this.props.propertyId, this.props.control, { table: true, editStyle: \"summary\" });\n\t\t} else if (this.props.control.controlType === ControlType.TIMESTAMP ||\n\t\t\t(this.props.control.valueDef && this.props.control.valueDef.propType === DATA_TYPE.TIMESTAMP)) {\n\t\t\tconst date = new Date(controlValue);\n\t\t\tif (isValid(date)) {\n\t\t\t\tif (this.props.tableControl) {\n\t\t\t\t\tcontrolValue = <FormattedDate value={date} day=\"numeric\" month=\"long\" year=\"numeric\" hour=\"numeric\" minute=\"numeric\" />;\n\t\t\t\t} else {\n\t\t\t\t\tcontrolValue = <FormattedDate value={date} day=\"numeric\" month=\"long\" year=\"numeric\" hour=\"numeric\" minute=\"numeric\" weekday=\"long\" />;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontrolValue = \"\"; // invalid timestamp\n\t\t\t}\n\t\t}\n\t\tconst readOnly = <span className=\"properties-field-type\" disabled={this.props.state === STATES.DISABLED}>{controlValue}</span>;\n\t\tlet display = readOnly;\n\t\tif (this.props.tableControl) {\n\t\t\tlet disabled = true;\n\t\t\tif (controlValue) {\n\t\t\t\tdisabled = false;\n\t\t\t}\n\t\t\tlet content = readOnly;\n\t\t\tif (this.props.control.icon) {\n\t\t\t\tcontent = (\n\t\t\t\t\t<div className={\"properties-field-readonly\"}>\n\t\t\t\t\t\t<div className={\"properties-field-type-icon\"}>\n\t\t\t\t\t\t\t<Icon type={this.props.control.icon} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{readOnly}\n\t\t\t\t\t</div>);\n\t\t\t}\n\t\t\tdisplay = (\n\t\t\t\t<TruncatedContentTooltip\n\t\t\t\t\tcontent={content}\n\t\t\t\t\ttooltipText={controlValue}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\"properties-readonly\", { \"hide\": this.props.state === STATES.HIDDEN })}\n\t\t\t\tdata-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t>\n\t\t\t\t{this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\t{display}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReadonlyControl.propTypes = {\n\ticon: PropTypes.string,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.any, // pass in by redux\n\tcontrolOpts: PropTypes.oneOfType([\n\t\tPropTypes.object,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst props = {\n\t\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\t\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\t\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n\t};\n\tprops.controlOpts = ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control);\n\treturn props;\n};\n\nexport default connect(mapStateToProps, null)(ReadonlyControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { TextInput } from \"carbon-components-react\";\nimport ReadonlyControl from \"./../readonly\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { CONDITION_MESSAGE_TYPE, MESSAGE_KEYS, TRUNCATE_LIMIT } from \"./../../constants/constants.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport classNames from \"classnames\";\nimport { v4 as uuid4 } from \"uuid\";\n\nconst arrayValueDelimiter = \", \";\n\nclass TextfieldControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.charLimit = ControlUtils.getCharLimit(props.control, props.controller.getMaxLengthForSingleLineControls());\n\t\tthis.id = ControlUtils.getControlId(props.propertyId);\n\t\tthis.isList = false;\n\t\tif (this.props.control.valueDef) {\n\t\t\tif (this.props.control.valueDef.isList) {\n\t\t\t\tthis.isList = true;\n\t\t\t}\n\t\t\tthis.defaultValue = this.props.control.valueDef.defaultValue;\n\t\t}\n\t}\n\n\thandleChange(evt) {\n\t\tlet value = evt.target.value;\n\t\tif (this.charLimit !== -1 && value) {\n\t\t\tvalue = value.substring(0, this.charLimit);\n\t\t}\n\t\tif (this.isList) {\n\t\t\tvalue = ControlUtils.splitNewlines(value, arrayValueDelimiter);\n\t\t}\n\t\tif (value.length === 0 && (typeof this.defaultValue === \"undefined\" || this.defaultValue === null)) {\n\t\t\tvalue = null;\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\trender() {\n\t\tlet value = this.props.value ? this.props.value : \"\";\n\t\tlet truncated = false;\n\t\tif (this.isList) {\n\t\t\tconst joined = ControlUtils.joinNewlines(value, arrayValueDelimiter);\n\t\t\tvalue = joined.value;\n\t\t\ttruncated = joined.truncated;\n\t\t} else {\n\t\t\tvalue = ControlUtils.truncateDisplayValue(value);\n\t\t\ttruncated = value.length !== 0 && value.length !== this.props.value.length;\n\t\t}\n\t\tconst className = classNames(\"properties-textfield\", \"properties-input-control\", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null);\n\n\t\tlet textInput = null;\n\t\tif (truncated) {\n\t\t\tconst errorMessage = {\n\t\t\t\ttext: formatMessage(this.reactIntl, MESSAGE_KEYS.TRUNCATE_LONG_STRING_ERROR, { truncate_limit: TRUNCATE_LIMIT }),\n\t\t\t\ttype: CONDITION_MESSAGE_TYPE.ERROR,\n\t\t\t\tvalidation_id: this.props.control.name\n\t\t\t};\n\t\t\ttextInput = (<div className=\"properties-textinput-readonly\">\n\t\t\t\t{this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\t<ReadonlyControl\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\ttableControl={this.props.tableControl}\n\t\t\t\t/>\n\t\t\t\t// TODO this could conflict with the below ValidationMessage.\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={\"\"} messageInfo={errorMessage} />\n\t\t\t</div>);\n\t\t} else {\n\t\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\t\ttextInput = (<TextInput\n\t\t\t\t{...validationProps}\n\t\t\t\tautoComplete={this.props.tableControl === true ? \"off\" : \"on\"}\n\t\t\t\tid={this.id}\n\t\t\t\tdisabled={ this.props.state === STATES.DISABLED}\n\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\tvalue={value}\n\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t/>);\n\t\t}\n\n\t\tlet display = textInput;\n\t\tif (this.props.tableControl) {\n\t\t\tconst tooltipId = uuid4() + \"-tooltip-column-\" + this.props.propertyId.toString();\n\t\t\tlet disabled = true;\n\t\t\tif (value && this.props.state !== STATES.DISABLED) {\n\t\t\t\tdisabled = false;\n\t\t\t}\n\t\t\tconst tooltip = (\n\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t{String(value)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdisplay = (<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tdirection=\"bottom\"\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tdisable={disabled}\n\t\t\t>\n\t\t\t\t{textInput}\n\t\t\t</Tooltip>);\n\t\t}\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t{display}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTextfieldControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.element\n\t]), // list control passes string\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(TextfieldControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport Isvg from \"react-inlinesvg\";\n\nclass ToggletextControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.valuesMap = {};\n\t\tthis.iconsMap = {};\n\t\tfor (let i = 0; i < props.control.values.length; ++i) {\n\t\t\tthis.valuesMap[props.control.values[i]] = props.control.valueLabels[i];\n\t\t\tif (typeof props.control.valueIcons !== \"undefined\") {\n\t\t\t\tthis.iconsMap[props.control.values[i]] = props.control.valueIcons[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tonClick(evt) {\n\t\tconst renderValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst newValue = (renderValue === this.props.control.values[0]) ? this.props.control.values[1] : this.props.control.values[0];\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue);\n\n\t}\n\n\trenderIcon() {\n\t\tlet icon = null;\n\t\tif (typeof this.iconsMap[this.props.value] !== \"undefined\") {\n\t\t\tconst imgSource = this.iconsMap[this.props.value];\n\t\t\tif (typeof imgSource === \"string\" && imgSource.slice(imgSource.length - 4) === \".svg\") {\n\t\t\t\t// svg image\n\t\t\t\ticon = <Isvg className=\"bx--btn__icon\" src={imgSource} />;\n\t\t\t} else {\n\t\t\t\ticon = (<img\n\t\t\t\t\tclassName=\"bx--btn__icon\"\n\t\t\t\t\tsrc={imgSource}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>);\n\t\t\t}\n\t\t}\n\t\treturn icon;\n\t}\n\n\trender() {\n\t\tlet rendered = this.valuesMap[this.props.value];\n\t\tif (typeof rendered === \"undefined\") {\n\t\t\trendered = this.props.value;\n\t\t}\n\t\tlet button = null;\n\t\tconst buttonType = this.props.tableControl ? \"ghost\" : \"tertiary\";\n\t\tif (typeof rendered !== \"undefined\") {\n\t\t\tbutton = (\n\t\t\t\t<Button\n\t\t\t\t\tkind={buttonType}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonClick={this.onClick.bind(this)}\n\t\t\t\t\trenderIcon={this.renderIcon.bind(this)}\n\t\t\t\t\ticonDescription={formatMessage(this.reactIntl, MESSAGE_KEYS.TOGGLETEXT_ICON_DESCRIPTION, { toggletext_label: this.props.value })}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t>\n\t\t\t\t\t{rendered}\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\n\t\tconst className = classNames(\"properties-toggletext\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\taria-label={(this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\"}\n\t\t\t\tclassName={className}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\tdata-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t>\n\t\t\t\t{this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\t{button}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nToggletextControl.propTypes = {\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrol: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ToggletextControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { TextArea } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { CONDITION_MESSAGE_TYPE, MESSAGE_KEYS, TRUNCATE_LIMIT } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { v4 as uuid4 } from \"uuid\";\n\nconst newLine = \"\\n\";\n\nclass TextareaControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.charLimit = ControlUtils.getCharLimit(props.control, props.controller.getMaxLengthForMultiLineControls());\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t}\n\n\thandleChange(evt) {\n\t\tlet value = evt.target.value;\n\t\tif (this.charLimit !== -1 && value) {\n\t\t\tvalue = value.substring(0, this.charLimit);\n\t\t}\n\t\tif (this.props.control.valueDef && this.props.control.valueDef.isList) { // array\n\t\t\tvalue = ControlUtils.splitNewlines(value, newLine);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\trender() {\n\t\tlet value = this.props.value ? this.props.value : \"\";\n\t\tconst joined = ControlUtils.joinNewlines(value, newLine);\n\t\tvalue = joined.value;\n\t\tconst truncated = joined.truncated;\n\n\t\tlet textArea = null;\n\t\tlet validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\tlet showValidationMessage = false;\n\t\t// carbon textarea doesn't support warn yet\n\t\tif (validationProps.warn) {\n\t\t\tshowValidationMessage = true;\n\t\t\tvalidationProps = {};\n\t\t}\n\t\tif (truncated) { // A value is too long to show for editing, display as readonly\n\t\t\tconst errorMessage = {\n\t\t\t\ttext: formatMessage(this.reactIntl, MESSAGE_KEYS.TRUNCATE_LONG_STRING_ERROR, { truncate_limit: TRUNCATE_LIMIT }),\n\t\t\t\ttype: CONDITION_MESSAGE_TYPE.ERROR,\n\t\t\t\tvalidation_id: this.props.control.name\n\t\t\t};\n\t\t\tvalidationProps = ControlUtils.getValidationProps(errorMessage, this.props.tableControl);\n\t\t\ttextArea = (<div>\n\t\t\t\t<TextArea\n\t\t\t\t\t{...validationProps}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tdisabled\n\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t/>\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly={!showValidationMessage} state={\"\"} messageInfo={errorMessage} />\n\t\t\t</div>);\n\t\t} else {\n\t\t\ttextArea = (<TextArea\n\t\t\t\t{...validationProps}\n\t\t\t\tid={this.id}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\tvalue={value}\n\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t/>);\n\t\t}\n\n\t\tlet display = textArea;\n\t\tif (this.props.tableControl) {\n\t\t\tconst tooltipId = uuid4() + \"-tooltip-column-\" + this.props.propertyId.toString();\n\t\t\tlet disabled = true;\n\t\t\tif (value && this.props.state !== STATES.DISABLED) {\n\t\t\t\tdisabled = false;\n\t\t\t}\n\t\t\tconst tooltip = (\n\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t{String(value)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdisplay = (<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tdirection=\"bottom\"\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tdisable={disabled}\n\t\t\t>\n\t\t\t\t{textArea}\n\t\t\t</Tooltip>);\n\t\t}\n\t\tconst className = classNames(\"properties-textarea\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t{display}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly={!showValidationMessage} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nTextareaControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(TextareaControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { NumberInput, Button } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport { ControlType } from \"./../../constants/form-constants\";\nimport { Shuffle16 } from \"@carbon/icons-react\";\nimport { has } from \"lodash\";\n\nclass NumberfieldControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.onDirection = this.onDirection.bind(this);\n\t\tthis.generateNumber = this.generateNumber.bind(this);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t}\n\n\tonDirection(direction) {\n\t\tlet originalValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tif (typeof originalValue === \"undefined\" || originalValue === null) {\n\t\t\toriginalValue = 0;\n\t\t}\n\t\tconst decimalsInOriginalValue = (originalValue.toString()).split(\".\")[1];\n\t\tthis.props.control.increment = this.props.control.increment ? this.props.control.increment : 1;\n\t\tconst decimalsInIncrement = (this.props.control.increment.toString()).split(\".\")[1];\n\t\tconst numValue = direction === \"up\" ? Number(originalValue) + this.props.control.increment : Number(originalValue) - this.props.control.increment;\n\t\tif (decimalsInIncrement) {\n\t\t\tlet decimalPrecision = decimalsInIncrement.length;\n\t\t\tif (decimalsInOriginalValue) {\n\t\t\t\tdecimalPrecision = decimalsInOriginalValue.length >= decimalsInIncrement.length ? decimalsInOriginalValue.length : decimalsInIncrement.length;\n\t\t\t}\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, Number(numValue.toFixed(decimalPrecision)));\n\t\t} else {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, numValue);\n\t\t}\n\t}\n\n\thandleChange(evt, direction) {\n\t\tif (typeof direction === \"string\") {\n\t\t\tthis.onDirection(direction);\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tevt.target.validity && evt.target.validity.badInput ||\n\t\t\t(!isFinite(evt.target.value))\n\t\t) {\n\t\t\t// Note - When user enters an invalid number, evt.target.value is set to \"\".\n\t\t\t// It is difficult to differentiate between empty value and invalid input because both return \"\".\n\t\t\t// It's not possible to add a seaparte condition for invalid input because we never get the actual invalid number entered by the user.\n\t\t\t// So, setting error message for invalid input here instead of using conditions.\n\t\t\tif (this.props.controller.getErrorMessage(this.props.propertyId) === null) {\n\t\t\t\tconst errorMessage = {\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\ttext: formatMessage(this.reactIntl, MESSAGE_KEYS.INVALID_NUMBER_ERROR),\n\t\t\t\t\tpropertyId: this.props.propertyId,\n\t\t\t\t\tvalidation_id: \"invalid_number\"\n\t\t\t\t};\n\t\t\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, errorMessage);\n\t\t\t}\n\t\t\t// Return without updating property value\n\t\t\treturn;\n\t\t}\n\t\t// Number is valid, clear invalid number error if it exists\n\t\tconst invalidNumberError = this.props.controller.getErrorMessage(this.props.propertyId) !== null &&\n\t\tthis.props.controller.getErrorMessage(this.props.propertyId).validation_id === \"invalid_number\";\n\t\tif (invalidNumberError) {\n\t\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, null);\n\t\t}\n\n\t\tconst actualValue = evt.target.value;\n\t\tif (typeof actualValue === \"undefined\" || actualValue === null || actualValue === \"\") {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, null);\n\t\t} else {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, Number(actualValue));\n\t\t}\n\t\t// TODO need to check for integer in validations\n\t}\n\n\tgenerateNumber() {\n\t\tconst generator = this.props.control.label.numberGenerator;\n\t\tconst min = generator.range && generator.range.min ? generator.range.min : 10000;\n\t\tconst max = generator.range && generator.range.max ? generator.range.max : 99999;\n\t\tconst newValue = Math.floor(Math.random() * (max - min + 1) + min);\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue);\n\t}\n\n\trender() {\n\t\tlet controlValue = \"\"; // Default to empty string to avoid '0' appearing when value is 'null'\n\t\tif (this.props.value !== null && typeof this.props.value !== \"undefined\") {\n\t\t\tcontrolValue = this.props.value;\n\t\t}\n\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\t\tconst hidden = this.props.state === STATES.HIDDEN;\n\t\tlet numberGenerator;\n\t\tif (has(this.props.control, \"label.numberGenerator\")) {\n\t\t\tnumberGenerator = (<Button\n\t\t\t\tclassName={classNames(\"properties-number-generator\", { \"hide\": hidden })}\n\t\t\t\tonClick={this.generateNumber}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tkind=\"tertiary\"\n\t\t\t\trenderIcon={Shuffle16}\n\t\t\t\ttooltipPosition=\"bottom\"\n\t\t\t\ttooltipAlignment=\"end\"\n\t\t\t\ticonDescription={this.props.control.label.numberGenerator.text}\n\t\t\t\thasIconOnly\n\t\t\t/>);\n\t\t}\n\t\tconst className = classNames(\n\t\t\t\"properties-numberfield\",\n\t\t\t{ \"numberfield-with-number-generator\": has(this.props.control, \"label.numberGenerator\") ? this.props.control.label.numberGenerator : null },\n\t\t\t{ \"hide\": hidden },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null\n\t\t);\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t<NumberInput\n\t\t\t\t\t{...validationProps}\n\t\t\t\t\tref= { (ref) => (this.numberInput = ref)}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tstep={this.props.control.increment}\n\t\t\t\t\tvalue={controlValue}\n\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\tlabel={this.props.controlItem}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\tallowEmpty\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t\thideSteppers={this.props.tableControl || (this.props.control.controlType === ControlType.NUMBERFIELD)}\n\t\t\t\t/>\n\t\t\t\t{numberGenerator}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nNumberfieldControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.element\n\t]), // list control passes string\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.number, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(NumberfieldControl);\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Base class for table controls\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Toolbar from \"../../../toolbar/toolbar\";\n\nimport { STATES } from \"./../../constants/constants\";\n\nclass TableButtons extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getCustomButtonEnabled = this.getCustomButtonEnabled.bind(this);\n\t\tthis.customButtonIconCallback = this.customButtonIconCallback.bind(this);\n\t\tthis.customButtonOnClick = this.customButtonOnClick.bind(this);\n\t\tthis.convertToolbarConfig = this.convertToolbarConfig.bind(this);\n\t}\n\n\tgetCustomButtonEnabled(tableState, buttonConfig) {\n\t\tconst tableDisabled = typeof tableState !== \"undefined\" && tableState === STATES.DISABLED;\n\t\tconst buttonEnabled = this.props.customButtonsState && typeof this.props.customButtonsState[buttonConfig.id] !== \"undefined\"\n\t\t\t? this.props.customButtonsState[buttonConfig.id] // set to true in redux if enabled, override the default from uihints\n\t\t\t: buttonConfig.enabled || false; // fallback to default value\n\t\treturn !tableDisabled && buttonEnabled;\n\t}\n\n\tcustomButtonIconCallback(buttonId, carbonIcon) {\n\t\tconst buttonIconHandler = this.props.controller.getHandlers().buttonIconHandler;\n\t\tlet icon;\n\t\tif (buttonIconHandler) {\n\t\t\tbuttonIconHandler({\n\t\t\t\ttype: \"customButtonIcon\",\n\t\t\t\tpropertyId: this.props.propertyId,\n\t\t\t\tbuttonId: buttonId,\n\t\t\t\tcarbonIcon: carbonIcon\n\t\t\t}, (appIcon) => {\n\t\t\t\ticon = appIcon;\n\t\t\t});\n\t\t}\n\t\treturn icon;\n\t}\n\n\tcustomButtonOnClick(buttonId) {\n\t\tconst buttonHandler = this.props.controller.getHandlers().buttonHandler;\n\t\tif (buttonHandler) {\n\t\t\tbuttonHandler({\n\t\t\t\ttype: \"custom_button\",\n\t\t\t\tpropertyId: this.props.propertyId,\n\t\t\t\tbuttonId: buttonId\n\t\t\t});\n\t\t}\n\t}\n\n\tconvertToolbarConfig(tableState, customButtons = []) {\n\t\tconst toolbarConfig = [];\n\t\tcustomButtons.forEach((buttonConfig) => {\n\t\t\tconst buttonEnabled = this.getCustomButtonEnabled(tableState, buttonConfig);\n\t\t\tconst buttonDef = {\n\t\t\t\taction: buttonConfig.id,\n\t\t\t\tenable: buttonEnabled\n\t\t\t};\n\n\t\t\tif (buttonConfig.icon) {\n\t\t\t\tbuttonDef.iconEnabled = buttonConfig.icon;\n\t\t\t} else if (buttonConfig.carbonIcon) {\n\t\t\t\tbuttonDef.iconEnabled = this.customButtonIconCallback(buttonConfig.id, buttonConfig.carbonIcon);\n\t\t\t}\n\n\t\t\tif (buttonConfig.label) {\n\t\t\t\tbuttonDef.label = buttonConfig.label.text;\n\t\t\t\tbuttonDef.incLabelWithIcon = \"before\";\n\t\t\t\tbuttonDef.kind = \"ghost\";\n\t\t\t}\n\n\t\t\tif (buttonConfig.description) {\n\t\t\t\tbuttonDef.tooltip = buttonConfig.description.text;\n\t\t\t}\n\n\t\t\tif (buttonConfig.divider && buttonConfig.divider === \"before\") {\n\t\t\t\ttoolbarConfig.push({ divider: true });\n\t\t\t}\n\t\t\ttoolbarConfig.push(buttonDef);\n\t\t\tif (buttonConfig.divider && buttonConfig.divider === \"after\") {\n\t\t\t\ttoolbarConfig.push({ divider: true });\n\t\t\t}\n\t\t});\n\t\treturn toolbarConfig;\n\t}\n\n\trender() {\n\t\tconst toolbarConfig = {\n\t\t\tleftBar: this.convertToolbarConfig(this.props.tableState, this.props.customButtons)\n\t\t};\n\t\treturn (<div className=\"properties-custom-table-buttons\">\n\t\t\t<Toolbar\n\t\t\t\tconfig={toolbarConfig}\n\t\t\t\tinstanceId={0}\n\t\t\t\tsize=\"sm\"\n\t\t\t\ttoolbarActionHandler={this.customButtonOnClick}\n\t\t\t/>\n\t\t</div>);\n\t}\n}\n\nTableButtons.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcustomButtons: PropTypes.array.isRequired,\n\ttableState: PropTypes.string,\n\tcustomButtonsState: PropTypes.object // set in by redux\n};\n\nexport default TableButtons;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"carbon-components-react\";\nimport { Settings16 } from \"@carbon/icons-react\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { cloneDeep } from \"lodash\";\n\nimport { MESSAGE_KEYS } from \"./../../constants/constants\";\n\n\nimport SubPanelInvoker from \"./invoker.jsx\";\n\nexport default class SubPanelCell extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.showSubPanel = this.showSubPanel.bind(this);\n\t\tthis.onSubPanelHidden = this.onSubPanelHidden.bind(this);\n\t}\n\n\tonSubPanelHidden(applyChanges) {\n\t\t// on cancel reset back to original value\n\t\tif (!applyChanges) {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, this.initialControlValue);\n\t\t\tthis.props.controller.setErrorMessages(this.initialMessages);\n\t\t\tthis.props.controller.setControlStates(this.initialStates);\n\t\t}\n\t}\n\n\tshowSubPanel() {\n\t\t// sets the current value for parameter.  Used on cancel\n\t\tthis.initialControlValue = cloneDeep(this.props.controller.getPropertyValue(this.props.propertyId));\n\t\tthis.initialMessages = this.props.controller.getAllErrorMessages();\n\t\tthis.initialStates = this.props.controller.getControlStates();\n\t\tthis.subPanelInvoker.showSubDialog(this.props.title, this.props.panel, this.onSubPanelHidden);\n\t}\n\n\trender() {\n\t\tconst tooltipId = \"tooltip-subpanel-cell\";\n\t\tconst disabled = typeof this.props.disabled !== \"undefined\" ? this.props.disabled : false;\n\t\tconst subPanelToolTip = formatMessage(this.props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.SUBPANEL_BUTTON_TOOLTIP);\n\t\tconst applyLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.APPLYBUTTON_LABEL);\n\t\tconst rejectLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.REJECTBUTTON_LABEL);\n\t\treturn (\n\n\t\t\t<SubPanelInvoker ref={ (ref) => (this.subPanelInvoker = ref) }\n\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t>\n\t\t\t\t<Tooltip\n\t\t\t\t\tid={uuid4() + \"-\" + tooltipId}\n\t\t\t\t\ttip={subPanelToolTip}\n\t\t\t\t\tdirection=\"left\"\n\t\t\t\t\tclassName=\"properties-tooltips icon-tooltip\"\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"properties-subpanel-button\"\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\trenderIcon={Settings16}\n\t\t\t\t\t\tonClick={this.showSubPanel}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\ticonDescription={subPanelToolTip}\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t</SubPanelInvoker>\n\t\t);\n\t}\n}\n\nSubPanelCell.propTypes = {\n\tlabel: PropTypes.string,\n\ttitle: PropTypes.string,\n\tpanel: PropTypes.object.isRequired,\n\tdisabled: PropTypes.bool,\n\tcontroller: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object,\n\trightFlyout: PropTypes.bool\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Base class for table controls\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Checkbox } from \"carbon-components-react\";\nimport FlexibleTable from \"./../components/flexible-table\";\nimport TableButtons from \"./../components/table-buttons\";\nimport SubPanelCell from \"./../panels/sub-panel/cell.jsx\";\nimport ReadonlyControl from \"./readonly\";\nimport * as PropertyUtils from \"./../util/property-utils\";\nimport classNames from \"classnames\";\nimport { Add16, TrashCan16, Edit16 } from \"@carbon/icons-react\";\nimport { ControlType, EditStyle } from \"./../constants/form-constants\";\n\nimport { MESSAGE_KEYS, STATES, TABLE_SUBPANEL_BUTTON_WIDTH, SORT_DIRECTION, ROW_SELECTION, UPDATE_TYPE } from \"./../constants/constants\";\n\nimport { isEqual, findIndex, sortBy, cloneDeep } from \"lodash\";\n\n/* eslint max-depth: [\"error\", 5] */\n\nexport default class AbstractTable extends React.Component {\n\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tconst enableRemoveIcon = (nextProps.selectedRows.length !== 0);\n\t\tif (prevState.enableRemoveIcon !== enableRemoveIcon) {\n\t\t\treturn ({ enableRemoveIcon: enableRemoveIcon });\n\t\t}\n\t\treturn ({});\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfilterText: null,\n\t\t\tenableRemoveIcon: false\n\t\t};\n\t\tthis.onPanelContainer = [];\n\t\t// used to determine if column controls can be inline or if field picker is used\n\t\tthis.allowColumnControls = false;\n\n\t\tthis.isReadonlyTable = this.isReadonlyTable.bind(this);\n\t\tthis.indexOfColumn = this.indexOfColumn.bind(this);\n\t\tthis.setCurrentControlValueSelected = this.setCurrentControlValueSelected.bind(this);\n\t\tthis.setReadOnlyColumnValue = this.setReadOnlyColumnValue.bind(this);\n\t\tthis.removeSelected = this.removeSelected.bind(this);\n\t\tthis.updateRowSelections = this.updateRowSelections.bind(this);\n\t\tthis.handleRowClick = this.handleRowClick.bind(this);\n\t\tthis.createTable = this.createTable.bind(this);\n\t\tthis.onFilter = this.onFilter.bind(this);\n\t\tthis.onSort = this.onSort.bind(this);\n\t\tthis.setScrollToRow = this.setScrollToRow.bind(this);\n\t\tthis.includeInFilter = this.includeInFilter.bind(this);\n\t\tthis.makeAddRemoveButtonPanel = this.makeAddRemoveButtonPanel.bind(this);\n\t\tthis.makeEditButtonPanel = this.makeEditButtonPanel.bind(this);\n\t\tthis.makeCustomButtonsPanel = this.makeCustomButtonsPanel.bind(this);\n\t\tthis.buildChildItem = this.buildChildItem.bind(this);\n\t\tthis.makeCells = this.makeCells.bind(this);\n\t\tthis.checkedAll = this.checkedAll.bind(this);\n\t\tthis.isLightTheme = this.isLightTheme.bind(this);\n\n\t\tif (props.selectedRows && props.selectedRows.length > 0) {\n\t\t\tthis.scrollToRow = props.selectedRows[props.selectedRows.length - 1];\n\t\t}\n\n\t\tthis.selectSummaryPropertyName = \"table-multi-select-edit-property-\" + props.control.name;\n\t\tprops.controller.saveControls([{ name: this.selectSummaryPropertyName }]);\n\t\tthis.setSelectedSummaryRowValue(props.selectedRows);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.control.subControls) {\n\t\t\tconst updatedControlValues = this.setReadOnlyColumnValue();\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, updatedControlValues, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.isSelectSummaryEdit(this.props.selectedRows)) {\n\t\t\tthis.updateSelectedRowsValues();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.controller.removePropertyValue({ name: this.selectSummaryPropertyName });\n\t}\n\n\tonFilter(filterString) {\n\t\tthis.setState({ filterText: filterString });\n\t}\n\n\tonSort(spec) {\n\t\tlet controlValue = this.props.value;\n\t\tlet col = -1;\n\t\tfor (var colIndex = 0; colIndex < this.props.control.subControls.length; colIndex++) {\n\t\t\tif (this.props.control.subControls[colIndex].name === spec.column) {\n\t\t\t\tcol = colIndex;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (col > -1) {\n\t\t\tcontrolValue = sortBy(controlValue, function(row) {\n\t\t\t\treturn row[col];\n\t\t\t});\n\t\t\tif (spec.direction === SORT_DIRECTION.DESC) {\n\t\t\t\tcontrolValue.reverse();\n\t\t\t}\n\t\t\tthis.setCurrentControlValueSelected(controlValue, []);\n\t\t}\n\t}\n\n\tgetOnPanelContainer(selectedRows) {\n\t\tif (this.onPanelContainer.length === 0 || selectedRows.length === 0 ||\n\t\t\tthis.isSelectSummaryEdit(selectedRows)) {\n\t\t\treturn (<div />);\n\t\t}\n\n\t\treturn (<div className=\"properties-onpanel-container\">{this.onPanelContainer[selectedRows[0]]}</div>);\n\t}\n\n\tgetDefaultRow() {\n\t\tconst row = [];\n\t\tif (this.props.control.defaultRow) {\n\t\t\tfor (const colValue of this.props.control.defaultRow) {\n\t\t\t\tif (typeof colValue !== \"undefined\" && colValue !== null && colValue.parameterRef) {\n\t\t\t\t\trow.push(this.props.controller.getPropertyValue({ name: colValue.parameterRef }));\n\t\t\t\t} else {\n\t\t\t\t\trow.push(colValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn row;\n\t}\n\n\tsetScrollToRow(row) {\n\t\tthis.scrollToRow = row;\n\t}\n\n\tsetCurrentControlValueSelected(controlValue, inSelectedRows) {\n\t\tlet updatedControlValues = controlValue;\n\t\tif (this.props.control.subControls) {\n\t\t\tupdatedControlValues = this.setReadOnlyColumnValue(controlValue);\n\t\t}\n\n\t\t// Here we convert any compound field strings into compound values for storage\n\t\tif (Array.isArray(updatedControlValues)) {\n\t\t\tfor (let idx = 0; idx < updatedControlValues.length; idx++) {\n\t\t\t\tconst value = updatedControlValues[idx];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (let idx2 = 0; idx2 < this.props.control.subControls.length; idx2++) {\n\t\t\t\t\t\tconst subControl = this.props.control.subControls[idx2];\n\t\t\t\t\t\tif (subControl.role === \"column\" && subControl.valueDef.propType === \"structure\") {\n\t\t\t\t\t\t\tupdatedControlValues[idx][idx2] = PropertyUtils.fieldStringToValue(\n\t\t\t\t\t\t\t\tvalue[idx2], subControl, this.props.controller);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (this.props.control.role === \"column\" && this.props.control.valueDef.propType === \"structure\") {\n\t\t\t\t\tupdatedControlValues[idx] = PropertyUtils.fieldStringToValue(\n\t\t\t\t\t\tvalue, this.props.control, this.props.controller);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update the property value\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, updatedControlValues);\n\t\tconst selectedRows = Array.isArray(inSelectedRows) ? inSelectedRows : [];\n\t\tthis.updateRowSelections(selectedRows);\n\t}\n\n\tsetReadOnlyColumnValue(controlValue) {\n\t\tconst controlValues = controlValue ? controlValue : this.props.value;\n\t\tif (!Array.isArray(controlValues)) {\n\t\t\treturn controlValues;\n\t\t}\n\t\tfor (var rowIndex = 0; rowIndex < controlValues.length; rowIndex++) {\n\t\t\tfor (var colIndex = 0; colIndex < this.props.control.subControls.length; colIndex++) {\n\t\t\t\tconst columnDef = this.props.control.subControls[colIndex];\n\t\t\t\tif (columnDef.controlType === ControlType.READONLY && columnDef.generatedValues && columnDef.generatedValues.operation === \"index\") {\n\t\t\t\t\tconst index = typeof columnDef.generatedValues.startValue !== \"undefined\" ? columnDef.generatedValues.startValue + rowIndex : rowIndex + 1;\n\t\t\t\t\tcontrolValues[rowIndex][colIndex] = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn controlValues;\n\t}\n\n\t// This will set the select summary row values either from the property value or the default values.\n\tsetSelectedSummaryRowValue(selection) {\n\t\tif (this.isSelectSummaryEdit(selection)) {\n\t\t\tconst summaryPropertyId = {\n\t\t\t\tname: this.selectSummaryPropertyName\n\t\t\t};\n\t\t\tlet value = this.props.controller.getPropertyValue(summaryPropertyId);\n\t\t\tif (!value) {\n\t\t\t\tvalue = [this.getDefaultRow()];\n\t\t\t\tthis.props.controller.updatePropertyValue(summaryPropertyId, value, true);\n\t\t\t}\n\t\t\tthis.selectedSummaryRowValue = cloneDeep(value);\n\t\t}\n\t}\n\n\tisSelectSummaryEdit(selectedRows) {\n\t\treturn (this.props.control.rowSelection === ROW_SELECTION.MULTIPLE && selectedRows.length > 1);\n\t}\n\n\tisReadonlyTable() {\n\t\treturn this.props.control.controlType === ControlType.READONLYTABLE;\n\t}\n\n\tindexOfColumn(controlId) {\n\t\treturn findIndex(this.props.control.subControls, function(columnControl) {\n\t\t\treturn columnControl.name === controlId;\n\t\t});\n\t}\n\n\thandleRowClick(rowIndex, evt) {\n\t\tlet selectedRows = this.props.selectedRows;\n\t\tif (this.props.control.rowSelection === ROW_SELECTION.SINGLE) {\n\t\t\tselectedRows = [rowIndex];\n\t\t} else if (evt.metaKey === true || evt.ctrlKey === true) {\n\t\t\t// If already selected then remove otherwise add\n\t\t\tconst index = selectedRows.indexOf(rowIndex);\n\t\t\tif (index >= 0) {\n\t\t\t\tselectedRows.splice(index, 1);\n\t\t\t} else {\n\t\t\t\tselectedRows = selectedRows.concat(rowIndex);\n\t\t\t}\n\t\t} else if (evt.shiftKey === true) {\n\t\t\tconst anchor = selectedRows.length > 0 ? selectedRows[0] : rowIndex;\n\t\t\tconst start = anchor > rowIndex ? rowIndex : anchor;\n\t\t\tconst end = (anchor > rowIndex ? anchor : rowIndex) + 1;\n\t\t\tconst newSelns = [];\n\t\t\tfor (let i = start; i < end; i++) {\n\t\t\t\tnewSelns.push(i);\n\t\t\t}\n\t\t\tselectedRows = newSelns;\n\t\t}\n\t\tthis.updateRowSelections(selectedRows);\n\t}\n\n\t// this will got through all selected rows and update any column value in the row with the\n\t// column value in the selected summary row that has changed.\n\tupdateSelectedRowsValues() {\n\t\tconst summaryPropertyId = {\n\t\t\tname: this.selectSummaryPropertyName\n\t\t};\n\t\tconst tableControl = this.props.controller.getControl({ name: this.props.control.name });\n\t\tconst newSelectedSummaryRow = this.props.controller.getPropertyValue(summaryPropertyId);\n\t\tif (newSelectedSummaryRow && Array.isArray(newSelectedSummaryRow)) {\n\t\t\tnewSelectedSummaryRow[0].forEach((cellValue, colIndex) => {\n\t\t\t\tif (cellValue !== null && !isEqual(cellValue, this.selectedSummaryRowValue[0][colIndex])) {\n\t\t\t\t\t// if a column does not have a value, the default value is null and the value returned\n\t\t\t\t\t// from getPropertyValue is undefined causing unneccessary updates and an infinite loop during intialization\n\t\t\t\t\tconst testCell = (typeof cellValue === \"undefined\") ? null : cellValue;\n\t\t\t\t\tthis.props.selectedRows.forEach((rowIndex) => {\n\t\t\t\t\t\tthis.props.controller.updatePropertyValue({ name: this.props.control.name, row: rowIndex, col: colIndex }, testCell, true);\n\t\t\t\t\t});\n\t\t\t\t\tif (tableControl.subControls[colIndex].controlType === ControlType.ONEOFSELECT) {\n\t\t\t\t\t\tthis.props.controller.updatePropertyValue({ name: this.selectSummaryPropertyName, row: 0, col: colIndex }, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.selectedSummaryRowValue = cloneDeep(newSelectedSummaryRow);\n\t\t}\n\t}\n\n\tupdateRowSelections(selection) {\n\t\tthis.props.controller.updateSelectedRows(this.props.propertyId, selection);\n\t\t// react throws warning when modal because the button does not exist at this moment\n\t\tif (this.props.rightFlyout) {\n\t\t\tthis.setState({ enableRemoveIcon: (selection.length !== 0) });\n\t\t}\n\t\tthis.setSelectedSummaryRowValue(selection);\n\t}\n\n\tremoveSelected() {\n\t\tconst rows = this.props.value;\n\t\t// Sort descending to ensure lower indices don\"t get\n\t\t// changed when values are deleted\n\t\tconst selected = this.props.selectedRows.sort(function(a, b) {\n\t\t\treturn b - a;\n\t\t});\n\t\tfor (let i = 0; i < selected.length; i++) {\n\t\t\trows.splice(selected[i], 1);\n\t\t\t// this will remove any error messages associate with row.\n\t\t\tthis.props.controller.removeErrorMessageRow({ name: this.props.propertyId.name, row: selected[i] });\n\t\t}\n\n\t\tthis.setCurrentControlValueSelected(rows);\n\t}\n\n\t// selectSummaryRow is true if creating the makeSelectedEditRow header row\n\t_makeCell(columnDef, controlValue, propertyName, rowIndex, colIndex, tableState, selectSummaryRow) {\n\t\tconst childPropertyId = {\n\t\t\tname: propertyName,\n\t\t\trow: rowIndex,\n\t\t\tcol: colIndex\n\t\t};\n\n\t\tconst parentPropertyId = cloneDeep(this.props.propertyId);\n\t\tlet propertyId = childPropertyId;\n\t\t// Do not use parentPropertyId if creating the makeSelectedEditRow\n\t\tif (!selectSummaryRow && parentPropertyId.name !== childPropertyId.name) {\n\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, childPropertyId);\n\t\t}\n\n\t\tconst tableInfo = { table: true, allowColumnControls: this.allowColumnControls };\n\t\tconst ControlFactory = this.props.controller.getControlFactory();\n\t\tlet cellContent;\n\t\tconst columnDefObj = Object.assign({}, columnDef); // clone columnDef\n\t\tconst cellClassName = columnDefObj.className ? columnDefObj.className : \"\";\n\t\tif (columnDef.dmImage) {\n\t\t\tconst fields = this.props.controller.getDatasetMetadataFields();\n\t\t\tconst stringValue = PropertyUtils.stringifyFieldValue(this.props.controller.getPropertyValue(propertyId), columnDef, true);\n\t\t\tcolumnDefObj.icon = PropertyUtils.getDMFieldIcon(fields,\n\t\t\t\tstringValue, columnDef.dmImage);\n\t\t}\n\t\tif (this.isReadonlyTable()) {\n\t\t\tcellContent = (<div className={classNames(\"properties-table-cell-control\", cellClassName)}>\n\t\t\t\t<ReadonlyControl\n\t\t\t\t\tcontrol={this.props.controller.getControl(propertyId)}\n\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\ttableControl\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t} else if (columnDef.editStyle === EditStyle.SUBPANEL || columnDef.editStyle === EditStyle.ON_PANEL) {\n\t\t\tif (selectSummaryRow) {\n\t\t\t\tcellContent = <div />;\n\t\t\t} else {\n\t\t\t\tcellContent = (<div className={classNames(\"properties-table-cell-control\", cellClassName)}>\n\t\t\t\t\t<ReadonlyControl\n\t\t\t\t\t\tcontrol={this.props.controller.getControl(propertyId)}\n\t\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\ttableControl\n\t\t\t\t\t/>\n\t\t\t\t</div>);\n\t\t\t\tif (columnDef.editStyle === EditStyle.ON_PANEL) {\n\t\t\t\t// save the cell content in an object\n\t\t\t\t\tthis.onPanelContainer[rowIndex].push(<div key={colIndex}><br />{ControlFactory.createControlItem(columnDef, propertyId)}</div>);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // defaults to inline control\n\t\t\ttableInfo.editStyle = EditStyle.INLINE;\n\t\t\tcellContent = (<div className={classNames(\"properties-table-cell-control\", cellClassName)}>\n\t\t\t\t{ControlFactory.createControl(columnDefObj, propertyId, tableInfo)}\n\t\t\t</div>);\n\n\t\t}\n\t\treturn {\n\t\t\tcolumn: columnDef.name,\n\t\t\twidth: columnDef.width,\n\t\t\tcontent: cellContent,\n\t\t\tclassName: cellClassName,\n\t\t\tvalue: this.props.controller.getPropertyValue(propertyId),\n\t\t\tresizable: columnDef.resizable\n\t\t};\n\t}\n\t_getCustomCtrlContent(propertyId, columnDef, defaultContent, tableInfo) {\n\t\tlet cellContent = defaultContent;\n\t\t// allow the custom control to set the cell content\n\t\tif (columnDef.controlType === ControlType.CUSTOM) {\n\t\t\ttableInfo.editStyle = \"summary\";\n\t\t\tcellContent = this.props.controller.getCustomControl(propertyId, columnDef, tableInfo);\n\t\t}\n\t\treturn cellContent;\n\t}\n\n\t_getDisabledStatus(cellPropertyId, tableState) {\n\t\tif (typeof tableState !== \"undefined\" && tableState === STATES.DISABLED) {\n\t\t\treturn true;\n\t\t}\n\t\tconst cellState = this.props.controller.getControlState(cellPropertyId);\n\t\treturn cellState === STATES.DISABLED;\n\t}\n\n\t/**\n\t * Returns true if the given row should be included\n\t * in the current filter output.\n\t */\n\tincludeInFilter(rowIndex) {\n\t\t// If no search text, include all\n\t\tif (!this.state.filterText || this.state.filterText.length === 0) {\n\t\t\treturn true;\n\t\t}\n\t\tconst controlValue = this.props.value;\n\t\tfor (let i = 0; i < this.filterFields.length; i++) {\n\t\t\tfor (var colIndex = 0; colIndex < this.props.control.subControls.length; colIndex++) {\n\t\t\t\tconst columnDef = this.props.control.subControls[colIndex];\n\t\t\t\tif (columnDef.name === this.filterFields[i]) {\n\t\t\t\t\tconst value = controlValue[rowIndex][colIndex];\n\t\t\t\t\tif (typeof value === \"string\" && value.toLowerCase().indexOf(this.state.filterText.toLowerCase()) > -1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\thasFilter() {\n\t\tlet hasFilter = false;\n\t\tif (this.props.control.subControls) {\n\t\t\tfor (const subControl of this.props.control.subControls) {\n\t\t\t\tif (subControl.filterable) {\n\t\t\t\t\thasFilter = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn hasFilter;\n\t}\n\n\taddOnClick(propertyId) {\n\t\tif (this.addOnClickCallback) {\n\t\t\tthis.addOnClickCallback(propertyId, this.onFieldPickerCloseCallback);\n\t\t}\n\t}\n\n\tisLightTheme() {\n\t\treturn this.props.controller.getLight() && this.props.control.light;\n\t}\n\n\tmakeSelectedEditRow(selectedRows) {\n\t\tif (selectedRows && Array.isArray(selectedRows) && selectedRows.length > 1) {\n\t\t\tconst rowsSelectedLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.MULTI_SELECTED_ROW_LABEL);\n\t\t\tconst rowsSelectedAction = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.MULTI_SELECTED_ROW_ACTION);\n\t\t\tconst title = selectedRows.length + \" \" + rowsSelectedLabel + \" \" + rowsSelectedAction;\n\t\t\tconst rows = [];\n\t\t\tconst sortFields = [];\n\t\t\tconst filterFields = [];\n\t\t\tconst headers = (this.props.control.header === false) ? [] : this.makeHeader(sortFields, filterFields);\n\t\t\tconst showHeader = false;\n\t\t\tconst value = this.props.controller.getPropertyValue({ name: this.selectSummaryPropertyName });\n\t\t\tthis.makeCells(rows, value, null, this.selectSummaryPropertyName, true);\n\t\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\t\t\treturn (<div className=\"properties-at-selectedEditRows\" >\n\t\t\t\t<div className=\"properties-selectedEditRows-title\" >\n\t\t\t\t\t<span >{title}</span>\n\t\t\t\t</div>\n\t\t\t\t<FlexibleTable\n\t\t\t\t\tshowHeader={showHeader}\n\t\t\t\t\tcolumns={headers}\n\t\t\t\t\tdata={rows}\n\t\t\t\t\trows={0}\n\t\t\t\t\tscrollKey={this.selectSummaryPropertyName}\n\t\t\t\t\ttableLabel={tableLabel}\n\t\t\t\t\tsummaryTable\n\t\t\t\t\trowSelection={ROW_SELECTION.MULTIPLE}\n\t\t\t\t\tlight={this.isLightTheme()}\n\t\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t}\n\t\treturn null;\n\t}\n\n\tmakeAddRemoveButtonPanel(tableState, tableButtonConfig) {\n\t\tthis.onFieldPickerCloseCallback = (tableButtonConfig && tableButtonConfig.fieldPickerCloseFunction)\n\t\t\t? tableButtonConfig.fieldPickerCloseFunction.bind(this)\n\t\t\t: null;\n\n\t\tconst removeOnClick = (tableButtonConfig && tableButtonConfig.removeButtonFunction)\n\t\t\t? tableButtonConfig.removeButtonFunction\n\t\t\t: this.removeSelected;\n\t\tconst removeButtonLabel = (tableButtonConfig && tableButtonConfig.removeButtonLabel) ? tableButtonConfig.removeButtonLabel\n\t\t\t: PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.STRUCTURETABLE_REMOVEBUTTON_LABEL);\n\t\tconst removeDisabled = !this.state.enableRemoveIcon || tableState === STATES.DISABLED;\n\n\n\t\tlet addButtonDisabled = false;\n\t\tthis.addOnClickCallback = (tableButtonConfig && tableButtonConfig.addButtonFunction)\n\t\t\t? tableButtonConfig.addButtonFunction\n\t\t\t: this.props.openFieldPicker;\n\t\tconst addButtonLabel = (tableButtonConfig && tableButtonConfig.addButtonLabel) ? tableButtonConfig.addButtonLabel\n\t\t\t: PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.STRUCTURETABLE_ADDBUTTON_LABEL);\n\t\tif (tableState === STATES.DISABLED) {\n\t\t\taddButtonDisabled = true;\n\t\t\tthis.addOnClickCallback = null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"properties-at-buttons-container\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"properties-remove-fields-button\"\n\t\t\t\t\tdisabled={removeDisabled}\n\t\t\t\t\tonClick={removeOnClick}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={TrashCan16}\n\t\t\t\t>\n\t\t\t\t\t{removeButtonLabel}\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"properties-add-fields-button\"\n\t\t\t\t\tdisabled={addButtonDisabled}\n\t\t\t\t\tonClick={this.addOnClick.bind(this, this.props.propertyId)}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={Add16}\n\t\t\t\t>\n\t\t\t\t\t{addButtonLabel}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tmakeEditButtonPanel(tableState, tableButtonConfig) {\n\t\tlet editButton = null;\n\n\t\tif (tableButtonConfig && tableButtonConfig.editCallback) {\n\t\t\tthis.editOnClickCallback = tableButtonConfig.editCallback;\n\t\t\teditButton = (<div className=\"properties-at-buttons-container\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"properties-edit-button\"\n\t\t\t\t\tonClick={this.editOnClick.bind(this, this.props.propertyId)}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={Edit16}\n\t\t\t\t>\n\t\t\t\t\t{tableButtonConfig.label}\n\t\t\t\t</Button>\n\t\t\t</div>);\n\t\t}\n\n\t\treturn editButton;\n\t}\n\n\tmakeCustomButtonsPanel(tableState, customButtons) {\n\t\tlet customTableButtons = null;\n\t\tif (customButtons) {\n\t\t\tcustomTableButtons = (<div className=\"properties-at-buttons-container\">\n\t\t\t\t<TableButtons\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\ttableState={tableState}\n\t\t\t\t\tcustomButtons={customButtons}\n\t\t\t\t\tcustomButtonsState={this.props.tableButtons}\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t}\n\t\treturn customTableButtons;\n\t}\n\n\teditOnClick(propertyId) {\n\t\tif (this.editOnClickCallback) {\n\t\t\tthis.editOnClickCallback(propertyId);\n\t\t}\n\t}\n\n\tcheckedAllValue(colIndex, checked) {\n\t\tconst controlValue = this.props.value;\n\t\tif (Array.isArray(controlValue)) {\n\t\t\tfor (let i = 0; i < controlValue.length; i++) {\n\t\t\t\tconst propertyId = {\n\t\t\t\t\tname: this.props.control.name,\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: colIndex\n\t\t\t\t};\n\t\t\t\tif (this.props.controller.getControlState(propertyId) !== STATES.DISABLED) {\n\t\t\t\t\tthis.props.controller.updatePropertyValue(propertyId, checked);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.checkedAll[colIndex] = checked;\n\t\t}\n\t}\n\n\tcheckedAll(colIndex) {\n\t\tconst controlValue = this.props.value;\n\t\tif (Array.isArray(controlValue)) {\n\t\t\tif (controlValue.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0; i < controlValue.length; i++) {\n\t\t\t\tconst propertyId = {\n\t\t\t\t\tname: this.props.control.name,\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: colIndex\n\t\t\t\t};\n\t\t\t\tif (this.props.controller.getControlState(propertyId) !== STATES.DISABLED) {\n\t\t\t\t\tif (!controlValue[i][colIndex]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tdisabledAll(colIndex) {\n\t\tconst controlValue = this.props.value;\n\t\tif (Array.isArray(controlValue)) {\n\t\t\tif (controlValue.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (const rowValue of controlValue) {\n\t\t\t\tif (rowValue[colIndex] === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateTable(tableState, tableButtonConfig, customButtons) {\n\t\tconst rows = [];\n\t\tconst sortFields = [];\n\t\tconst filterFields = [];\n\t\tthis.filterFields = filterFields;\n\n\t\tconst headers = this.makeHeader(sortFields, filterFields);\n\t\tconst showHeader = this.props.control.header !== false;\n\n\t\tconst controlValue = this.props.value;\n\t\tthis.makeCells(rows, controlValue, tableState);\n\n\t\tconst selectedEditRow = this.props.control.rowSelection === ROW_SELECTION.MULTIPLE\n\t\t\t? this.makeSelectedEditRow(this.props.selectedRows)\n\t\t\t: null;\n\t\tlet topRightPanel = null;\n\t\tif (customButtons) {\n\t\t\ttopRightPanel = this.makeCustomButtonsPanel(tableState, customButtons);\n\t\t} else if (this.isReadonlyTable()) {\n\t\t\tif (!this.props.hideEditButton) {\n\t\t\t\ttopRightPanel = this.makeEditButtonPanel(tableState, tableButtonConfig);\n\t\t\t}\n\n\t\t} else if (this.props.addRemoveRows) {\n\t\t\ttopRightPanel = this.makeAddRemoveButtonPanel(tableState, tableButtonConfig);\n\t\t}\n\n\t\tlet rowToScrollTo;\n\t\tif (Number.isInteger(this.scrollToRow) && rows.length > this.scrollToRow) {\n\t\t\trowToScrollTo = this.scrollToRow;\n\t\t\tdelete this.scrollToRow;\n\t\t}\n\n\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\t\t// ReadonlyTable with single row selection is non-interactive. rowClickCallback should be undefined.\n\t\tlet rowClickCallback;\n\t\tconst singleRowSelectionReadonlyTable = this.isReadonlyTable() && this.props.control.rowSelection === ROW_SELECTION.SINGLE;\n\t\tif (!singleRowSelectionReadonlyTable) {\n\t\t\trowClickCallback = this.props.control.rowSelection === ROW_SELECTION.SINGLE ? this.handleRowClick : this.updateRowSelections;\n\t\t}\n\n\t\tconst table =\t(\n\t\t\t<FlexibleTable\n\t\t\t\tsortable={sortFields}\n\t\t\t\tfilterable={filterFields}\n\t\t\t\tcolumns={headers}\n\t\t\t\tdata={rows}\n\t\t\t\tshowHeader={showHeader}\n\t\t\t\tscrollToRow={rowToScrollTo}\n\t\t\t\tonFilter={this.onFilter}\n\t\t\t\tonSort={this.onSort}\n\t\t\t\ttopRightPanel={topRightPanel}\n\t\t\t\tselectedEditRow={selectedEditRow}\n\t\t\t\tscrollKey={this.props.control.name}\n\t\t\t\ttableState={tableState}\n\t\t\t\tmessageInfo={this.props.controller.getErrorMessage(this.props.propertyId)}\n\t\t\t\trows={this.props.control.rows}\n\t\t\t\ttableLabel={tableLabel}\n\t\t\t\tupdateRowSelections={rowClickCallback}\n\t\t\t\tselectedRows= {this.props.selectedRows}\n\t\t\t\trowSelection={this.props.control.rowSelection}\n\t\t\t\tlight={this.isLightTheme()}\n\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t/>);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{table}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tmakeHeader(sortFields, filterFields) {\n\t\tconst headers = [];\n\t\tfor (var j = 0; j < this.props.control.subControls.length; j++) {\n\t\t\tconst columnDef = this.props.control.subControls[j];\n\t\t\tconst checkboxName = this.props.control.name + j; // TODO might not be unique\n\t\t\t// See if the entire column is disabled\n\t\t\tconst colState = this.props.controller.getControlState({ name: this.props.control.name, col: j });\n\t\t\tconst disabled = colState === STATES.DISABLED || colState === STATES.HIDDEN;\n\t\t\tconst columnLabel = (columnDef.controlType === ControlType.CHECKBOX)\n\t\t\t\t? (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tid={checkboxName}\n\t\t\t\t\t\tchecked={this.checkedAll(j)}\n\t\t\t\t\t\tonChange={this.checkedAllValue.bind(this, j)}\n\t\t\t\t\t\tlabelText={columnDef.label.text}\n\t\t\t\t\t/>) : columnDef.label.text;\n\t\t\tif (columnDef.visible && columnDef.controlType !== ControlType.HIDDEN) {\n\t\t\t\tif (columnDef.sortable) {\n\t\t\t\t\tsortFields.push(columnDef.name);\n\t\t\t\t}\n\t\t\t\theaders.push({\n\t\t\t\t\t\"key\": columnDef.name,\n\t\t\t\t\t\"label\": columnLabel,\n\t\t\t\t\t\"width\": columnDef.width,\n\t\t\t\t\t\"description\": (columnDef.description ? columnDef.description.text : null),\n\t\t\t\t\t\"resizable\": columnDef.resizable ? columnDef.resizable : false,\n\t\t\t\t\t\"operation\": (columnDef.generatedValues && columnDef.generatedValues.operation ? columnDef.generatedValues.operation : null) });\n\t\t\t\tif (columnDef.filterable) {\n\t\t\t\t\tfilterFields.push(columnDef.name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// subpanel column will always be empty for ReadonlyTable control based on condition in makeCells()\n\t\tif (this.props.control.childItem && !this.isReadonlyTable()) {\n\t\t\t// set to specific size. Exclude this column from resizing.\n\t\t\theaders.push({ \"key\": \"subpanel\", \"label\": \"\", \"width\": TABLE_SUBPANEL_BUTTON_WIDTH, \"staticWidth\": true });\n\t\t}\n\t\treturn headers;\n\t}\n\n\tmakeCells(rows, controlValue, tableState, propName, selectSummaryRow) {\n\t\tif (!Array.isArray(controlValue)) {\n\t\t\treturn;\n\t\t}\n\t\tconst propertyName = propName ? propName : this.props.control.name;\n\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\tconst columns = [];\n\t\t\tthis.onPanelContainer[rowIndex] = [];\n\t\t\tif (this.includeInFilter(rowIndex) || selectSummaryRow) {\n\t\t\t\tfor (var colIndex = 0; colIndex < this.props.control.subControls.length; colIndex++) {\n\t\t\t\t\tconst columnDef = this.props.control.subControls[colIndex];\n\t\t\t\t\t// we need to build the on-panel container so that when the row is selected and a not visible column is on-panel\n\t\t\t\t\t// the on-panel container will be available for display.\n\t\t\t\t\tif (columnDef.visible || columnDef.editStyle === EditStyle.ON_PANEL) {\n\t\t\t\t\t\tconst content = this._makeCell(columnDef, controlValue, propertyName, rowIndex,\n\t\t\t\t\t\t\tcolIndex, tableState, selectSummaryRow);\n\t\t\t\t\t\t// only add content if column is visible\n\t\t\t\t\t\tif (columnDef.visible) {\n\t\t\t\t\t\t\tcolumns.push(content);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.props.control.childItem && !selectSummaryRow && !this.isReadonlyTable()) {\n\t\t\t\t\tconst cell = this.buildChildItem(propertyName, rowIndex, tableState);\n\t\t\t\t\tcolumns.push(cell);\n\t\t\t\t}\n\t\t\t\trows.push({\n\t\t\t\t\tcolumns: columns\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tbuildChildItem(propName, rowIndex, tableState) {\n\t\t// Assumes the child item is an \"ADDITIONAL_LINK\" object.\n\t\t// However, we will extract information from the and will create our own Cell-based invoker.\n\t\tconst childPropertyId = { name: propName, row: rowIndex };\n\t\tconst parentPropertyId = cloneDeep(this.props.propertyId);\n\n\t\tlet propertyId = childPropertyId;\n\t\t// If childPropertyId name does not match the parent, then this is a subControl\n\t\tif (parentPropertyId.name !== childPropertyId.name) {\n\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, childPropertyId);\n\t\t}\n\n\t\tconst subItemButton = this.props.buildUIItem(rowIndex, this.props.control.childItem, propertyId, this.indexOfColumn);\n\t\t// Hack to decompose the button into our own in-table link\n\t\tconst subCell = (\n\t\t\t<div className=\"properties-table-subcell\">\n\t\t\t\t<SubPanelCell\n\t\t\t\t\tlabel={subItemButton.props.label}\n\t\t\t\t\ttitle={subItemButton.props.title}\n\t\t\t\t\tpanel={subItemButton.props.panel}\n\t\t\t\t\tdisabled={tableState === STATES.DISABLED}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\t/>\n\t\t\t</div>);\n\t\treturn {\n\t\t\tcolumn: \"subpanel\",\n\t\t\twidth: TABLE_SUBPANEL_BUTTON_WIDTH,\n\t\t\tcontent: subCell\n\t\t};\n\t}\n}\n\nAbstractTable.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\topenFieldPicker: PropTypes.func.isRequired,\n\trightFlyout: PropTypes.bool,\n\tvalue: PropTypes.array, // pass in by redux\n\tselectedRows: PropTypes.array, // set by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object, // set in by redux\n\thideEditButton: PropTypes.bool // set by redux\n};\n\nAbstractTable.defaultProps = {\n\taddRemoveRows: true,\n\thideEditButton: false,\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { MESSAGE_KEYS } from \"./../../constants/constants\";\nimport { ControlType } from \"./../../constants/form-constants\";\nimport { Add16, Edit16 } from \"@carbon/icons-react\";\nimport { Button } from \"carbon-components-react\";\n\nexport default class EmptyTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getEmptyTableText = this.getEmptyTableText.bind(this);\n\t\tthis.isReadonlyTable = this.isReadonlyTable.bind(this);\n\t}\n\n\tgetEmptyTableText() {\n\t\t// Empty table text can be customized\n\t\tconst overrideEmptyTableTextKey = `${this.props.control.name}.empty.table.text`;\n\t\tconst defaultEmptyTableText = formatMessage(\n\t\t\tthis.props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.PROPERTIES_EMPTY_TABLE_TEXT,\n\t\t\t{ button_label: this.props.emptyTableButtonLabel }\n\t\t);\n\t\treturn this.props.controller.getResource(overrideEmptyTableTextKey, defaultEmptyTableText);\n\t}\n\n\tisReadonlyTable() {\n\t\treturn this.props.control.controlType === ControlType.READONLYTABLE;\n\t}\n\n\trender() {\n\t\tconst emptyTableText = this.getEmptyTableText();\n\t\tconst emptyTableContent = (\n\t\t\t<div className=\"properties-empty-table\" disabled={this.props.disabled}>\n\t\t\t\t<span >{emptyTableText}</span>\n\t\t\t\t<br />\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"properties-empty-table-button\"\n\t\t\t\t\tkind=\"tertiary\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\trenderIcon={this.isReadonlyTable() ? Edit16 : Add16}\n\t\t\t\t\tonClick={this.props.emptyTableButtonClickHandler}\n\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t>\n\t\t\t\t\t{this.props.emptyTableButtonLabel}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t\treturn emptyTableContent;\n\t}\n}\n\nEmptyTable.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\temptyTableButtonLabel: PropTypes.string,\n\temptyTableButtonClickHandler: PropTypes.func,\n\tdisabled: PropTypes.bool,\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EmptyTable from \"./empty-table.jsx\";\nexport default EmptyTable;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"carbon-components-react\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { ArrowUp24, ArrowDown24, UpToTop24, DownToBottom24 } from \"@carbon/icons-react\";\nimport classNames from \"classnames\";\nimport EmptyTable from \"./../empty-table\";\nimport { MESSAGE_KEYS } from \"./../../constants/constants\";\n\nclass MoveableTableRows extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getTableRowMoveImages = this.getTableRowMoveImages.bind(this);\n\t\tthis.topMoveRow = this.topMoveRow.bind(this);\n\t\tthis.upMoveRow = this.upMoveRow.bind(this);\n\t\tthis.downMoveRow = this.downMoveRow.bind(this);\n\t\tthis.bottomMoveRow = this.bottomMoveRow.bind(this);\n\t\tthis.getMoveableTableRows = this.getMoveableTableRows.bind(this);\n\t\tthis.getLeastValue = this.getLeastValue.bind(this);\n\t\tthis.getMaxValue = this.getMaxValue.bind(this);\n\t}\n\n\tgetMoveableTableRows() {\n\t\tlet moveCol = null;\n\t\tif (typeof this.props.control.moveableRows !== \"undefined\" && this.props.control.moveableRows) {\n\t\t\tconst moveImages = this.getTableRowMoveImages();\n\t\t\tmoveCol = (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"properties-mr-button-container\"\n\t\t\t\t>\n\t\t\t\t\t{moveImages}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t// Added role presentation to fix a11y violation - no headers in the table\n\t\tconst content = (<table role=\"presentation\" className=\"properties-mr-table-container\">\n\t\t\t<tbody>\n\t\t\t\t<tr className={classNames(\"properties-mr-table-content\", { \"disabled\": this.props.disabled })}>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{this.props.tableContainer}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{moveCol}\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// enabled the move up and down arrows based on which row is selected\n\tgetTableRowMoveImages() {\n\t\tconst selected = this.props.controller.getSelectedRows(this.props.propertyId).sort();\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tlet topEnabled = (\n\t\t\t!this.props.disableRowMoveButtons &&\n\t\t\t(selected.length !== 0 && selected[0] !== 0) &&\n\t\t\t!this.props.disabled\n\t\t);\n\t\tlet bottomEnabled = (\n\t\t\t!this.props.disableRowMoveButtons &&\n\t\t\t(selected.length !== 0 && selected[selected.length - 1] !== controlValue.length - 1) &&\n\t\t\t!this.props.disabled\n\t\t);\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\tif (selected.length > 0 && staticRows.length > 0 && staticRows.includes(selected[0])) {\n\t\t\ttopEnabled = false;\n\t\t\tbottomEnabled = false;\n\t\t} else if (selected[0] === staticRows[staticRows.length - 1] + 1) {\n\t\t\ttopEnabled = false;\n\t\t\tbottomEnabled = (\n\t\t\t\t!this.props.disableRowMoveButtons &&\n\t\t\t\t(selected.length !== 0 && selected[selected.length - 1] !== controlValue.length - 1) &&\n\t\t\t\t!this.props.disabled\n\t\t\t);\n\t\t} else if (selected[0] === staticRows[0] - 1) {\n\t\t\tbottomEnabled = false;\n\t\t}\n\n\n\t\tconst topLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.MOVEABLE_TABLE_BUTTON_TOP_DESCRIPTION);\n\t\tconst upLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.MOVEABLE_TABLE_BUTTON_UP_DESCRIPTION);\n\t\tconst topImages = (\n\t\t\t<div key=\"topImages\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"table-row-move-button\"\n\t\t\t\t\tonClick={this.topMoveRow}\n\t\t\t\t\tdisabled={!topEnabled}\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={UpToTop24}\n\t\t\t\t\ticonDescription={topLabel}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"table-row-move-button\"\n\t\t\t\t\tonClick={this.upMoveRow}\n\t\t\t\t\tdisabled={!topEnabled}\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={ArrowUp24}\n\t\t\t\t\ticonDescription={upLabel}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t\tconst bottomLabel = formatMessage(this.props.controller.getReactIntl(),\tMESSAGE_KEYS.MOVEABLE_TABLE_BUTTON_DOWN_DESCRIPTION);\n\t\tconst downLabel = formatMessage(this.props.controller.getReactIntl(),\tMESSAGE_KEYS.MOVEABLE_TABLE_BUTTON_BOTTOM_DESCRIPTION);\n\t\tconst bottomImages = (\n\t\t\t<div key=\"bottomImages\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"table-row-move-button\"\n\t\t\t\t\tonClick={this.downMoveRow}\n\t\t\t\t\tdisabled={!bottomEnabled}\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={ArrowDown24}\n\t\t\t\t\ticonDescription={bottomLabel}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"table-row-move-button\"\n\t\t\t\t\tonClick={this.bottomMoveRow}\n\t\t\t\t\tdisabled={!bottomEnabled}\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={DownToBottom24}\n\t\t\t\t\ticonDescription={downLabel}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t\treturn [topImages, bottomImages];\n\t}\n\n\tgetLeastValue() {\n\t\tlet leastValue = 0;\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\tif (staticRows && staticRows.length > 0 && staticRows.includes(0)) {\n\t\t\tleastValue = staticRows[staticRows.length - 1];\n\t\t}\n\t\treturn leastValue;\n\t}\n\n\tgetMaxValue() {\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tlet maxValue = controlValue.length - 1;\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\tif (staticRows && staticRows.length > 0 && staticRows.includes(controlValue.length - 1)) {\n\t\t\tmaxValue = staticRows[0] - 1;\n\t\t}\n\t\treturn maxValue;\n\t}\n\n\ttopMoveRow(evt) {\n\t\tvar selected = this.props.controller.getSelectedRows(this.props.propertyId).sort(function(a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst leastValue = this.getLeastValue();\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\tfor (var firstRow = selected[0]; firstRow > leastValue; firstRow--) {\n\t\t\tfor (var i = 0; i <= selected.length - 1; i++) {\n\t\t\t\tif ((staticRows.length > 0 && selected[0] > leastValue + 1) || staticRows.length === 0) {\n\t\t\t\t\tconst selectedRow = selected.shift();\n\t\t\t\t\tconst tmpRow = controlValue[selectedRow - 1];\n\t\t\t\t\tcontrolValue[selectedRow - 1] = controlValue[selectedRow];\n\t\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\t\tselected.push(selectedRow - 1);\n\t\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (selected.length > 0) {\n\t\t\tthis.props.setScrollToRow(selected[0]);\n\t\t}\n\t\tthis.props.setCurrentControlValueSelected(controlValue, selected);\n\t}\n\n\tupMoveRow(evt) {\n\t\tconst selected = this.props.controller.getSelectedRows(this.props.propertyId).sort(function(a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tconst leastValue = this.getLeastValue();\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\t// only move up if not already at the top especially for multiple selected\n\t\t// Move up only till the static rows index\n\t\tif (selected.length !== 0 && selected[0] > leastValue) {\n\t\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\t\tfor (var i = 0; i <= selected.length - 1; i++) {\n\t\t\t\tif (staticRows.length > 0 && selected[0] > leastValue + 1) {\n\t\t\t\t\tconst selectedRow = selected.shift();\n\t\t\t\t\tconst tmpRow = controlValue[selectedRow - 1];\n\t\t\t\t\tcontrolValue[selectedRow - 1] = controlValue[selectedRow];\n\t\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\t\tselected.push(selectedRow - 1);\n\t\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow - 1);\n\t\t\t\t} else if (staticRows.length === 0) {\n\t\t\t\t\tconst selectedRow = selected.shift();\n\t\t\t\t\tif (selectedRow !== 0) {\n\t\t\t\t\t\tconst tmpRow = controlValue[selectedRow - 1];\n\t\t\t\t\t\tcontrolValue[selectedRow - 1] = controlValue[selectedRow];\n\t\t\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\t\t\tselected.push(selectedRow - 1);\n\t\t\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.props.setScrollToRow(selected[0]);\n\t\t\tthis.props.setCurrentControlValueSelected(controlValue, selected);\n\t\t}\n\t}\n\n\tdownMoveRow(evt) {\n\t\tconst selected = this.props.controller.getSelectedRows(this.props.propertyId).sort(function(a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst maxValue = this.getMaxValue();\n\t\t// only move down if not already at the end especially for multiple selected\n\t\tif (selected.length !== 0 && selected[selected.length - 1] !== controlValue.length - 1) {\n\t\t\tfor (var i = selected.length - 1; i >= 0; i--) {\n\t\t\t\tconst selectedRow = selected.pop();\n\t\t\t\tif (selectedRow !== maxValue) {\n\t\t\t\t\tconst tmpRow = controlValue[selectedRow + 1];\n\t\t\t\t\tcontrolValue[selectedRow + 1] = controlValue[selectedRow];\n\t\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\t\tselected.unshift(selectedRow + 1);\n\t\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (selected.length > 1) {\n\t\t\t\tthis.props.setScrollToRow(selected[selected.length - 1]);\n\t\t\t} else {\n\t\t\t\tthis.props.setScrollToRow(selected[0]);\n\t\t\t}\n\t\t\tthis.props.setCurrentControlValueSelected(controlValue, selected);\n\t\t}\n\t}\n\n\tbottomMoveRow(evt) {\n\t\tvar selected = this.props.controller.getSelectedRows(this.props.propertyId).sort(function(a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst maxValue = this.getMaxValue();\n\t\tfor (var lastRow = selected[selected.length - 1]; lastRow < maxValue; lastRow++) {\n\t\t\tfor (var i = selected.length - 1; i >= 0; i--) {\n\t\t\t\tconst selectedRow = selected.pop();\n\t\t\t\tconst tmpRow = controlValue[selectedRow + 1];\n\t\t\t\tcontrolValue[selectedRow + 1] = controlValue[selectedRow];\n\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\tselected.unshift(selectedRow + 1);\n\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow + 1);\n\t\t\t}\n\t\t}\n\t\tif (selected.length > 0) {\n\t\t\tthis.props.setScrollToRow(selected[selected.length - 1]);\n\t\t}\n\t\tthis.props.setCurrentControlValueSelected(controlValue, selected);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\tthis.props.isEmptyTable && this.props.addRemoveRows\n\t\t\t\t? <EmptyTable\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\temptyTableButtonLabel={this.props.emptyTableButtonLabel}\n\t\t\t\t\temptyTableButtonClickHandler={this.props.emptyTableButtonClickHandler}\n\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t/>\n\t\t\t\t: this.getMoveableTableRows()\n\t\t);\n\t}\n}\n\nMoveableTableRows.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tsetCurrentControlValueSelected: PropTypes.func.isRequired,\n\tsetScrollToRow: PropTypes.func.isRequired,\n\ttableContainer: PropTypes.object.isRequired,\n\tdisabled: PropTypes.bool,\n\tisEmptyTable: PropTypes.bool.isRequired,\n\temptyTableButtonLabel: PropTypes.string,\n\temptyTableButtonClickHandler: PropTypes.func,\n\tdisableRowMoveButtons: PropTypes.bool, // set by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\nMoveableTableRows.defaultProps = {\n\taddRemoveRows: true\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\t// check if row move buttons should be disabled for given propertyId\n\tdisableRowMoveButtons: ownProps.controller.isDisableRowMoveButtons(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps)(MoveableTableRows);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport NumberfieldControl from \"./../numberfield\";\nimport TextfieldControl from \"./../textfield\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport FlexibleTable from \"./../../components/flexible-table\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { getDataId } from \"./../../util/control-utils\";\nimport { MESSAGE_KEYS, STATES } from \"./../../constants/constants.js\";\nimport { Type } from \"./../../constants/form-constants.js\";\nimport { isEmpty } from \"lodash\";\n\nconst NUMBER_TYPES = [Type.INTEGER, Type.DOUBLE, Type.LONG];\nclass ListControl extends AbstractTable {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.addRow = this.addRow.bind(this);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t}\n\n\taddRow() {\n\t\tconst controlPropType = this.props.controller.getControlPropType(this.props.propertyId);\n\t\tconst newRow = NUMBER_TYPES.indexOf(controlPropType) > -1 ? null : \"\";\n\n\t\t// Handle case where no currentValue or default is defined.\n\t\tlet currentValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tif (typeof currentValue === \"undefined\") {\n\t\t\tcurrentValue = [];\n\t\t}\n\n\t\tconst rows = currentValue.concat([newRow]);\n\t\tthis.setCurrentControlValueSelected(rows);\n\t}\n\n\tmakeCell(control, propertyId, controlPropType, listHeader) {\n\t\tif (NUMBER_TYPES.indexOf(controlPropType) > -1) {\n\t\t\treturn (<div className=\"properties-table-cell-control\">\n\t\t\t\t<NumberfieldControl\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tcontrolItem={listHeader}\n\t\t\t\t\ttableControl\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t}\n\t\treturn (<div className=\"properties-table-cell-control\">\n\t\t\t<TextfieldControl\n\t\t\t\tcontrol={control}\n\t\t\t\tpropertyId={propertyId}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\tcontrolItem={listHeader}\n\t\t\t\ttableControl\n\t\t\t/>\n\t\t</div>);\n\t}\n\n\tmakeRows(controlValue, tableState, tableHeaders) {\n\t\tconst rows = [];\n\t\tif (controlValue) {\n\t\t\tfor (var rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\tconst columns = [];\n\n\t\t\t\tlet propertyId = { name: this.props.control.name, row: rowIndex };\n\t\t\t\t// If props propertyId name is different, then this list is in a structure\n\t\t\t\tif (this.props.propertyId.name !== propertyId.name) {\n\t\t\t\t\tconst parentPropertyId = Object.assign({}, this.props.propertyId);\n\t\t\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, { name: this.props.control.name, row: rowIndex });\n\t\t\t\t}\n\n\t\t\t\tconst controlPropType = this.props.controller.getControlPropType(propertyId);\n\t\t\t\tconst control = {};\n\t\t\t\t// Assuming list control has only 2 columns\n\t\t\t\tconst listHeader = (typeof tableHeaders === \"undefined\" || tableHeaders.length === 0) ? \"\" : tableHeaders[0].label;\n\t\t\t\tconst cellContent = this.makeCell(control, propertyId, controlPropType, listHeader);\n\t\t\t\tcolumns.push({\n\t\t\t\t\tkey: rowIndex + \"-0-value\",\n\t\t\t\t\tcolumn: \"value\",\n\t\t\t\t\tcontent: cellContent\n\t\t\t\t});\n\t\t\t\trows.push({\n\t\t\t\t\tkey: rowIndex,\n\t\t\t\t\tonClickCallback: this.handleRowClick.bind(this, rowIndex, false),\n\t\t\t\t\tcolumns: columns,\n\t\t\t\t\tclassName: \"list-table-row\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn rows;\n\t}\n\n\tmakeHeader() {\n\t\tconst headers = [];\n\t\theaders.push({\n\t\t\t\"key\": \"value\",\n\t\t\t\"label\": formatMessage(this.reactIntl, MESSAGE_KEYS.LIST_TABLE_LABEL),\n\t\t\t\"description\": (null) });\n\t\treturn headers;\n\t}\n\n\trender() {\n\t\tconst headers = this.makeHeader();\n\n\t\tconst tableButtonConfig = {\n\t\t\taddButtonLabel: formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.STRUCTURELISTEDITOR_ADDBUTTON_LABEL),\n\t\t\tremoveButtonLabel: formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.STRUCTURELISTEDITOR_REMOVEBUTTON_LABEL),\n\t\t\taddButtonFunction: this.addRow\n\t\t};\n\n\t\tconst rows = this.makeRows(this.props.value, this.props.state, headers);\n\t\tconst topRightPanel = this.makeAddRemoveButtonPanel(this.props.state, tableButtonConfig);\n\t\tlet rowToScrollTo;\n\t\tif (Number.isInteger(this.scrollToRow) && rows.length > this.scrollToRow) {\n\t\t\trowToScrollTo = this.scrollToRow;\n\t\t\tdelete this.scrollToRow;\n\t\t}\n\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\t\tconst table =\t(\n\t\t\t<FlexibleTable\n\t\t\t\tcolumns={headers}\n\t\t\t\tdata={rows}\n\t\t\t\tscrollToRow={rowToScrollTo}\n\t\t\t\ttopRightPanel={topRightPanel}\n\t\t\t\tscrollKey={this.props.control.name}\n\t\t\t\ttableState={this.props.state}\n\t\t\t\tmessageInfo={this.props.messageInfo}\n\t\t\t\trows={this.props.control.rows}\n\t\t\t\ttableLabel={tableLabel}\n\t\t\t\tselectedRows={this.props.selectedRows}\n\t\t\t\trowSelection={this.props.control.rowSelection}\n\t\t\t\tupdateRowSelections={this.updateRowSelections}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t/>);\n\n\t\tconst tableContainer = (<div>\n\t\t\t<div className=\"properties-list-table\">\n\t\t\t\t{table}\n\t\t\t</div>\n\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t</div>);\n\n\t\treturn (\n\t\t\t<div data-id={getDataId(this.props.propertyId)} className=\"properties-list-control\" >\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t<MoveableTableRows\n\t\t\t\t\ttableContainer={tableContainer}\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\temptyTableButtonLabel={tableButtonConfig.addButtonLabel}\n\t\t\t\t\temptyTableButtonClickHandler={this.addRow}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps)(ListControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, ContentSwitcher, Dropdown } from \"carbon-components-react\";\nimport FlexibleTable from \"./../../../components/flexible-table/flexible-table\";\nimport TruncatedContentTooltip from \"./../../../components/truncated-content-tooltip\";\nimport { MESSAGE_KEYS, EXPRESSION_TABLE_ROWS, SORT_DIRECTION, ROW_SELECTION } from \"./../../../constants/constants\";\nimport { formatMessage } from \"./../../../util/property-utils\";\nimport { sortBy, get } from \"lodash\";\nimport { v4 as uuid4 } from \"uuid\";\n\nconst FIELDS_SPECIAL_CHARACTERS_REGEX = new RegExp(\"[0-9- _$]\", \"g\");\n\nexport default class ExpressionSelectFieldOrFunction extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.valueColumn = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_VALUE_COLUMN);\n\t\tthis.valueColumnDesc = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_VALUE_COLUMN_DESCRIPTION);\n\t\tthis.recentUseCat = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_RECENTLY_USED);\n\t\tthis.recentUseCatInfo = {\n\t\t\tid: this.recentUseCat,\n\t\t\tlocLabel: this.recentUseCat,\n\t\t\tfield_columns: {\n\t\t\t\tfield_column_info: {\n\t\t\t\t\tlocLabel: formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_RECENTLY_USED_COLUMN)\n\t\t\t\t},\n\t\t\t\tvalue_column_info: {\n\t\t\t\t\tlocLabel: this.valueColumn,\n\t\t\t\t\tdescLabel: this.valueColumnDesc\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.inCategories = Object.keys(props.functionList);\n\t\tthis.fields = this._makeDatasetFields(props.controller.getDatasetMetadataFields(), props.controller.getExpressionInfo().fields);\n\t\tthis.resources = get(props.controller.getExpressionInfo(), \"resources\", {});\n\t\tthis.state = {\n\t\t\tfieldSelected: 0,\n\t\t\tvalueSelected: 0,\n\t\t\tfunctionSelected: 0,\n\t\t\tfieldTableSortSpec: null,\n\t\t\tvaluesTableSortSpec: null,\n\t\t\tfunctionTableSortSpec: null,\n\t\t\tfunctionCategory: this.inCategories[0], // set the initial function category to the first one in the list.\n\t\t\tselectedIndex: 0,\n\t\t\tfieldCategory: \"fields\",\n\t\t\tcurrentFieldDataset: this.fields.field_table_info[0].field_value_groups\n\t\t};\n\t\tthis.controller = props.controller;\n\t\tthis.onFunctionCatChange = this.onFunctionCatChange.bind(this);\n\t\tthis.onFieldCatChange = this.onFieldCatChange.bind(this);\n\t\tthis.onFieldFilter = this.onFieldFilter.bind(this);\n\t\tthis.onValueFilter = this.onValueFilter.bind(this);\n\t\tthis.onFunctionFilter = this.onFunctionFilter.bind(this);\n\t\tthis.language = props.language;\n\n\t\tthis.onFieldTableClick = this.onFieldTableClick.bind(this);\n\t\tthis.onFieldTableDblClick = this.onFieldTableDblClick.bind(this);\n\t\tthis.onFunctionTableClick = this.onFunctionTableClick.bind(this);\n\t\tthis.onFunctionTableDblClick = this.onFunctionTableDblClick.bind(this);\n\t\tthis.onValueTableClick = this.onValueTableClick.bind(this);\n\t\tthis.onValueTableDblClick = this.onValueTableDblClick.bind(this);\n\n\t\tthis.sortTableRows = this.sortTableRows.bind(this);\n\t\tthis.shouldQuoteField = this.shouldQuoteField.bind(this);\n\t}\n\n\tonSwitch(switchName, evt) {\n\t\tthis.setState({\n\t\t\tselectedIndex: switchName.index\n\t\t});\n\t}\n\n\tonFunctionCatChange(evt) {\n\t\tthis.setState({\n\t\t\tfunctionCategory: evt.selectedItem.value,\n\t\t\tfunctionSelected: 0\n\t\t});\n\t}\n\n\tonFieldCatChange(evt) {\n\t\tlet currentData = [];\n\t\tif (evt.selectedItem.value === this.recentUseCat) {\n\t\t\tcurrentData = this.props.controller.getExpressionFieldsRecentlyUsed();\n\t\t} else {\n\t\t\tfor (let index = 0; index < this.fields.field_table_info.length; index++) {\n\t\t\t\tif (evt.selectedItem.value === this.fields.field_table_info[index].id) {\n\t\t\t\t\tcurrentData = this.fields.field_table_info[index].field_value_groups;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tfieldCategory: evt.selectedItem.value,\n\t\t\tfieldSelected: 0,\n\t\t\tcurrentFieldDataset: currentData\n\t\t});\n\t}\n\n\tonFieldTableClick(row, evt, rowKey) {\n\t\tthis.setState({\n\t\t\tfieldSelected: rowKey,\n\t\t\tvalueSelected: 0\n\t\t});\n\n\t}\n\n\tonFieldTableDblClick(evt, rowKey, index) {\n\t\tconst field = this.state.currentFieldDataset[rowKey];\n\t\tlet value = field.id;\n\t\tif (this.state.fieldCategory !== this.recentUseCat) {\n\t\t\tthis.props.controller.updateExpressionFieldsRecentlyUsed(field);\n\t\t}\n\t\tif (this.props.onChange) {\n\t\t\tconst quote = (this.language === \"CLEM\" && this.state.fieldCategory !== \"globals\") ? \"'\" : \"\";\n\t\t\tif (this.shouldQuoteField(field.id)) {\n\t\t\t\tvalue = quote + field.id + quote;\n\t\t\t}\n\t\t\tthis.props.onChange(value);\n\t\t}\n\t}\n\n\tonFieldFilter(filterString) {\n\t\tthis.setState({ fieldFilterText: filterString });\n\t}\n\n\tonValueTableClick(row, evt, rowKey) {\n\t\tthis.setState({\n\t\t\tvalueSelected: rowKey\n\t\t});\n\t}\n\n\tonValueTableDblClick(evt, rowKey, index) {\n\t\tif (this.props.onChange) {\n\t\t\tconst field = this.state.currentFieldDataset[this.state.fieldSelected];\n\t\t\tconst quote = \"\\\"\";\n\t\t\tif (field.values) {\n\t\t\t\tconst value = field.values[rowKey].value;\n\t\t\t\tconst fieldValue = (typeof value === \"string\") ? quote + value + quote : value;\n\t\t\t\tthis.props.onChange(fieldValue);\n\t\t\t} else if (field.range) {\n\t\t\t\tconst minValue = (typeof field.range.min.value === \"string\") ? (quote + field.range.min.value + quote) : field.range.min.value;\n\t\t\t\tconst maxValue = (typeof field.range.max.value === \"string\") ? (quote + field.range.max.value + quote) : field.range.max.value;\n\t\t\t\tthis.props.onChange(rowKey === 0 ? minValue : maxValue);\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tvalueSelected: rowKey\n\t\t});\n\t}\n\n\tonValueFilter(filterString) {\n\t\tthis.setState({ valueFilterText: filterString });\n\t}\n\n\tonFunctionTableClick(row, evt, rowKey) {\n\t\tthis.setState({\n\t\t\tfunctionSelected: rowKey\n\t\t});\n\t}\n\n\tonFunctionTableDblClick(evt, rowKey, index) {\n\t\tlet field;\n\t\tif (this.state.functionCategory === this.recentUseCat) {\n\t\t\tfield = this.props.controller.getExpressionRecentlyUsed()[rowKey];\n\t\t} else {\n\t\t\tfield = this.props.functionList[this.state.functionCategory].functionList[rowKey];\n\t\t\tthis.props.controller.updateExpressionRecentlyUsed(field);\n\t\t}\n\t\tconst value = field.value;\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(value);\n\t\t}\n\t}\n\n\tonFunctionFilter(filterString) {\n\t\tthis.setState({ functionFilterText: filterString });\n\t}\n\n\tsetSortColumn(table, spec) {\n\t\tswitch (table) {\n\t\tcase \"fieldTable\": {\n\t\t\t// const sortedData = this.sortTableRows(this.state.currentFieldDataset, spec);\n\t\t\tthis.setState({ fieldTableSortSpec: spec }); // , currentFieldDataset: sortedData });\n\t\t\tbreak;\n\t\t}\n\t\tcase \"valuesTable\": {\n\t\t\tthis.setState({ valuesTableSortSpec: spec });\n\t\t\tbreak;\n\t\t}\n\t\tcase \"functionTable\": {\n\t\t\tthis.setState({ functionTableSortSpec: spec });\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t}\n\t}\n\n\tsortTableRows(data, spec) {\n\t\tlet colIdx = 0;\n\n\t\tif (data.length > 0) {\n\t\t\tconst tableColumns = data[0].columns;\n\t\t\tfor (let idx = 0; idx < tableColumns.length; idx++) {\n\t\t\t\tif (tableColumns[idx].column === spec.column) {\n\t\t\t\t\tcolIdx = idx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sortedData = sortBy(data, function(row) {\n\t\t\t\treturn row.columns[colIdx].value;\n\t\t\t});\n\t\t\tif (spec.direction === SORT_DIRECTION.DESC) {\n\t\t\t\tsortedData.reverse();\n\t\t\t}\n\t\t\treturn sortedData;\n\t\t}\n\t\treturn data;\n\t}\n\n\t// Determine if field should be quoted - quote if the field name contains special characters\n\tshouldQuoteField(field) {\n\t\treturn field.match(FIELDS_SPECIAL_CHARACTERS_REGEX) !== null;\n\t}\n\n\tcreateContentObject(label) {\n\t\tlet disabled = true;\n\t\tif (label) {\n\t\t\tdisabled = false;\n\t\t}\n\t\tconst expressionTableCellContent = (\n\t\t\t<span className=\"properties-expr-table-cell\">\n\t\t\t\t{label}\n\t\t\t</span>\n\t\t);\n\t\tconst expressionTableCellContentWithTooltip = (\n\t\t\t<TruncatedContentTooltip\n\t\t\t\tcontent={expressionTableCellContent}\n\t\t\t\ttooltipText={label}\n\t\t\t\tdisabled={disabled}\n\t\t\t/>\n\t\t);\n\t\tconst contentObject = (\n\t\t\t<div className=\"properties-table-cell-control\">\n\t\t\t\t{expressionTableCellContentWithTooltip}\n\t\t\t</div>\n\t\t);\n\n\t\treturn contentObject;\n\t}\n\n\t_makeDatasetFields(dataset, fieldDataset) {\n\t\tconst fieldColumn = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELD_COLUMN);\n\t\tconst fieldColumnDesc = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELD_COLUMN_DESCRIPTION);\n\t\tconst storageColumn = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_STORAGE_COLUMN);\n\t\tconst dropdownLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELDS_DROPDOWN_TITLE);\n\t\tconst fieldsCatInfo = {\n\t\t\tid: \"fields\",\n\t\t\tlocLabel: dropdownLabel,\n\t\t\tfield_columns: {\n\t\t\t\tfield_column_info: {\n\t\t\t\t\tlocLabel: fieldColumn,\n\t\t\t\t\tdescLabel: fieldColumnDesc\n\t\t\t\t},\n\t\t\t\tvalue_column_info: {\n\t\t\t\t\tlocLabel: this.valueColumn,\n\t\t\t\t\tdescLabel: this.valueColumnDesc\n\t\t\t\t},\n\t\t\t\tadditional_column_info: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"storage\",\n\t\t\t\t\t\tlocLabel: storageColumn\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t};\n\n\t\tconst fieldsTableInfo = {\n\t\t\tid: \"fields\",\n\t\t\tfield_value_groups: []\n\t\t};\n\t\tdataset.forEach((field) => {\n\t\t\tvar entry = {\n\t\t\t\tid: field.name,\n\t\t\t\tadditional_column_entries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"storage\",\n\t\t\t\t\t\tvalue: field.type\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t\tif (field.metadata.values) {\n\t\t\t\tentry.values = [];\n\t\t\t\tfield.metadata.values.forEach((val) => {\n\t\t\t\t\tentry.values.push({ value: val });\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (field.metadata.range) {\n\t\t\t\tentry.range = {};\n\t\t\t\tif (field.metadata.range.min) {\n\t\t\t\t\tentry.range.min = { value: field.metadata.range.min };\n\t\t\t\t}\n\t\t\t\tif (field.metadata.range.max) {\n\t\t\t\t\tentry.range.max = { value: field.metadata.range.max };\n\t\t\t\t}\n\t\t\t}\n\t\t\tfieldsTableInfo.field_value_groups.push(entry);\n\t\t});\n\t\t// if fields already exists in metadata, update it instead of adding it to the front\n\t\tlet catIndex;\n\t\tlet infoIndex;\n\t\tfor (let index = 0; index < fieldDataset.field_categories.length; index++) {\n\t\t\tif (fieldDataset.field_categories[index].id === \"fields\") {\n\t\t\t\tcatIndex = index;\n\t\t\t}\n\t\t}\n\t\tfor (let index = 0; index < fieldDataset.field_table_info.length; index++) {\n\t\t\tif (fieldDataset.field_table_info[index].id === \"fields\") {\n\t\t\t\tinfoIndex = index;\n\t\t\t}\n\t\t}\n\t\tif (typeof catIndex !== \"undefined\") {\n\t\t\tfieldDataset.field_categories[catIndex] = fieldsCatInfo;\n\t\t} else {\n\t\t\tfieldDataset.field_categories.unshift(fieldsCatInfo);\n\t\t}\n\t\tif (typeof infoIndex !== \"undefined\") {\n\t\t\tfieldDataset.field_table_info[infoIndex] = fieldsTableInfo;\n\t\t} else {\n\t\t\tfieldDataset.field_table_info.unshift(fieldsTableInfo);\n\t\t}\n\t\treturn fieldDataset;\n\t}\n\n\n\t_makeFieldAndValuesContent() {\n\t\t// Make field and value tables headers.\n\t\tconst fieldCategory = this._makeFieldDropdown();\n\t\tconst fieldHeaders = [];\n\t\tconst valueHeader = [];\n\t\tconst sortable = [\"fieldName\"];\n\n\t\tlet categoryInfo = null;\n\t\tlet tableContents = null;\n\t\tif (this.state.fieldCategory === this.recentUseCat) {\n\t\t\t// get recently used category info and table contents\n\t\t\tcategoryInfo = this.recentUseCatInfo;\n\t\t\ttableContents = { id: this.recentUseCat, field_value_groups: this.props.controller.getExpressionFieldsRecentlyUsed() };\n\t\t} else {\n\t\t\t// get category info and table contents\n\t\t\tfor (let index = 0; index < this.fields.field_categories.length; index++) {\n\t\t\t\tif (this.state.fieldCategory === this.fields.field_categories[index].id) {\n\t\t\t\t\tcategoryInfo = this.fields.field_categories[index];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let index = 0; index < this.fields.field_table_info.length; index++) {\n\t\t\t\tif (this.state.fieldCategory === this.fields.field_table_info[index].id) {\n\t\t\t\t\ttableContents = this.fields.field_table_info[index];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (categoryInfo) {\n\t\t\tfieldHeaders.push({\n\t\t\t\tkey: \"fieldName\",\n\t\t\t\tlabel: categoryInfo.field_columns.field_column_info.locLabel,\n\t\t\t\tdescription: categoryInfo.field_columns.field_column_info.descLabel,\n\t\t\t\tresizable: true\n\t\t\t});\n\t\t\tvalueHeader.push({\n\t\t\t\tkey: \"values\",\n\t\t\t\tlabel: categoryInfo.field_columns.value_column_info.locLabel,\n\t\t\t\tdescription: categoryInfo.field_columns.value_column_info.descLabel\n\t\t\t});\n\t\t\tif (categoryInfo.field_columns.additional_column_info) {\n\t\t\t\tfor (let i = 0; i < categoryInfo.field_columns.additional_column_info.length; i++) {\n\t\t\t\t\tsortable.push(categoryInfo.field_columns.additional_column_info[i].id);\n\t\t\t\t\tfieldHeaders.push({ key: categoryInfo.field_columns.additional_column_info[i].id, label: categoryInfo.field_columns.additional_column_info[i].locLabel });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tlet tableData = [];\n\t\tlet valuesTableData = [];\n\t\tif (tableContents && tableContents.field_value_groups) {\n\t\t\tfor (let index = 0; index < tableContents.field_value_groups.length; index++) {\n\t\t\t\tconst field = tableContents.field_value_groups[index];\n\t\t\t\tconst fieldColumns = [];\n\t\t\t\tif (!this.state.fieldFilterText || this.state.fieldFilterText.length === 0 ||\n\t\t\t\t\t\t\t\t(field.id.toLowerCase().indexOf(this.state.fieldFilterText.toLowerCase()) > -1)) {\n\t\t\t\t\tfieldColumns.push({ column: \"fieldName\", content: this.createContentObject(field.id), value: field.id });\n\t\t\t\t\tif (field.additional_column_entries) {\n\t\t\t\t\t\tthis._makeAdditionalColumnsContent(field, fieldColumns);\n\t\t\t\t\t}\n\t\t\t\t\ttableData.push({ columns: fieldColumns, rowKey: index });\n\t\t\t\t\tif (index === this.state.fieldSelected) {\n\t\t\t\t\t\tvaluesTableData = this._makeValuesContent(field, valuesTableData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// set the selected row and adjust if the table is sorted.\n\t\tlet selectedField = this.state.fieldSelected;\n\t\tif (this.state.fieldTableSortSpec !== null) {\n\t\t\ttableData = this.sortTableRows(tableData, this.state.fieldTableSortSpec);\n\t\t\tselectedField = tableData.findIndex((row) => row.rowKey === this.state.fieldSelected);\n\t\t}\n\n\t\t// set the selected row and adjust if the table is sorted.\n\t\tlet selectedValue = this.state.valueSelected;\n\t\tif (this.state.valuesTableSortSpec !== null) {\n\t\t\tvaluesTableData = this.sortTableRows(valuesTableData, this.state.valuesTableSortSpec);\n\t\t\tselectedValue = valuesTableData.findIndex((row) => row.rowKey === this.state.valueSelected);\n\t\t}\n\n\t\tconst fieldsTableLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELDS_TABLE_LABEL);\n\t\tconst valuesTableLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_VALUES_TABLE_LABEL);\n\t\tconst emptyFieldsLabel = get(this.resources, MESSAGE_KEYS.EXPRESSION_FIELDS_EMPTY_TABLE_LABEL,\n\t\t\tformatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELDS_EMPTY_TABLE_LABEL));\n\t\tconst emptyValuesLabel = get(this.resources, MESSAGE_KEYS.EXPRESSION_VALUES_EMPTY_TABLE_LABEL,\n\t\t\tformatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_VALUES_EMPTY_TABLE_LABEL));\n\n\t\treturn (\n\t\t\t<div className=\"properties-field-and-values-table-container\" >\n\t\t\t\t{fieldCategory}\n\t\t\t\t<div className=\"properties-field-table-container\" >\n\t\t\t\t\t<FlexibleTable\n\t\t\t\t\t\tcolumns={fieldHeaders}\n\t\t\t\t\t\tdata={tableData}\n\t\t\t\t\t\tsortable={sortable}\n\t\t\t\t\t\tfilterable={[\"fieldName\"]}\n\t\t\t\t\t\tonFilter={this.onFieldFilter}\n\t\t\t\t\t\trows={EXPRESSION_TABLE_ROWS}\n\t\t\t\t\t\ttableLabel={fieldsTableLabel}\n\t\t\t\t\t\trowSelection={ROW_SELECTION.SINGLE}\n\t\t\t\t\t\tupdateRowSelections={this.onFieldTableClick}\n\t\t\t\t\t\tselectedRows={[selectedField]}\n\t\t\t\t\t\tonRowDoubleClick={this.onFieldTableDblClick}\n\t\t\t\t\t\tonSort={this.setSortColumn.bind(this, \"fieldTable\")}\n\t\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\t\temptyTablePlaceholder={emptyFieldsLabel}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"properties-value-table-container\" >\n\t\t\t\t\t<FlexibleTable\n\t\t\t\t\t\tcolumns={valueHeader}\n\t\t\t\t\t\tdata={valuesTableData}\n\t\t\t\t\t\tsortable={[\"values\"]}\n\t\t\t\t\t\tfilterable={[\"values\"]}\n\t\t\t\t\t\tonFilter={this.onValueFilter}\n\t\t\t\t\t\trows={EXPRESSION_TABLE_ROWS}\n\t\t\t\t\t\ttableLabel={valuesTableLabel}\n\t\t\t\t\t\trowSelection={ROW_SELECTION.SINGLE}\n\t\t\t\t\t\tupdateRowSelections={this.onValueTableClick}\n\t\t\t\t\t\tselectedRows={[selectedValue]}\n\t\t\t\t\t\tonRowDoubleClick={this.onValueTableDblClick}\n\t\t\t\t\t\tonSort={this.setSortColumn.bind(this, \"valuesTable\")}\n\t\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\t\temptyTablePlaceholder={emptyValuesLabel}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n\n\t_makeValuesContent(field, valuesTableData) {\n\t\tconst minLabel = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_MIN_LABEL);\n\t\tconst maxLabel = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_MAX_LABEL);\n\t\tif (field.values) {\n\t\t\tfor (let idx = 0; idx < field.values.length; idx++) {\n\t\t\t\tthis._addValueRow(field.values[idx].value, idx, valuesTableData);\n\t\t\t}\n\t\t} else if (field.range) {\n\t\t\tif (field.range.min) {\n\t\t\t\tthis._addValueRow(minLabel + \": \" + field.range.min.value, 0, valuesTableData);\n\t\t\t}\n\t\t\tif (field.range.max) {\n\t\t\t\tthis._addValueRow(maxLabel + \": \" + field.range.max.value, 1, valuesTableData);\n\t\t\t}\n\t\t}\n\t\treturn valuesTableData;\n\t}\n\n\t_addValueRow(content, index, valuesTableData) {\n\t\tif (!this.state.valueFilterText || this.state.valueFilterText.length === 0 ||\n\t\t\t\t\t(String(content).toLowerCase()\n\t\t\t\t\t\t.indexOf(this.state.valueFilterText.toLowerCase()) > -1)) {\n\t\t\tconst valueColumns = [{ column: \"values\", content: this.createContentObject(content), value: content }];\n\t\t\tvaluesTableData.push({ columns: valueColumns, rowKey: index });\n\t\t}\n\t}\n\n\t_makeFunctionsContent() {\n\t\tif (this.props.functionList) {\n\t\t\tconst categories = Object.keys(this.props.functionList);\n\t\t\tconst selectCategory = this._makeFunctionDropdown(categories);\n\t\t\tconst functionsTable = this._makeFunctionsTable(categories);\n\t\t\treturn (\n\t\t\t\t<div className=\"properties-expression-function-table-container\" >\n\t\t\t\t\t{selectCategory}\n\t\t\t\t\t{functionsTable}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (<span>formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_NO_FUNCTIONS);</span>);\n\t}\n\n\t_makeAdditionalColumnsContent(field, fieldColumns) {\n\t\tfor (let i = 0; i < field.additional_column_entries.length; i++) {\n\t\t\tfieldColumns.push({ column: field.additional_column_entries[i].id,\n\t\t\t\tcontent: this.createContentObject(field.additional_column_entries[i].value), value: field.additional_column_entries[i].value });\n\t\t}\n\t}\n\n\t_makeFunctionDropdown(categories) {\n\t\tlet items = categories.map((val, index) => ({ value: val, label: this.props.functionList[val].locLabel }));\n\t\t// Add \"Recently Used\" category as second category\n\t\tconst first = items.slice(0, 1);\n\t\tconst last = items.slice(1);\n\t\titems = first.concat({ value: this.recentUseCat, label: this.recentUseCat }, last);\n\t\tconst label = (this.state.functionCategory === this.recentUseCat) ? this.recentUseCat : this.props.functionList[this.state.functionCategory].locLabel;\n\t\tconst header = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.TABLE_SEARCH_HEADER);\n\t\tconst listBoxMenuIconTranslationIds = {\n\t\t\t\"close.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLOSEMENU),\n\t\t\t\"open.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_OPENMENU)\n\t\t};\n\t\treturn (\n\t\t\t<div className=\"properties-expression-function-select\">\n\t\t\t\t<Dropdown\n\t\t\t\t\tid={\"properties-expression-function-select-dropdown-\" + uuid4()}\n\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\titems={items}\n\t\t\t\t\tonChange={this.onFunctionCatChange}\n\t\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\t\ttitleText={header}\n\t\t\t\t/>\n\t\t\t</div>);\n\t}\n\n\t_makeFieldDropdown() {\n\t\tconst items = [];\n\t\tfor (let i = 0; i < this.fields.field_categories.length; i++) {\n\t\t\titems.push({ value: this.fields.field_categories[i].id, label: this.fields.field_categories[i].locLabel });\n\t\t}\n\t\tconst first = items.slice(0, 1);\n\t\tconst last = items.slice(1);\n\t\tconst newItems = first.concat({ value: this.recentUseCat, label: this.recentUseCat }, last);\n\t\tconst label = (this.state.fieldCategory === this.recentUseCat) ? this.recentUseCat : items[0].label;\n\t\tconst header = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.TABLE_SEARCH_HEADER);\n\t\tconst listBoxMenuIconTranslationIds = {\n\t\t\t\"close.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLOSEMENU),\n\t\t\t\"open.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_OPENMENU)\n\t\t};\n\t\treturn (\n\t\t\t<div className=\"properties-expression-field-select\">\n\t\t\t\t<Dropdown\n\t\t\t\t\tid={\"properties-expression-field-select-dropdown-\" + uuid4()}\n\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\titems={newItems}\n\t\t\t\t\tonChange={this.onFieldCatChange}\n\t\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\t\ttitleText={header}\n\t\t\t\t/>\n\t\t\t</div>);\n\t}\n\n\n\t_makeFunctionsTable(categories) {\n\t\tconst headers = [];\n\t\tconst functionColumn = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_FUNCTION_COLUMN);\n\t\tconst returnColumn = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_RETURN_COLUMN);\n\n\n\t\theaders.push({ key: \"function\", label: functionColumn, width: 73, resizable: true });\n\t\theaders.push({ key: \"return\", label: returnColumn, width: 27 });\n\t\tconst table = this._buildFunctionTable(this.state.functionCategory);\n\n\t\tlet data = table.rows;\n\t\tlet selectedFunction = this.state.functionSelected;\n\t\tif (this.state.functionTableSortSpec !== null) {\n\t\t\tdata = this.sortTableRows(data, this.state.functionTableSortSpec);\n\t\t\tselectedFunction = data.findIndex((row) => row.rowKey === this.state.functionSelected);\n\t\t}\n\t\tconst functionsTableLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FUNCTIONS_TABLE_LABEL);\n\t\tconst functionsEmptyLabel = get(this.resources, MESSAGE_KEYS.EXPRESSION_NO_FUNCTIONS,\n\t\t\tformatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_NO_FUNCTIONS));\n\n\t\treturn (\n\t\t\t<div className=\"properties-functions-table-container\" >\n\t\t\t\t<div className=\"properties-functions-table\" >\n\t\t\t\t\t<FlexibleTable\n\t\t\t\t\t\tcolumns={headers}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tsortable={[\"function\", \"return\"]}\n\t\t\t\t\t\tfilterable={[\"function\"]}\n\t\t\t\t\t\tonFilter={this.onFunctionFilter}\n\t\t\t\t\t\trows={EXPRESSION_TABLE_ROWS}\n\t\t\t\t\t\ttableLabel={functionsTableLabel}\n\t\t\t\t\t\trowSelection={ROW_SELECTION.SINGLE}\n\t\t\t\t\t\tupdateRowSelections={this.onFunctionTableClick}\n\t\t\t\t\t\tselectedRows={[selectedFunction]}\n\t\t\t\t\t\tonRowDoubleClick={this.onFunctionTableDblClick}\n\t\t\t\t\t\tonSort={this.setSortColumn.bind(this, \"functionTable\")}\n\t\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\t\temptyTablePlaceholder={functionsEmptyLabel}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"properties-help-table-container\" >\n\t\t\t\t\t{table.helpContainer}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_buildFunctionTable(category) {\n\t\tconst table = { rows: [], helpContainer: (<div />) };\n\t\tconst categoryFunctions = (category === this.recentUseCat) ? this.props.controller.getExpressionRecentlyUsed() : this.props.functionList[category].functionList;\n\t\tif (categoryFunctions) {\n\t\t\tfor (let index = 0; index < categoryFunctions.length; index++) {\n\t\t\t\tconst catFunction = categoryFunctions[index];\n\t\t\t\tconst columns = [];\n\t\t\t\tif (!this.state.functionFilterText || this.state.functionFilterText.length === 0 ||\n\t\t\t\t\t(catFunction.locLabel.toLowerCase().indexOf(this.state.functionFilterText.toLowerCase()) > -1)) {\n\t\t\t\t\tconst returnType = catFunction.locReturnType ? catFunction.locReturnType : catFunction.return_type;\n\t\t\t\t\tcolumns.push({ column: \"function\", content: this.createContentObject(catFunction.locLabel), value: catFunction.locLabel });\n\t\t\t\t\tcolumns.push({ column: \"return\", content: this.createContentObject(returnType), value: returnType });\n\t\t\t\t\ttable.rows.push({ columns: columns, rowKey: index });\n\t\t\t\t\tif (index === this.state.functionSelected) {\n\t\t\t\t\t\ttable.helpContainer = (\n\t\t\t\t\t\t\t<div className=\"properties-function-help-text\" >\n\t\t\t\t\t\t\t\t<span className=\"properties-function-help-command\">{catFunction.locLabel}:</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>{catFunction.help}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn table;\n\t}\n\n\trender() {\n\t\tconst fieldAndValueTable = this._makeFieldAndValuesContent();\n\t\tconst functionsTable = this._makeFunctionsContent();\n\t\tconst fieldsTab = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_FIELD_TAB);\n\t\tconst functionsTab = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_FUNCTIONS_TAB);\n\t\tlet content = null;\n\n\t\tif (this.state.selectedIndex === 0) {\n\t\t\tcontent = fieldAndValueTable;\n\t\t} else if (this.state.selectedIndex === 1) {\n\t\t\tcontent = functionsTable;\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div className=\"properties-expression-selection-fieldOrFunction\" >\n\t\t\t\t<div className=\"properties-expression-selection-content-switcher\" >\n\t\t\t\t\t<ContentSwitcher onChange={this.onSwitch.bind(this)} selectedIndex={this.state.selectedIndex}>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tkey={0}\n\t\t\t\t\t\t\tname={\"expresson-builder-fields-tab\"}\n\t\t\t\t\t\t\tclassName={\"expresson-builder-fields-tab\"}\n\t\t\t\t\t\t\ttext={fieldsTab}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tkey={1}\n\t\t\t\t\t\t\tname={\"expresson-builder-function-tab\"}\n\t\t\t\t\t\t\tclassName={\"expresson-builder-function-tab\"}\n\t\t\t\t\t\t\ttext={functionsTab}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ContentSwitcher>\n\t\t\t\t</div>\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionSelectFieldOrFunction.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tonChange: PropTypes.func,\n\tfunctionList: PropTypes.array,\n\tlanguage: PropTypes.string\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"carbon-components-react\";\n\nimport Tooltip from \"./../../../../tooltip/tooltip\";\nimport { v4 as uuid4 } from \"uuid\";\nimport classNames from \"classnames\";\n\n\nexport default class ExpressionSelectOperator extends React.Component {\n\n\tonOperatorClick(value, evt) {\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(value);\n\t\t}\n\t}\n\n\t_makeOperatorContent() {\n\t\tif (this.props.operatorList) {\n\t\t\tconst operatorButtons = [];\n\t\t\tthis.props.operatorList.forEach((operator, index) => {\n\t\t\t\tconst tooltipId = uuid4() + \"-tooltip-expression-operator\";\n\t\t\t\tconst tooltip = (\n\t\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t\t{operator.help}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\toperatorButtons.push(\n\t\t\t\t\t<div className=\"properties-operator-tooltip-container\" key={\"expression-operator-\" + index}>\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tid={tooltipId}\n\t\t\t\t\t\t\ttip={tooltip}\n\t\t\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classNames(\"properties-operator-button\", { \"first\": (index % 2 === 0),\n\t\t\t\t\t\t\t\t\t\"second\": !(index % 2 === 0) })}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tkind=\"tertiary\"\n\t\t\t\t\t\t\t\tonClick={this.onOperatorClick.bind(this, operator.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"properties-operator-button-label\">\n\t\t\t\t\t\t\t\t\t{operator.locLabel}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn (\n\t\t\t\t<div className=\"properties-operator-container\" >\n\t\t\t\t\t{operatorButtons}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (<div />);\n\t}\n\trender() {\n\t\tconst operatorDiv = this._makeOperatorContent();\n\t\treturn (\n\t\t\t<div className=\"properties-expression-selection-operator\" >\n\t\t\t\t{operatorDiv}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionSelectOperator.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tonChange: PropTypes.func,\n\toperatorList: PropTypes.array\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ExpressionSelectFieldOrFunction from \"./expression-select-field-function.jsx\";\n\nimport ExpressionSelectOperator from \"./expression-select-operator.jsx\";\n\nexport default class ExpressionSelectionPanel extends React.Component {\n\trender() {\n\t\tconst fieldsOrFunction = (\n\t\t\t<ExpressionSelectFieldOrFunction\n\t\t\t\tcontroller= {this.props.controller}\n\t\t\t\tonChange={this.props.onChange}\n\t\t\t\tfunctionList={this.props.functionList}\n\t\t\t\tlanguage={this.props.language}\n\t\t\t/>\n\t\t);\n\t\tconst operators = (\n\t\t\t<ExpressionSelectOperator\n\t\t\t\tcontroller= {this.props.controller}\n\t\t\t\tonChange={this.props.onChange}\n\t\t\t\toperatorList={this.props.operatorList}\n\t\t\t/>\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"properties-expression-selection-container\" >\n\t\t\t\t{operators}\n\t\t\t\t{fieldsOrFunction}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionSelectionPanel.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\tfunctionList: PropTypes.array.isRequired,\n\toperatorList: PropTypes.array.isRequired,\n\tlanguage: PropTypes.string\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ExpressionControl from \"./../expression\";\nimport ExpressionSelectionPanel from \"./expression-selection-panel\";\nimport { MESSAGE_KEYS } from \"./../../../constants/constants\";\nimport { formatMessage } from \"./../../../util/property-utils\";\nimport { isEqual } from \"lodash\";\n\nexport default class ExpressionBuilder extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selection = [];\n\t\tthis.expressionInfo = props.controller.getExpressionInfo();\n\t\tthis.editorDidMount = this.editorDidMount.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\tthis.onSelectionChange = this.onSelectionChange.bind(this);\n\t\tthis.lastCursorPos = null;\n\n\t}\n\n\tonChange(newValue) {\n\t\tconst value = (typeof newValue === \"string\") ? newValue : newValue.toString();\n\t\tlet cursor = this.editor.getCursor();\n\t\tlet selectionOffset = 1;\n\t\tif (this.editor.somethingSelected()) {\n\t\t\tselectionOffset = 0;\n\t\t\tthis.editor.replaceSelection(value);\n\t\t} else {\n\t\t\tlet buffer = \" \";\n\t\t\tif (this.lastCursorPos) {\n\t\t\t\tthis.editor.setCursor(this.lastCursorPos);\n\t\t\t\tcursor = this.lastCursorPos;\n\t\t\t}\n\t\t\t// if adding to a parenth/bracket/brace expression, no need for space\n\t\t\tconst charBefore = this.editor.getLine(cursor.line)[cursor.ch - 1];\n\t\t\t// edge case of cursor being at line 0, char 0 is still handled here\n\t\t\tif ([\"(\", \"[\", \"{\"].indexOf(charBefore) !== -1) {\n\t\t\t\tbuffer = \"\";\n\t\t\t}\n\t\t\tthis.editor.replaceSelection(buffer + value);\n\t\t}\n\t\tthis._setSelection(value, cursor, selectionOffset);\n\t\t// This is needed to generate a render so that the selection will appear.\n\t\tconst exprValue = this.editor.getValue();\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, exprValue, true);\n\t\tthis.lastCursorPos = this.editor.getCursor();\n\t}\n\n\tonSelectionChange(selection) {\n\t\tthis.selection = selection;\n\t}\n\n\tonBlur(editor, evt) {\n\t\tthis.lastCursorPos = editor.getCursor();\n\t\tconst currentValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst newValue = this.editor.getValue();\n\t\tconst skipValidate = this.expressionSelectionPanel && evt && this.expressionSelectionPanel.contains(evt.relatedTarget);\n\t\t// update property value when value is updated OR value is to be validated\n\t\tif (!isEqual(currentValue, newValue) || !skipValidate) {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue, skipValidate);\n\t\t}\n\t}\n\n\teditorDidMount(editor, next) {\n\t\tthis.editor = editor;\n\t}\n\n\n\t_setSelection(value, cursor, selectionOffset) {\n\t\t// first set the selection to the first param holder of new value\n\t\tif (typeof value === \"string\") {\n\t\t\tconst firstParam = value.indexOf(\"?\");\n\t\t\tif (firstParam !== -1) {\n\t\t\t\tconst selection = { anchor: { line: cursor.line, ch: cursor.ch + firstParam + selectionOffset + 1 },\n\t\t\t\t\thead: { line: cursor.line, ch: cursor.ch + firstParam + selectionOffset } };\n\t\t\t\tthis.onSelectionChange([selection]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// if the newValue doesn't have a param holder\n\t\t// set it to the first param holder found in the expression\n\t\tconst lineCount = this.editor.lineCount();\n\t\tfor (let index = 0; index < lineCount; index++) {\n\t\t\tconst line = this.editor.getLine(index);\n\t\t\tconst paramOffset = line.indexOf(\"?\");\n\t\t\tif (paramOffset !== -1) {\n\t\t\t\tconst selection = { anchor: { line: index, ch: paramOffset + 1 },\n\t\t\t\t\thead: { line: index, ch: paramOffset } };\n\t\t\t\tthis.onSelectionChange([selection]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// if no parameter holders found then set it to end of insert string\n\t\tconst insertSelection = { anchor: { line: cursor.line, ch: cursor.ch + value.length + selectionOffset },\n\t\t\thead: { line: cursor.line, ch: cursor.ch + value.length + selectionOffset } };\n\t\tthis.onSelectionChange([insertSelection]);\n\t\treturn;\n\t}\n\n\trender() {\n\t\tconst expressionLabel = formatMessage(this.props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.EXPRESSION_BUILDER_LABEL);\n\n\t\treturn (\n\t\t\t<div className=\"properties-expression-builder\">\n\t\t\t\t<ExpressionControl\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tbuilder={false}\n\t\t\t\t\teditorDidMount={this.editorDidMount}\n\t\t\t\t\tselectionRange={this.selection}\n\t\t\t\t\tonSelectionChange={this.onSelectionChange}\n\t\t\t\t\tonBlur={this.onBlur}\n\t\t\t\t\theight={96}\n\t\t\t\t\texpressionLabel={expressionLabel}\n\t\t\t\t/>\n\t\t\t\t<div ref={ (ref) => (this.expressionSelectionPanel = ref) }>\n\t\t\t\t\t<ExpressionSelectionPanel\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\tfunctionList={this.expressionInfo.functionCategories}\n\t\t\t\t\t\toperatorList={this.expressionInfo.operators}\n\t\t\t\t\t\tlanguage={this.props.control.language}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionBuilder.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired\n};\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Base class for table controls\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { injectIntl } from \"react-intl\";\nimport { Button } from \"carbon-components-react\";\nimport { Maximize16, Minimize16 } from \"@carbon/icons-react\";\nimport { formatMessage } from \"../../../util/property-utils\";\nimport { MESSAGE_KEYS } from \"../../../constants/constants\";\n\nclass ExpressionToggle extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.buttonHandler = props.controller.getHandlers().buttonHandler || (() => null);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"properties-expression-toggle\">\n\t\t\t\t<div className=\"properties-expression-toggle-absolute\">\n\t\t\t\t\t{this.props.enableMaximize ? (<Button\n\t\t\t\t\t\tclassName=\"maximize\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\trenderIcon={Maximize16}\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t\ticonDescription={formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_MAXIMIZE_LABEL)}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst handlerStatus = this.buttonHandler({\n\t\t\t\t\t\t\t\ttype: \"maximize_tearsheet\",\n\t\t\t\t\t\t\t\tpropertyId: this.props.control.data || {}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (!handlerStatus && this.props.control.data && this.props.control.data.tearsheet_ref) {\n\t\t\t\t\t\t\t\tthis.props.controller.setActiveTearsheet(this.props.control.data.tearsheet_ref);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>) : (<Button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"minimize\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t\trenderIcon={Minimize16}\n\t\t\t\t\t\ticonDescription={formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_MINIMIZE_LABEL)}\n\t\t\t\t\t\tonClick={() => this.props.controller.clearActiveTearsheet()}\n\t\t\t\t\t/>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>);\n\t}\n}\nExpressionToggle.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tenableMaximize: PropTypes.bool\n};\nexport default injectIntl(ExpressionToggle);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet CodeMirror;\nfunction register(cm) {\n\tCodeMirror = cm;\n\tCodeMirror.registerHelper(\"hint\", \"python\", pythonHint);\n}\n\n\nfunction forEach(arr, f) {\n\tfor (var e = arr.length, i = 0; i < e; ++i) {\n\t\tf(arr[i]);\n\t}\n}\n\nfunction arrayContains(arr, item) {\n\tif (!Array.prototype.indexOf) {\n\t\tvar i = arr.length;\n\t\twhile (i--) {\n\t\t\tif (arr[i] === item) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn arr.indexOf(item) !== -1;\n}\n\nfunction scriptHint(editor, _keywords, getToken) {\n\tvar cur = editor.getCursor();\n\tvar token = getToken(editor, cur);\n\tvar tprop = token;\n\tvar context;\n\t// ignore irregular word tokens\n\tif (!(/^[\\w$_]*$/).test(token.string)) {\n\t\ttoken = tprop = { start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n\t\t\tclassName: token.string === \":\" ? \"python-type\" : null };\n\t}\n\tif (!context) {\n\t\tcontext = [];\n\t}\n\tcontext.push(tprop);\n\n\tvar completionList = getCompletions(token, context);\n\tcompletionList.sort();\n\n\treturn { list: completionList,\n\t\tfrom: CodeMirror.Pos(cur.line, token.start),\n\t\tto: CodeMirror.Pos(cur.line, token.end) };\n}\n\nfunction pythonHint(editor) {\n\treturn scriptHint(editor, pythonKeywordsL, function(e, cur) {\n\t\treturn e.getTokenAt(cur);\n\t});\n}\n\n\nvar pythonKeywords = \"and del from not while as elif global or with assert else if pass yield\" +\n\"break except import print class exec in raise continue finally is return def for lambda try\";\nvar pythonKeywordsL = pythonKeywords.split(\" \");\n\nvar pythonBuiltins = \"abs divmod input open staticmethod all enumerate int ord str \" +\n\"any eval isinstance pow sum basestring execfile issubclass print super\" +\n\"bin file iter property tuple bool filter len range type\" +\n\"bytearray float list raw_input unichr callable format locals reduce unicode\" +\n\"chr frozenset long reload vars classmethod getattr map repr xrange\" +\n\"cmp globals max reversed zip compile hasattr memoryview round __import__\" +\n\"complex hash min set apply delattr help next setattr buffer\" +\n\"dict hex object slice coerce dir id oct sorted intern \";\nvar pythonBuiltinsL = pythonBuiltins.split(\" \").join(\"() \")\n\t.split(\" \");\n\nfunction getCompletions(token, context) {\n\tvar found = [];\n\tvar start = token.string;\n\tfunction maybeAdd(str) {\n\t\tif (str.lastIndexOf(start, 0) === 0 && !arrayContains(found, str)) {\n\t\t\tfound.push(str);\n\t\t}\n\t}\n\n\tfunction gatherCompletions(_obj) {\n\t\tforEach(pythonBuiltinsL, maybeAdd);\n\t\tforEach(pythonKeywordsL, maybeAdd);\n\t}\n\n\tif (context) {\n\t\tvar obj = context.pop();\n\t\tvar base = \"\";\n\n\t\tif (obj.type === \"variable\") {\n\t\t\tbase = obj.string;\n\t\t}\telse if (obj.type === \"variable-3\") {\n\t\t\tbase = \":\" + obj.string;\n\t\t}\n\t\twhile (base !== null && context.length) {\n\t\t\tbase = base[context.pop().string];\n\t\t}\n\t\tif (base !== null) {\n\t\t\tgatherCompletions(base);\n\t\t}\n\t}\n\treturn found;\n}\n\nexport {\n\tregister\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet CodeMirror;\nfunction register(cm) {\n\tCodeMirror = cm;\n\tCodeMirror.registerHelper(\"hint\", \"r\", rHint);\n}\n\nfunction forEach(arr, f) {\n\tfor (var e = arr.length, i = 0; i < e; ++i) {\n\t\tf(arr[i]);\n\t}\n}\n\nfunction arrayContains(arr, item) {\n\tif (!Array.prototype.indexOf) {\n\t\tvar i = arr.length;\n\t\twhile (i--) {\n\t\t\tif (arr[i] === item) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn arr.indexOf(item) !== -1;\n}\n\nfunction scriptHint(editor, _keywords, getToken) {\n\tvar cur = editor.getCursor();\n\tvar token = getToken(editor, cur);\n\tvar tprop = token;\n\tvar context;\n\t// ignore irregular word tokens\n\tif (!(/^[\\w$_]*$/).test(token.string)) {\n\t\ttoken = tprop = { start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n\t\t\tclassName: token.string === \":\" ? \"r-type\" : null };\n\t}\n\tif (!context) {\n\t\tcontext = [];\n\t}\n\tcontext.push(tprop);\n\n\tvar completionList = getCompletions(token, context);\n\tcompletionList.sort();\n\n\treturn { list: completionList,\n\t\tfrom: CodeMirror.Pos(cur.line, token.start),\n\t\tto: CodeMirror.Pos(cur.line, token.end) };\n}\n\nfunction rHint(editor) {\n\treturn scriptHint(editor, rKeywordsL, function(e, cur) {\n\t\treturn e.getTokenAt(cur);\n\t});\n}\n\nvar rKeywords = \"function|if|in|break|next|repeat|else|for\" +\n\t\"|return|switch|while|try|tryCatch|stop|warning|require|library\" +\n\t\"|attach|detach|source|setMethod|setGeneric|setGroupGeneric|setClass\";\nvar rKeywordsL = rKeywords.split(\"|\");\n\nvar rBuiltIns = \"zapsmall xzfile xtfrm xor writeLines writeChar writeBin write withVisible withRestarts within\" +\n\t\"withCallingHandlers withAutoprint with while which weekdays warnings warning version Vectorize vector vapply\" +\n\t\"validUTF8 validEnc utf8ToInt UseMethod url unz untracemem untrace unsplit unserialize unname unlockBinding unloadNamespace\" +\n\t\"unlist unlink unique union undebug unclass typeof tryCatch try truncate trunc trimws trigamma\" +\n\t\"transform tracingState tracemem traceback trace toupper toString topenv tolower textConnectionValue textConnection\" +\n\t\"testPlatformEquivalence tempfile tempdir tcrossprod taskCallbackManager tapply tanpi tanh tan tabulate table T t system2 system\" +\n\t\"switch sweep svd suspendInterrupts suppressWarnings suppressPackageStartupMessages suppressMessages summary sum\" +\n\t\"substring substr substitute subset sub strwrap structure strtrim strtoi strsplit strrep strptime strftime\" +\n\t\"stopifnot stop stdout stdin stderr startsWith standardGeneric srcref srcfilecopy srcfilealias srcfile sQuote sqrt sprintf split\" +\n\t\"source sort solve socketSelect socketConnection sinpi sink sinh single sin simplify2array simpleWarning simpleMessage simpleError\" +\n\t\"simpleCondition signif signalCondition sign shQuote showConnections setwd setTimeLimit setSessionTimeLimit setNamespaceInfo setHook\" +\n\t\"setequal setdiff serialize sequence seq_len seq_along seq seek searchpaths search scan scale saveRDS save sapply sample rowSums\" +\n\t\"rowsum rownames rowMeans row round RNGversion length lchoose lbeta lazyLoadDBfetch lazyLoadDBexec\" +\n\t\"RNGkind rm rle rev returnValue return retracemem restartFormals restartDescription requireNamespace require replicate replace repeat\" +\n\t\"rep_len rep removeTaskCallback remove regmatches registerS3methods registerS3method regexpr regexec Reduce Recall\" +\n\t\"readRenviron readRDS readLines readline readChar readBin Re rcond rbind rawToChar rawToBits rawShift rawConnectionValue rawConnection\" +\n\t\"raw rapply rank range R_system_version quote quit quarters qr q pushBackLength pushBack psigamma provideDimnames prod prmatrix print\" +\n\t\"prettyNum pretty Position polyroot pmin pmax pmatch pipe pi pcre_config paste0 paste parseNamespaceFile parse\" +\n\t\"packBits packageStartupMessage packageHasNamespace packageEvent package_version outer ordered order options open OlsonNames\" +\n\t\"oldClass objects nzchar numeric_version numeric NROW nrow normalizePath norm noquote nlevels ngettext NextMethod next Negate NCOL ncol\" +\n\t\"nchar nargs namespaceImportMethods namespaceImportFrom namespaceImportClasses namespaceImport namespaceExport\" +\n\t\"months mode Mod missing min mget message merge memDecompress memCompress mean max matrix match mapply Map\" +\n\t\"makeActiveBinding ls logical logb log2 log1p log10 log lockEnvironment lockBinding local loadNamespace loadingNamespaceInfo loadedNamespaces\" +\n\t\"load list2env list license licence library libcurlVersion lgamma lfactorial levels LETTERS letters lengths\" +\n\t\"lazyLoad lapply labels La_version La_library l10n_info kronecker kappa julian jitter isTRUE isSymmetric isSeekable isS4 isRestart isOpen\" +\n\t\"ISOdatetime ISOdate isNamespaceLoaded isNamespace isIncomplete isFALSE isdebugged isBaseNamespace isatty\" +\n\t\"invokeRestartInteractively invokeRestart invisible intToUtf8 intToBits intersect  acosh acos abs abbreviate\" +\n\t\"interactive interaction integer inherits importIntoEnv Im ifelse if identity identical icuSetCollate icuGetCollate iconvlist iconv I\" +\n\t\"gzfile gzcon gsub grouping grepRaw grepl grep gregexpr globalenv gl getwd gettextf gettext getTaskCallbackNames getSrcLines getRversion\" +\n\t\"getOption getNativeSymbolInfo getNamespaceVersion getNamespaceUsers getNamespaceName getNamespaceInfo getNamespaceImports getNamespaceExports\" +\n\t\"getNamespace getLoadedDLLs getHook getExportedValue geterrmessage getElement getDLLRegisteredRoutines getConnection getCallingDLLe\" +\n\t\"getCallingDLL getAllConnections get0 get gctorture2 gctorture gcinfo gc gamma function forwardsolve formatDL formatC format\" +\n\t\"formals forceAndCall force for flush floor findRestart findPackageEnv findInterval Find Filter file fifo factorial factor F extSoftVersion\" +\n\t\"expression expm1 exp exists evalq eval environmentName environmentIsLocked environment enquote endsWith Encoding\" +\n\t\"encodeString enc2utf8 enc2native emptyenv eigen eapply dynGet duplicated dump droplevels drop dQuote dput double dontCheck dirname dir\" +\n\t\"digamma difftime diff dget determinant detach det deparse delayedAssign asNamespace asinh asin\" +\n\t\"debugonce debuggingState debug date cut curlGetHeaders cumsum cumprod cummin cummax Cstack_info crossprod cospi cosh cos contributors Conj\" +\n\t\"conflicts conditionMessage conditionCall computeRestarts complex comment commandArgs colSums colnames colMeans col\" +\n\t\"closeAllConnections close clearPushBack class choose chol2inv chol chkDots check_tzones chartr charToRaw charmatch character ceiling\" +\n\t\"cbind cat casefold capabilities callCC call c bzfile by builtins browserText browserSetDebug browserCondition browser break bquote body\" +\n\t\"bitwXor bitwShiftR bitwShiftL bitwOr bitwNot bitwAnd bindtextdomain bindingIsLocked bindingIsActive beta besselY besselK besselJ besselI\" +\n\t\"basename baseenv backsolve autoloader autoload attributes attr attachNamespace attach atanh atan2 atan assign asS4 asS3\" +\n\t\"arrayInd array args Arg apply append aperm anyNA anyDuplicated any allowInterrupts all alist agrepl agrep addTaskCallback addNA\";\nvar rBuiltInsL = rBuiltIns.split(\" \");\n\nfunction getCompletions(token, context) {\n\tvar found = [];\n\tvar start = token.string;\n\tfunction maybeAdd(str) {\n\t\tif (str.lastIndexOf(start, 0) === 0 && !arrayContains(found, str)) {\n\t\t\tfound.push(str);\n\t\t}\n\t}\n\n\tfunction gatherCompletions(_obj) {\n\t\tforEach(rBuiltInsL, maybeAdd);\n\t\tforEach(rKeywordsL, maybeAdd);\n\t}\n\n\tif (context) {\n\t\tvar obj = context.pop();\n\t\tvar base = \"\";\n\n\t\tif (obj.type === \"variable\") {\n\t\t\tbase = obj.string;\n\t\t}\telse if (obj.type === \"variable-3\") {\n\t\t\tbase = \":\" + obj.string;\n\t\t}\n\t\twhile (base !== null && context.length) {\n\t\t\tbase = base[context.pop().string];\n\t\t}\n\t\tif (base !== null) {\n\t\t\tgatherCompletions(base);\n\t\t}\n\t}\n\treturn found;\n}\n\nexport {\n\tregister\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-useless-escape: \"off\" */\n\nlet CodeMirror;\nfunction register(cm) {\n\tCodeMirror = cm;\n\tCodeMirror.registerHelper(\"hint\", \"CLEM\", CLEMHint);\n\tCodeMirror.defineMode(\"CLEM\", defineMode);\n\tCodeMirror.defineMIME(\"text/x-CLEM\", \"CLEM\");\n}\n\nconst CLEMKeywords = (\"@BLANK @DIFF1 @DIFF2 @FIELD @FIELDS_BETWEEN @FIELDS_MATCHING \" +\n\"@GLOBAL_MAX @GLOBAL_MEAN @GLOBAL_MIN @GLOBAL_SDEV @GLOBAL_SUM @INDEX @LAST_NON_BLANK \" +\n\"@MAX @MEAN @MIN @MULTI_RESPONSE_SET @NULL @OFFSET @PARTITION_FIELD @PREDICTED \" +\n\"@SDEV @SINCE @SINCE0 @SUM @TARGET @TESTING_PARTITION @THIS @TODAY @TRAINING_PARTITION \" +\n\"@VALIDATION_PARTITION abs allbutfirst allbutlast alphabefore and arccos arccosh arcsin \" +\n\"arcsinh arctan arctan2 arctanh area cdf_chisq cdf_f cdf_normal cdf_t close_to COND1 \" +\n\"and COND2 COND1 or COND2 cos cosh count_equal count_greater_than count_less_than \" +\n\"count_non_nulls count_not_equal count_nulls count_substring crosses date_before \" +\n\"date_days_difference date_from_ywd date_in_days date_in_months date_in_weeks date_in_years \" +\n\"date_iso_day date_iso_week date_iso_year date_months_difference date_weeks_difference \" +\n\"date_years_difference datetime_date datetime_day datetime_day_name datetime_day_short_name \" +\n\"datetime_hour datetime_in_seconds datetime_minute datetime_month datetime_month_name \" +\n\"datetime_month_short_name datetime_now datetime_second datetime_time datetime_timestamp \" +\n\"datetime_weekday datetime_year distance div endstring exp first_index first_non_null \" +\n\"first_non_null_index fracof hasendstring hasmidstring hasstartstring hassubstring hassubstring \" +\n\"if then else elseif endif integer_bitcount integer_leastbit integer_length intof is_date \" +\n\"is_datetime is_integer is_number is_real is_string is_time is_timestamp isalphacode \" +\n\"isendstring islowercode ismidstring isnumbercode isstartstring issubstring issubstring \" +\n\"issubstring_count issubstring_lim isuppercode last last_index last_non_null last_non_null_index \" +\n\"length locchar locchar_back log log10 lowertoupper max max_index max_n MEAN mean_n member \" +\n\"min min_index min_n negate not num_points oneof or overlap pi random random0 rem replace \" +\n\"replicate round sdev_n sign sin sinh skipchar skipchar_back soundex soundex_difference sqrt \" +\n\"startstring stb_centroid_latitude stb_centroid_longitude stripchar strmember subscrs substring \" +\n\"substring_between sum_n tan tanh testbit time_before time_hours_difference time_in_hours \" +\n\"time_in_mins time_in_secs time_mins_difference\").split(\" \");\n\nfunction CLEMHint(editor, options) {\n\treturn scriptHint(editor, CLEMKeywords,\n\t\tfunction(e, cur) {\n\t\t\treturn e.getTokenAt(cur);\n\t\t},\n\t\toptions);\n}\n\nfunction scriptHint(editor, keywords, getToken, options) {\n\t// Find the token at the cursor\n\tvar cur = editor.getCursor();\n\tvar token = getToken(editor, cur);\n\tif ((/\\b(?:string|comment)\\b/).test(token.type)) {\n\t\treturn null;\n\t}\n\ttoken.state = CodeMirror.innerMode(editor.getMode(), token.state).state;\n\n\t// If it's not a 'word-style' token, ignore the token.\n\tif (!((/^[\\w$_@]*$/).test(token.string))) {\n\t\ttoken = { start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n\t\t\ttype: token.string === \".\" ? \"property\" : null };\n\t} else if (token.end > cur.ch) {\n\t\ttoken.end = cur.ch;\n\t\ttoken.string = token.string.slice(0, cur.ch - token.start);\n\t}\n\n\treturn { list: getAutoCompletions(token, keywords, options),\n\t\tfrom: CodeMirror.Pos(cur.line, token.start),\n\t\tto: CodeMirror.Pos(cur.line, token.end) };\n}\n\nfunction getAutoCompletions(token, keywords, options) {\n\tvar found = [];\n\tvar start = token.string;\n\n\tfor (var indx = 0; indx < keywords.length; indx++) {\n\t\tif (keywords[indx].lastIndexOf(start, 0) === 0 && (found.indexOf(keywords[indx]) === -1)) {\n\t\t\tfound.push(keywords[indx]);\n\t\t}\n\t}\n\n\treturn found;\n}\n\n\nfunction defineMode() {\n\n\tvar keywords = (\"@BLANK @DIFF1 @DIFF2 @FIELD @FIELDS_BETWEEN @FIELDS_MATCHING \" +\n\t\"@GLOBAL_MAX @GLOBAL_MEAN @GLOBAL_MIN @GLOBAL_SDEV @GLOBAL_SUM @INDEX @LAST_NON_BLANK \" +\n\t\"@MAX @MEAN @MIN @MULTI_RESPONSE_SET @NULL @OFFSET @PARTITION_FIELD @PREDICTED \" +\n\t\"@SDEV @SINCE @SINCE0 @SUM @TARGET @TESTING_PARTITION @THIS @TODAY @TRAINING_PARTITION \" +\n\t\"@VALIDATION_PARTITION abs allbutfirst allbutlast alphabefore and arccos arccosh arcsin \" +\n\t\"arcsinh arctan arctan2 arctanh area cdf_chisq cdf_f cdf_normal cdf_t close_to COND1 \" +\n\t\"and COND2 COND1 or COND2 cos cosh count_equal count_greater_than count_less_than \" +\n\t\"count_non_nulls count_not_equal count_nulls count_substring crosses date_before \" +\n\t\"date_days_difference date_from_ywd date_in_days date_in_months date_in_weeks date_in_years \" +\n\t\"date_iso_day date_iso_week date_iso_year date_months_difference date_weeks_difference \" +\n\t\"date_years_difference datetime_date datetime_day datetime_day_name datetime_day_short_name \" +\n\t\"datetime_hour datetime_in_seconds datetime_minute datetime_month datetime_month_name \" +\n\t\"datetime_month_short_name datetime_now datetime_second datetime_time datetime_timestamp \" +\n\t\"datetime_weekday datetime_year distance div endstring exp first_index first_non_null \" +\n\t\"first_non_null_index fracof hasendstring hasmidstring hasstartstring hassubstring hassubstring \" +\n\t\"if then else elseif endif integer_bitcount integer_leastbit integer_length intof is_date \" +\n\t\"is_datetime is_integer is_number is_real is_string is_time is_timestamp isalphacode \" +\n\t\"isendstring islowercode ismidstring isnumbercode isstartstring issubstring issubstring \" +\n\t\"issubstring_count issubstring_lim isuppercode last last_index last_non_null last_non_null_index \" +\n\t\"length locchar locchar_back log log10 lowertoupper max max_index max_n MEAN mean_n member \" +\n\t\"min min_index min_n negate not num_points oneof or overlap pi random random0 rem replace \" +\n\t\"replicate round sdev_n sign sin sinh skipchar skipchar_back soundex soundex_difference sqrt \" +\n\t\"startstring stb_centroid_latitude stb_centroid_longitude stripchar strmember subscrs substring \" +\n\t\"substring_between sum_n tan tanh testbit time_before time_hours_difference time_in_hours \" +\n\t\"time_in_mins time_in_secs time_mins_difference\").split(\" \");\n\n\tvar isSpecialChar = /[\\[\\]{}\\(\\),;\\:\\.]/;\n\tvar isDigit = /\\d/;\n\tvar isNumberChar = /[\\w\\.]/;\n\tvar isWordChar = /[\\w\\$_]/;\n\n\tvar isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\n\tfunction tokenResolve(stream, state) {\n\t\tvar ch = stream.next();\n\t\tif (ch === \"#\" && state.startOfLine) {\n\t\t\tstream.skipToEnd();\n\t\t\treturn \"meta\";\n\t\t}\n\n\t\tif (ch === \"\\\"\") {\n\t\t\ttokenString(ch, stream, state);\n\t\t\treturn \"string\";\n\t\t}\n\n\t\tif (ch === \"'\") {\n\t\t\ttokenVariable(ch, stream, state);\n\t\t\treturn \"variable\";\n\t\t}\n\n\t\tif (isSpecialChar.test(ch)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (isDigit.test(ch)) {\n\t\t\tstream.eatWhile(isNumberChar);\n\t\t\treturn \"number\";\n\t\t}\n\t\tif (isOperatorChar.test(ch)) {\n\t\t\tstream.eatWhile(isOperatorChar);\n\t\t\treturn \"operator\";\n\t\t}\n\n\t\tstream.eatWhile(isWordChar);\n\t\tvar cur = stream.current();\n\t\tif (keywords.indexOf(cur) !== -1) {\n\t\t\treturn \"keyword\";\n\t\t}\n\t\treturn \"variable\";\n\t}\n\n\tfunction tokenString(quote, stream, state) {\n\t\tvar next;\n\t\tvar end = false;\n\t\twhile (typeof (next = stream.next()) !== \"undefined\") {\n\t\t\tif (next === quote) {\n\t\t\t\tend = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (end) {\n\t\t\tstate.tokenize = null;\n\t\t}\n\t\treturn \"string\";\n\t}\n\n\tfunction tokenVariable(quote, stream, state) {\n\t\tvar next;\n\t\tvar end = false;\n\t\twhile (typeof (next = stream.next()) !== \"undefined\") {\n\t\t\tif (next === quote) {\n\t\t\t\tend = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (end) {\n\t\t\tstate.tokenize = null;\n\t\t}\n\t\treturn \"variable\";\n\t}\n\n\t// Required implementation\n\n\treturn {\n\t\tstartState: function() {\n\t\t\treturn { tokenize: null };\n\t\t},\n\n\t\ttoken: function(stream, state) {\n\t\t\tif (stream.eatSpace()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar style = (state.tokenize || tokenResolve)(stream, state);\n\t\t\treturn style;\n\t\t},\n\n\t\telectricChars: \"{}\"\n\t};\n}\n\nexport {\n\tregister\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint global-require: 0 */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport Icon from \"./../../../icons/icon.jsx\";\nimport { Button } from \"carbon-components-react\";\nimport classNames from \"classnames\";\nimport { isEqual } from \"lodash\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport WideFlyout from \"./../../components/wide-flyout\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport ExpressionBuilder from \"./expression-builder/expression-builder\";\nimport { MESSAGE_KEYS, CONDITION_MESSAGE_TYPE, DEFAULT_VALIDATION_MESSAGE } from \"./../../constants/constants\";\nimport { Calculator24 } from \"@carbon/icons-react\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants\";\nimport { get } from \"lodash\";\nimport ExpressionToggle from \"./expression-toggle/expression-toggle\";\n\nimport { register as registerPython } from \"./languages/python-hint\";\nimport { register as registerR } from \"./languages/r-hint\";\nimport { register as registerClem } from \"./languages/CLEM-hint\";\n\n// required for server side rendering.\nlet cm = null;\nif (typeof window !== \"undefined\" && typeof window.navigator !== \"undefined\") {\n\tcm = require(\"codemirror\");\n\trequire(\"codemirror/addon/hint/show-hint\");\n\trequire(\"codemirror/addon/display/placeholder\");\n\trequire(\"codemirror/addon/display/autorefresh\");\n\trequire(\"codemirror/mode/javascript/javascript\");\n\trequire(\"codemirror/addon/hint/javascript-hint\");\n\trequire(\"codemirror/addon/hint/sql-hint\");\n\trequire(\"codemirror/mode/sql/sql\");\n\trequire(\"codemirror/mode/python/python\");\n\trequire(\"codemirror/mode/r/r\");\n\tregisterPython(cm);\n\tregisterR(cm);\n\tregisterClem(cm);\n}\n\n\nconst pxPerChar = 8.5;\nconst pxPerLine = 26;\nconst defaultCharPerLine = 30;\nconst maxLineHeight = 15 * pxPerLine; // 20 lines\nconst minLineHeight = 4 * pxPerLine; // 4 lines\n\nclass ExpressionControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowExpressionBuilder: false,\n\t\t\tvalidationInProgress: false\n\t\t};\n\n\t\tthis.origHint = \"\";\n\t\tthis.expressionInfo = this.props.controller.getExpressionInfo();\n\t\tthis.handleValidate = this.handleValidate.bind(this);\n\t\tthis.hasValidate = this.hasValidate.bind(this);\n\t\tthis.cancelExpressionBuilder = this.cancelExpressionBuilder.bind(this);\n\t\tthis.hideExpressionBuilder = this.hideExpressionBuilder.bind(this);\n\t\tthis.showExpressionBuilder = this.showExpressionBuilder.bind(this);\n\t\tthis.editorDidMount = this.editorDidMount.bind(this);\n\t\tthis.addonHints = this.addonHints.bind(this);\n\t\tthis.getDatasetFields = this.getDatasetFields.bind(this);\n\t\tthis.handleBlur = this.handleBlur.bind(this);\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\n\n\t\tthis.handleChange = (editor, data, newValue) => {\n\t\t\t// this is needed when characters are added into the expression builder because\n\t\t\t// entering chars does not go through onChange() in expression builder.\n\t\t\t// This is needed to adjust the selection position in code mirror.\n\t\t\tif (Array.isArray(data.text) && data.text.length === 1 && data.text[0].length === 1 && this.props.onSelectionChange) {\n\t\t\t\t// if a string was replaced, need to calc newPos from the 'data.from' otherwise use 'data.to'\n\t\t\t\tconst newPos = (data.removed[0].length > 0) ? { line: data.from.line, ch: data.from.ch + 1 } : { line: data.to.line, ch: data.to.ch + 1 };\n\t\t\t\tthis.props.onSelectionChange([{ anchor: newPos, head: newPos }]);\n\t\t\t}\n\t\t\tif (this.state.validateIcon) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalidateIcon: null\n\t\t\t\t});\n\t\t\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, DEFAULT_VALIDATION_MESSAGE);\n\t\t\t}\n\t\t};\n\t}\n\n\t// this is needed to ensure expression builder selection works.\n\tcomponentDidUpdate(prevProps) {\n\t\tif (\n\t\t\tthis.props.selectionRange &&\n\t\t\tthis.props.selectionRange.length > 0 &&\n\t\t\t!isEqual(prevProps.selectionRange, this.props.selectionRange) &&\n\t\t\tthis.editor\n\t\t) {\n\t\t\tthis.props.selectionRange.forEach((selected) => {\n\t\t\t\tthis.editor.setSelection(selected.anchor, selected.head);\n\t\t\t});\n\t\t\tthis.editor.focus();\n\t\t}\n\t}\n\n\t// reset to the original autocomplete handler\n\tcomponentWillUnmount() {\n\t\tif (this.origHint && cm) {\n\t\t\tcm.registerHelper(\"hint\", this.props.control.language, this.origHint);\n\t\t}\n\t}\n\n\t// get the set of dataset field names\n\tgetDatasetFields() {\n\t\tconst results = [];\n\t\tconst fields = this.props.controller.getDatasetMetadataFields();\n\t\tfor (const field of fields) {\n\t\t\tresults.push(field.name);\n\t\t}\n\t\treturn results;\n\t}\n\n\t// Add the dataset field names to the autocomplete list\n\taddonHints(editor, options) {\n\t\tvar results = {};\n\t\tvar cur = editor.getCursor();\n\t\tvar token = editor.getTokenAt(cur);\n\t\tif (this.origHint) {\n\t\t\t// get the list of autocomplete names from the language autocomplete handler\n\t\t\tresults = this.origHint(editor, options);\n\n\t\t\t// add to the start of the autocomplete list the set of dataset field names that complete the\n\t\t\t// string that has been entered.\n\t\t\tvar parameters = this.getDatasetFields();\n\t\t\tfor (var i = 0; i < parameters.length; ++i) {\n\t\t\t\tconst parameter = parameters[i];\n\t\t\t\tif (parameter.lastIndexOf(token.string, 0) === 0 && results.list.indexOf(parameter) === -1) {\n\t\t\t\t\tresults.list.unshift(parameter);\n\t\t\t\t} else if (token.string === \" \" && token.type === null) {\n\t\t\t\t\tresults.list.unshift(parameter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t// Save original autocomplete handler and then register our custom handler\n\t// that will add data set filed names to autocomplete list.\n\teditorDidMount(editor, next) {\n\t\tthis.editor = editor;\n\t\t// set the default height, should be between 4 and 20 lines\n\t\tconst controlWidth = (this.expressionEditorDiv) ? this.expressionEditorDiv.clientWidth : 0;\n\t\tconst charPerLine = (controlWidth > 0) ? controlWidth / pxPerChar : defaultCharPerLine;\n\t\t// charlimit in the control sets the height within a min and max\n\t\tlet height = (this.props.control.charLimit)\n\t\t\t? Math.min((this.props.control.charLimit / charPerLine) * pxPerLine, maxLineHeight) : minLineHeight;\n\t\t// let an explicit prop override the calculated height\n\t\theight = this.props.control.rows ? pxPerLine * this.props.control.rows : height;\n\t\theight = this.props.height ? this.props.height : height;\n\t\tthis.editor.setSize(null, Math.max(Math.floor(height), minLineHeight));\n\n\t\tthis.origHint = editor.getHelper({ line: 0, ch: 0 }, \"hint\");\n\t\t// this next line is a hack to overcome a Codemirror problem.  To support SparkSQL, a subset of SQL,\n\t\t// we need to register with Codemirror the language as the value of \"text/x-hive\". When Codemirror\n\t\t// registers the autocomplete addon it registers is as \"sql\" not the subset \"text/x-hive\"\n\t\t// This hack allows use to capture the \"sql\" autocomplete handler and subsitute our custom handler\n\t\t// Same has been done for Python and R\n\t\tlet language = this.props.control.language;\n\t\tswitch (this.props.control.language) {\n\t\tcase \"text/x-hive\":\n\t\t\tlanguage = \"sql\";\n\t\t\tbreak;\n\t\tcase \"text/x-python\":\n\t\t\tlanguage = \"python\";\n\t\t\tbreak;\n\t\tcase \"text/x-rsrc\":\n\t\t\tlanguage = \"r\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t}\n\t\tif (cm) {\n\t\t\tcm.registerHelper(\"hint\", language, this.addonHints);\n\t\t}\n\n\t\tif (this.props.editorDidMount) {\n\t\t\tthis.props.editorDidMount(editor, next);\n\t\t}\n\t}\n\n\tshowExpressionBuilder() {\n\t\t// save the state from the expression builder so if enter and cancel again it will revert\n\t\tthis.initialControlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tthis.initialMessage = this.props.controller.getErrorMessage(this.props.propertyId);\n\t\tthis.initialState = this.props.controller.getControlState(this.props.propertyId);\n\t\tthis.setState({ showExpressionBuilder: true });\n\t}\n\thideExpressionBuilder() {\n\t\tthis.setState({ showExpressionBuilder: false });\n\t}\n\tcancelExpressionBuilder() {\n\t\t// on cancel reset back to original value\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, this.initialControlValue);\n\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, this.initialMessage);\n\t\tthis.props.controller.updateControlState(this.props.propertyId, this.initialState);\n\t\tthis.hideExpressionBuilder();\n\t}\n\n\thandleValidate() {\n\t\tthis.setState({\n\t\t\tvalidateIcon: null,\n\t\t\tvalidationInProgress: true\n\t\t});\n\t\tconst appData = this.props.controller.getAppData();\n\t\tthis.props.controller.getHandlers().validationHandler(this.props.controller, this.props.propertyId, this.props.value, appData, (response) => {\n\t\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, response); // expects \"text\" and \"type\" in response\n\t\t\tthis.setState({\n\t\t\t\tvalidateIcon: response.type,\n\t\t\t\tvalidationInProgress: false\n\t\t\t});\n\t\t\tthis.editor.display.input.blur();\n\t\t});\n\t}\n\n\thasValidate() {\n\t\treturn typeof this.props.controller.getHandlers().validationHandler === \"function\";\n\t}\n\n\thandleKeyDown(editor, evt) {\n\t\t// this is needed to move the cursor to the new line if selection is being used in the expression builder.\n\t\tif (evt.code === \"Enter\") {\n\t\t\tif (this.props.selectionRange && this.props.selectionRange.length > 0 && this.props.onSelectionChange) {\n\t\t\t\tconst newPos = { line: this.props.selectionRange[0].anchor.line + 1, ch: 0 };\n\t\t\t\tthis.props.onSelectionChange([{ anchor: newPos, head: newPos }]);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleBlur(editor, evt) {\n\t\tif (this.props.onBlur) {\n\t\t\t// this will ensure the expression builder can save values onBlur\n\t\t\tthis.props.onBlur(editor, evt);\n\t\t} else {\n\t\t\tconst newValue = this.editor.getValue();\n\t\t\t// don't validate when opening the expression builder\n\t\t\tconst skipValidate = evt && evt.relatedTarget && evt.relatedTarget.classList.contains(\"properties-expression-button\");\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue, skipValidate);\n\t\t}\n\t}\n\n\t_showBuilderButton() {\n\t\t// only show the button if there are function lists available and\n\t\t// not explicitly told not to by the this.props.builder\n\t\t// TODO: Design: how to display builder outside of right flyout?\n\t\treturn this.props.builder && this.props.rightFlyout && this.expressionInfo.functionCategories && Object.keys(this.expressionInfo.functionCategories).length > 0;\n\t}\n\n\trender() {\n\t\tlet messageInfo = this.props.messageInfo;\n\t\tconst messageType = (messageInfo) ? messageInfo.type : CONDITION_MESSAGE_TYPE.INFO;\n\t\tif (messageType === CONDITION_MESSAGE_TYPE.SUCCESS) {\n\t\t\tmessageInfo = null;\n\t\t}\n\n\t\tconst theme = (this.props.state === STATES.DISABLED) ? \"disabled\" : messageType;\n\t\tconst reactIntl = this.props.controller.getReactIntl();\n\n\t\tconst button = this._showBuilderButton() ? (\n\t\t\t<Button kind=\"ghost\" size=\"small\"\n\t\t\t\tclassName=\"properties-expression-button\"\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\tonClick={this.showExpressionBuilder}\n\t\t\t\trenderIcon={Calculator24}\n\t\t\t\ticonDescription={formatMessage(reactIntl, MESSAGE_KEYS.EXPRESSION_BUILDER_ICON_DESCRIPTION)}\n\t\t\t\ttooltipPosition=\"right\"\n\t\t\t\thasIconOnly\n\t\t\t/>)\n\t\t\t: null;\n\n\t\tlet validateIcon = null;\n\t\tif (this.state.validateIcon) {\n\t\t\tvalidateIcon = (\n\t\t\t\t<div className=\"icon validateIcon\">\n\t\t\t\t\t<Icon type={this.state.validateIcon} className={`properties-validation-icon-${this.state.validateIcon}`} />\n\t\t\t\t</div>);\n\t\t}\n\n\t\tconst validateLabel = this.state.validationInProgress ? formatMessage(reactIntl, MESSAGE_KEYS.EXPRESSION_VALIDATING_LABEL)\n\t\t\t: formatMessage(reactIntl, MESSAGE_KEYS.EXPRESSION_VALIDATE_LABEL);\n\t\tconst validateLink = this.hasValidate() && this.props.validateLink ? (\n\t\t\t<div className=\"properties-expression-validate\" disabled={this.props.state === STATES.DISABLED}>\n\t\t\t\t<Button className=\"validateLink\" kind=\"ghost\" onClick={this.handleValidate} disabled={this.props.state === STATES.DISABLED || this.state.validationInProgress}>\n\t\t\t\t\t{validateLabel}\n\t\t\t\t</Button>\n\t\t\t\t{validateIcon}\n\t\t\t</div>)\n\t\t\t: null;\n\t\tconst mirrorOptions = {\n\t\t\tmode: this.props.control.language,\n\t\t\tplaceholder: this.props.control.additionalText,\n\t\t\ttheme: theme + \" custom\",\n\t\t\treadOnly: (this.props.state === STATES.DISABLED) ? \"nocursor\" : false,\n\t\t\textraKeys: { \"Ctrl-Space\": \"autocomplete\" },\n\t\t\tautoRefresh: true,\n\t\t\tlineNumbers: true\n\t\t};\n\t\tconst applyLabel = formatMessage(reactIntl, MESSAGE_KEYS.APPLYBUTTON_LABEL);\n\t\tconst rejectLabel = formatMessage(reactIntl, MESSAGE_KEYS.REJECTBUTTON_LABEL);\n\t\tconst expressonTitle = formatMessage(reactIntl, MESSAGE_KEYS.EXPRESSION_BUILDER_TITLE);\n\n\t\tconst flyout = this.state.showExpressionBuilder ? (<WideFlyout\n\t\t\tcancelHandler={this.cancelExpressionBuilder}\n\t\t\tokHandler={this.hideExpressionBuilder}\n\t\t\tshow={this.state.showExpressionBuilder}\n\t\t\tapplyLabel={applyLabel}\n\t\t\trejectLabel={rejectLabel}\n\t\t\ttitle={expressonTitle}\n\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t>\n\t\t\t<div>\n\t\t\t\t<ExpressionBuilder\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</WideFlyout>) : null;\n\n\t\tconst className = classNames(`properties-expression-editor ${messageType}`,\n\t\t\t{ \"properties-light-disabled\": !this.props.control.light || !this.props.controller.getLight() });\n\n\t\tconst expressionLink = (<div className=\"properties-expression-link-container\" >\n\t\t\t{button}\n\t\t\t{validateLink}\n\t\t</div>);\n\n\t\tlet header = expressionLink;\n\n\t\tif (this.props.expressionLabel) {\n\t\t\theader = (<div className=\"properties-expression-header\">\n\t\t\t\t<div className=\"properties-expression-title\">{this.props.expressionLabel}</div>\n\t\t\t\t{expressionLink}\n\t\t\t</div>);\n\t\t}\n\n\t\tlet toggleMaxMin = null;\n\t\tif (this.props.control.enableMaximize) {\n\t\t\tconst isTearsheetOpen = this.props.controller.getActiveTearsheet() === get(this, \"props.control.data.tearsheet_ref\");\n\t\t\ttoggleMaxMin = (<ExpressionToggle\n\t\t\t\tcontrol={this.props.control}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\tenableMaximize={!isTearsheetOpen}\n\t\t\t/>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"properties-expression-editor-wrapper\" >\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t{flyout}\n\t\t\t\t<div className=\"properties-editor-container\">\n\t\t\t\t\t{header}\n\t\t\t\t\t{toggleMaxMin}\n\t\t\t\t\t<div ref={ (ref) => (this.expressionEditorDiv = ref) } data-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CodeMirror\n\t\t\t\t\t\t\tref= { (ref) => (this.codeMirror = ref)}\n\t\t\t\t\t\t\toptions={mirrorOptions}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\tonBlur={this.handleBlur}\n\t\t\t\t\t\t\teditorDidMount={this.editorDidMount}\n\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={messageInfo} inTable={this.props.tableControl} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\teditorDidMount: PropTypes.func,\n\tbuilder: PropTypes.bool,\n\tvalidateLink: PropTypes.bool,\n\trightFlyout: PropTypes.bool,\n\tselectionRange: PropTypes.array,\n\tonSelectionChange: PropTypes.func,\n\tonBlur: PropTypes.func,\n\texpressionLabel: PropTypes.oneOfType([\n\t\tPropTypes.object,\n\t\tPropTypes.string\n\t]),\n\theight: PropTypes.number, // height in px\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nExpressionControl.defaultProps = {\n\tbuilder: true,\n\tvalidateLink: true\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ExpressionControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { PasswordInput, Form } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport { formatMessage } from \"./../../util/property-utils\";\n\nclass PasswordControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t}\n\n\thandleChange(evt) {\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, evt.target.value);\n\t}\n\n\trender() {\n\t\tconst overrideShowPasswordLabel = `${this.props.control.name}.passwordShow.tooltip`;\n\t\tconst overrideHidePasswordLabel = `${this.props.control.name}.passwordHide.tooltip`;\n\n\t\tconst defaultShowPasswordLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.SHOW_PASSWORD_TOOLTIP);\n\t\tconst defaultHidePasswordLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.HIDE_PASSWORD_TOOLTIP);\n\n\t\tconst showPasswordLabel = this.props.controller.getResource(overrideShowPasswordLabel, defaultShowPasswordLabel);\n\t\tconst hidePasswordLabel = this.props.controller.getResource(overrideHidePasswordLabel, defaultHidePasswordLabel);\n\t\tconst value = this.props.value ? this.props.value : \"\";\n\t\tconst className = classNames(\"properties-pwdfield\", \"properties-input-control\", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null);\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t<Form>\n\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t{...validationProps}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t\t\ttooltipAlignment=\"end\"\n\t\t\t\t\t\tshowPasswordLabel={showPasswordLabel}\n\t\t\t\t\t\thidePasswordLabel={hidePasswordLabel}\n\t\t\t\t\t/>\n\t\t\t\t</Form>\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>);\n\t}\n}\n\nPasswordControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(PasswordControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { TextInput } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { parse, format, isValid } from \"date-fns\";\nimport { DEFAULT_DATE_FORMAT, STATES } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\n\nclass DatefieldControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t\tthis.getDateFormat = this.getDateFormat.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\n\t\tthis.value = props.value;\n\t\tif (!this.value) {\n\t\t\tthis.value = \"\";\n\t\t} else {\n\t\t\tconst date = parse(this.value, DEFAULT_DATE_FORMAT, new Date());\n\t\t\tif (isValid(date)) {\n\t\t\t\tthis.value = format(date, this.getDateFormat());\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t* date-fns date format\n\t*/\n\tgetDateFormat() {\n\t\tlet dateFormat = this.props.control.dateFormat || DEFAULT_DATE_FORMAT;\n\t\tdateFormat = dateFormat.replace(/Y/g, \"y\").replace(/D/g, \"d\");\n\t\treturn dateFormat;\n\t}\n\n\thandleChange(evt) {\n\t\tlet formattedValue = null;\n\t\tthis.value = \"\";\n\n\t\tif (evt.target.value) {\n\t\t\tthis.value = evt.target.value;\n\t\t\tconst date = parse(evt.target.value, this.getDateFormat(), new Date());\n\t\t\tif (isValid(date)) {\n\t\t\t\tformattedValue = format(date, DEFAULT_DATE_FORMAT); // save as ISO format\n\t\t\t} else {\n\t\t\t\tformattedValue = evt.target.value; // Otherwise just save as invalid entered string\n\t\t\t}\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, formattedValue);\n\t}\n\n\trender() {\n\t\tconst className = classNames(\"properties-datefield\", \"properties-input-control\", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null);\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t<TextInput\n\t\t\t\t\t{...validationProps}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\tvalue={this.value}\n\t\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t/>\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDatefieldControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(DatefieldControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { TextInput } from \"carbon-components-react\";\nimport { parse, format, isValid } from \"date-fns\";\nimport classNames from \"classnames\";\n\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { DEFAULT_TIME_FORMAT, STATES } from \"./../../constants/constants\";\n\nclass TimefieldControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(props.propertyId);\n\n\t\tthis.value = props.value;\n\t\tif (!this.value) {\n\t\t\tthis.value = \"\";\n\t\t} else {\n\t\t\tconst date = parse(this.value, \"HH:mm:ss:xxx\", new Date());\n\t\t\tif (isValid(date)) {\n\t\t\t\tthis.value = format(date, this.getTimeFormat());\n\t\t\t}\n\t\t}\n\n\t\tthis.getTimeFormat = this.getTimeFormat.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\tgetTimeFormat() {\n\t\tconst timeFormat = this.props.control.timeFormat || DEFAULT_TIME_FORMAT;\n\t\treturn timeFormat;\n\t}\n\n\thandleChange(evt) {\n\t\tlet formattedValue = null;\n\t\tthis.value = \"\";\n\n\t\tif (evt.target.value) {\n\t\t\tthis.value = evt.target.value;\n\t\t\tconst time = parse(evt.target.value, this.getTimeFormat(), new Date());\n\t\t\tif (isValid(time)) {\n\t\t\t\tformattedValue = format(time, \"HH:mm:ss:xxx\"); // If moment is valid save as ISO format\n\t\t\t} else {\n\t\t\t\tformattedValue = evt.target.value; // Otherwise just save as invalid entered string\n\t\t\t}\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, formattedValue);\n\t}\n\n\trender() {\n\t\tconst className = classNames(\"properties-timefield\", \"properties-input-control\", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null);\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t<TextInput\n\t\t\t\t\t{...validationProps}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\tvalue={this.value}\n\t\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t/>\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTimefieldControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(TimefieldControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport { Checkbox } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES, CARBON_ICONS } from \"./../../constants/constants.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { v4 as uuid4 } from \"uuid\";\nimport classNames from \"classnames\";\nimport Icon from \"./../../../icons/icon\";\n\nclass CheckboxControl extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t}\n\n\thandleChange(value) {\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\trender() {\n\t\tconst label = this.props.control.label ? this.props.control.label.text : \"\";\n\t\tconst tooltipId = uuid4() + \"-tooltip-\" + this.props.control.name;\n\t\tlet tooltip = \"\";\n\t\tif (this.props.control.description && !(this.props.state === STATES.DISABLED || this.props.state === STATES.HIDDEN) && !this.props.tableControl) {\n\t\t\ttooltip = (\n\t\t\t\t<span >{this.props.control.description.text}</span>\n\t\t\t);\n\t\t\t// If tooltip has a link, add propertyId in the link object\n\t\t\tif (this.props.control.description.link) {\n\t\t\t\tthis.props.control.description.link.propertyId = this.props.propertyId;\n\t\t\t}\n\t\t}\n\t\tconst tooltipIcon = isEmpty(tooltip) ? \"\" : (\n\t\t\t<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tlink={this.props.control.description.link ? this.props.control.description.link : null}\n\t\t\t\ttooltipLinkHandler={this.props.controller.getHandlers().tooltipLinkHandler}\n\t\t\t\tdirection=\"bottom\"\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tshowToolTipOnClick\n\t\t\t>\n\t\t\t\t<Icon type={CARBON_ICONS.INFORMATION} className=\"properties-control-description-icon-info\" />\n\t\t\t</Tooltip>\n\t\t);\n\t\tconst checkboxLabel = (\n\t\t\t<span className=\"properties-checkbox-label\">\n\t\t\t\t{label}\n\t\t\t</span>\n\t\t);\n\t\treturn (\n\t\t\t<div className={classNames(\"properties-checkbox\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t\tdata-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t>\n\t\t\t\t<Checkbox\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tlabelText={checkboxLabel}\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\tchecked={Boolean(this.props.value)}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t/>\n\t\t\t\t{tooltipIcon}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.controller.getErrorMessage(this.props.propertyId)} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCheckboxControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.bool, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(CheckboxControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Toggle } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport { formatMessage } from \"./../../util/property-utils\";\n\n\nclass ToggleControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t}\n\n\n\thandleChange(value) {\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\trender() {\n\t\tconst overrideLabelKeyOn = `${this.props.control.name}.toggle.on.label`;\n\t\tconst overrideLabelKeyOff = `${this.props.control.name}.toggle.off.label`;\n\n\t\tconst defaultOnEditLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.TOGGLE_ON_LABEL);\n\t\tconst defaultOffEditLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.TOGGLE_OFF_LABEL);\n\n\t\tconst labelOn = this.props.controller.getResource(overrideLabelKeyOn, defaultOnEditLabel);\n\t\tconst labelOff = this.props.controller.getResource(overrideLabelKeyOff, defaultOffEditLabel);\n\t\tconst size = this.props.tableControl ? \"sm\" : \"md\";\n\t\tconst toggleControl = (<Toggle\n\t\t\tid={this.id}\n\t\t\tsize={size}\n\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\ttoggled={Boolean(this.props.value)}\n\t\t\tlabelB={labelOn}\n\t\t\tlabelA={labelOff}\n\t\t\tonToggle={this.handleChange.bind(this)}\n\t\t\tlabelText={this.props.tableControl ? null : this.props.controlItem}\n\t\t/>);\n\t\tconst className = classNames(\"properties-toggle\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t{toggleControl}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nToggleControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.bool, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ToggleControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Checkbox } from \"carbon-components-react\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport classNames from \"classnames\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { intersection, isEqual } from \"lodash\";\nimport { Information16 } from \"@carbon/icons-react\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { isEmpty } from \"lodash\";\n\n\nclass CheckboxsetControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.uuid = uuid4();\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput) {\n\t\t// update property value if value isn't in current enum value.\n\t\tif (Array.isArray(this.props.value)) {\n\t\t\tconst newValue = intersection(this.props.value, this.props.controlOpts.values);\n\t\t\tif (!isEqual(this.props.value, newValue)) {\n\t\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue, skipValidateInput);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange(val, checked) {\n\t\tlet values = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tif (typeof values === \"undefined\" || values === null) {\n\t\t\tvalues = [];\n\t\t}\n\t\tconst index = values.indexOf(val);\n\t\tif (checked && index < 0) {\n\t\t\t// Add to values\n\t\t\tvalues = values.concat([val]);\n\t\t}\n\t\tif (!(checked) && index >= 0) {\n\t\t\t// Remove from values\n\t\t\tvalues.splice(index, 1);\n\t\t}\n\t\tconst newValues = values.concat();\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValues);\n\t}\n\n\trender() {\n\n\t\tconst hidden = this.props.state === STATES.HIDDEN;\n\t\tlet controlValue = this.props.value;\n\t\tif (typeof controlValue === \"undefined\" || controlValue === null) {\n\t\t\tcontrolValue = [];\n\t\t}\n\t\tconst checkboxes = [];\n\t\tfor (var i = 0; i < this.props.control.values.length; i++) {\n\t\t\tconst val = this.props.control.values[i];\n\t\t\tconst disabled = this.props.state === STATES.DISABLED || !this.props.controlOpts.values.includes(val);\n\t\t\tlet tooltipIcon = null;\n\t\t\tif (Array.isArray(this.props.control.valueDescs) && !isEmpty(this.props.control.valueDescs[i]) && !this.props.tableControl) {\n\t\t\t\tconst tooltip = (\n\t\t\t\t\t<span >{this.props.control.valueDescs[i]}</span>\n\t\t\t\t);\n\t\t\t\ttooltipIcon = (<Tooltip\n\t\t\t\t\tid={`tooltip-${this.uuid}-${i}`}\n\t\t\t\t\ttip={tooltip}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t>\n\t\t\t\t\t<Information16 disabled={disabled} className=\"properties-control-description-icon-info\" />\n\t\t\t\t</Tooltip>);\n\t\t\t}\n\t\t\tconst id = {\n\t\t\t\tname: this.props.propertyId.name,\n\t\t\t\trow: i\n\t\t\t};\n\t\t\tconst checked = (controlValue.indexOf(val) >= 0);\n\t\t\tcheckboxes.push(<div className=\"properties-checkbox-tooltip-container\" key={ControlUtils.getControlId(id, this.uuid)}>\n\t\t\t\t<Checkbox\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tid={ControlUtils.getControlId(id, this.uuid)}\n\t\t\t\t\tkey={val + i}\n\t\t\t\t\tlabelText={this.props.control.valueLabels[i]}\n\t\t\t\t\tonChange={this.handleChange.bind(this, val)}\n\t\t\t\t\tchecked={checked}\n\t\t\t\t/>\n\t\t\t\t{tooltipIcon}\n\t\t\t</div>);\n\t\t}\n\t\treturn (\n\t\t\t<fieldset>\n\t\t\t\t<legend>\n\t\t\t\t\t{this.props.controlItem}\n\t\t\t\t</legend>\n\t\t\t\t<div className={classNames(\"properties-checkboxset\", { \"hide\": this.props.state === STATES.HIDDEN })} data-id={ControlUtils.getDataId(this.props.propertyId)} >\n\t\t\t\t\t<div className={classNames(\"properties-checkboxset-container\", this.props.messageInfo ? this.props.messageInfo.type : null)}>\n\t\t\t\t\t\t{checkboxes}\n\t\t\t\t\t</div>\n\t\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t);\n\t}\n}\n\nCheckboxsetControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tcontrolOpts: PropTypes.oneOfType([\n\t\tPropTypes.object,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst props = {\n\t\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\t\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\t\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n\t};\n\tprops.controlOpts = ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control);\n\treturn props;\n};\n\nexport default connect(mapStateToProps, null)(CheckboxsetControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { isEqual } from \"lodash\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport * as ConditionsUtils from \"./../../ui-conditions/conditions-utils.js\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { RadioButton } from \"carbon-components-react\";\nimport classNames from \"classnames\";\nimport { STATES, UPDATE_TYPE } from \"./../../constants/constants.js\";\nimport { ORIENTATIONS } from \"./../../constants/form-constants.js\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { Information16 } from \"@carbon/icons-react\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { isEmpty } from \"lodash\";\n\nclass RadiosetControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.uuid = uuid4();\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true, UPDATE_TYPE.INITIAL_LOAD);\n\t\tconst val = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tthis.setEnabledStateOfOptionalPanels(val);\n\t\tif (typeof this.props.value !== \"undefined\" && this.props.value !== null) {\n\t\t\tthis.handleCheckedDisabled(this.props.value, this.isRadioButtonDisabled(String(this.props.value)));\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t\tif (typeof this.props.value !== \"undefined\" && this.props.value !== null) {\n\t\t\tthis.handleCheckedDisabled(this.props.value, this.isRadioButtonDisabled(String(this.props.value)));\n\t\t}\n\t}\n\n\t/*\n\t* Sets the enabled and disabled states of the optional panels so the\n\t* selected button's panel is enabled and the others are disabled. This\n\t* will only do anything if there are some optional panels to insert\n\t* after each radio button provided by a SelectorPanel with its insert_panels\n\t* field set to true.\n\t*/\n\tsetEnabledStateOfOptionalPanels(targetValue) {\n\t\tif (this.props.control.optionalPanels) {\n\t\t\tconst valueSet = this.props.controlOpts;\n\t\t\tconst refState = this.props.controller.getPanelStates();\n\n\t\t\t// This populates the control.panelTree with the panels passed in and\n\t\t\t// associates them with any children they have.\n\t\t\tthis.props.controller.parsePanelTree();\n\n\t\t\tfor (let i = 0; i < valueSet.values.length; i++) {\n\t\t\t\tconst val = valueSet.values[i];\n\t\t\t\tconst state = valueSet.values[i] === targetValue ? STATES.ENABLED : STATES.DISABLED;\n\t\t\t\tConditionsUtils.updateState(refState, { \"name\": val }, state, val);\n\t\t\t}\n\n\t\t\tthis.props.controller.setPanelStates(refState);\n\n\t\t\t// Pass values as panel Ids to updatePanelChildrenStatesForPanelIds()\n\t\t\t// becuase each radio button value must be the same as the ID of its inserted panel.\n\t\t\tConditionsUtils.updatePanelChildrenStatesForPanelIds(valueSet.values, this.props.controller);\n\t\t}\n\t}\n\n\tgetOptionalPanel(val) {\n\t\treturn this.props.control.optionalPanels ? this.props.control.optionalPanels[val] : null;\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput, updateType) {\n\t\tif (this.props.value !== null && typeof this.props.value !== \"undefined\" &&\n\t\t\t!this.props.controlOpts.values.includes(this.props.value)) {\n\t\t\tlet defaultValue = null;\n\t\t\t// set to default value if default value is in filtered enum list\n\t\t\tif (this.props.control.valueDef && this.props.control.valueDef.defaultValue && this.props.controlOpts.values.includes(this.props.control.valueDef.defaultValue)) {\n\t\t\t\tdefaultValue = this.props.control.valueDef.defaultValue;\n\t\t\t}\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, defaultValue, skipValidateInput, updateType);\n\t\t}\n\t}\n\n\tconvertTargetValue(targetValue) {\n\t\tif (this.props.control.valueDef.propType === \"boolean\") {\n\t\t\treturn (targetValue === \"true\");\n\t\t} else if (this.props.control.valueDef.propType === \"integer\" ||\n\t\t\t\t\t\t\t\tthis.props.control.valueDef.propType === \"long\"\t||\n\t\t\t\t\t\t\t\tthis.props.control.valueDef.propType === \"double\") {\n\t\t\treturn Number(targetValue);\n\t\t}\n\t\treturn targetValue;\n\t}\n\n\thandleChange(evt) {\n\t\tconst oldVal = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst newVal = this.convertTargetValue(evt);\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newVal);\n\n\t\tif (oldVal !== newVal) {\n\t\t\tthis.setEnabledStateOfOptionalPanels(newVal);\n\t\t}\n\t}\n\n\tisRadioButtonDisabled(radioValue) {\n\t\tconst propState = this.props.valueStates;\n\t\tif (propState && propState[radioValue] && propState[radioValue].value) {\n\t\t\treturn propState[radioValue].value === STATES.DISABLED;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handles those cases where a radio button is both checked and disabled -\n\t * Will attempt to select another enabled radio button if possible.\n\t *\n\t * @param val A radio button enumeration value that is selected\n\t * @param itemDisabled True if the radio button is disabled\n\t */\n\thandleCheckedDisabled(val, itemDisabled) {\n\t\tif (typeof val !== \"undefined\" && val !== null && itemDisabled && this.props.state !== STATES.DISABLED) {\n\t\t\tconst control = this.props.controller.getControl(this.props.propertyId);\n\t\t\tlet newRadioSelection;\n\t\t\tconst defaultValue = this.props.control.valueDef.defaultValue;\n\t\t\tif (defaultValue && !this.isRadioButtonDisabled(defaultValue)) {\n\t\t\t\tnewRadioSelection = defaultValue;\n\t\t\t} else {\n\t\t\t\tfor (const radioValue of control.values) {\n\t\t\t\t\tif (radioValue !== val && !this.isRadioButtonDisabled(radioValue)) {\n\t\t\t\t\t\tnewRadioSelection = radioValue;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newRadioSelection) {\n\t\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newRadioSelection);\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\t\tconst hidden = this.props.state === STATES.HIDDEN;\n\t\tif (!this.props.control.values && this.props.control.controlType === \"radioset\") {\n\t\t\tthis.props.control.values = [true, false];\n\t\t\tthis.props.control.valueLabels = [\"true\", \"false\"];\n\t\t}\n\t\tconst buttons = [];\n\t\tlet wasChecked = false;\n\t\tconst valueSet = this.props.controlOpts;\n\t\tfor (var i = 0; i < valueSet.values.length; i++) {\n\t\t\tlet tooltipIcon = null;\n\t\t\tif (Array.isArray(this.props.control.valueDescs) && !isEmpty(this.props.control.valueDescs[i]) && !this.props.tableControl) {\n\t\t\t\tconst tooltip = (\n\t\t\t\t\t<span>{this.props.control.valueDescs[i]}</span>\n\t\t\t\t);\n\t\t\t\ttooltipIcon = (\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\tid={`tooltip-${this.uuid}-${i}`}\n\t\t\t\t\t\ttip={tooltip}\n\t\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Information16 disabled={disabled} className=\"properties-control-description-icon-info\" />\n\t\t\t\t\t</Tooltip>\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst checked = valueSet.values[i] === this.props.value;\n\t\t\t// RadioButton only accepts values of type string || number\n\t\t\tconst val = (this.props.control.valueDef.propType === \"boolean\") ? String(valueSet.values[i]) : valueSet.values[i];\n\t\t\twasChecked = wasChecked || checked;\n\t\t\tconst itemDisabled = this.isRadioButtonDisabled(val);\n\t\t\tconst optionalPanel = this.getOptionalPanel(val);\n\t\t\tconst id = {\n\t\t\t\tname: this.props.propertyId.name,\n\t\t\t\trow: i\n\t\t\t};\n\t\t\tbuttons.push(\n\t\t\t\t<div key={i} className=\"properties-radioset-panel\">\n\t\t\t\t\t<div className=\"properties-radioset-tooltip\">\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tid={ControlUtils.getControlId(id, this.uuid)}\n\t\t\t\t\t\t\tdisabled={disabled || itemDisabled}\n\t\t\t\t\t\t\tlabelText={valueSet.valueLabels[i]}\n\t\t\t\t\t\t\tvalue={val}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tchecked={checked}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{tooltipIcon}\n\t\t\t\t\t</div>\n\t\t\t\t\t{optionalPanel}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-radioset \", { \"hide\": this.props.state === STATES.HIDDEN })}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\"properties-radio-button-group\", this.props.messageInfo ? this.props.messageInfo.type : null,\n\t\t\t\t\t\t{ \"horizontal\": this.props.control.orientation !== ORIENTATIONS.VERTICAL })} disabled={this.props.state === STATES.DISABLED}\n\t\t\t\t>\n\t\t\t\t\t{buttons}\n\t\t\t\t</div>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} inTable={this.props.tableControl} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRadiosetControl.propTypes = {\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrol: PropTypes.object.isRequired,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalueStates: PropTypes.object, // pass in by redux\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t\tPropTypes.bool\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\tcontrolOpts: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tvalueStates: ownProps.controller.getControlValueStates(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tcontrolOpts: ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control)\n});\n\nexport default connect(mapStateToProps, null)(RadiosetControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { SelectItem, Select, Dropdown, ComboBox } from \"carbon-components-react\";\nimport { isEqual, isEmpty } from \"lodash\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport classNames from \"classnames\";\nimport * as PropertyUtils from \"./../../util/property-utils.js\";\nimport { ControlType } from \"./../../constants/form-constants\";\nimport { MESSAGE_KEYS, STATES, UPDATE_TYPE } from \"./../../constants/constants.js\";\nimport { formatMessage } from \"./../../util/property-utils\";\n\nclass DropDown extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.emptyLabel = \"...\";\n\t\tthis.disableEmptyListDropdown = false;\n\t\tif (isEmpty(props.controlOpts)) {\n\t\t\t// For empty dropdown, get placeholder text from resources\n\t\t\tconst overrideEmptyListPlaceholder = `${this.props.control.name}.emptyList.placeholder`;\n\t\t\tconst defaultEmptyListPlaceholder = formatMessage(this.reactIntl, MESSAGE_KEYS.EMPTY_LIST_PLACEHOLDER);\n\t\t\tthis.emptyLabel = props.controller.getResource(overrideEmptyListPlaceholder, defaultEmptyListPlaceholder);\n\t\t\t// Disable empty dropdown when [property_id].emptyList.placeholder is set in resources\n\t\t\tif (this.emptyLabel !== defaultEmptyListPlaceholder) {\n\t\t\t\tthis.disableEmptyListDropdown = true;\n\t\t\t}\n\t\t} else if (props.control.additionalText) {\n\t\t\t// For non-empty dropdown, get placeholder text from place_holder_text in parameter_info\n\t\t\tthis.emptyLabel = props.control.additionalText;\n\t\t}\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleComboOnChange = this.handleComboOnChange.bind(this);\n\t\tthis.handleOnInputChange = this.handleOnInputChange.bind(this);\n\t\tthis.genSchemaSelectOptions = this.genSchemaSelectOptions.bind(this);\n\t\tthis.genSelectOptions = this.genSelectOptions.bind(this);\n\t\tthis.genFieldSelectOptions = this.genFieldSelectOptions.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true, UPDATE_TYPE.INITIAL_LOAD);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t}\n\n\tgetSelectedOption(options, selectedValue) {\n\t\tconst value = PropertyUtils.stringifyFieldValue(selectedValue, this.props.control);\n\t\tlet selectedOption = options.find(function(option) {\n\t\t\treturn option.value === value;\n\t\t});\n\t\tselectedOption = typeof selectedOption === \"undefined\" ? null : selectedOption;\n\n\t\t// Show the existing value but with a warning instead of filtering it out.\n\t\tconst showExistingValue = (selectedOption === null && value);\n\t\t// user defined value\n\t\tif (showExistingValue || this.props.control.customValueAllowed) {\n\t\t\tselectedOption = {\n\t\t\t\tvalue: value,\n\t\t\t\tlabel: value\n\t\t\t};\n\t\t}\n\n\t\treturn selectedOption;\n\t}\n\n\tgenSchemaSelectOptions(selectedValue) {\n\t\tconst options = [];\n\t\t// allow for user to not select a schema\n\t\toptions.push({\n\t\t\tvalue: \"\",\n\t\t\tlabel: this.emptyLabel\n\t\t});\n\t\tif (Array.isArray(this.props.controlOpts)) {\n\t\t\tfor (const schemaName of this.props.controlOpts) {\n\t\t\t\toptions.push({\n\t\t\t\t\tvalue: schemaName,\n\t\t\t\t\tlabel: schemaName\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst selectedOption = this.getSelectedOption(options, selectedValue);\n\t\treturn {\n\t\t\toptions: options,\n\t\t\tselectedOption: selectedOption\n\t\t};\n\t}\n\n\tgenFieldSelectOptions(selectedValue) {\n\t\tconst options = [];\n\t\t// allow for user to not select a field\n\t\toptions.push({\n\t\t\tvalue: \"\",\n\t\t\tlabel: this.emptyLabel\n\t\t});\n\t\tfor (const field of this.props.controlOpts) {\n\t\t\toptions.push({\n\t\t\t\tvalue: field.name,\n\t\t\t\tlabel: field.name\n\t\t\t});\n\t\t}\n\t\tconst selectedOption = this.getSelectedOption(options, selectedValue);\n\t\treturn {\n\t\t\toptions: options,\n\t\t\tselectedOption: selectedOption\n\t\t};\n\t}\n\n\tgenSelectOptions(selectedValue) {\n\t\tconst options = [];\n\t\t// Allow for enumeration replacement\n\t\tfor (let j = 0; j < this.props.controlOpts.values.length; j++) {\n\t\t\toptions.push({\n\t\t\t\tvalue: this.props.controlOpts.values[j],\n\t\t\t\tlabel: this.props.controlOpts.valueLabels[j]\n\t\t\t});\n\t\t}\n\t\tconst selectedOption = this.getSelectedOption(options, selectedValue);\n\t\treturn {\n\t\t\toptions: options,\n\t\t\tselectedOption: selectedOption\n\t\t};\n\t}\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput, updateType) {\n\t\t// update property value if value isn't in current enum value.  Should only be used for oneofselect\n\t\tif (this.props.control.controlType === ControlType.ONEOFSELECT && this.props.value !== null && typeof this.props.value !== \"undefined\" &&\n\t\t\t!this.props.controlOpts.values.includes(this.props.value)) {\n\t\t\tlet defaultValue = null;\n\t\t\t// set to default value if default value is in filtered enum list\n\t\t\tif (this.props.control.valueDef && this.props.control.valueDef.defaultValue && this.props.controlOpts.values.includes(this.props.control.valueDef.defaultValue)) {\n\t\t\t\tdefaultValue = this.props.control.valueDef.defaultValue;\n\t\t\t} else if (this.props.control.customValueAllowed && this.props.value) {\n\t\t\t\tdefaultValue = this.props.value;\n\t\t\t}\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, defaultValue, skipValidateInput, updateType);\n\t\t}\n\t}\n\n\thandleChange(evt) {\n\t\tlet value = this.props.tableControl ? evt.target.value : evt.selectedItem.value;\n\t\tif (this.props.control.controlType === ControlType.SELECTCOLUMN) {\n\t\t\tvalue = PropertyUtils.fieldStringToValue(value, this.props.control, this.props.controller);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\thandleComboOnChange(evt) {\n\t\tlet value = evt.selectedItem && evt.selectedItem.value ? evt.selectedItem.value : \"\";\n\t\tif (this.props.control.controlType === ControlType.SELECTCOLUMN) {\n\t\t\tvalue = PropertyUtils.fieldStringToValue(value, this.props.control, this.props.controller);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\t// evt is null when onBlur, empty string when clicking the 'x' to clear input\n\thandleOnInputChange(evt) {\n\t\tif (evt !== null) {\n\t\t\tconst value = evt;\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t\t}\n\t}\n\n\trender() {\n\t\tlet dropDown;\n\t\tif (this.props.control.controlType === ControlType.SELECTSCHEMA) {\n\t\t\tdropDown = this.genSchemaSelectOptions(this.props.value);\n\t\t} else if (this.props.control.controlType === ControlType.SELECTCOLUMN) {\n\t\t\tdropDown = this.genFieldSelectOptions(this.props.value);\n\t\t} else {\n\t\t\tdropDown = this.genSelectOptions(this.props.value);\n\t\t}\n\n\t\tconst listBoxMenuIconTranslationIds = {\n\t\t\t\"close.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLOSEMENU),\n\t\t\t\"open.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_OPENMENU)\n\t\t};\n\n\t\tlet dropdownComponent = null;\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\tif (this.props.tableControl) {\n\t\t\tconst options = [];\n\t\t\tconst selection = dropDown.selectedOption && dropDown.selectedOption.value ? dropDown.selectedOption.value : \"\";\n\t\t\tif (!dropDown.selectedOption) {\n\t\t\t\t// need to add null option when no value set.  Shouldn't be an option for the user to select otherwise\n\t\t\t\toptions.push(<SelectItem text={this.emptyLabel} key={this.id} value=\"\" />);\n\t\t\t}\n\t\t\tfor (const option of dropDown.options) {\n\t\t\t\toptions.push(<SelectItem text={option.label} key={this.id + \"-\" + option.value} value={option.value} />);\n\t\t\t}\n\t\t\tdropdownComponent = (<Select\n\t\t\t\tid={this.id}\n\t\t\t\thideLabel\n\t\t\t\tinline\n\t\t\t\tlabelText={this.props.control.label ? this.props.control.label.text : \"\"}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED || this.disableEmptyListDropdown}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tvalue={selection}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t>\n\t\t\t\t{ options }\n\t\t\t</Select>);\n\t\t} else if (this.props.control.customValueAllowed) { // combobox dropdown not allowed in tables\n\t\t\tdropdownComponent = (<ComboBox\n\t\t\t\t{...validationProps}\n\t\t\t\tariaLabel={this.props.control.label ? this.props.control.label.text : \"\"}\n\t\t\t\tid={`${ControlUtils.getDataId(this.props.propertyId)}-dropdown`}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED || this.disableEmptyListDropdown}\n\t\t\t\tplaceholder={dropDown.selectedOption.label}\n\t\t\t\tselectedItem={dropDown.selectedOption.label}\n\t\t\t\titems={dropDown.options}\n\t\t\t\tonChange={this.handleComboOnChange}\n\t\t\t\tonInputChange={this.handleOnInputChange}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\ttitleText={this.props.controlItem}\n\t\t\t/>);\n\t\t} else {\n\t\t\tdropdownComponent = (<Dropdown\n\t\t\t\t{...validationProps}\n\t\t\t\tid={`${ControlUtils.getDataId(this.props.propertyId)}-dropdown`}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED || this.disableEmptyListDropdown}\n\t\t\t\ttype=\"default\"\n\t\t\t\titems={dropDown.options}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tselectedItem={dropDown.selectedOption}\n\t\t\t\tlabel={this.emptyLabel}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\ttitleText={this.props.controlItem}\n\t\t\t/>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-dropdown\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t>\n\t\t\t\t{dropdownComponent}\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} inTable={this.props.tableControl} tableOnly />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDropDown.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tcontrolOpts: PropTypes.oneOfType([\n\t\tPropTypes.object,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.object\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst props = {\n\t\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\t\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\t\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\t};\n\tif (ownProps.control.controlType === ControlType.SELECTSCHEMA) {\n\t\tprops.controlOpts = ownProps.controller.getDatasetMetadataSchemas();\n\t} else if (ownProps.control.controlType === ControlType.SELECTCOLUMN) {\n\t\tprops.controlOpts = ownProps.controller.getFilteredDatasetMetadata(ownProps.propertyId);\n\t} else {\n\t\tprops.controlOpts = ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control);\n\t}\n\treturn props;\n};\n\nexport default connect(mapStateToProps, null)(DropDown);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { MultiSelect, FilterableMultiSelect } from \"carbon-components-react\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport classNames from \"classnames\";\nimport * as PropertyUtils from \"./../../util/property-utils.js\";\nimport { MESSAGE_KEYS, STATES } from \"./../../constants/constants.js\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { isEqual, intersection, isEmpty } from \"lodash\";\n\nclass MultiSelectControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.getSelectedOption = this.getSelectedOption.bind(this);\n\t\tthis.genSelectOptions = this.genSelectOptions.bind(this);\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t\tthis.setShouldRender = this.setShouldRender.bind(this);\n\t\tthis.state = {\n\t\t\tshouldRender: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t\tthis.setShouldRender(prevProps);\n\t}\n\n\t/*\n\t* workaround for https://github.com/elyra-ai/canvas/issues/510\n\t*/\n\tsetShouldRender(prevProps) {\n\t\tif (!isEqual(this.props.controlOpts.values, prevProps.controlOpts.values) && this.state.shouldRender) {\n\t\t\tthis.setState({\n\t\t\t\tshouldRender: false\n\t\t\t});\n\t\t} else if (!this.state.shouldRender) {\n\t\t\tthis.setState({\n\t\t\t\tshouldRender: true\n\t\t\t});\n\t\t}\n\t}\n\n\tgetSelectedOption(options, selectedValues) {\n\t\tconst values = PropertyUtils.stringifyFieldValue(selectedValues, this.props.control);\n\t\tconst selectedOptions = [];\n\t\tif (values) {\n\t\t\tvalues.forEach((value) => selectedOptions.push(options.find(function(option) {\n\t\t\t\treturn option.id === value;\n\t\t\t})));\n\t\t}\n\t\treturn selectedOptions;\n\t}\n\n\tgenSelectOptions(selectedValues) {\n\t\tconst options = [];\n\t\tfor (let j = 0; j < this.props.controlOpts.values.length; j++) {\n\t\t\toptions.push({\n\t\t\t\tid: this.props.controlOpts.values[j],\n\t\t\t\tlabel: this.props.controlOpts.valueLabels[j]\n\t\t\t});\n\t\t}\n\t\tconst selectedOptions = this.getSelectedOption(options, selectedValues);\n\t\treturn {\n\t\t\toptions: options,\n\t\t\tselectedOptions: selectedOptions\n\t\t};\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput) {\n\t\tlet newValues = intersection(this.props.value, this.props.controlOpts.values);\n\t\tif (!isEqual(newValues, this.props.value)) {\n\t\t\t// set back to default values if default values is in filtered enum list\n\t\t\tif (isEmpty(newValues)) {\n\t\t\t\tif (this.props.control.valueDef && this.props.control.valueDef.defaultValue) {\n\t\t\t\t\tnewValues = intersection(this.props.control.valueDef.defaultValue, this.props.controlOpts.values);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValues, skipValidateInput);\n\t\t}\n\t}\n\n\thandleOnChange(evt) {\n\t\tconst controlValues = [];\n\t\tfor (let i = 0; i < evt.selectedItems.length; i++) {\n\t\t\tcontrolValues.push(evt.selectedItems[i].id);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, controlValues);\n\t}\n\n\trender() {\n\t\tconst multiSelectDropdown = this.genSelectOptions(this.props.value);\n\t\t// workaround to recreate react component on filter_enum\n\t\tif (!this.state.shouldRender) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst listBoxMenuIconTranslationIds = {\n\t\t\t\"close.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLOSEMENU),\n\t\t\t\"open.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_OPENMENU),\n\t\t\t\"clear.all\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLEARALL),\n\t\t\t\"clear.selection\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLEARSELECTION)\n\t\t};\n\n\t\tconst overrideEmptyLabelKey = `${this.props.control.name}.multiselect.dropdown.empty.label`;\n\t\tconst defaultEmptyLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.MULTISELECT_DROPDOWN_EMPTY_LABEL);\n\t\tconst overrideOptionsSelectedLabelKey = `${this.props.control.name}.multiselect.dropdown.options.selected.label`;\n\t\tconst defaultOptionsSelectedLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.MULTISELECT_DROPDOWN_OPTIONS_SELECTED_LABEL);\n\n\t\tlet label = \"\";\n\t\tif (multiSelectDropdown.selectedOptions.length === 0) { // Display message for no options selected\n\t\t\tlabel = this.props.controller.getResource(overrideEmptyLabelKey, defaultEmptyLabel);\n\t\t} else { // Display message for multiple options selected\n\t\t\tlabel = this.props.controller.getResource(overrideOptionsSelectedLabelKey, defaultOptionsSelectedLabel);\n\t\t}\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\n\t\tlet dropdownComponent = null;\n\t\tif (this.props.control.filterable) {\n\t\t\tdropdownComponent = (<FilterableMultiSelect\n\t\t\t\t{...validationProps}\n\t\t\t\tid={`${ControlUtils.getDataId(this.props.propertyId)}-multiselect-filterable`}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\titems={multiSelectDropdown.options}\n\t\t\t\tinitialSelectedItems={multiSelectDropdown.selectedOptions}\n\t\t\t\tonChange={this.handleOnChange}\n\t\t\t\tplaceholder={label}\n\t\t\t\ttitleText={this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t/>);\n\t\t} else {\n\t\t\tdropdownComponent = (<MultiSelect\n\t\t\t\t{...validationProps}\n\t\t\t\tid={`${ControlUtils.getDataId(this.props.propertyId)}-multiselect`}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\titems={multiSelectDropdown.options}\n\t\t\t\tselectedItems={multiSelectDropdown.selectedOptions}\n\t\t\t\tonChange={this.handleOnChange}\n\t\t\t\tlabel={label}\n\t\t\t\ttitleText={this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t/>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-dropdown\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t>\n\t\t\t\t{dropdownComponent}\n\t\t\t\t<ValidationMessage state={this.props.state} tableOnly messageInfo={this.props.messageInfo} inTable={this.props.tableControl} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nMultiSelectControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tcontrolOpts: PropTypes.object, // pass in by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst props = {\n\t\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\t\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\t\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\t\tcontrolOpts: ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control)\n\t};\n\treturn props;\n};\n\nexport default connect(mapStateToProps, null)(MultiSelectControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport FlexibleTable from \"../../components/flexible-table\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport classNames from \"classnames\";\nimport { isEqual, intersection } from \"lodash\";\n\nimport { STATES, UPDATE_TYPE } from \"../../constants/constants\";\n\nclass SomeofselectControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.genSelectOptions = this.genSelectOptions.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t\tthis.updateSelections = this.updateSelections.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true, UPDATE_TYPE.INITIAL_LOAD);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput, updateType) {\n\t\tconst newValues = intersection(this.props.value, this.props.controlOpts.values);\n\t\tif (!isEqual(newValues, this.props.value)) {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValues, skipValidateInput, updateType);\n\t\t}\n\t}\n\n\tupdateSelections(selected) {\n\t\tconst controlValues = [];\n\t\tfor (let i = 0; i < selected.length; i++) {\n\t\t\tconst value = this.props.controlOpts.values[selected[i]];\n\t\t\tcontrolValues.push(value);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, controlValues);\n\t}\n\n\tgenSelectOptions(selectedValues) {\n\t\tconst tableOptions = {\n\t\t\toptions: [],\n\t\t\tselected: []\n\t\t};\n\t\t// Allow for enumeration replacement\n\t\tfor (let i = 0; i < this.props.controlOpts.values.length; i++) {\n\t\t\tconst checked = selectedValues.indexOf(this.props.controlOpts.values[i]) !== -1;\n\t\t\tif (checked) {\n\t\t\t\ttableOptions.selected.push(i);\n\t\t\t}\n\t\t\tconst columns = [];\n\t\t\tcolumns.push({\n\t\t\t\tcolumn: \"someofselect\",\n\t\t\t\tstate: this.props.state,\n\t\t\t\tcontent: this.props.controlOpts.valueLabels[i],\n\t\t\t}\n\t\t\t);\n\t\t\ttableOptions.options.push({ className: \"table-row\", columns: columns, disabled: this.props.state === STATES.DISABLED }); // add state in obj\n\t\t}\n\t\treturn tableOptions;\n\t}\n\n\trender() {\n\t\tlet controlValue = this.props.value;\n\t\tif (typeof controlValue === \"undefined\" || controlValue === null) {\n\t\t\tcontrolValue = [];\n\t\t}\n\t\tconst tableOptions = this.genSelectOptions(controlValue);\n\t\tconst rows = this.props.control.rows ? this.props.control.rows : 5.5;\n\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-someofselect \", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t>\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t<FlexibleTable\n\t\t\t\t\tcolumns={[{ \"key\": \"someofselect\", \"label\": \"\" }]}\n\t\t\t\t\trows={rows}\n\t\t\t\t\tdata={tableOptions.options}\n\t\t\t\t\tscrollKey={this.props.control.name}\n\t\t\t\t\ttableLabel={tableLabel}\n\t\t\t\t\tselectedRows={tableOptions.selected}\n\t\t\t\t\tupdateRowSelections={this.updateSelections}\n\t\t\t\t\tselectable\n\t\t\t\t\tshowHeader={false}\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t\t/>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} inTable={this.props.tableControl} />\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nSomeofselectControl.propTypes = {\n\tcontrol: PropTypes.object,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\tcontrolOpts: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tcontrolOpts: ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control)\n});\n\nexport default connect(mapStateToProps, null)(SomeofselectControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport FlexibleTable from \"./../../components/flexible-table\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport * as PropertyUtils from \"./../../util/property-utils\";\nimport { isEmpty } from \"lodash\";\n\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants\";\n\nimport ReadonlyControl from \"./../readonly\";\n\n/* eslint max-depth: [\"error\", 6] */\n\nclass SelectColumnsControl extends AbstractTable {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.emptyTableButtonClickHandler = this.addOnClick.bind(this, this.props.propertyId);\n\t\tthis.emptyTableButtonLabel = PropertyUtils.formatMessage(this.reactIntl, MESSAGE_KEYS.STRUCTURETABLE_ADDBUTTON_LABEL);\n\t}\n\n\tmakeRows(controlValue, tableState) {\n\t\tconst rows = [];\n\t\tif (controlValue) {\n\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\tconst columns = [];\n\t\t\t\t// If the propertyId contains 'row' then this selectcolumns control is part of a table.\n\t\t\t\t// Need to add an additional 'index' to retrieve the correct value from the control within a table.\n\t\t\t\tconst row = typeof this.props.propertyId.row !== \"undefined\"\n\t\t\t\t\t? { row: this.props.propertyId.row, index: rowIndex }\n\t\t\t\t\t: { row: rowIndex };\n\t\t\t\tconst propertyId = Object.assign({}, this.props.propertyId, row);\n\t\t\t\tconst control = Object.assign({}, this.props.control);\n\t\t\t\tif (control.dmImage) {\n\t\t\t\t\tconst fields = this.props.controller.getDatasetMetadataFields();\n\t\t\t\t\tconst value = PropertyUtils.stringifyFieldValue(this.props.controller.getPropertyValue(propertyId), control, true);\n\t\t\t\t\tconst icon = PropertyUtils.getDMFieldIcon(fields,\n\t\t\t\t\t\tvalue, control.dmImage);\n\t\t\t\t\tcontrol.icon = icon;\n\t\t\t\t}\n\t\t\t\tconst cellContent = (\n\t\t\t\t\t<div className=\"properties-table-cell-control\">\n\t\t\t\t\t\t<ReadonlyControl\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\t\ttableControl\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\tcolumns.push({\n\t\t\t\t\tkey: rowIndex + \"-0-field\",\n\t\t\t\t\tcolumn: \"field\",\n\t\t\t\t\tcontent: cellContent\n\t\t\t\t});\n\t\t\t\trows.push({\n\t\t\t\t\tkey: rowIndex,\n\t\t\t\t\tonClickCallback: this.handleRowClick.bind(this, rowIndex, false),\n\t\t\t\t\tcolumns: columns,\n\t\t\t\t\tclassName: \"column-select-table-row\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn rows;\n\t}\n\n\t/**\n\t* Callback function invoked when closing field picker\n\t* @param allSelectedFields all fields selected, includes newSelections\n\t* @param newSelections the newly selected rows\n\t*/\n\tonFieldPickerClose(allSelectedFields, newSelections) {\n\t\tif (allSelectedFields && newSelections) {\n\t\t\tthis.setCurrentControlValueSelected(allSelectedFields, newSelections);\n\t\t\tconst scrollToRow = newSelections[newSelections.length - 1];\n\t\t\tthis.setScrollToRow(scrollToRow);\n\t\t}\n\t}\n\n\tmakeHeader() {\n\t\tconst headers = [];\n\t\theaders.push({\n\t\t\t\"key\": \"field\",\n\t\t\t\"label\": PropertyUtils.formatMessage(this.reactIntl,\n\t\t\t\tMESSAGE_KEYS.FIELDPICKER_FIELDCOLUMN_LABEL),\n\t\t\t\"description\": (null) });\n\t\treturn headers;\n\t}\n\n\trender() {\n\t\tconst headers = this.makeHeader();\n\n\t\tconst tableButtonConfig = {\n\t\t\tfieldPickerCloseFunction: this.onFieldPickerClose\n\t\t};\n\n\t\tconst rows = this.makeRows(this.props.value, this.props.state);\n\t\tconst topRightPanel = this.makeAddRemoveButtonPanel(this.props.state, tableButtonConfig);\n\t\tlet rowToScrollTo;\n\t\tif (Number.isInteger(this.scrollToRow) && rows.length > this.scrollToRow) {\n\t\t\trowToScrollTo = this.scrollToRow;\n\t\t\tdelete this.scrollToRow;\n\t\t}\n\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\t\tconst table =\t(\n\t\t\t<FlexibleTable\n\t\t\t\tcolumns={headers}\n\t\t\t\tdata={rows}\n\t\t\t\tscrollToRow={rowToScrollTo}\n\t\t\t\ttopRightPanel={topRightPanel}\n\t\t\t\tscrollKey={this.props.control.name}\n\t\t\t\ttableState={this.props.state}\n\t\t\t\tmessageInfo={this.props.messageInfo}\n\t\t\t\trows={this.props.control.rows}\n\t\t\t\ttableLabel={tableLabel}\n\t\t\t\tselectedRows={this.props.selectedRows}\n\t\t\t\trowSelection={this.props.control.rowSelection}\n\t\t\t\tupdateRowSelections={this.updateRowSelections}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t/>);\n\n\t\tconst content = (\n\t\t\t<div>\n\t\t\t\t<div className=\"properties-column-select-table\">\n\t\t\t\t\t{table}\n\t\t\t\t</div>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.propertyId)} className=\"properties-column-select\" >\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t<MoveableTableRows\n\t\t\t\t\ttableContainer={content}\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\temptyTableButtonLabel={this.emptyTableButtonLabel}\n\t\t\t\t\temptyTableButtonClickHandler={this.emptyTableButtonClickHandler}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSelectColumnsControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\topenFieldPicker: PropTypes.func.isRequired,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(SelectColumnsControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ControlFactory from \"../control-factory\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport classNames from \"classnames\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { cloneDeep } from \"lodash\";\n\n\nclass StructureEditorControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.controlFactory = new ControlFactory(this.props.controller);\n\t\tthis.controlFactory.setFunctions(this.props.openFieldPicker, this.props.buildUIItem);\n\t}\n\n\t/**\n\t * Retrieves a sub-control definition by name.\n\t *\n\t * @param subCtrlName Name of the sub-control def to retrieve\n\t * @param a SubControl structure for the given item\n\t */\n\t_getSubControlDef(subCtrlName) {\n\t\tfor (let i = 0; i < this.props.control.subControls.length; i++) {\n\t\t\tif (this.props.control.subControls[i].name === subCtrlName) {\n\t\t\t\treturn this.props.control.subControls[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieves a sub-control index in it's parent structure.\n\t *\n\t * @param subCtrlName Name of the sub-control index to retrieve\n\t * @param The parent index for the given item\n\t */\n\t_getColumnIndex(subCtrlName) {\n\t\tfor (let i = 0; i < this.props.control.subControls.length; i++) {\n\t\t\tif (this.props.control.subControls[i].name === subCtrlName) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Creates a layout row of controls.\n\t *\n\t * @param rowCtrlNames String array of sub-control names\n\t * @return An array of controls for rendering\n\t */\n\t_makeRow(rowCtrlNames) {\n\t\tconst row = [];\n\t\tfor (let y = 0; y < rowCtrlNames.length; y++) {\n\t\t\tconst control = this._getSubControlDef(rowCtrlNames[y]);\n\t\t\tif (control && control.visible) {\n\t\t\t\tconst childPropertyId = {\n\t\t\t\t\tname: this.props.control.name,\n\t\t\t\t\tcol: this._getColumnIndex(rowCtrlNames[y])\n\t\t\t\t};\n\t\t\t\tconst parentPropertyId = cloneDeep(this.props.propertyId);\n\n\t\t\t\tlet propertyId = childPropertyId;\n\t\t\t\tif (parentPropertyId.name !== childPropertyId.name) {\n\t\t\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, childPropertyId);\n\t\t\t\t}\n\t\t\t\trow.push(this.controlFactory.createControlItem(control, propertyId));\n\t\t\t}\n\t\t}\n\t\treturn row;\n\t}\n\n\t/**\n\t * Creates the sub-controls for rendering.\n\t *\n\t * @return An array of arrays, each of which contains a row of controls\n\t */\n\t_makeControls() {\n\t\tconst controls = [];\n\t\t// If there is a layout, use that to determine control ordering\n\t\tif (Array.isArray(this.props.control.layout)) {\n\t\t\tconst layout = this.props.control.layout;\n\t\t\tfor (let i = 0; i < layout.length; i++) {\n\t\t\t\tif (Array.isArray(layout[i])) {\n\t\t\t\t\tcontrols.push(this._makeRow(layout[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// If there is no layout, just arrange the controls in a single ordered column\n\t\t\tfor (let i = 0; i < this.props.control.subControls.length; i++) {\n\t\t\t\tif (this.props.control.subControls[i].visible) {\n\t\t\t\t\tconst childPropertyId = {\n\t\t\t\t\t\tname: this.props.control.name,\n\t\t\t\t\t\tcol: this._getColumnIndex(this.props.control.subControls[i].name)\n\t\t\t\t\t};\n\t\t\t\t\tconst parentPropertyId = cloneDeep(this.props.propertyId);\n\n\t\t\t\t\tlet propertyId = childPropertyId;\n\t\t\t\t\tif (parentPropertyId.name !== childPropertyId.name) {\n\t\t\t\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, childPropertyId);\n\t\t\t\t\t}\n\t\t\t\t\tcontrols.push([this.controlFactory.createControlItem(this.props.control.subControls[i], propertyId)]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn controls;\n\t}\n\n\t_makeControlTable(controls) {\n\t\tconst rows = [];\n\t\tfor (let i = 0; i < controls.length; i++) {\n\t\t\tconst row = [];\n\t\t\tfor (let j = 0; j < controls[i].length; j++) {\n\t\t\t\trow.push(<td key={(1 + i) * j} className=\"properties-structureeditor-cell\"><div>{controls[i][j]}</div></td>);\n\t\t\t}\n\t\t\trows.push(<tr key={1 + i}>{row}</tr>);\n\t\t}\n\t\t// Added role presentation to fix a11y violation - no headers in the table\n\t\treturn (<table role=\"presentation\"><tbody>{rows}</tbody></table>);\n\t}\n\n\trender() {\n\t\tconst controls = this._makeControlTable(this._makeControls());\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-structureeditor \", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t>\n\t\t\t\t{controls}\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} inTable={false} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nStructureEditorControl.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\topenFieldPicker: PropTypes.func,\n\trightFlyout: PropTypes.bool,\n\tstate: PropTypes.string, // passed in by redux\n\tvalue: PropTypes.array, // passed in by redux\n\tmessageInfo: PropTypes.object // passed in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(StructureEditorControl);\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray'),\n    negate = require('./negate');\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nmodule.exports = reject;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// CONTROL structuretable\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport * as PropertyUtils from \"./../../util/property-utils\";\nimport { Type, ParamRole } from \"./../../constants/form-constants\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants\";\n\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { reject, findIndex, cloneDeep, isEmpty } from \"lodash\";\nimport * as ControlUtils from \"./../../util/control-utils\";\n\nclass StructureTableControl extends AbstractTable {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.addColumns = this.addColumns.bind(this);\n\t\tthis.removeColumns = this.removeColumns.bind(this);\n\t\tthis.getDefaultRow = this.getDefaultRow.bind(this);\n\t\tthis.indexOfRow = this.indexOfRow.bind(this);\n\t\tthis.emptyTableButtonClickHandler = this.addOnClick.bind(this, this.props.propertyId);\n\t\tthis.emptyTableButtonLabel = PropertyUtils.formatMessage(this.reactIntl, MESSAGE_KEYS.STRUCTURETABLE_ADDBUTTON_LABEL);\n\t}\n\n\tindexOfRow(columnName) {\n\t\tconst keyIndex = this.props.control.keyIndex;\n\t\treturn findIndex(this.props.controller.getPropertyValue(this.props.propertyId), function(row) {\n\t\t\treturn row[keyIndex] === columnName;\n\t\t});\n\t}\n\n\taddColumns(columnNames, callback) {\n\t\tconst newRows = [];\n\t\tconst isMap = this.props.control.valueDef.isMap;\n\t\tfor (var i = 0; i < columnNames.length; i++) {\n\t\t\tconst columnName = columnNames[i];\n\n\t\t\t// Sometimes the source list selection hasn\"t changed so do an\n\t\t\t// explicit check for whether an entry for this column exists\n\t\t\tif (this.indexOfRow(columnName) < 0) {\n\t\t\t\tconst newRow = cloneDeep(this.props.control.defaultRow);\n\n\t\t\t\t// Set the column name.\n\t\t\t\tif (isMap) {\n\t\t\t\t\t// For maps, this means adding the column name to the start of the cloned list.\n\t\t\t\t\tnewRow.unshift(columnName);\n\t\t\t\t} else {\n\t\t\t\t\t// For lists, this means assigning the column name to the correct location in the cloned list.\n\t\t\t\t\tnewRow[this.props.control.keyIndex] = columnName;\n\t\t\t\t}\n\t\t\t\tnewRows.push(newRow);\n\t\t\t}\n\t\t}\n\n\t\tconst rows = this.props.controller.getPropertyValue(this.props.propertyId).concat(newRows);\n\t\tthis.setCurrentControlValueSelected(rows);\n\t}\n\n\tremoveColumns(columnNames, callback) {\n\n\t\tconst rows = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst keyIndex = this.props.control.keyIndex;\n\n\t\tconst newRows = reject(rows, function(val) {\n\t\t\treturn columnNames.indexOf(val[keyIndex]) >= 0;\n\t\t});\n\t\tthis.setCurrentControlValueSelected(newRows);\n\t}\n\n\t/**\n\t* returns the default row for the control\n\t* @param field optional field to construct the defaultRow for where the parameter has role===COLUMN\n\t*/\n\tgetDefaultRow(field) {\n\t\tconst row = [];\n\t\t// if value is already in propertyValues, return that row\n\t\tif (this.props.value && field) {\n\t\t\tconst dataColumnIndex = PropertyUtils.getTableFieldIndex(this.props.control);\n\t\t\tfor (let i = 0; i < this.props.value.length; i++) {\n\t\t\t\tconst fieldValue = this.props.value[i][dataColumnIndex];\n\t\t\t\tif (fieldValue === field || this.props.value[i] === field) {\n\t\t\t\t\treturn this.props.value[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let idx = 0; idx < this.props.control.subControls.length; idx++) {\n\t\t\tconst subControl = this.props.control.subControls[idx];\n\t\t\tif (subControl.role === ParamRole.COLUMN) {\n\t\t\t\trow.push(field);\n\t\t\t} else if (subControl.role === ParamRole.NEW_COLUMN) {\n\t\t\t\trow.push(PropertyUtils.stringifyFieldValue(field, subControl).replace(\".\", \"_\"));\n\t\t\t} else if (typeof subControl.dmDefault !== \"undefined\") {\n\t\t\t\trow.push(PropertyUtils.getDMDefault(subControl, field, this.props.controller.getDatasetMetadataFields()));\n\t\t\t} else if (typeof this.props.control.defaultRow !== \"undefined\") {\n\t\t\t\tlet defaultRowIndex = idx;\n\t\t\t\t// defaultRow does not contain the first column field, ex: aggregate.json\n\t\t\t\tif (this.props.control.subControls.length !== this.props.control.defaultRow.length) {\n\t\t\t\t\tdefaultRowIndex -= 1;\n\t\t\t\t}\n\t\t\t\tconst defaultRowValue = this.props.control.defaultRow[defaultRowIndex];\n\t\t\t\tif (this.props.control.subControls[defaultRowIndex].valueDef.propType === Type.STRUCTURE) {\n\t\t\t\t\trow.push([]); // nested structure will default to an empty array\n\t\t\t\t} else if (defaultRowValue && defaultRowValue.parameterRef) {\n\t\t\t\t\t// if the defaultRow value is a parameterRef, get the property value\n\t\t\t\t\trow.push(this.props.controller.getPropertyValue({ name: defaultRowValue.parameterRef }));\n\t\t\t\t} else {\n\t\t\t\t\trow.push(defaultRowValue);\n\t\t\t\t}\n\t\t\t} else if (subControl.valueDef && subControl.valueDef.defaultValue) {\n\t\t\t\t// get the defaultValue from the parameter\n\t\t\t\tif (subControl.valueDef.defaultValue.parameterRef) {\n\t\t\t\t\trow.push(this.props.controller.getPropertyValue({ name: subControl.valueDef.defaultValue.parameterRef }));\n\t\t\t\t} else {\n\t\t\t\t\trow.push(subControl.valueDef.defaultValue);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trow.push(null);\n\t\t\t}\n\t\t}\n\t\treturn row;\n\t}\n\n\t/**\n\t* Callback function invoked when closing field picker for structures\n\t* @param allSelectedFields all fields selected, includes newSelections\n\t* @param newSelections the newly selected rows\n\t*/\n\tonFieldPickerClose(allSelectedFields, newSelections) {\n\t\tif (allSelectedFields && newSelections) {\n\t\t\tconst newControlValues = [];\n\t\t\tfor (const field of allSelectedFields) {\n\t\t\t\tnewControlValues.push(this.getDefaultRow(field));\n\t\t\t}\n\t\t\tthis.setCurrentControlValueSelected(newControlValues, newSelections);\n\t\t\tconst scrollToRow = newSelections[newSelections.length - 1];\n\t\t\tthis.setScrollToRow(scrollToRow);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst tableButtonConfig = {\n\t\t\tfieldPickerCloseFunction: this.onFieldPickerClose\n\t\t};\n\n\t\tconst customButtons = this.props.control && this.props.control.buttons;\n\t\tconst table = this.createTable(this.props.state, tableButtonConfig, customButtons);\n\t\tconst content = (\n\t\t\t<div>\n\t\t\t\t<div className=\"properties-st properties-st-buttons\">\n\t\t\t\t\t{table}\n\t\t\t\t</div>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>);\n\n\t\tconst onPanelContainer = this.getOnPanelContainer(this.props.selectedRows);\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName=\"properties-column-structure-wrapper\"\n\t\t\t>\n\t\t\t\t<div className=\"properties-column-structure\">\n\t\t\t\t\t<MoveableTableRows\n\t\t\t\t\t\ttableContainer={content}\n\t\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\t\temptyTableButtonLabel={this.emptyTableButtonLabel}\n\t\t\t\t\t\temptyTableButtonClickHandler={this.emptyTableButtonClickHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{onPanelContainer}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nStructureTableControl.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\topenFieldPicker: PropTypes.func.isRequired,\n\trightFlyout: PropTypes.bool,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(StructureTableControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { MESSAGE_KEYS, STATES } from \"./../../constants/constants\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { isEmpty } from \"lodash\";\n\nclass StructurelisteditorControl extends AbstractTable {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.addRow = this.addRow.bind(this);\n\t\tthis.allowColumnControls = true;\n\t}\n\n\taddRow() {\n\t\tconst newRow = this.getDefaultRow();\n\t\tconst rows = this.props.controller.getPropertyValue(this.props.propertyId).concat([newRow]);\n\t\tthis.setCurrentControlValueSelected(rows);\n\t}\n\n\trender() {\n\t\tconst tableButtonConfig = {\n\t\t\taddButtonLabel: formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.STRUCTURELISTEDITOR_ADDBUTTON_LABEL),\n\t\t\tremoveButtonLabel: formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.STRUCTURELISTEDITOR_REMOVEBUTTON_LABEL),\n\t\t\taddButtonFunction: this.addRow\n\t\t};\n\n\t\tconst customButtons = this.props.control && this.props.control.buttons;\n\t\tconst table = this.createTable(this.props.state, tableButtonConfig, customButtons);\n\n\t\tconst tableContainer = (<div>\n\t\t\t<div className=\"properties-sle properties-sle-buttons\">\n\t\t\t\t{table}\n\t\t\t</div>\n\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t</div>);\n\n\t\tconst onPanelContainer = this.getOnPanelContainer(this.props.selectedRows);\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName=\"properties-sle-wrapper\"\n\t\t\t>\n\t\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\t\tclassName=\"properties-sle-container\"\n\t\t\t\t>\n\t\t\t\t\t<MoveableTableRows\n\t\t\t\t\t\ttableContainer={tableContainer}\n\t\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\t\temptyTableButtonLabel={tableButtonConfig.addButtonLabel}\n\t\t\t\t\t\temptyTableButtonClickHandler={this.addRow}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{onPanelContainer}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nStructurelisteditorControl.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\trightFlyout: PropTypes.bool,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(StructurelisteditorControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// CONTROL readonlytable\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants\";\n\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { isEmpty } from \"lodash\";\n\nclass ReadonlyTableControl extends AbstractTable {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.editCallback = this.editCallback.bind(this);\n\t\tthis.buttonHandler = this.props.controller.getHandlers().buttonHandler;\n\t}\n\n\teditCallback() {\n\t\tif (this.buttonHandler) {\n\t\t\tthis.buttonHandler({\n\t\t\t\ttype: \"edit\",\n\t\t\t\tpropertyId: this.props.propertyId\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst overrideLabelKey = `${this.props.control.name}.edit.button.label`;\n\t\tconst defaultEditLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.READONLYTABLE_EDIT_BUTTON_LABEL);\n\t\tconst buttonLabel = this.props.controller.getResource(overrideLabelKey, defaultEditLabel);\n\n\t\tconst tableButtonConfig = this.buttonHandler ? {\n\t\t\teditCallback: this.editCallback,\n\t\t\tlabel: buttonLabel\n\t\t} : null;\n\n\t\tconst customButtons = this.props.control && this.props.control.buttons;\n\t\tconst table = this.createTable(this.props.state, tableButtonConfig, customButtons);\n\t\tconst content = (\n\t\t\t<div>\n\t\t\t\t<div className=\"properties-rt properties-rt-buttons\">\n\t\t\t\t\t{table}\n\t\t\t\t</div>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>);\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName=\"properties-readonly-table-wrapper\"\n\t\t\t>\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t<div className=\"properties-readonly-table\">\n\t\t\t\t\t<MoveableTableRows\n\t\t\t\t\t\ttableContainer={content}\n\t\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\t\temptyTableButtonLabel={buttonLabel}\n\t\t\t\t\t\temptyTableButtonClickHandler={this.editCallback}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReadonlyTableControl.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\trightFlyout: PropTypes.bool,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object, // set in by redux\n\thideEditButton: PropTypes.bool // set by redux\n};\n\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId),\n\thideEditButton: ownProps.controller.getHideEditButton(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ReadonlyTableControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { STATES, CARBON_ICONS, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport { ControlType } from \"./../../constants/form-constants\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { isEmpty } from \"lodash\";\nimport { v4 as uuid4 } from \"uuid\";\nimport Icon from \"./../../../icons/icon.jsx\";\nimport ActionFactory from \"./../../actions/action-factory.js\";\nimport { formatMessage } from \"./../../util/property-utils\";\n\nclass ControlItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.actionFactory = new ActionFactory(this.props.controller);\n\t\tthis.uuid = uuid4();\n\t}\n\n\trender() {\n\t\tif (this.props.control.controlType === ControlType.HIDDEN) {\n\t\t\treturn null;\n\t\t}\n\t\tconst hidden = this.props.state === STATES.HIDDEN;\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\n\t\tlet label;\n\t\tlet description;\n\t\tif (this.props.control.label && this.props.control.labelVisible !== false) {\n\t\t\tlet tooltip;\n\t\t\tif (this.props.control.description && !isEmpty(this.props.control.description.text)) {\n\t\t\t\tif (this.props.control.description.placement === \"on_panel\") {\n\t\t\t\t\tdescription = <div className=\"properties-control-description\">{this.props.control.description.text}</div>;\n\t\t\t\t// only show tooltip when control enabled and visible\n\t\t\t\t} else {\n\t\t\t\t\t// If tooltip has a link, add propertyId in the link object\n\t\t\t\t\tif (this.props.control.description.link) {\n\t\t\t\t\t\tthis.props.control.description.link.propertyId = this.props.propertyId;\n\t\t\t\t\t}\n\t\t\t\t\ttooltip = (<Tooltip\n\t\t\t\t\t\tid={`${this.uuid}-tooltip-label-${this.props.control.name}`}\n\t\t\t\t\t\ttip={this.props.control.description.text}\n\t\t\t\t\t\tlink={this.props.control.description.link ? this.props.control.description.link : null}\n\t\t\t\t\t\ttooltipLinkHandler={this.props.controller.getHandlers().tooltipLinkHandler}\n\t\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon type={CARBON_ICONS.INFORMATION} className=\"properties-control-description-icon-info\" />\n\t\t\t\t\t</Tooltip>);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet indicator;\n\t\t\tif (this.props.control.showRequiredLabel && this.props.control.required) {\n\t\t\t\tindicator = (\n\t\t\t\t\t<span className=\"properties-indicator\">\n\t\t\t\t\t\t{formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.LABEL_INDICATOR_REQUIRED)}\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t} else if (!this.props.control.showRequiredLabel && !(\"required\" in this.props.control)) {\n\t\t\t\tindicator = (\n\t\t\t\t\t<span className=\"properties-indicator\">\n\t\t\t\t\t\t{formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.LABEL_INDICATOR_OPTIONAL)}\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t}\n\t\t\tlabel = (\n\t\t\t\t<div className={classNames(\"properties-label-container\", { \"table-control\": this.props.tableControl === true })}>\n\t\t\t\t\t<label className=\"properties-control-label\">{this.props.control.label.text}</label>\n\t\t\t\t\t{indicator}\n\t\t\t\t\t{tooltip}\n\t\t\t\t</div>);\n\t\t}\n\n\t\tconst action = this.actionFactory.generateAction(0, this.props.control.action);\n\n\t\tconst className = classNames(\"properties-control-item\", { \"hide\": hidden });\n\n\t\t/*\n\t\t* <ControlItem /> should be called from every control.\n\t\t* Adding this temporary condition so that we can change one control at a time.\n\t\t* After all controls are updated, remove if condition and delete return statement after if condition\n\t\t*/\n\t\tif (this.props.accessibleControls.includes(this.props.control.controlType)) {\n\t\t\treturn (\n\t\t\t\t<div data-id={\"properties-ci-\" + this.props.control.name}\n\t\t\t\t\tclassName={className} disabled={disabled}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t\t{description}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div data-id={\"properties-ci-\" + this.props.control.name}\n\t\t\t\tclassName={className} disabled={disabled}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t\t{description}\n\t\t\t\t{this.props.controlObj}\n\t\t\t\t{action}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nControlItem.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolObj: PropTypes.object,\n\taccessibleControls: PropTypes.array, // TODO: Remove this after all controls are accessible\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string // passed by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tstate: ownProps.controller.getControlState(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ControlItem);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\n\nimport { Type, ControlType } from \"./../constants/form-constants\";\nimport { STATES, CONTAINER_TYPE } from \"./../constants/constants\";\nimport classNames from \"classnames\";\nimport { PropertyDef } from \"./../form/PropertyDef\";\nimport { makeControl } from \"./../form/EditorForm\";\nimport { L10nProvider } from \"./../util/L10nProvider\";\nimport * as ControlUtils from \"./../util/control-utils\";\n\nimport TextfieldControl from \"./textfield\";\nimport ReadonlyControl from \"./readonly\";\nimport ToggletextControl from \"./toggletext\";\nimport TextareaControl from \"./textarea\";\nimport ListControl from \"./list\";\nimport ExpressionControl from \"./expression\";\nimport PasswordControl from \"./passwordfield\";\nimport NumberfieldControl from \"./numberfield\";\nimport DatefieldControl from \"./datefield\";\nimport TimefieldControl from \"./timefield\";\nimport CheckboxControl from \"./checkbox\";\nimport ToggleControl from \"./toggle\";\nimport CheckboxsetControl from \"./checkboxset\";\nimport RadiosetControl from \"./radioset\";\nimport Dropdown from \"./dropdown\";\nimport MultiSelectControl from \"./multiselect\";\nimport SomeofselectControl from \"./someofselect\";\nimport SelectColumnsControl from \"./selectcolumns\";\nimport StructureEditorControl from \"./structureeditor\";\nimport StructureTableControl from \"./structuretable\";\nimport StructurelisteditorControl from \"./structurelisteditor\";\nimport ReadonlyTableControl from \"./readonlytable\";\n\nimport ControlItem from \"./../components/control-item\";\nimport ActionFactory from \"./../actions/action-factory.js\";\nimport { has, get } from \"lodash\";\n\n/*\n* <ControlItem /> should be called from every control.\n* After all controls are updated, delete accessibleControls array.\n*/\nconst accessibleControls = [\n\tControlType.CHECKBOXSET,\n\tControlType.HIDDEN,\n\tControlType.DATEFIELD,\n\tControlType.NUMBERFIELD,\n\tControlType.SPINNER,\n\tControlType.PASSWORDFIELD,\n\tControlType.TEXTAREA,\n\tControlType.TEXTFIELD,\n\tControlType.TIMEFIELD,\n\tControlType.TOGGLETEXT,\n\tControlType.LIST,\n\tControlType.TOGGLE,\n\tControlType.SOMEOFSELECT,\n\tControlType.SELECTCOLUMNS,\n\tControlType.READONLY,\n\tControlType.READONLYTABLE,\n\tControlType.TIMESTAMP,\n\tControlType.EXPRESSION,\n\tControlType.CODE,\n\tControlType.ONEOFSELECT,\n\tControlType.MULTISELECT,\n\tControlType.SELECTSCHEMA,\n\tControlType.SELECTCOLUMN\n];\n\nconst tableControls = [\n\tControlType.LIST,\n\tControlType.READONLYTABLE,\n\tControlType.SOMEOFSELECT,\n\tControlType.SELECTCOLUMNS,\n\tControlType.STRUCTURETABLE,\n\tControlType.STRUCTURELISTEDITOR\n];\n\nexport default class ControlFactory {\n\n\tconstructor(controller) {\n\t\tthis.rightFlyout = controller ? get(controller.getPropertiesConfig(), \"rightFlyout\", false) : false;\n\t\tthis.controller = controller;\n\t\tthis.actionFactory = new ActionFactory(this.controller);\n\t}\n\n\tsetFunctions(openFieldPicker, genUIItem) {\n\t\tthis.genUIItem = genUIItem;\n\t\tthis.openFieldPicker = openFieldPicker;\n\t}\n\n\tsetRightFlyout(rightFlyout) {\n\t\tthis.rightFlyout = rightFlyout;\n\t}\n\n\t/*\n\t* @param control\n\t* @param propertyId\n\t* @param tableInfo\n\t*/\n\tcreateControlItem(control, propertyId, tableInfo) {\n\t\tconst hidden = this.controller.getControlState(propertyId) === STATES.HIDDEN;\n\t\tif (hidden) {\n\t\t\treturn null; // Do not render hidden controls\n\t\t}\n\n\t\tconst controlObj = this.createControl(control, propertyId, tableInfo);\n\t\tconst className = control.className ? control.className : \"\";\n\n\t\t/*\n\t\t* <ControlItem /> should be called from every control.\n\t\t* Adding this temporary condition so that we can change one control at a time.\n\t\t* After all controls are updated, remove if condition and delete return statement after if condition\n\t\t*/\n\t\tif (accessibleControls.includes(control.controlType)) {\n\t\t\treturn controlObj;\n\t\t}\n\t\t// When control-item displays other controls, add padding on control-item\n\t\treturn (\n\t\t\t<div key={\"properties-ctrl-\" + control.name} data-id={\"properties-ctrl-\" + control.name}\n\t\t\t\tclassName={classNames(\"properties-ctrl-wrapper\", className)}\n\t\t\t>\n\t\t\t\t<ControlItem\n\t\t\t\t\tkey={\"ctrl-item-\" + control.name}\n\t\t\t\t\tcontroller={this.controller}\n\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tcontrolObj={controlObj}\n\t\t\t\t\taccessibleControls={accessibleControls}\n\t\t\t\t\ttableControl = {tableControls.includes(control.controlType)}\n\t\t\t\t/>\n\t\t\t</div>);\n\t}\n\n\t// Creates all controls that can be standalone or in tables\n\tcreateControl(control, propertyId, tableInfo) {\n\t\tif (!control || !propertyId) {\n\t\t\treturn null;\n\t\t}\n\t\t// setup common properties used by all controls\n\t\tconst controlKey = ControlUtils.getDataId(propertyId);\n\t\tconst hidden = this.controller.getControlState(propertyId) === STATES.HIDDEN;\n\t\tconst action = this.actionFactory.generateAction(0, control.action);\n\t\tconst props = {};\n\t\tprops.key = controlKey;\n\t\tprops.control = control;\n\t\tprops.controller = this.controller;\n\t\tprops.propertyId = propertyId;\n\t\tprops.controlItem = (\n\t\t\t<ControlItem\n\t\t\t\tkey={\"ctrl-item-\" + control.name}\n\t\t\t\tcontroller={this.controller}\n\t\t\t\tpropertyId={propertyId}\n\t\t\t\tcontrol={control}\n\t\t\t\taccessibleControls={accessibleControls}\n\t\t\t\ttableControl = {tableControls.includes(control.controlType)}\n\t\t\t/>\n\t\t);\n\t\tif (tableInfo) {\n\t\t\tprops.tableControl = tableInfo.table;\n\t\t}\n\t\tlet createdControl;\n\t\tswitch (control.controlType) {\n\t\tcase (ControlType.HIDDEN):\n\t\t\treturn null;\n\t\tcase (ControlType.TEXTFIELD):\n\t\t\tcreatedControl = (<TextfieldControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.READONLY):\n\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.TIMESTAMP):\n\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.TEXTAREA):\n\t\t\tcreatedControl = (<TextareaControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.TOGGLE):\n\t\t\tcreatedControl = (<ToggleControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.LIST):\n\t\t\tcreatedControl = (<ListControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.EXPRESSION):\n\t\t\tcreatedControl = (<ExpressionControl\n\t\t\t\t{...props}\n\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tcase (ControlType.CODE):\n\t\t\tcreatedControl = (<ExpressionControl\n\t\t\t\t{...props}\n\t\t\t\tbuilder={false}\n\t\t\t\tvalidateLink={false}\n\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tcase (ControlType.TOGGLETEXT):\n\t\t\tcreatedControl = (<ToggletextControl\n\t\t\t\t{...props}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tcase (ControlType.PASSWORDFIELD):\n\t\t\tcreatedControl = (<PasswordControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.NUMBERFIELD):\n\t\tcase (ControlType.SPINNER):\n\t\t\tcreatedControl = (<NumberfieldControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.DATEFIELD):\n\t\t\tcreatedControl = (<DatefieldControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.TIMEFIELD):\n\t\t\tcreatedControl = (<TimefieldControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.CHECKBOX):\n\t\t\tcreatedControl = (<CheckboxControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.CHECKBOXSET):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<CheckboxsetControl {...props} />);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.RADIOSET):\n\t\t\tcreatedControl = (<RadiosetControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.ONEOFSELECT):\n\t\tcase (ControlType.SELECTSCHEMA):\n\t\t\tcreatedControl = (<Dropdown\n\t\t\t\t{...props}\n\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tcase (ControlType.MULTISELECT):\n\t\t\tcreatedControl = (<MultiSelectControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.SELECTCOLUMN):\n\t\t\tif (!tableInfo || (tableInfo && tableInfo.allowColumnControls)) {\n\t\t\t\tcreatedControl = (<Dropdown\n\t\t\t\t\t{...props}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.SOMEOFSELECT):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<SomeofselectControl {...props} />);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.SELECTCOLUMNS):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<SelectColumnsControl\n\t\t\t\t\t{...props}\n\t\t\t\t\topenFieldPicker={this.openFieldPicker}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.STRUCTURETABLE):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<StructureTableControl\n\t\t\t\t\t{...props}\n\t\t\t\t\tbuildUIItem={this.genUIItem}\n\t\t\t\t\topenFieldPicker={this.openFieldPicker}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.STRUCTURELISTEDITOR):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<StructurelisteditorControl\n\t\t\t\t\t{...props}\n\t\t\t\t\tbuildUIItem={this.genUIItem}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.READONLYTABLE):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<ReadonlyTableControl\n\t\t\t\t\t{...props}\n\t\t\t\t\tbuildUIItem={this.genUIItem}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.CUSTOM):\n\t\t\tcreatedControl = (\n\t\t\t\t<div className=\"properties-custom-ctrl\" key={controlKey}>\n\t\t\t\t\t{this.controller.getCustomControl(propertyId, control, tableInfo)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase (ControlType.STRUCTUREEDITOR):\n\t\t\tcreatedControl = (<StructureEditorControl\n\t\t\t\t{...props}\n\t\t\t\tbuildUIItem={this.genUIItem}\n\t\t\t\topenFieldPicker={this.openFieldPicker}\n\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t}\n\n\t\t/*\n\t\t* <ControlItem /> should be called from every control.\n\t\t* Adding this temporary condition so that we can change one control at a time.\n\t\t* After all controls are updated, remove if condition and delete return statement after if condition\n\t\t*/\n\t\t// When other controls display control-item for a11y, add padding on controls\n\t\tif (accessibleControls.includes(control.controlType)) {\n\t\t\tif (tableInfo) {\n\t\t\t\t// Don't add padding when controls are displayed in a table\n\t\t\t\treturn createdControl;\n\t\t\t}\n\t\t\tconst className = control.className ? control.className : \"\";\n\t\t\treturn (\n\t\t\t\t<div key={\"properties-ctrl-\" + control.name} data-id={\"properties-ctrl-\" + control.name}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\"properties-ctrl-wrapper\",\n\t\t\t\t\t\t{ \"hide\": hidden, \"action\": has(control, \"action.image.placement\") },\n\t\t\t\t\t\tclassName\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{createdControl}\n\t\t\t\t\t{action}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn createdControl;\n\t}\n\n\t/**\n\t* Used to create a control from a passed in paramDef.\n\t* Allows users to user a standard control in a custom control/panel\n\t* @param paramDef - see parameter-def schema\n\t* @param parameter - name of the parameter to pull from paramDef\n\t* @param light - if this control is light themed\n\t* @param containerType - the type of container common properties is rendering in\n\t* @return control object (form schema) used to create standard react controls\n\t*/\n\tcreateFormControl(paramDef, parameter, light = true, containerType = CONTAINER_TYPE.CUSTOM) {\n\t\tif (!paramDef) {\n\t\t\treturn null;\n\t\t}\n\t\tconst propDef = PropertyDef.makePropertyDef(null, paramDef.parameters, paramDef.complex_types, paramDef.uihints);\n\t\tif (propDef && propDef.parameterMetadata) {\n\t\t\tconst l10nProvider = new L10nProvider(paramDef.resources);\n\t\t\tconst prop = propDef.parameterMetadata.getParameter(parameter);\n\t\t\tlet structureDef;\n\t\t\tif (prop.propType() === Type.STRUCTURE && propDef.structureMetadata) {\n\t\t\t\tstructureDef = propDef.structureMetadata.getStructure(prop.baseType());\n\t\t\t}\n\t\t\tconst additionalInfo = {\n\t\t\t\tlight: light,\n\t\t\t\tcontainerType: containerType\n\t\t\t};\n\t\t\tconst control = makeControl(propDef.parameterMetadata, parameter, null, structureDef, l10nProvider, null, null, null, additionalInfo);\n\t\t\treturn control;\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { toType } from \"./../../util/property-utils.js\";\n\nfunction op() {\n\treturn \"cellNotEmpty\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst supportedControls = [\"structuretable\", \"structureeditor\", \"structurelisteditor\"];\n\tif (supportedControls.indexOf(paramInfo.control.controlType) >= 0) {\n\t\tconst type = toType(paramInfo.value);\n\t\treturn type !== \"undefined\" && type !== \"null\" && String(paramInfo.value).length > 0;\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'cellNotEmpty' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { fieldValueMatchesProto } from \"./../../util/property-utils\";\nimport { isEqual } from \"lodash\";\nimport { ParamRole } from \"./../../constants/form-constants\";\n\nfunction op() {\n\treturn \"colNotExists\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst supportedControls = [\"textfield\"];\n\tif (supportedControls.indexOf(paramInfo.control.controlType) >= 0) {\n\t\tconst dataModelFields = controller.getDatasetMetadataFields();\n\t\tif (!dataModelFields) {\n\t\t\treturn true;\n\t\t}\n\t\tlet columnExists = true;\n\t\t// check if there are any matching values in dataModel\n\t\tfor (const field of dataModelFields) {\n\t\t\tif (fieldValueMatchesProto(paramInfo.value, field)) {\n\t\t\t\tcolumnExists = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// check other columns in row and allow value to be same as `paramInfo` value.  Allows consumers to rename a field without showing an error.\n\t\tif (!columnExists) {\n\t\t\tconst fieldColumnValues = _findFieldColumnValues(paramInfo, controller);\n\t\t\tfor (const columnValue of fieldColumnValues) {\n\t\t\t\tif (isEqual(paramInfo.value, columnValue)) {\n\t\t\t\t\tcolumnExists = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn columnExists;\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'colNotExists' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n/*\n* Finds all values in the same row as paramInfo and returns any with the role=column.\n* An empty array is returned if not a table control.\n*/\nfunction _findFieldColumnValues(paramInfo, controller) {\n\tconst fieldColumnValues = [];\n\t// If a cell value, check to see if any other columns have role=column\n\tif (typeof paramInfo.control.columnIndex !== \"undefined\") {\n\t\tconst rowValue = controller.getPropertyValue({ name: paramInfo.id.name, row: paramInfo.id.row });\n\t\tif (Array.isArray(rowValue)) {\n\t\t\trowValue.forEach((value, idx) => {\n\t\t\t\tif (idx !== paramInfo.control.columnIndex) { // skip paramInfo value\n\t\t\t\t\tconst colControl = controller.getControl({ name: paramInfo.id.name, col: idx });\n\t\t\t\t\tif (colControl.role === ParamRole.COLUMN) {\n\t\t\t\t\t\tfieldColumnValues.push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn fieldColumnValues;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { fieldValueMatchesProto } from \"./../../util/property-utils.js\";\nimport { isEmpty } from \"lodash\";\n\nfunction op() {\n\treturn \"colDoesExists\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataModelFields = controller.getDatasetMetadataFields();\n\tif (!dataModelFields) {\n\t\treturn false;\n\t}\n\n\tconst controlType = paramInfo.control.controlType;\n\tswitch (controlType) {\n\tcase \"selectcolumns\":\n\tcase \"selectcolumn\": {\n\t\tif (Array.isArray(paramInfo.value) && typeof paramInfo.control.editStyle !== \"undefined\") { // Control is inside a table.\n\t\t\tif (paramInfo.value.length > 0) {\n\t\t\t\tlet allValid = true;\n\t\t\t\tparamInfo.value.forEach((paramValue) => {\n\t\t\t\t\tallValid = allValid && typeof valueInDataset(dataModelFields, paramValue) !== \"undefined\";\n\t\t\t\t});\n\t\t\t\treturn allValid;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn typeof valueInDataset(dataModelFields, paramInfo.value) !== \"undefined\";\n\t}\n\tdefault:\n\t\tlogger.warn(\"Ignoring unsupported condition operation 'colDoesExists' for control type \" + controlType);\n\t\treturn true;\n\t}\n}\n\n// Return the field if found in dataset, else undefined\nfunction valueInDataset(dataset, field) {\n\t// Don't validate empty, null or undefined value\n\treturn (\n\t\t(typeof field === \"undefined\" || field === null || isEmpty(field))\n\t\t\t? true\n\t\t\t: dataset.find(function(dataModelField) {\n\t\t\t\treturn fieldValueMatchesProto(field, dataModelField);\n\t\t\t})\n\t);\n}\n\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { includes } from \"lodash\";\n\nfunction op() {\n\treturn \"contains\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst unsupportedControls = [\"checkbox\", \"numberfield\", \"passwordfield\"];\n\tif (unsupportedControls.indexOf(paramInfo.control.controlType) < 0) {\n\t\tconst dataType = typeof paramInfo.value;\n\t\tif (typeof param2Info !== \"undefined\") {\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn false;\n\t\t\tcase \"string\":\n\t\t\tcase \"object\":\n\t\t\t\treturn includes(paramInfo.value, param2Info.value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'contains' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn false;\n\t\t\tcase \"string\":\n\t\t\tcase \"object\":\n\t\t\t\treturn includes(paramInfo.value, value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'contains' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation contains\");\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'contains' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"equals\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.controlType !== \"passwordfield\") {\n\t\tconst dataType = typeof paramInfo.value;\n\t\tif (param2Info) {\n\t\t\tif (paramInfo.value === null || param2Info.value === null) {\n\t\t\t\treturn paramInfo.value === param2Info.value;\n\t\t\t}\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\t\treturn paramInfo.value === param2Info.value;\n\t\t\tcase \"string\":\n\t\t\t\treturn paramInfo.value.trim() === param2Info.value.trim();\n\t\t\tcase \"object\":\n\t\t\t\treturn JSON.stringify(paramInfo.value) === JSON.stringify(param2Info.value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'equals' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tif (paramInfo.value === null || value === null) {\n\t\t\t\treturn paramInfo.value === value;\n\t\t\t}\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\t\treturn paramInfo.value === value;\n\t\t\tcase \"string\":\n\t\t\t\treturn paramInfo.value.trim() === value.toString().trim();\n\t\t\tcase \"object\":\n\t\t\t\treturn JSON.stringify(paramInfo.value) === JSON.stringify(value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'equals' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation equals\");\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'equals' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"greaterThan\";\n}\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataType = typeof paramInfo.value;\n\tswitch (dataType) {\n\tcase \"undefined\":\n\tcase \"number\":\n\t\tif (typeof param2Info !== \"undefined\") {\n\t\t\tif (typeof param2Info.value !== \"number\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn paramInfo.value > param2Info.value;\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tif (value === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn paramInfo.value > value;\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation 'greaterThan'\");\n\tcase \"object\":\n\t\tif (paramInfo.value === null || param2Info.value === null || value === null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\tdefault:\n\t\tlogger.warn(\"Ignoring condition operation 'greaterThan' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\treturn true;\n\t}\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"isEmpty\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst propertiesConfig = controller.getPropertiesConfig();\n\tconst dataType = typeof paramInfo.value;\n\tswitch (dataType) {\n\tcase \"undefined\":\n\t\treturn true;\n\tcase \"boolean\":\n\t\treturn false;\n\tcase \"string\":\n\t\treturn propertiesConfig.trimSpaces ? paramInfo.value.trim().length === 0 : paramInfo.value.length === 0;\n\tcase \"number\":\n\t\treturn paramInfo.value === null;\n\tcase \"object\":\n\t\treturn paramInfo.value === null ? true : paramInfo.value.length === 0;\n\tdefault:\n\t\tlogger.warn(\"Ignoring condition operation 'isEmpty' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\treturn true;\n\t}\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"isNotEmpty\";\n}\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst propertiesConfig = controller.getPropertiesConfig();\n\tconst dataType = typeof paramInfo.value;\n\tswitch (dataType) {\n\tcase \"undefined\":\n\t\treturn false;\n\tcase \"boolean\":\n\t\treturn true;\n\tcase \"string\":\n\t\treturn propertiesConfig.trimSpaces ? paramInfo.value.trim().length !== 0 : paramInfo.value.length !== 0;\n\tcase \"number\":\n\t\treturn paramInfo.value !== null;\n\tcase \"object\":\n\t\treturn paramInfo.value === null ? false : paramInfo.value.length !== 0;\n\tdefault:\n\t\tlogger.warn(\"Ignoring condition operation 'isNotEmpty' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\treturn true;\n\t}\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"lessThan\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataType = typeof paramInfo.value;\n\tswitch (dataType) {\n\tcase \"undefined\":\n\tcase \"number\":\n\t\tif (typeof param2Info !== \"undefined\") {\n\t\t\tif (typeof param2Info.value !== \"number\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn paramInfo.value < param2Info.value;\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tif (value === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn paramInfo.value < value;\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation 'lessThan'\");\n\tcase \"object\":\n\t\tif (paramInfo.value === null || param2Info.value === null || value === null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\tdefault:\n\t\tlogger.warn(\"Ignoring condition operation 'lessThan' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\treturn true;\n\t}\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"matches\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataType = typeof paramInfo.value;\n\tvar regExp = \"\";\n\tif (typeof param2Info !== \"undefined\" && param2Info !== null) {\n\t\tregExp = param2Info.value;\n\t} else if (typeof value !== \"undefined\" && value !== null) {\n\t\tregExp = value;\n\t} else {\n\t\tlogger.warn(\"Ignoring condition operation 'matches' for parameter_ref \" + paramInfo.param + \" no regular expression specified in condition.\");\n\t\treturn true;\n\t}\n\tif (dataType === \"string\" || dataType === \"undefined\") {\n\t\t// the added regexp before and after the value strips out whitespace or positions at the start and end of the string.\n\t\tconst regex = new RegExp(regExp);\n\t\treturn regex.test(paramInfo.value);\n\t}\n\tlogger.warn(\"Ignoring condition operation 'matches' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { includes } from \"lodash\";\n\nfunction op() {\n\treturn \"notContains\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst unsupportedControls = [\"checkbox\", \"numberfield\", \"passwordfield\"];\n\tif (unsupportedControls.indexOf(paramInfo.control.controlType) < 0) {\n\t\tconst dataType = typeof paramInfo.value;\n\t\tif (typeof param2Info !== \"undefined\") {\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn true;\n\t\t\tcase \"string\":\n\t\t\tcase \"object\":\n\t\t\t\treturn !includes(paramInfo.value, param2Info.value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'notContains' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn true;\n\t\t\tcase \"string\":\n\t\t\tcase \"object\":\n\t\t\t\treturn !includes(paramInfo.value, value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'notContains' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation notContains\");\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'notContains' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"notEquals\";\n}\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.controlType !== \"passwordfield\") {\n\t\tconst dataType = typeof paramInfo.value;\n\t\tif (param2Info) {\n\t\t\tif (paramInfo.value === null || param2Info.value === null) {\n\t\t\t\treturn paramInfo.value !== param2Info.value;\n\t\t\t}\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\t\treturn paramInfo.value !== param2Info.value;\n\t\t\tcase \"string\":\n\t\t\t\treturn paramInfo.value.trim() !== param2Info.value.trim();\n\t\t\tcase \"object\":\n\t\t\t\treturn JSON.stringify(paramInfo.value) !== JSON.stringify(param2Info.value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'notEquals' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tif (paramInfo.value === null || value === null) {\n\t\t\t\treturn paramInfo.value !== value;\n\t\t\t}\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\t\treturn paramInfo.value !== value;\n\t\t\tcase \"string\":\n\t\t\t\treturn paramInfo.value.trim() !== value.trim();\n\t\t\tcase \"object\":\n\t\t\t\treturn JSON.stringify(paramInfo.value) !== JSON.stringify(value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'notEquals' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation notEquals\");\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'notEquals' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"notMatches\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataType = typeof paramInfo.value;\n\tvar regExp = \"\";\n\tif (typeof param2Info !== \"undefined\" && param2Info !== null) {\n\t\tregExp = param2Info.value;\n\t} else if (typeof value !== \"undefined\" && value !== null) {\n\t\tregExp = value;\n\t} else {\n\t\tlogger.warn(\"Ignoring condition operation 'notMatches' for parameter_ref \" + paramInfo.param + \" no regular expression specified in condition.\");\n\t\treturn true;\n\t}\n\tif (dataType === \"string\" || dataType === \"undefined\") {\n\t\t// the added regexp before and after the value strips out whitespace or positions at the start and end of the string.\n\t\tconst regex = new RegExp(regExp);\n\t\treturn !regex.test(paramInfo.value);\n\t}\n\tlogger.warn(\"Ignoring condition operation 'notMatches' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isValid, parse } from \"date-fns\";\nimport { DEFAULT_DATE_FORMAT } from \"../../constants/constants\";\n\n\nfunction op() {\n\treturn \"isDateTime\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.value) { // only check if there is a value.\n\t\t// always use iso format for time\n\t\tconst timeDateFormat = (value === \"time\") ? \"HH:mm:ss:xxx\" : DEFAULT_DATE_FORMAT;\n\t\tconst date = parse(paramInfo.value, timeDateFormat, new Date());\n\t\treturn isValid(date);\n\t}\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\nfunction op() {\n\treturn \"dmTypeEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data type\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data type. Use value instead if possible.\n * @param {Object} value the target data type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmTypeEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"type\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldType = getMetadataFieldMatch(paramInfo, metadata, \"type\");\n\t\treturn fieldType === target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmTypeEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmTypeNotEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data type\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data type. Use value instead if possible.\n * @param {Object} value the target data type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmTypeNotEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"type\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldType = getMetadataFieldMatch(paramInfo, metadata, \"type\");\n\t\treturn fieldType !== target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmTypeNotEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmMeasurementEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data measurement\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data measurement. Use value instead if possible.\n * @param {Object} value the target measurement type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmMeasurementEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"measure\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldRole = getMetadataFieldMatch(paramInfo, metadata, \"measure\");\n\t\treturn fieldRole === target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmMeasurementEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmMeasurementNotEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data type\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data type. Use value instead if possible.\n * @param {Object} value the target data type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmMeasurementNotEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"measure\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldRole = getMetadataFieldMatch(paramInfo, metadata, \"measure\");\n\t\treturn fieldRole !== target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmMeasurementNotEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmRoleEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data role\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data role. Use value instead if possible.\n * @param {Object} value the target role type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmRoleEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"modeling_role\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldRole = getMetadataFieldMatch(paramInfo, metadata, \"modeling_role\");\n\t\treturn fieldRole === target;\n\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmRoleEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmRoleNotEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data role\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data role. Use value instead if possible.\n * @param {Object} value the target role type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmRoleEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"modeling_role\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldRole = getMetadataFieldMatch(paramInfo, metadata, \"modeling_role\");\n\t\treturn fieldRole !== target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmRoleEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"lengthEquals\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tlet compareValue = value;\n\tlet valueLength;\n\tif (param2Info) {\n\t\tcompareValue = param2Info.value;\n\t}\n\tif (typeof paramInfo.value === \"string\" || Array.isArray(paramInfo.value)) {\n\t\tvalueLength = paramInfo.value.length;\n\t} else if (typeof paramInfo.value === \"undefined\" || paramInfo.value === null) {\n\t\tvalueLength = 0;\n\t}\n\tif (typeof compareValue === \"number\" && typeof valueLength === \"number\") {\n\t\treturn valueLength === compareValue;\n\t}\n\tlogger.warn(\"Ignoring condition operation 'lengthEquals' for parameter_ref \" + paramInfo.param);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"lengthLessThan\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tlet compareValue = value;\n\tlet valueLength;\n\tif (param2Info) {\n\t\tcompareValue = param2Info.value;\n\t}\n\tif (typeof paramInfo.value === \"string\" || Array.isArray(paramInfo.value)) {\n\t\tvalueLength = paramInfo.value.length;\n\t} else if (typeof paramInfo.value === \"undefined\" || paramInfo.value === null) {\n\t\tvalueLength = 0;\n\t}\n\tif (typeof compareValue === \"number\" && typeof valueLength === \"number\") {\n\t\treturn valueLength < compareValue;\n\t}\n\tlogger.warn(\"Ignoring condition operation 'lengthLessThan' for parameter_ref \" + paramInfo.param);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"lengthGreaterThan\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tlet compareValue = value;\n\tlet valueLength;\n\tif (param2Info) {\n\t\tcompareValue = param2Info.value;\n\t}\n\tif (typeof paramInfo.value === \"string\" || Array.isArray(paramInfo.value)) {\n\t\tvalueLength = paramInfo.value.length;\n\t} else if (typeof paramInfo.value === \"undefined\" || paramInfo.value === null) {\n\t\tvalueLength = 0;\n\t}\n\tif (typeof compareValue === \"number\" && typeof valueLength === \"number\") {\n\t\treturn valueLength > compareValue;\n\t}\n\tlogger.warn(\"Ignoring condition operation 'lengthGreaterThan' for parameter_ref \" + paramInfo.param);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport logger from \"./../../../../utils/logger\";\n\nimport * as cellNotEmpty from \"./cellNotEmpty\";\nimport * as colNotExists from \"./colNotExists\";\nimport * as colDoesExists from \"./colDoesExists\";\nimport * as contains from \"./contains\";\nimport * as equals from \"./equals\";\nimport * as greaterThan from \"./greaterThan\";\nimport * as isEmpty from \"./isEmpty\";\nimport * as isNotEmpty from \"./isNotEmpty\";\nimport * as lessThan from \"./lessThan\";\nimport * as matches from \"./matches\";\nimport * as notContains from \"./notContains\";\nimport * as notEquals from \"./notEquals\";\nimport * as notMatches from \"./notMatches\";\nimport * as isDateTime from \"./isDateTime\";\nimport * as dmTypeEquals from \"./dmTypeEquals\";\nimport * as dmTypeNotEquals from \"./dmTypeNotEquals\";\nimport * as dmMeasurementEquals from \"./dmMeasurementEquals\";\nimport * as dmMeasurementNotEquals from \"./dmMeasurementNotEquals\";\nimport * as dmRoleEquals from \"./dmRoleEquals\";\nimport * as dmRoleNotEquals from \"./dmRoleNotEquals\";\nimport * as lengthEquals from \"./lengthEquals\";\nimport * as lengthLessThan from \"./lengthLessThan\";\nimport * as lengthGreaterThan from \"./lengthGreaterThan\";\n\n\n/**\n* @param customOps - Array of custom operators to be added to standard operators\n*/\nfunction getConditionOps(customOps) {\n\tconst ops = {};\n\tops[cellNotEmpty.op()] = cellNotEmpty.evaluate;\n\tops[colNotExists.op()] = colNotExists.evaluate;\n\tops[colDoesExists.op()] = colDoesExists.evaluate;\n\tops[contains.op()] = contains.evaluate;\n\tops[equals.op()] = equals.evaluate;\n\tops[greaterThan.op()] = greaterThan.evaluate;\n\tops[isEmpty.op()] = isEmpty.evaluate;\n\tops[isNotEmpty.op()] = isNotEmpty.evaluate;\n\tops[lessThan.op()] = lessThan.evaluate;\n\tops[matches.op()] = matches.evaluate;\n\tops[notContains.op()] = notContains.evaluate;\n\tops[notEquals.op()] = notEquals.evaluate;\n\tops[notMatches.op()] = notMatches.evaluate;\n\tops[isDateTime.op()] = isDateTime.evaluate;\n\tops[dmTypeEquals.op()] = dmTypeEquals.evaluate;\n\tops[dmTypeNotEquals.op()] = dmTypeNotEquals.evaluate;\n\tops[dmMeasurementEquals.op()] = dmMeasurementEquals.evaluate;\n\tops[dmMeasurementNotEquals.op()] = dmMeasurementNotEquals.evaluate;\n\tops[dmRoleEquals.op()] = dmRoleEquals.evaluate;\n\tops[dmRoleNotEquals.op()] = dmRoleNotEquals.evaluate;\n\tops[lengthEquals.op()] = lengthEquals.evaluate;\n\tops[lengthLessThan.op()] = lengthLessThan.evaluate;\n\tops[lengthGreaterThan.op()] = lengthGreaterThan.evaluate;\n\n\n\tif (Array.isArray(customOps)) {\n\t\tfor (const custOp of customOps) {\n\t\t\tif (custOp && typeof custOp.op === \"function\" && typeof custOp.evaluate === \"function\") {\n\t\t\t\tops[custOp.op()] = custOp.evaluate;\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Custom operator missing require function of `op` or `evaluate`\");\n\t\t\t}\n\t\t}\n\t}\n\treturn ops;\n}\n\nexport { getConditionOps };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint max-depth: [\"error\", 7]*/\n\nimport PropertiesStore from \"./properties-store.js\";\nimport logger from \"../../utils/logger\";\nimport * as UiConditionsParser from \"./ui-conditions/ui-conditions-parser.js\";\nimport setExpressionInfo from \"./controls/expression/expressionInfo-parser.js\";\n\nimport { parseUiContent } from \"./ui-conditions/ui-groups-parser.js\";\nimport * as conditionsUtil from \"./ui-conditions/conditions-utils\";\nimport * as PropertyUtils from \"./util/property-utils.js\";\n\nimport { STATES, ACTIONS, CONDITION_TYPE, PANEL_TREE_ROOT, CONDITION_MESSAGE_TYPE, UPDATE_TYPE } from \"./constants/constants.js\";\nimport CommandStack from \"../command-stack/command-stack.js\";\nimport ControlFactory from \"./controls/control-factory\";\nimport { Type, ParamRole, ControlType } from \"./constants/form-constants\";\nimport { has, cloneDeep, assign, isEmpty, isEqual, isUndefined, get } from \"lodash\";\nimport Form from \"./form/Form\";\nimport { getConditionOps } from \"./ui-conditions/condition-ops/condition-ops\";\nimport { ItemType } from \"./constants/form-constants\";\nexport default class PropertiesController {\n\n\tconstructor() {\n\t\tthis.propertiesStore = new PropertiesStore();\n\t\tthis.handlers = {\n\t\t\tpropertyListener: null,\n\t\t\tcontrollerHandler: null,\n\t\t\tactionHandler: null,\n\t\t\tbuttonHandler: null,\n\t\t\tbuttonIconHandler: null,\n\t\t\ttitleChangeHandler: null,\n\t\t\ttooltipLinkHandler: null\n\t\t};\n\t\tthis.propertiesConfig = {};\n\t\tthis.visibleDefinitions = {};\n\t\tthis.enabledDefinitions = {};\n\t\tthis.validationDefinitions = {};\n\t\tthis.requiredDefinitionsIds = [];\n\t\tthis.filterDefinitions = {};\n\t\tthis.filteredEnumDefinitions = {};\n\t\tthis.allowChangeDefinitions = {};\n\t\tthis.conditionalDefaultDefinitions = {};\n\t\tthis.panelTree = {};\n\t\tthis.controls = {};\n\t\tthis.actions = {};\n\t\tthis.customControls = [];\n\t\tthis.summaryPanelControls = {};\n\t\tthis.controllerHandlerCalled = false;\n\t\tthis.commandStack = new CommandStack();\n\t\tthis.custPropSumPanelValues = {};\n\t\tthis.controlFactory = new ControlFactory(this);\n\t\tthis.sharedCtrlInfo = [];\n\t\tthis.isSummaryPanel = false;\n\t\tthis.visibleSubPanelCounter = 0;\n\t\tthis.conditionOps = getConditionOps();\n\t\tthis.expressionFunctionInfo = {};\n\t\tthis.expressionRecentlyUsed = [];\n\t\tthis.expressionFieldsRecentlyUsed = [];\n\t\tthis.selectionListeners = {};\n\t}\n\n\tgetStore() {\n\t\treturn this.propertiesStore.getStore();\n\t}\n\n\tsubscribe(callback) {\n\t\tthis.propertiesStore.subscribe(callback);\n\t}\n\n\tgetHandlers() {\n\t\treturn this.handlers;\n\t}\n\n\tsetHandlers(inHandlers) {\n\t\tthis.handlers = Object.assign(this.handlers, inHandlers);\n\t\tif (this.handlers.controllerHandler && !this.controllerHandlerCalled) {\n\t\t\tthis.handlers.controllerHandler(this); // one time call to return controller\n\t\t\t// probably isn't needed but seems like it can cause infinite loops\n\t\t\tthis.controllerHandlerCalled = true;\n\t\t}\n\t}\n\n\tsetCommandStack(commandStack) {\n\t\tthis.commandStack = commandStack;\n\t}\n\n\tgetCommandStack() {\n\t\treturn this.commandStack;\n\t}\n\n\tsetEditorSize(editorSize) {\n\t\tthis.editorSize = editorSize;\n\t}\n\n\tgetEditorSize() {\n\t\treturn this.editorSize;\n\t}\n\n\tsetLight(light) {\n\t\tthis.light = light;\n\t}\n\n\tgetLight() {\n\t\treturn this.light;\n\t}\n\n\tsetPropertiesConfig(config) {\n\t\tthis.propertiesConfig = config;\n\t}\n\n\tgetPropertiesConfig() {\n\t\treturn this.propertiesConfig;\n\t}\n\n\tisTearsheetContainer() {\n\t\treturn this.propertiesConfig.containerType === \"Tearsheet\";\n\t}\n\n\tsetParamDef(paramDef) {\n\t\tconst containerType = get(this.getPropertiesConfig(), \"containerType\");\n\t\tconst convertTypes = get(this.getPropertiesConfig(), \"convertTypes\");\n\t\tconst formData = Form.makeForm(paramDef, containerType, convertTypes);\n\t\tthis.setForm(formData);\n\t}\n\n\t//\n\t// Form and parsing Methods\n\t//\n\tsetForm(form, intl) {\n\t\tthis.form = form;\n\t\t// console.log(JSON.stringify(form, null, 2));\n\t\tthis.reactIntl = intl;\n\t\t// set initial property values\n\t\tif (this.form) {\n\t\t\tthis.controls = {};\n\t\t\tthis.setControlStates({}); // clear state\n\t\t\tthis.setErrorMessages({}); // clear messages\n\t\t\tthis.isSummaryPanel = false; // when new form is set, summary panel is gone\n\t\t\tthis.visibleSubPanelCounter = 0;\n\t\t\tthis._parseUiConditions();\n\t\t\t// should be done before running any validations\n\t\t\tconst controls = [];\n\t\t\tUiConditionsParser.parseControls(controls, this.actions, this.form);\n\t\t\tthis.saveControls(controls); // saves controls without the subcontrols\n\t\t\tthis._parseSummaryControls(controls);\n\t\t\tthis.parsePanelTree();\n\t\t\tconditionsUtil.injectDefaultValidations(this.controls, this.validationDefinitions, this.requiredDefinitionsIds, intl);\n\t\t\tlet datasetMetadata;\n\t\t\tlet propertyValues = {};\n\t\t\tif (this.form.data) {\n\t\t\t\tdatasetMetadata = this.form.data.datasetMetadata;\n\t\t\t\tpropertyValues = this.form.data.uiCurrentParameters ? assign({}, this.form.data.currentParameters, this.form.data.uiCurrentParameters)\n\t\t\t\t\t: this.form.data.currentParameters;\n\t\t\t}\n\t\t\t// Set the opening dataset(s), during which multiples are flattened and compound names generated if necessary\n\t\t\tthis.setDatasetMetadata(datasetMetadata);\n\t\t\tthis.setPropertyValues(propertyValues, true); // needs to be after setDatasetMetadata to run conditions\n\t\t\t// for control.type of structuretable that do not use FieldPicker, we need to add to\n\t\t\t// the controlValue any missing data model fields.  We need to do it here so that\n\t\t\t// validate can run against the added fields\n\t\t\tthis._addToControlValues();\n\t\t\t// we need to take another pass through to resolve any default values that are parameterRefs.\n\t\t\t// we need to do it here because the parameter that is referenced in the parameterRef may need to have a\n\t\t\t// default value set in the above loop.\n\t\t\tthis._addToControlValues(true);\n\n\t\t\t// set initial values for addRemoveRows, tableButtons in redux\n\t\t\tthis.setInitialAddRemoveRows();\n\t\t\tthis.setInitialTableButtonState();\n\n\t\t\tthis.uiItems = this.form.uiItems; // set last so properties dialog doesn't render too early\n\t\t\t// set initial tab to first tab\n\t\t\tif (!isEmpty(this.uiItems) && !isEmpty(this.uiItems[0].tabs)) {\n\t\t\t\t// active tab is the first non-tearsheet\n\t\t\t\tconst filteredTearsheets = this.uiItems[0].tabs.filter((tab) => tab.content.itemType !== ItemType.TEARSHEET);\n\t\t\t\tif (filteredTearsheets.length) {\n\t\t\t\t\tthis.propertiesStore.setActiveTab(filteredTearsheets[0].group);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// set title\n\t\t\tthis.setTitle(this.form.label);\n\t\t}\n\t}\n\n\tgetForm() {\n\t\treturn this.form;\n\t}\n\n\tgetResource(key, defaultValue) {\n\t\tif (this.form && this.form.resources) {\n\t\t\treturn this.form.resources[key] ? this.form.resources[key] : defaultValue;\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\tsetAppData(appData) {\n\t\tthis.appData = appData;\n\t}\n\n\tgetAppData() {\n\t\treturn this.appData;\n\t}\n\n\t_parseUiConditions() {\n\t\tthis.visibleDefinitions = { controls: {}, refs: {} };\n\t\tthis.enabledDefinitions = { controls: {}, refs: {} };\n\t\tthis.validationDefinitions = { controls: {}, refs: {} };\n\t\tthis.filterDefinitions = { controls: {}, refs: {} };\n\t\tthis.filteredEnumDefinitions = { controls: {}, refs: {} };\n\t\tthis.allowChangeDefinitions = { controls: {}, refs: {} };\n\t\tthis.conditionalDefaultDefinitions = { controls: {}, refs: {} };\n\n\t\tif (this.form.conditions) {\n\t\t\tfor (const condition of this.form.conditions) {\n\t\t\t\tif (condition.visible) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.visibleDefinitions, condition, CONDITION_TYPE.VISIBLE);\n\t\t\t\t} else if (condition.enabled) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.enabledDefinitions, condition, CONDITION_TYPE.ENABLED);\n\t\t\t\t} else if (condition.validation) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.validationDefinitions, condition, CONDITION_TYPE.VALIDATION);\n\t\t\t\t} else if (condition.filter) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.filterDefinitions, condition, CONDITION_TYPE.FILTER);\n\t\t\t\t} else if (condition.enum_filter) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.filteredEnumDefinitions, condition, CONDITION_TYPE.FILTEREDENUM);\n\t\t\t\t} else if (condition.allow_change) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.allowChangeDefinitions, condition, CONDITION_TYPE.ALLOWCHANGE);\n\t\t\t\t} else if (condition.default_value) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.conditionalDefaultDefinitions, condition, CONDITION_TYPE.CONDITIONALDEFAULT);\n\t\t\t\t} else { // invalid\n\t\t\t\t\tlogger.info(\"Invalid definition: \" + JSON.stringify(condition));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t* This function will get all definitions of the input definition type (visible, enabled,\n\t* filteredEnum and validation) and the definition index (controls, refs) that are\n\t* referenced by the propertyId.  The definition types visible and enabled have two indices.\n\t* Controls indices are all definitions that have the propertyId as an operand in the evaluate.\n\t* Refs are all definitions that have the propertyId as something that is set as a result of the evaluate.\n\t*/\n\tgetDefinitions(propertyId, dfnType, dfnIndex) {\n\t\tlet conditionDefinitions;\n\t\tswitch (dfnType) {\n\t\tcase CONDITION_TYPE.VISIBLE:\n\t\t\tconditionDefinitions = this.visibleDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.ENABLED:\n\t\t\tconditionDefinitions = this.enabledDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.FILTEREDENUM:\n\t\t\tconditionDefinitions = this.filteredEnumDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.ALLOWCHANGE:\n\t\t\tconditionDefinitions = this.allowChangeDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.CONDITIONALDEFAULT:\n\t\t\tconditionDefinitions = this.conditionalDefaultDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.VALIDATION:\n\t\t\tconditionDefinitions = this.validationDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\t// only return definitions that reference the propertyId\n\t\tlet retCond = [];\n\t\tfor (const conditionKey in conditionDefinitions) {\n\t\t\tif (!has(conditionDefinitions, conditionKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// the definition may have a column indicator, build a propertyID\n\t\t\t// with the the name and col set from the definition ref.\n\t\t\tconst baseId = conditionsUtil.getParamRefPropertyId(conditionKey);\n\t\t\t// baseId.col and propertyId.col can be undefined\n\t\t\tif (baseId.name === propertyId.name && baseId.col === propertyId.col) {\n\t\t\t\tretCond = retCond.concat(conditionDefinitions[conditionKey]);\n\t\t\t}\n\t\t}\n\t\treturn retCond;\n\t}\n\n\tgetRequiredDefinitionIds() {\n\t\treturn this.requiredDefinitionsIds;\n\t}\n\n\t/*\n\t* Used to convert a propertyId to a propertyId that always has a row.\n\t* Used in complex types that aren't tables and don't have rows.  Returns original\n\t* propertyId or a propertyId where col is converted to row.  Used in messages and property values since they\n\t* are stored name -> row -> col\n\t* @param propertyId\n\t* @return propertyId\n\t*/\n\tconvertPropertyId(propertyId) {\n\t\t// used for backward compatibility when a controlName is passed in\n\t\tif (typeof propertyId === \"string\") {\n\t\t\treturn {\n\t\t\t\tname: propertyId\n\t\t\t};\n\t\t}\n\t\t// used for complex types that aren't tables\n\t\treturn this.convertNestedPropertyId(propertyId);\n\t}\n\n\tconvertNestedPropertyId(propertyId) {\n\t\tif (propertyId && typeof propertyId.col !== \"undefined\" && typeof propertyId.row === \"undefined\") {\n\n\t\t\tlet childPropertyId;\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\tchildPropertyId = this.convertNestedPropertyId(propertyId.propertyId);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tname: propertyId.name,\n\t\t\t\trow: propertyId.col,\n\t\t\t\tpropertyId: childPropertyId\n\t\t\t};\n\t\t} else if (propertyId &&\n\t\t\ttypeof propertyId.col !== \"undefined\" &&\n\t\t\ttypeof propertyId.row !== \"undefined\" &&\n\t\t\ttypeof propertyId.propertyId !== \"undefined\") { // handle nested complex types that aren't tables\n\t\t\treturn {\n\t\t\t\tname: propertyId.name,\n\t\t\t\trow: propertyId.row,\n\t\t\t\tcol: propertyId.col,\n\t\t\t\tpropertyId: this.convertNestedPropertyId(propertyId.propertyId)\n\t\t\t};\n\t\t}\n\t\treturn propertyId;\n\t}\n\n\t// Given the parent's \"propertyId\", find the \"propertyId\" of the last child\n\t//  and update the \"row\" and \"col\" properties defined in \"childProperties\"\n\tupdateLastChildPropertyId(propertyId, childProperties) {\n\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\treturn this.updateLastChildPropertyId(propertyId.propertyId, childProperties);\n\t\t}\n\t\tif (typeof childProperties.row !== \"undefined\") {\n\t\t\tpropertyId.row = childProperties.row;\n\t\t}\n\t\tif (typeof childProperties.col !== \"undefined\") {\n\t\t\tpropertyId.col = childProperties.col;\n\t\t}\n\t\treturn propertyId;\n\t}\n\n\t// Given the parent's \"propertyId\", set the \"childPropertyId\" as the last child of \"propertyId\"\n\t// The \"childPropertyId\" is a control of a nested structure\n\tsetChildPropertyId(propertyId, childPropertyId) {\n\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\treturn this.setChildPropertyId(propertyId.propertyId, childPropertyId);\n\t\t}\n\t\tpropertyId.propertyId = childPropertyId;\n\t\treturn propertyId;\n\t}\n\n\t// This function will traverse the form and build a tree representation of panels.\n\t// Each panel entry will have an array of children controls and children panels.\n\tparsePanelTree() {\n\t\tthis.panelTree = {};\n\t\tthis.panelTree[PANEL_TREE_ROOT] = { controls: [], panels: [], actions: [] };\n\t\tparseUiContent(this.panelTree, this.form, PANEL_TREE_ROOT);\n\t}\n\n\t_addToControlValues(resolveParameterRefs) {\n\t\tfor (const keyName in this.controls) {\n\t\t\tif (!has(this.controls, keyName)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst control = this.controls[keyName];\n\t\t\tconst propertyId = { name: control.name };\n\t\t\tlet controlValue = this.getPropertyValue(propertyId);\n\n\t\t\tif (resolveParameterRefs) {\n\t\t\t\tif (typeof controlValue !== \"undefined\" && controlValue !== null && typeof controlValue.parameterRef !== \"undefined\") {\n\t\t\t\t\tcontrolValue = this.getPropertyValue({ name: controlValue.parameterRef });\n\t\t\t\t\tthis.updatePropertyValue(propertyId, controlValue, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t\t\t}\n\t\t\t} else if (control.controlType === \"structuretable\" && control.addRemoveRows === false && control.includeAllFields === true) {\n\t\t\t\tcontrolValue = this._populateFieldData(controlValue, control);\n\t\t\t\tthis.updatePropertyValue(propertyId, controlValue, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t\t} else if (typeof control.valueDef !== \"undefined\" && typeof control.valueDef.defaultValue !== \"undefined\" &&\n\t\t\t\t(typeof controlValue === \"undefined\")) {\n\t\t\t\tcontrolValue = control.valueDef.defaultValue;\n\n\t\t\t\t// convert values of type:object to the internal format array values\n\t\t\t\tif (PropertyUtils.isSubControlStructureObjectType(control)) {\n\t\t\t\t\tcontrolValue = PropertyUtils.convertObjectStructureToArray(control.valueDef.isList, control.subControls, controlValue);\n\t\t\t\t}\n\n\t\t\t\tthis.updatePropertyValue(propertyId, controlValue, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t\t} else if (control.controlType === \"structureeditor\") {\n\t\t\t\tif (!controlValue || (Array.isArray(controlValue) && controlValue.length === 0)) {\n\t\t\t\t\tif (Array.isArray(control.defaultRow)) {\n\t\t\t\t\t\tthis.updatePropertyValue(propertyId, control.defaultRow, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_populateFieldData(controlValue, control) {\n\t\tconst fields = this.getDatasetMetadataFields();\n\t\tconst multiSchema = this._isMultiSchemaControl(control);\n\t\t// Start with the values stored in current_parameters\n\t\tconst rowData = [].concat(controlValue);\n\t\t// Add in any rows containing fields not present in the current parameters\n\t\tfor (let i = 0; i < fields.length; i++) {\n\t\t\tconst row = [];\n\t\t\tconst fieldIndex = this._indexOfField(fields[i].name, controlValue);\n\t\t\tif (fieldIndex === -1) {\n\t\t\t\tfor (let k = 0; k < control.subControls.length; k++) {\n\t\t\t\t\tif (k === control.keyIndex) {\n\t\t\t\t\t\tconst fieldValue = multiSchema ? { link_ref: fields[i].schema, field_name: fields[i].origName } : fields[i].name;\n\t\t\t\t\t\trow.push(fieldValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.push(this._getDefaultSubControlValue(k, fields[i].name, fields, control));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trowData.push(row);\n\t\t\t}\n\t\t}\n\t\treturn rowData;\n\t}\n\n\t/**\n\t * Determines if the given control supports multiple input schemas.\n\t *\n\t * @param control A control structure\n\t * @return True if the control supports multiple input schemas\n\t */\n\t_isMultiSchemaControl(control) {\n\t\tif (control.role === ParamRole.COLUMN && control.valueDef.propType === Type.STRUCTURE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (PropertyUtils.toType(control.subControls) === \"array\") {\n\t\t\tfor (const keyName in control.subControls) {\n\t\t\t\tif (has(control.subControls, keyName)) {\n\t\t\t\t\tconst subControl = control.subControls[keyName];\n\t\t\t\t\tif (subControl.role === ParamRole.COLUMN && subControl.valueDef.propType === Type.STRUCTURE) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines if the current form can accept multiple input schemas.\n\t *\n\t * @return True if multiple input datasets are supported in this node\n\t */\n\t_canHaveMultipleSchemas() {\n\t\tfor (const keyName in this.controls) {\n\t\t\tif (has(this.controls, keyName)) {\n\t\t\t\tconst control = this.controls[keyName];\n\t\t\t\tif (this._isMultiSchemaControl(control)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t_getDefaultSubControlValue(col, fieldName, fields, control) {\n\t\tlet val;\n\t\tconst subControl = control.subControls[col];\n\t\tif (PropertyUtils.toType(subControl.dmDefault) !== \"undefined\") {\n\t\t\tval = PropertyUtils.getDMDefault(subControl, fieldName, fields);\n\t\t} else if (PropertyUtils.toType(subControl.valueDef.defaultValue) !== \"undefined\") {\n\t\t\tval = subControl.valueDef.defaultValue;\n\t\t\tif (val.parameterRef) {\n\t\t\t\tval = this.getPropertyValue({ name: val.parameterRef });\n\t\t\t}\n\t\t} else if (subControl.values) {\n\t\t\tval = subControl.values[0];\n\t\t} else if (subControl.valueDef.propType === \"string\") {\n\t\t\tval = \"\";\n\t\t} else if (subControl.valueDef.propType === \"boolean\") {\n\t\t\tval = false;\n\t\t} else if (subControl.valueDef.propType === \"enum\") {\n\t\t\tval = subControl.values[0];\n\t\t} else if (subControl.valueDef.propType === \"integer\" ||\n\t\t\t\t\t\t\t\tsubControl.valueDef.propType === \"long\" ||\n\t\t\t\t\t\t\t\tsubControl.valueDef.propType === \"double\") {\n\t\t\tval = 0;\n\t\t} else if (subControl.valueDef.propType === \"structure\") {\n\t\t\tval = {};\n\t\t} else {\n\t\t\tval = null;\n\t\t}\n\t\treturn val;\n\t}\n\n\t_indexOfField(fieldName, controlValue) {\n\t\tfor (let i = 0; i < controlValue.length; i++) {\n\t\t\tif (controlValue[i][0] === fieldName) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tgetUiItems() {\n\t\treturn this.uiItems;\n\t}\n\n\tgetReactIntl() {\n\t\treturn this.reactIntl;\n\t}\n\n\taddSharedControls(id, controlsNames) {\n\t\tthis.sharedCtrlInfo.push({ \"id\": id, \"controlNames\": controlsNames });\n\t}\n\n\tgetSharedCtrlInfo() {\n\t\treturn this.sharedCtrlInfo;\n\t}\n\n\tisSummaryPanelShowing() {\n\t\treturn this.isSummaryPanel;\n\t}\n\n\tsetIsSummaryPanelShowing(isSummaryPanelShowing) {\n\t\tthis.isSummaryPanel = isSummaryPanelShowing;\n\t}\n\n\tincreaseVisibleSubPanelCounter() {\n\t\tthis.visibleSubPanelCounter++;\n\t}\n\n\tdecreaseVisibleSubPanelCounter() {\n\t\tthis.visibleSubPanelCounter--;\n\t}\n\n\tisSubPanelsShowing() {\n\t\treturn this.visibleSubPanelCounter > 0;\n\t}\n\n\t/**\n\t* Returns title\n\t*\t@return string\n\t*/\n\tgetTitle() {\n\t\treturn this.propertiesStore.getTitle();\n\t}\n\n\t/**\n\t* Sets title for common-properties\n\t*\t@param title string\n\t*/\n\tsetTitle(title) {\n\t\treturn this.propertiesStore.setTitle(title);\n\t}\n\n\t/**\n\t* Sets all ops supported in common-properties.  Both standard and custom\n\t*\t@param custOps object\n\t*/\n\tsetConditionOps(custOps) {\n\t\tthis.conditionOps = getConditionOps(custOps);\n\t}\n\n\t/**\n\t* Returns the op to run.\n\t*\t@param op string\n\t* @return op method to run\n\t*/\n\tgetConditionOp(op) {\n\t\tif (this.conditionOps) {\n\t\t\treturn this.conditionOps[op];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t*\t@return a map of condition ops\n\t*/\n\tgetConditionOps() {\n\t\treturn this.conditionOps;\n\t}\n\n\t/**\n\t* Returns datasetMetadata passed into common-properties.\n\t*\t@return passed in value\n\t*/\n\tgetDatasetMetadata() {\n\t\treturn this.propertiesStore.getDatasetMetadata().schemas;\n\t}\n\n\t/**\n\t* Returns a list field objects.  Based on datasetMetadata passed into common-properties.\n\t*\t@return array[field]\n\t*/\n\tgetDatasetMetadataFields() {\n\t\treturn this.propertiesStore.getDatasetMetadata().fields;\n\t}\n\n\t/**\n\t* Returns a list of schema names.\n\t*\t@return array[string]\n\t*/\n\tgetDatasetMetadataSchemas() {\n\t\treturn this.propertiesStore.getDatasetMetadata().schemaNames;\n\t}\n\n\t/**\n\t* Returns a list field objects filtered. These are filterd by conditions and\n\t* by shared controls\n\t* @param propertyId Propertied id of the control requesting the fields\n\t* @return array[field]\n\t*/\n\tgetFilteredDatasetMetadata(propertyId) {\n\t\tlet fields = this.getDatasetMetadataFields();\n\t\tif (propertyId) {\n\t\t\tfields = this._filterSharedDataset(propertyId, fields);\n\t\t\tfields = conditionsUtil.filterConditions(propertyId, this.filterDefinitions.controls, this, fields);\n\t\t}\n\t\treturn fields;\n\t}\n\n\t/**\n\t * Retrieves a filtered data model in which all fields that are already\n\t * in use by other controls are already filtered out.\n\t *\n\t * @param propertyId Name of control to skip when checking field controls\n\t * @param fields array of available fields to be filtered\n\t * @return Filtered fields with fields in use removed\n\t */\n\t_filterSharedDataset(propertyId, fields) {\n\t\tif (!this.sharedCtrlInfo || !propertyId) {\n\t\t\treturn fields;\n\t\t}\n\t\tconst skipControlName = propertyId.name;\n\t\t// gets all the controls that are shared with this property\n\t\tlet sharedCtrlNames = [];\n\t\tfor (const sharedCtrlList of this.sharedCtrlInfo) {\n\t\t\tfor (const sharedCtrl of sharedCtrlList.controlNames) {\n\t\t\t\tif (skipControlName === sharedCtrl.controlName) {\n\t\t\t\t\tsharedCtrlNames = sharedCtrlList.controlNames;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// get all the fields that are used by other controls\n\t\tconst propNames = sharedCtrlNames.map(function(item) {\n\t\t\treturn item.controlName;\n\t\t});\n\t\treturn this.filterFieldsFromSharedProps(fields, propNames, skipControlName);\n\t}\n\n\t/**\n\t * Filters field names that are already in use from the given list.\n\t *\n\t * @param fieldNames - Array of field names to filter\n\t * @param propNames - Array of property names that share a single source field list\n\t * @param skipName - Name of a property to skip from the list\n\t * @return An array of filtered field names that are not in use\n\t */\n\tfilterFieldsFromSharedProps(fieldNames, propNames, skipName) {\n\t\ttry {\n\t\t\tconst usedFields = [];\n\t\t\tfor (const sharedProp of propNames) {\n\t\t\t\tif (sharedProp !== skipName) {\n\t\t\t\t\tconst control = this.getControl({ name: sharedProp });\n\t\t\t\t\t// only remove from the main list the values that are in other controls\n\t\t\t\t\tconst propValue = this.getPropertyValue({ name: sharedProp });\n\t\t\t\t\tif (Array.isArray(propValue)) {\n\t\t\t\t\t\tfor (const arrayValue of propValue) {\n\t\t\t\t\t\t\tif (Array.isArray(arrayValue)) {\n\t\t\t\t\t\t\t\t// Two dimensional arrays\n\t\t\t\t\t\t\t\tconst fieldIdx = PropertyUtils.getTableFieldIndex(control);\n\t\t\t\t\t\t\t\tif (fieldIdx >= 0 && fieldIdx < arrayValue.length) {\n\t\t\t\t\t\t\t\t\tusedFields.push(PropertyUtils.stringifyFieldValue(arrayValue[fieldIdx], control));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Single dimensional arrays\n\t\t\t\t\t\t\t\tusedFields.push(PropertyUtils.stringifyFieldValue(arrayValue, control));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Plain properties\n\t\t\t\t\t\tusedFields.push(PropertyUtils.stringifyFieldValue(propValue, control));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst usedFieldsList = Array.from(new Set(usedFields)); // make all values unique\n\t\t\tconst filteredFields = fieldNames.filter(function(field) {\n\t\t\t\treturn usedFieldsList.indexOf(field.name) === -1;\n\t\t\t});\n\t\t\treturn filteredFields;\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error filtering shared controls \" + error);\n\t\t}\n\t\treturn fieldNames;\n\t}\n\n\t/**\n\t * This method parses the inDatasetMetadata into fields and schemaNames to be\n\t * used throughout common-properties.\n\t *\n\t * @param inDatasetMetadata Array of datasetMetadata schemata\n\t */\n\tsetDatasetMetadata(inDatasetMetadata) {\n\t\tconst schemaNames = [];\n\t\tconst fields = [];\n\t\tif (inDatasetMetadata) {\n\t\t\tlet schemas = cloneDeep(inDatasetMetadata);\n\t\t\t// in the 2.0 schema only arrays are support but we want to support both for now.  Internally everything should be an array\n\t\t\tif (!Array.isArray(schemas)) {\n\t\t\t\tschemas = [schemas];\n\t\t\t}\n\t\t\t// make sure all schemas have a name\n\t\t\tfor (let j = 0; j < schemas.length; j++) {\n\t\t\t\tif (!schemas[j].name) {\n\t\t\t\t\tschemas[j].name = j.toString();\n\t\t\t\t}\n\t\t\t\tschemas[j].idx = j; // used to set dup names\n\t\t\t}\n\t\t\t// make sure all schemas have a unique names\n\t\t\tfor (const schema of schemas) {\n\t\t\t\tconst dupNamedSchemas = schemas.filter(function(filterSchema) {\n\t\t\t\t\treturn filterSchema.name === schema.name;\n\t\t\t\t});\n\t\t\t\tif (dupNamedSchemas && dupNamedSchemas.length > 1) {\n\t\t\t\t\tfor (let j = 0; j < dupNamedSchemas.length; j++) {\n\t\t\t\t\t\tdupNamedSchemas[j].name = dupNamedSchemas[j].name + \"_\" + dupNamedSchemas[j].idx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// process all fields into single array\n\t\t\tfor (const schema of schemas) {\n\t\t\t\tschemaNames.push(schema.name);\n\t\t\t\tif (schema.fields) {\n\t\t\t\t\tfor (const field of schema.fields) {\n\t\t\t\t\t\tfield.schema = schema.name;\n\t\t\t\t\t\tfield.origName = field.name; // original name\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Adjust field names for multi-schema scenarios in which setForm is not called\n\t\tif (typeof this.multipleSchemas === \"undefined\") {\n\t\t\t// Determine from the current control set whether or not there can be multiple input datasets\n\t\t\tthis.multipleSchemas = this._canHaveMultipleSchemas();\n\t\t}\n\t\tif (this.multipleSchemas) {\n\t\t\tfor (const field of fields) {\n\t\t\t\tfield.name = field.schema + \".\" + field.origName;\n\t\t\t}\n\t\t}\n\n\t\t// store values in redux\n\t\tthis.propertiesStore.setDatasetMetadata({ schemas: inDatasetMetadata, fields: fields, schemaNames: schemaNames });\n\t}\n\n\t/**\n\t* This public API will validate a single property input value.\n\t*\n\t* @param {object} propertyId. required.\n\t* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n\t*    Defaults to true to always display errors\n\t*/\n\tvalidateInput(propertyId, showErrors = true) {\n\t\tconditionsUtil.validateInput(propertyId, this, showErrors);\n\t}\n\n\t/**\n\t* This public API will validate all properties input values.\n\t* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n\t*    Defaults to true to always display errors\n\t*/\n\tvalidatePropertiesValues(showErrors = true) {\n\t\tconditionsUtil.validatePropertiesValues(this, showErrors);\n\t}\n\n\t//\n\t// Table row selections\n\t//\n\tgetSelectedRows(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\treturn this.propertiesStore.getSelectedRows(propertyId);\n\t}\n\n\tupdateSelectedRows(inPropertyId, selection) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.updateSelectedRows(propertyId, selection);\n\t\tthis._notifySelectionListener(propertyId, selection);\n\t}\n\n\tclearSelectedRows(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.clearSelectedRows(propertyId);\n\t}\n\n\t/**\n\t * Disable table row move buttons for all propertyIds in given array\n\t * @param propertyIds Array of propertyIds\n\t *\n\t */\n\tsetDisableRowMoveButtons(propertyIds) {\n\t\t// Verify that input is an array of objects\n\t\tif (Array.isArray(propertyIds)) {\n\t\t\tthis.propertiesStore.setDisableRowMoveButtons(propertyIds);\n\t\t}\n\t}\n\n\t/**\n\t* Returns array of propertyIds for which row move buttons will be disabled\n\t*\t@return Array of propertyIds\n\t*/\n\tgetDisableRowMoveButtons() {\n\t\treturn this.propertiesStore.getDisableRowMoveButtons();\n\t}\n\n\t/**\n\t * Check if row move buttons should be disabled for given propertyId\n\t * @param propertyId  The unique property identifier\n\t * @return boolean\n\t */\n\tisDisableRowMoveButtons(propertyId) {\n\t\tconst propertyIds = this.getDisableRowMoveButtons();\n\t\treturn (\n\t\t\tArray.isArray(propertyIds)\n\t\t\t\t? propertyIds.some((el) => isEqual(el, propertyId))\n\t\t\t\t: false\n\t\t);\n\t}\n\n\t//\n\t// Table row selection listeners\n\t//\n\n\t/**\n\t * Adds a row selection listener for a table or list.\n\t *\n\t * @param inPropertyId Property id for a table or list control\n\t * @param listener A callback function that contains a parameter that is\n\t *\tan array of row selection indices. The callback is fired whenever\n\t *\trow selections change for the given (row-based) control.\n\t */\n\taddRowSelectionListener(inPropertyId, listener) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst controlName = propertyId.name;\n\t\tif (!this.selectionListeners[controlName]) {\n\t\t\tthis.selectionListeners[controlName] = {};\n\t\t}\n\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\tthrow new Error(\"Listening for row selection changes on controls within table cells is not currently supported\");\n\n\t\t\t// TODO: Add this back if we ever get a request for listening to row changes on embedded tables.\n\n\t\t\t/*\n\t\t\tconst row = String(propertyId.row);\n\t\t\tif (!this.selectionListeners[propertyId.name][row]) {\n\t\t\t\tthis.selectionListeners[propertyId.name][row] = {};\n\t\t\t}\n\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\tconst col = String(propertyId.col);\n\t\t\t\tif (!this.selectionListeners[propertyId.name][row][col]) {\n\t\t\t\t\tthis.selectionListeners[propertyId.name][row][col] = {};\n\t\t\t\t}\n\t\t\t\tthis.selectionListeners[controlName][row][col] = listener;\n\t\t\t} else {\n\t\t\t\tthis.selectionListeners[controlName][row] = listener;\n\t\t\t}\n\t\t\t*/\n\t\t} else {\n\t\t\tthis.selectionListeners[controlName].listener = listener;\n\t\t}\n\t}\n\n\t/**\n\t * Removes the row selection listener from a control.\n\t *\n\t * @param inPropertyId Property id for a table or list control\n\t */\n\tremoveRowSelectionListener(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst controlName = propertyId.name;\n\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\tthrow new Error(\"Listening for row selection changes on controls within table cells is not currently supported\");\n\n\t\t\t// TODO: Add this back if we ever get a request for listening to row changes on embedded tables.\n\n\t\t\t/*\n\t\t\tconst row = propertyId.row;\n\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\tconst col = propertyId.col;\n\t\t\t\tif (this.selectionListeners[controlName][row][col]) {\n\t\t\t\t\tdelete this.selectionListeners[controlName][row][col];\n\t\t\t\t}\n\t\t\t} else if (this.selectionListeners[controlName][row]) {\n\t\t\t\tdelete this.selectionListeners[controlName][row];\n\t\t\t}\n\t\t\t*/\n\t\t} else if (this.selectionListeners[controlName]) {\n\t\t\tdelete this.selectionListeners[controlName];\n\t\t}\n\t}\n\n\t_notifySelectionListener(inPropertyId, selections) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst controlName = propertyId.name;\n\t\tif (this.selectionListeners[controlName]) {\n\n\t\t\t// TODO: Add this back if we ever get a request for listening to row changes on embedded tables.\n\n\t\t\t/*\n\t\t\tconst row = propertyId.row;\n\t\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\t\tconst col = propertyId.col;\n\t\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\t\tif (this.selectionListeners[controlName][row][col].listener) {\n\t\t\t\t\t\tthis.selectionListeners[controlName][row][col].listener(selections);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.selectionListeners[controlName][row].listener) {\n\t\t\t\t\tthis.selectionListeners[controlName][row].listener(selections);\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t\tthis.selectionListeners[controlName].listener(selections);\n\t\t}\n\t}\n\n\t//\n\t// A set of APIs for Expression Builder\n\t//\n\n\tsetExpressionInfo(expressionInfo) {\n\t\tthis.expressionFunctionInfo = setExpressionInfo(expressionInfo);\n\t}\n\n\tgetExpressionInfo() {\n\t\treturn this.expressionFunctionInfo;\n\t}\n\n\t// recently used of all categories under functions tab\n\tgetExpressionRecentlyUsed() {\n\t\treturn this.expressionRecentlyUsed;\n\t}\n\n\tupdateExpressionRecentlyUsed(functionInfo) {\n\t\tconst index = this.expressionRecentlyUsed.indexOf(functionInfo);\n\t\tif (index === -1) {\n\t\t\tthis.expressionRecentlyUsed.splice(0, 0, functionInfo);\n\t\t} else {\n\t\t\t// if already in the list, move it to the front\n\t\t\tthis.expressionRecentlyUsed.splice(index, 1);\n\t\t\tthis.expressionRecentlyUsed.unshift(functionInfo);\n\t\t}\n\t}\n\n\t// recently used of all categories under fields/values tab\n\tclearExpressionRecentlyUsed() {\n\t\tthis.expressionRecentlyUsed = [];\n\t}\n\n\tgetExpressionFieldsRecentlyUsed() {\n\t\treturn this.expressionFieldsRecentlyUsed;\n\t}\n\n\tupdateExpressionFieldsRecentlyUsed(fieldInfo) {\n\t\tconst index = this.expressionFieldsRecentlyUsed.indexOf(fieldInfo);\n\t\tif (index === -1) {\n\t\t\tthis.expressionFieldsRecentlyUsed.splice(0, 0, fieldInfo);\n\t\t} else {\n\t\t\t// if already in the list, move it to the front\n\t\t\tthis.expressionFieldsRecentlyUsed.splice(index, 1);\n\t\t\tthis.expressionFieldsRecentlyUsed.unshift(fieldInfo);\n\t\t}\n\t}\n\n\tclearExpressionFieldsRecentlyUsed() {\n\t\tthis.expressionFieldsRecentlyUsed = [];\n\t}\n\n\t/**\n\t* Retrieve filtered enumeration items.\n\t*\n\t* @param propertyId The unique property identifier\n\t* @param enumSet An object containing equal sized values and valueLabels arrays\n\t* @return Either the input object or a new object containing filtered items\n\t*/\n\tgetFilteredEnumItems(propertyId, enumSet) {\n\t\tconst replacementItems = this.propertiesStore.getFilteredEnumItems(propertyId);\n\t\tif (Array.isArray(replacementItems)) {\n\t\t\tconst newControl = {};\n\t\t\tnewControl.values = [];\n\t\t\tnewControl.valueLabels = [];\n\t\t\tfor (let idx = 0; idx < replacementItems.length; idx++) {\n\t\t\t\tnewControl.values.push(replacementItems[idx]);\n\t\t\t\tlet label = replacementItems[idx];\n\t\t\t\tconst index = enumSet.values.findIndex(function(value) {\n\t\t\t\t\treturn value === replacementItems[idx];\n\t\t\t\t});\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tlabel = enumSet.valueLabels[index];\n\t\t\t\t}\n\t\t\t\tnewControl.valueLabels.push(label);\n\t\t\t}\n\t\t\treturn newControl;\n\t\t}\n\t\treturn enumSet;\n\t}\n\n\t/*\n\t* Property Values Methods\n\t*/\n\tupdatePropertyValue(inPropertyId, value, skipValidateInput, type) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst initialValue = this.getPropertyValue(propertyId);\n\t\tif (typeof value === \"undefined\") {\n\t\t\tthis.removePropertyValue(propertyId);\n\t\t} else {\n\t\t\tthis.propertiesStore.updatePropertyValue(propertyId, value);\n\t\t}\n\t\tif (!conditionsUtil.allowConditions(inPropertyId, this)) {\n\t\t\tthis.propertiesStore.updatePropertyValue(propertyId, initialValue);\n\t\t\treturn;\n\t\t}\n\t\tconditionsUtil.validateConditions(inPropertyId, this);\n\t\tif (!skipValidateInput) {\n\t\t\tconditionsUtil.validateInput(inPropertyId, this, true);\n\t\t}\n\n\t\tif (this.handlers.propertyListener) {\n\t\t\tconst convertedValue = this._convertObjectStructure(propertyId, value);\n\t\t\tconst data = {\n\t\t\t\taction: ACTIONS.UPDATE_PROPERTY,\n\t\t\t\tproperty: propertyId,\n\t\t\t\tvalue: convertedValue\n\t\t\t};\n\t\t\tif (typeof type !== \"undefined\") {\n\t\t\t\tdata.type = type;\n\t\t\t}\n\t\t\tthis.handlers.propertyListener(data);\n\t\t}\n\t}\n\n\t/*\n\t* return the property value for the given 'inPropertyId'\n\t* options - optional object of config options where\n\t*   filterHiddenDisabled: true - filter out values from controls having state \"hidden\" or \"disabled\"\n\t*   applyProperties: true - this function is called from PropertiesMain.applyPropertiesEditing()\n\t*   filterHidden: true - filter out values from controls having state \"hidden\"\n\t*   filterDisabled: true - filter out values from controls having state \"disabled\"\n\t*   filterHiddenControls: true - filter out values from controls having type \"hidden\"\n\t*/\n\tgetPropertyValue(inPropertyId, options, defaultValue) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst propertyValue = this.propertiesStore.getPropertyValue(propertyId);\n\t\tlet filteredValue = defaultValue;\n\n\t\t// don't return hidden/disabled values\n\t\tconst filterHidden = options && (options.filterHiddenDisabled || options.filterHidden);\n\t\tconst filterDisabled = options && (options.filterHiddenDisabled || options.filterDisabled);\n\t\tconst filterHiddenControls = options && options.filterHiddenControls;\n\t\tif (filterHidden || filterDisabled || filterHiddenControls) {\n\t\t\t// top level value\n\t\t\tconst controlState = this.getControlState(propertyId);\n\t\t\tconst controlType = this.getControlType(propertyId);\n\t\t\tif (\n\t\t\t\t(controlState === STATES.DISABLED && filterDisabled) ||\n\t\t\t\t(controlState === STATES.HIDDEN && filterHidden) ||\n\t\t\t\t(controlType === ControlType.HIDDEN && filterHiddenControls)\n\t\t\t) {\n\t\t\t\treturn filteredValue;\n\t\t\t}\n\t\t\t// copy array to modify it and clear out disabled/hidden values\n\t\t\tfilteredValue = PropertyUtils.copy(propertyValue);\n\t\t\tif (Array.isArray(filteredValue)) {\n\t\t\t\tfor (let rowIdx = 0; rowIdx < filteredValue.length; rowIdx++) {\n\t\t\t\t\tconst rowValue = filteredValue[rowIdx];\n\t\t\t\t\tif (Array.isArray(rowValue)) {\n\t\t\t\t\t\tfor (let colIdx = 0; colIdx < rowValue.length; colIdx++) {\n\t\t\t\t\t\t\tconst colPropertyId = {\n\t\t\t\t\t\t\t\tname: propertyId.name,\n\t\t\t\t\t\t\t\trow: rowIdx,\n\t\t\t\t\t\t\t\tcol: colIdx\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst valueState = this.getControlState(colPropertyId);\n\t\t\t\t\t\t\tconst valueType = this.getControlType(colPropertyId);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(valueState === STATES.DISABLED && filterDisabled) ||\n\t\t\t\t\t\t\t\t(valueState === STATES.HIDDEN && filterHidden) ||\n\t\t\t\t\t\t\t\t(valueType === ControlType.HIDDEN && filterHiddenControls)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tfilteredValue[rowIdx][colIdx] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options && options.applyProperties === true) {\n\t\t\t\treturn this._convertObjectStructure(propertyId, filteredValue);\n\t\t\t}\n\t\t\treturn filteredValue;\n\t\t}\n\n\t\tif (options && options.applyProperties === true) {\n\t\t\treturn this._convertObjectStructure(propertyId, propertyValue);\n\t\t}\n\t\treturn propertyValue;\n\t}\n\n\tremovePropertyValue(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.removePropertyValue(propertyId);\n\t}\n\n\t// convert currentParameters of structureType:object to object values\n\t_convertObjectStructure(propertyId, propertyValue) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (PropertyUtils.isSubControlStructureObjectType(control)) {\n\t\t\tconst convert = control.structureType && control.structureType === \"object\";\n\t\t\tconst convertedValues = PropertyUtils.convertArrayStructureToObject(control.valueDef.isList, control.subControls, propertyValue, convert);\n\t\t\treturn convertedValues;\n\t\t}\n\t\treturn propertyValue;\n\t}\n\n\t/*\n\t* return the property values for all controls\n\t* options - optional object of config options where\n\t*   filterHiddenDisabled: true - filter out values from controls having state \"hidden\" or \"disabled\"\n\t*   applyProperties: true - this function is called from PropertiesMain.applyPropertiesEditing()\n\t*   filterHidden: true - filter out values from controls having state \"hidden\"\n\t*   filterDisabled: true - filter out values from controls having state \"disabled\"\n\t*   filterHiddenControls: true - filter out values from controls having type \"hidden\"\n\t*/\n\tgetPropertyValues(options) {\n\t\tconst propertyValues = this.propertiesStore.getPropertyValues();\n\t\tlet returnValues = propertyValues;\n\t\tif (options && (options.filterHiddenDisabled || options.filterHidden || options.filterDisabled || options.filterHiddenControls)) {\n\t\t\tconst filteredValues = {};\n\t\t\tfor (const propKey in propertyValues) {\n\t\t\t\tif (!has(propertyValues, propKey)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst filteredValue = this.getPropertyValue({ name: propKey }, options);\n\t\t\t\t// only set parameters with values\n\t\t\t\tif (typeof filteredValue !== \"undefined\") {\n\t\t\t\t\tfilteredValues[propKey] = filteredValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturnValues = filteredValues;\n\t\t}\n\n\t\t// convert currentParameters of structureType:object to object values\n\t\tif (options && options.applyProperties === true) {\n\t\t\tfor (const controlId in returnValues) {\n\t\t\t\tif (!has(returnValues, controlId)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst propertyId = this.convertPropertyId(controlId);\n\t\t\t\tconst propertyValue = this.propertiesStore.getPropertyValue(propertyId);\n\t\t\t\treturnValues[controlId] = this._convertObjectStructure(propertyId, propertyValue);\n\t\t\t}\n\t\t}\n\n\t\treturn returnValues;\n\t}\n\n\tsetPropertyValues(values, isInitProps) {\n\t\tconst inValues = cloneDeep(values);\n\n\t\t// convert currentParameters of type:object to array values\n\t\tif (values) {\n\t\t\tconst controls = this.getControls();\n\t\t\tObject.keys(inValues).forEach((propertyName) => {\n\t\t\t\tif (PropertyUtils.isSubControlStructureObjectType(controls[propertyName])) {\n\t\t\t\t\tconst currentValues = values[propertyName];\n\t\t\t\t\tconst control = controls[propertyName];\n\t\t\t\t\tconst convertedValues = PropertyUtils.convertObjectStructureToArray(control.valueDef.isList, control.subControls, currentValues);\n\t\t\t\t\tinValues[propertyName] = convertedValues;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.propertiesStore.setPropertyValues(inValues);\n\n\t\tif (isInitProps) {\n\t\t\t// Evaluate conditional defaults based on current_parameters upon loading of view\n\t\t\t// For a given parameter_ref, if multiple conditions evaluate to true only the first one is used.\n\t\t\tconst conditionalDefaultValues = {};\n\t\t\tif (!isEmpty(inValues)) {\n\t\t\t\tObject.keys(inValues).forEach((propertyName) => {\n\t\t\t\t\tconst propertyId = { name: propertyName };\n\t\t\t\t\t// Update conditionalDefaultValues object using pass-by-reference\n\t\t\t\t\tconditionsUtil.setConditionalDefaultValue(propertyId, this, conditionalDefaultValues);\n\t\t\t\t});\n\t\t\t\tif (!isEmpty(conditionalDefaultValues)) {\n\t\t\t\t\tObject.keys(conditionalDefaultValues).forEach((parameterRef) => {\n\t\t\t\t\t\tif (!(parameterRef in inValues)) {\n\t\t\t\t\t\t\t// convert values of type:object to the internal format array values\n\t\t\t\t\t\t\tconst control = this.getControl({ name: parameterRef });\n\t\t\t\t\t\t\tif (PropertyUtils.isSubControlStructureObjectType(control)) {\n\t\t\t\t\t\t\t\tconditionalDefaultValues[parameterRef] =\n\t\t\t\t\t\t\t\tPropertyUtils.convertObjectStructureToArray(control.valueDef.isList, control.subControls, conditionalDefaultValues[parameterRef]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.propertiesStore.updatePropertyValue({ name: parameterRef }, conditionalDefaultValues[parameterRef]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Validate other conditions after evaluating conditional defaults (default_value conditions)\n\t\tconditionsUtil.validatePropertiesConditions(this);\n\t\tif (this.handlers.propertyListener) {\n\t\t\tthis.handlers.propertyListener(\n\t\t\t\t{\n\t\t\t\t\taction: ACTIONS.SET_PROPERTIES\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Control States Methods\n\t * Sets the control state. Supported states are:\n\t * \"disabled\", \"enabled\", \"hidden\", \"visible\".\n\t */\n\tsetControlStates(states) {\n\t\tthis.propertiesStore.setControlStates(states);\n\t}\n\n\t/**\n\t* Updates the enabled/visible state of a control.\n\t*\n\t* @param inPropertyId Id of the property for the control to operate upon\n\t* @param state string (\"disabled\", \"enabled\", \"hidden\", \"visible\")\n\t*/\n\tupdateControlState(inPropertyId, state) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.updateControlState(propertyId, state);\n\t}\n\tgetControlState(propertyId) {\n\t\tconst state = this.propertiesStore.getControlState(propertyId);\n\t\treturn state ? state.value : \"\";\n\t}\n\tgetControlStates() {\n\t\treturn this.propertiesStore.getControlStates();\n\t}\n\n\t/**\n\t * Retrieves the enumeration value states for the given propertyId.\n\t *\n\t * @param propertyId The of an enumeration property\n\t * @return An object containing state settings for those enumeration values\n\t * that have previously been set\n\t */\n\tgetControlValueStates(propertyId) {\n\t\tconst state = this.propertiesStore.getControlState(propertyId);\n\t\treturn state ? state.values : {};\n\t}\n\n\t/**\n\t * Retrieves the enumeration value states for the given propertyId.\n\t *\n\t * @param propertyId The of an enumeration property\n\t * @return An object containing state enumFilter\n\t */\n\tgetControlEnumFilterStates(propertyId) {\n\t\tconst state = this.propertiesStore.getControlState(propertyId);\n\t\treturn state ? state.enumFilter : {};\n\t}\n\n\t/**\n\t\t * Panel States Methods\n\t\t * Sets the panel state. Supported states are:\n\t\t * \"disabled\", \"enabled\", \"hidden\", \"visible\".\n\t\t */\n\tsetPanelStates(states) {\n\t\tthis.propertiesStore.setPanelStates(states);\n\t}\n\n\t/**\n\t\t* @param panelId {name: panel.id}\n\t  * @param state string (\"disabled\", \"enabled\", \"hidden\", \"visible\")\n\t\t*/\n\tupdatePanelState(panelId, state) {\n\t\tthis.propertiesStore.updatePanelState(panelId, state);\n\t}\n\tgetPanelState(panelId) {\n\t\treturn this.propertiesStore.getPanelState(panelId);\n\t}\n\tgetPanelStates() {\n\t\treturn this.propertiesStore.getPanelStates();\n\t}\n\tclearActiveTearsheet() {\n\t\tthis.propertiesStore.setActiveTearsheetId(null);\n\t}\n\tsetActiveTearsheet(tearsheetId) {\n\t\tthis.propertiesStore.setActiveTearsheetId(tearsheetId);\n\t}\n\tgetActiveTearsheet() {\n\t\treturn this.propertiesStore.getActiveTearsheetId() || null;\n\t}\n\n\n\t/**\n\t * Action States Methods\n\t * Sets the panel state. Supported states are:\n\t * \"disabled\", \"enabled\", \"hidden\", \"visible\".\n\t */\n\tsetActionStates(states) {\n\t\tthis.propertiesStore.setActionStates(states);\n\t}\n\n\t/**\n\t* @param actionId {name: action.id}\n  * @param state string (\"disabled\", \"enabled\", \"hidden\", \"visible\")\n\t*/\n\tupdateActionState(actionId, state) {\n\t\tthis.propertiesStore.updateActionState(actionId, state);\n\t}\n\n\t/**\n\t* @param actionId {name: action.id}\n\t*/\n\tgetActionState(actionId) {\n\t\treturn this.propertiesStore.getActionState(actionId);\n\t}\n\n\tgetActionStates() {\n\t\treturn this.propertiesStore.getActionStates();\n\t}\n\n\t/**\n\t* @param actionId {name: action.id}\n\t*/\n\tgetAction(actionId) {\n\t\treturn this.actions[actionId.name];\n\t}\n\n\t/**\n\t* Error Messages Methods\n\t* @param messages object with keys being property name\n\t*/\n\tsetErrorMessages(messages) {\n\t\tthis.propertiesStore.setErrorMessages(messages);\n\t}\n\n\t/**\n\t* Returns a single error message for a propertyId.\n\t*\n\t* @param inPropertyId Target propertyId\n\t* @param filterHiddenDisable True to leave out hidden and disabled properties\n\t* @param filterSuccess If true, leave out success messages\n\t* @param filterDisplayError If true, leave out messages that are not displayed in the UI\n\t* @return error message object\n\t*/\n\tgetErrorMessage(inPropertyId, filterHiddenDisable = false, filterSuccess = false, filterDisplayError = true) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\t// don't return hidden message\n\t\tif (filterHiddenDisable) {\n\t\t\tconst controlState = this.getControlState(propertyId);\n\t\t\tconst controlType = this.getControlType(propertyId);\n\t\t\tif (controlState === STATES.DISABLED || controlState === STATES.HIDDEN || controlType === ControlType.HIDDEN) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tconst message = this.propertiesStore.getErrorMessage(propertyId, this.reactIntl);\n\t\tif (filterSuccess) {\n\t\t\tif (message && message.type === CONDITION_MESSAGE_TYPE.SUCCESS) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (filterDisplayError) {\n\t\t\tif (message && !isUndefined(message.displayError) && !message.displayError) { // This is only set if false\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\n\t/**\n\t*\tUsed to return all error messages.  Will either return internally stored messages\n\t* or formatted list to store in pipeline-flow\n\t* @param filteredPipeline boolean\n\t* @param filterHiddenDisable True to leave out hidden and disabled properties\n\t* @param filterSuccess If true, leave out success messages\n\t* @param filterDisplayError If true, leave out messages that are not displayed in the UI\n\t* @return object when filteredPipeline=false or array when filteredPipeline=true\n\t*/\n\tgetErrorMessages(filteredPipeline, filterHiddenDisable, filterSuccess, filterDisplayError = true) {\n\t\tlet messages = this.propertiesStore.getErrorMessages();\n\n\t\tif (filterDisplayError) {\n\t\t\tmessages = this._filterDisplayErrors(messages);\n\t\t}\n\t\tif (filteredPipeline || filterHiddenDisable) {\n\t\t\tmessages = this._filterMessages(messages, filteredPipeline, filterHiddenDisable, filterSuccess);\n\t\t}\n\t\treturn messages;\n\t}\n\n\tgetAllErrorMessages() {\n\t\treturn this.getErrorMessages(false, false, false, false);\n\t}\n\n\tgetRequiredErrorMessages() {\n\t\tconst messages = this.propertiesStore.getErrorMessages();\n\t\tconst requiredMessages = this._filterNonRequiredErrors(messages);\n\t\tconst filtered = this._filterHiddenDisabledErrors(requiredMessages); // Exclude errors for controls that are hidden or disabled\n\t\treturn filtered;\n\t}\n\n\t_filterMessages(messages, filteredPipeline, filterHiddenDisable, filterSuccess) {\n\t\tconst filteredMessages = {};\n\t\tconst pipelineMessages = [];\n\t\tfor (const paramKey in messages) {\n\t\t\tif (!has(messages, paramKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// This returns top-level message for tables\n\t\t\tconst paramMessage = this.getErrorMessage({ name: paramKey }, filterHiddenDisable, filterSuccess);\n\t\t\tif (paramMessage && paramMessage.text) {\n\t\t\t\tif (filteredPipeline) {\n\t\t\t\t\tpipelineMessages.push({\n\t\t\t\t\t\tid_ref: paramKey,\n\t\t\t\t\t\tvalidation_id: paramMessage.validation_id,\n\t\t\t\t\t\ttype: paramMessage.type,\n\t\t\t\t\t\ttext: paramMessage.text\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfilteredMessages[paramKey] = paramMessage;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (filteredPipeline) {\n\t\t\treturn pipelineMessages;\n\t\t}\n\t\treturn filteredMessages;\n\t}\n\n\t// Remove error messages that will not be displayed in the UI\n\t_filterDisplayErrors(messages) {\n\t\tconst filterCondition = (testMessage) => (isUndefined(testMessage.displayError) || testMessage.displayError);\n\t\tconst filteredMessages = this._filterErrors(messages, filterCondition);\n\t\treturn filteredMessages;\n\t}\n\n\t// Remove error messages that are not from a required parameters\n\t_filterNonRequiredErrors(messages) {\n\t\tconst filterCondition = (testMessage) => testMessage.required === true;\n\t\tconst filteredMessages = this._filterErrors(messages, filterCondition);\n\t\treturn filteredMessages;\n\t}\n\n\t// Remove error messages that are disabled or hidden\n\t_filterHiddenDisabledErrors(messages) {\n\t\tconst filterCondition = (testMessage, propertyId) => {\n\t\t\tconst controlState = this.getControlState(propertyId);\n\t\t\tconst controlType = this.getControlType(propertyId);\n\t\t\treturn controlState !== STATES.HIDDEN && controlState !== STATES.DISABLED && controlType !== ControlType.HIDDEN;\n\t\t};\n\t\tconst filteredMessages = this._filterErrors(messages, filterCondition);\n\t\treturn filteredMessages;\n\t}\n\n\n\t// Remove error messages that do not satisfy the given condition\n\t_filterErrors(messages, condition) {\n\t\tconst filteredMessages = {};\n\t\tconst parameterNames = Object.keys(messages);\n\t\tparameterNames.forEach((paramKey) => {\n\t\t\tconst parameterError = messages[paramKey];\n\t\t\tif (parameterError.text && condition(parameterError, parameterError.propertyId)) { // not table\n\t\t\t\tfilteredMessages[paramKey] = parameterError;\n\t\t\t} else { // table cell\n\t\t\t\tfor (const rowKey in parameterError) {\n\t\t\t\t\tif (!has(parameterError, rowKey)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst rowMessage = parameterError[rowKey];\n\t\t\t\t\tif (rowMessage && rowMessage.text && condition(rowMessage, rowMessage.propertyId)) {\n\t\t\t\t\t\tif (typeof filteredMessages[paramKey] === \"undefined\") {\n\t\t\t\t\t\t\tfilteredMessages[paramKey] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfilteredMessages[paramKey][rowKey] = rowMessage;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const colKey in rowMessage) {\n\t\t\t\t\t\t\tif (!has(rowMessage, colKey)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst colMessage = rowMessage[colKey];\n\t\t\t\t\t\t\tif (colMessage && colMessage.text && condition(colMessage, colMessage.propertyId)) {\n\t\t\t\t\t\t\t\tif (typeof filteredMessages[paramKey] === \"undefined\") {\n\t\t\t\t\t\t\t\t\tfilteredMessages[paramKey] = {};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (typeof filteredMessages[paramKey][rowKey] === \"undefined\") {\n\t\t\t\t\t\t\t\t\tfilteredMessages[paramKey][rowKey] = {};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfilteredMessages[paramKey][rowKey][colKey] = colMessage;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn filteredMessages;\n\t}\n\n\tupdateErrorMessage(inPropertyId, message) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tif (message && message.type !== \"info\") {\n\t\t\tthis.propertiesStore.updateErrorMessage(propertyId, message);\n\t\t} else {\n\t\t\tthis.propertiesStore.clearErrorMessage(propertyId);\n\t\t}\n\t}\n\n\tremoveErrorMessageRow(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tlet messages = this.propertiesStore.getErrorMessages();\n\t\tconst controlMsg = messages[propertyId.name];\n\t\tif (typeof controlMsg !== \"undefined\") {\n\t\t\tfor (const rowIndex of Object.keys(controlMsg)) {\n\t\t\t\tconst rowNumber = parseInt(rowIndex, 10);\n\t\t\t\tif (rowNumber === propertyId.row) {\n\t\t\t\t\tdelete messages[propertyId.name][rowNumber];\n\t\t\t\t} else if (rowNumber > propertyId.row) {\n\t\t\t\t\tmessages = this._moveMessageRows(messages, propertyId.name, rowNumber, rowNumber - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setErrorMessages(messages);\n\t\t}\n\t}\n\n\tmoveErrorMessageRows(controlName, firstRow, secondRow) {\n\t\tlet messages = this.propertiesStore.getErrorMessages();\n\t\tconst controlMsg = messages[controlName];\n\t\tif (typeof controlMsg !== \"undefined\") {\n\t\t\tconst firstRowErrorMsg = controlMsg[firstRow];\n\t\t\tconst secondRowErrorMsg = controlMsg[secondRow];\n\t\t\tif (typeof firstRowErrorMsg !== \"undefined\" && typeof secondRowErrorMsg !== \"undefined\") {\n\t\t\t\tmessages = this._moveMessageRows(messages, controlName, firstRow, secondRow);\n\t\t\t\t// create second message because it is deleted in the changeErrorMessageRow, set it to first row number\n\t\t\t\tmessages[controlName][firstRow] = {};\n\t\t\t\tfor (const colNumber of Object.keys(secondRowErrorMsg)) {\n\t\t\t\t\tmessages[controlName][firstRow][colNumber] = secondRowErrorMsg[colNumber];\n\t\t\t\t}\n\t\t\t} else if (typeof firstRowErrorMsg !== \"undefined\") {\n\t\t\t\tmessages = this._moveMessageRows(messages, controlName, firstRow, secondRow);\n\t\t\t} else if (typeof secondRowErrorMsg !== \"undefined\") {\n\t\t\t\tmessages = this._moveMessageRows(messages, controlName, secondRow, firstRow);\n\t\t\t}\n\t\t\tthis.setErrorMessages(messages);\n\t\t}\n\t}\n\n\t_moveMessageRows(messages, controlName, fromRow, toRow) {\n\t\tmessages[controlName][toRow] = messages[controlName][fromRow];\n\t\tdelete messages[controlName][fromRow];\n\t\treturn messages;\n\t}\n\n\t/*\n\t* Controls Methods\n\t*/\n\n\t// Saves controls in a state that get be used to retrieve them using a propertyId\n\tsaveControls(controls) {\n\t\tcontrols.forEach((control) => {\n\t\t\tif (typeof control.columnIndex === \"undefined\") {\n\t\t\t\t// only add to map if control hasn't already been added or override if set to custom.\n\t\t\t\t// This is needed if a parameter is referenced from multiple groups and one is a custom panel\n\t\t\t\tif (!has(this.controls, control.name) || (has(this.controls, control.name) && control.controlType !== ControlType.CUSTOM)) {\n\t\t\t\t\tthis.controls[control.name] = control;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.controls[control.parameterName][control.columnIndex] = control;\n\t\t\t}\n\t\t});\n\t}\n\n\tgetControl(propertyId) {\n\t\tconst control = this.controls[propertyId.name];\n\t\t// if no subcontrol return parent control\n\t\tif (typeof propertyId.col !== \"undefined\" && control) {\n\t\t\tconst subControl = this.controls[propertyId.name][propertyId.col.toString()];\n\t\t\tif (subControl) {\n\t\t\t\treturn subControl;\n\t\t\t}\n\t\t}\n\t\treturn control;\n\t}\n\n\tgetControlPropType(propertyId) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (typeof control.valueDef !== \"undefined\") {\n\t\t\treturn control.valueDef.propType;\n\t\t}\n\t\treturn null;\n\t}\n\n\tupdateControlEnumValues(propertyId, valuesObj) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (!Array.isArray(valuesObj) || !control) {\n\t\t\tlogger.warn(\"properties-controller\", new Error(\"updateControlEnumValues - control not found or valuesObj not valid\"));\n\t\t\treturn;\n\t\t}\n\t\tcontrol.values = valuesObj.map((valueObj) => valueObj.value);\n\t\tcontrol.valueLabels = valuesObj.map((valueObj) => {\n\t\t\tif (!valueObj.label) {\n\t\t\t\treturn valueObj.value;\n\t\t\t}\n\t\t\treturn valueObj.label;\n\t\t});\n\t}\n\n\tgetControls() {\n\t\treturn this.controls;\n\t}\n\n\tsetSaveButtonDisable(saveDisable) {\n\t\tthis.propertiesStore.setSaveButtonDisable(saveDisable);\n\t}\n\n\tgetSaveButtonDisable() {\n\t\treturn this.propertiesStore.getSaveButtonDisable();\n\t}\n\n\t/**\n\t* Enable/disable OK button for given summary panel\n\t* @param panelId {name: panel.id}\n\t* @param wideFlyoutPrimaryButtonDisable boolean\n\t*/\n\tsetWideFlyoutPrimaryButtonDisabled(panelId, wideFlyoutPrimaryButtonDisable) {\n\t\tthis.propertiesStore.setWideFlyoutPrimaryButtonDisabled(panelId, wideFlyoutPrimaryButtonDisable);\n\t}\n\n\t/**\n\t* @param panelId {name: panel.id}\n\t*/\n\tgetWideFlyoutPrimaryButtonDisabled(panelId) {\n\t\treturn this.propertiesStore.getWideFlyoutPrimaryButtonDisabled(panelId);\n\t}\n\n\tisRequired(propertyId) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (control) {\n\t\t\tconst required = control.required;\n\t\t\treturn (required) ? required : false;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisSummary(propertyId) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (control) {\n\t\t\tconst summary = control.summary;\n\t\t\treturn (summary) ? summary : false;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetControlType(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst control = this.getControl(propertyId);\n\t\tif (control) {\n\t\t\treturn control.controlType;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// check if given column is visible in the table\n\tgetColumnVisibility(propertyId, columnIndex) {\n\t\treturn this.controls[propertyId.name][columnIndex].visible;\n\t}\n\n\ttoggleColumnVisibility(propertyId, columnIndex, value) {\n\t\tthis.controls[propertyId.name][columnIndex].visible = value;\n\t}\n\n\t/*\n\t* Summary Panel controls Methods\n\t*/\n\t_parseSummaryControls(controls) {\n\t\tconst summaryControls = {};\n\t\tcontrols.forEach((control) => {\n\t\t\tif (control.summaryPanelId) {\n\t\t\t\tif (typeof summaryControls[control.summaryPanelId] === \"undefined\") {\n\t\t\t\t\tsummaryControls[control.summaryPanelId] = [];\n\t\t\t\t}\n\t\t\t\tif (typeof control.columnIndex === \"undefined\") {\n\t\t\t\t\tsummaryControls[control.summaryPanelId].push(control.name);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.setSummaryPanelControls(summaryControls);\n\t}\n\tsetSummaryPanelControls(summaryPanelControls) {\n\t\tthis.summaryPanelControls = summaryPanelControls;\n\t}\n\tgetSummaryPanelControls(panelId) {\n\t\treturn this.summaryPanelControls[panelId];\n\t}\n\t// Sets the value to be displayed in the summaryPanel for a customPanel property\n\tupdateCustPropSumPanelValue(propertyId, content) {\n\t\tif (typeof propertyId.name !== \"undefined\") {\n\t\t\tthis.custPropSumPanelValues[propertyId.name] = content;\n\t\t}\n\t}\n\tgetCustPropSumPanelValue(propertyId) {\n\t\t// don't display hidden or disabled parameters\n\t\tconst controlState = this.getControlState(propertyId);\n\t\tif (controlState === STATES.DISABLED || controlState === STATES.HIDDEN) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.custPropSumPanelValues[propertyId.name];\n\t}\n\t// Only used in custom panel to allow for custom property summary values to be displayed\n\tsetControlInSummary(propertyId, label, inSummary) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (control) {\n\t\t\tcontrol.summary = true;\n\t\t\tcontrol.summaryLabel = label;\n\t\t}\n\t}\n\n\t/**\n\t* Used to create standard controls in customPanels\n\t* @param propertyId - Property id of the controls\n\t* @param paramDef - schema definition.  See paramDef schema\n\t* @param parameter (string) - name of the parameter to pull out of paramDef\n\t*/\n\tcreateControl(propertyId, paramDef, parameter) {\n\t\tconst containerType = get(this.getPropertiesConfig(), \"containerType\");\n\t\tconst control = this.controlFactory.createFormControl(paramDef, parameter, this.getLight(), containerType);\n\t\tconst controls = [];\n\t\t// need to preserve parentCategoryId which is set during initial parsing of all controls\n\t\tconst parentCategoryId = this.getControl(propertyId).parentCategoryId;\n\t\tUiConditionsParser.parseControl(controls, control, parentCategoryId);\n\t\tthis.saveControls(controls);\n\t\treturn this.controlFactory.createControlItem(control, propertyId);\n\t}\n\n\t/**\n\t* Used to create controls\n\t* @return the controlFactory instance\n\t*/\n\tgetControlFactory() {\n\t\treturn this.controlFactory;\n\t}\n\n\t/**\n\t* Sets the custom controls available to common-properties\n\t* @param customControls\n\t*/\n\tsetCustomControls(customControls) {\n\t\tthis.customControls = customControls;\n\t}\n\n\t/**\n\t* Returns a rendered custom control\n\t* @param propertyId\n\t* @param control\n\t* @param tableInfo\n\t*/\n\tgetCustomControl(propertyId, control, tableInfo) {\n\t\tif (control.customControlId) {\n\t\t\tfor (const customCtrl of this.customControls) {\n\t\t\t\tif (customCtrl.id() === control.customControlId) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn new customCtrl(propertyId, this, control.data, tableInfo).renderControl();\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tlogger.warn(\"Error thrown creating custom control: \" + error);\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"Custom control not found: \" + control.customControlId;\n\t}\n\n\t/*\n\t* maxLength for single-line and multi-line control methods\n\t*/\n\n\t/**\n\t* Returns the maximum characters allowed for multi-line string controls like textarea\n\t* Default value is 1024\n\t*/\n\tgetMaxLengthForMultiLineControls() {\n\t\tconst maxLengthForMultiLineControls = (typeof this.getPropertiesConfig().maxLengthForMultiLineControls !== \"undefined\")\n\t\t\t? this.getPropertiesConfig().maxLengthForMultiLineControls\n\t\t\t: 1024;\n\t\treturn maxLengthForMultiLineControls;\n\t}\n\n\t/**\n\t* Returns the maximum characters allowed for single-line string controls like textfield\n\t* Default value is 128\n\t*/\n\tgetMaxLengthForSingleLineControls() {\n\t\tconst maxLengthForSingleLineControls = (typeof this.getPropertiesConfig().maxLengthForSingleLineControls !== \"undefined\")\n\t\t\t? this.getPropertiesConfig().maxLengthForSingleLineControls\n\t\t\t: 128;\n\t\treturn maxLengthForSingleLineControls;\n\t}\n\n\t/**\n\t* Set the initial values of addRemoveRows for all structure controls\n\t*/\n\tsetInitialAddRemoveRows() {\n\t\tconst parameterNames = Object.keys(this.controls);\n\t\tparameterNames.forEach((parameterName) => {\n\t\t\tconst control = this.controls[parameterName];\n\t\t\tif (control.valueDef && control.valueDef.propType === Type.STRUCTURE && !isUndefined(control.addRemoveRows)) {\n\t\t\t\tconst propertyId = { name: control.name };\n\t\t\t\tthis.setAddRemoveRows(propertyId, control.addRemoveRows);\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t* Set the addRemoveRows attribute to 'enabled' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param enabled boolean value to enable or disable addRemoveRows\n\t*/\n\tsetAddRemoveRows(propertyId, enabled) {\n\t\tthis.propertiesStore.setAddRemoveRows(propertyId, enabled);\n\t}\n\n\t/**\n\t* Returns the true if addRemoveRows is enabled for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetAddRemoveRows(propertyId) {\n\t\treturn this.propertiesStore.getAddRemoveRows(propertyId);\n\t}\n\n\t/**\n\t* Set the hideEditButton attribute to 'enabled' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param enabled boolean value to enable or disable hideditButton\n\t*/\n\tsetHideEditButton(propertyId, enabled) {\n\t\tthis.propertiesStore.setHideEditButton(propertyId, enabled);\n\t}\n\n\t/**\n\t* Returns the true if hideEditButton is enabled for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetHideEditButton(propertyId) {\n\t\treturn this.propertiesStore.getHideEditButton(propertyId);\n\t}\n\n\t/**\n\t * Freeze row move buttons for row indexes in given array\n\t * @param propertyId The unique property identifier\n\t * @param rowIndexes Array of row indexes\n\t */\n\n\tgetStaticRows(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\treturn this.propertiesStore.getStaticRows(propertyId);\n\t}\n\n\tupdateStaticRows(inPropertyId, staticRowsArr) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst controlValue = this.getPropertyValue(inPropertyId);\n\t\tconst staticRows = staticRowsArr.sort();\n\t\tconst isValidSlection = this.validateSelectionValues(staticRows, controlValue);\n\t\tif (isValidSlection) {\n\t\t\tthis.propertiesStore.updateStaticRows(propertyId, staticRows);\n\t\t}\n\t}\n\n\tclearStaticRows(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.clearStaticRows(propertyId);\n\t}\n\n\t/**\n\t* Set the initial values of table buttons for all table controls\n\t*/\n\tsetInitialTableButtonState() {\n\t\tconst parameterNames = Object.keys(this.controls);\n\t\tparameterNames.forEach((parameterName) => {\n\t\t\tconst control = this.controls[parameterName];\n\t\t\tconst propertyId = { name: control.name };\n\t\t\tif (!isUndefined(control.buttons)) {\n\t\t\t\tcontrol.buttons.forEach((button) => {\n\t\t\t\t\tthis.setTableButtonEnabled(propertyId, button.id, button.enabled || false);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (control.subControls) {\n\t\t\t\tthis.setInitialTableButtonSubControlState(propertyId, control.subControls);\n\t\t\t}\n\t\t});\n\t}\n\n\t// This only handles 1 level of nesting, will need to make this recusrive if there is a need for deeper nesting\n\tsetInitialTableButtonSubControlState(parentPropertyId, subControls) {\n\t\tsubControls.forEach((control) => {\n\t\t\tconst propertyValues = this.getPropertyValue(parentPropertyId);\n\n\t\t\tif (!isUndefined(control.buttons)) {\n\t\t\t\tpropertyValues.forEach((value, valueIdx) => {\n\t\t\t\t\tconst propertyId = { name: parentPropertyId.name, row: valueIdx, col: control.columnIndex };\n\t\t\t\t\tcontrol.buttons.forEach((button) => {\n\t\t\t\t\t\tthis.setTableButtonEnabled(propertyId, button.id, button.enabled || false);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t* Set the table button to 'enabled' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param buttonId The unique button identifier\n\t* @param enabled boolean value to enable or disable the button\n\t*/\n\tsetTableButtonEnabled(propertyId, buttonId, enabled) {\n\t\tthis.propertiesStore.setTableButtonEnabled(propertyId, buttonId, enabled);\n\t}\n\n\t/**\n\t* Returns the table button states for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetTableButtons(propertyId) {\n\t\treturn this.propertiesStore.getTableButtons(propertyId);\n\t}\n\n\t/**\n\t* Returns the true if the table button is enabled for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @param buttonId The unique button identifier\n\t* @return boolean\n\t*/\n\tgetTableButtonEnabled(propertyId, buttonId) {\n\t\treturn this.propertiesStore.getTableButtonEnabled(propertyId, buttonId);\n\t}\n\n\t/**\n\t * Validate if the array for freeze rows is correct. Should only have continuous value of row indexes\n\t * Must not contain first and last row index together in the array ever. you can only freeze either first n row or the last n row\n\t * @param staticRows Array of rows you want to freeze\n\t * @param controlValue the property values for the property Id\n\t * @returns\n\t */\n\tvalidateSelectionValues(staticRows, controlValue) {\n\t\tlet isValid = false;\n\t\tif (staticRows && controlValue.length > 0) {\n\t\t\tconst consecutiveAry = staticRows.slice(1).map(function(n, i) {\n\t\t\t\treturn n - staticRows[i];\n\t\t\t});\n\t\t\tconst isDifference = consecutiveAry.every((value) => value === 1);\n\t\t\tif (isDifference && ((staticRows.includes(0) && !staticRows.includes(controlValue.length - 1)) ||\n\t\t\t(!staticRows.includes(0) && staticRows.includes(controlValue.length - 1)))) {\n\t\t\t\tisValid = true;\n\t\t\t} else {\n\t\t\t\tisValid = false;\n\t\t\t}\n\t\t} else {\n\t\t\tisValid = false;\n\t\t}\n\t\treturn isValid;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport parameterDefsV3Schema from \"@elyra/pipeline-schemas/common-canvas/parameter-defs/parameter-defs-v3-schema.json\";\n\nimport uihintsV3Schema from \"@elyra/pipeline-schemas/common-pipeline/operators/uihints-v3-schema.json\";\nimport conditionsV3Schema from \"@elyra/pipeline-schemas/common-pipeline/operators/conditions-v3-schema.json\";\nimport operatorsV3Schema from \"@elyra/pipeline-schemas/common-pipeline/operators/operator-v3-schema.json\";\nimport dataRecordMetadataV3Schema from \"@elyra/pipeline-schemas/common-pipeline/datarecord-metadata/datarecord-metadata-v3-schema.json\";\n\nimport { Validator as SchemaValidator } from \"jsonschema\";\n\nfunction validateParameterDefAgainstSchema(parameterDef) {\n\tconst validator = getValidator();\n\tvalidateAgainstSchema(parameterDef, parameterDefsV3Schema, \"pipelineFlow\", validator);\n}\n\n// Validates the data provided, against the schema provided, using the validator\n// provided and throws an error if any schema validation errors are found.\nfunction validateAgainstSchema(data, schema, type, validator) {\n\tconst valResult = validator.validate(data, schema, { \"nestedErrors\": true });\n\n\tif (valResult && valResult.errors && valResult.errors.length > 0) {\n\t\tconsole.error(valResult);\n\t}\n}\n\nfunction getValidator() {\n\tconst validator = new SchemaValidator();\n\tconst canvasPrefix = \"https://api.dataplatform.ibm.com/schemas/common-canvas/\";\n\tconst pipelinePrefix = \"https://api.dataplatform.ibm.com/schemas/common-pipeline/\";\n\tvalidator.addSchema(parameterDefsV3Schema, canvasPrefix + \"parameter-defs/pipeline-flow-v3-schema.json\");\n\tvalidator.addSchema(uihintsV3Schema, pipelinePrefix + \"operators/uihints-v3-schema.json\");\n\tvalidator.addSchema(conditionsV3Schema, pipelinePrefix + \"operators/conditions-v3-schema.json\");\n\tvalidator.addSchema(operatorsV3Schema, pipelinePrefix + \"operators/operator-v3-schema.json\");\n\tvalidator.addSchema(dataRecordMetadataV3Schema, pipelinePrefix + \"datarecord-metadata/datarecord-metadata-v3-schema.json\");\n\treturn validator;\n}\n\nexport {\n\tvalidateParameterDefAgainstSchema\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setTitle } from \"./../../actions\";\nimport Isvg from \"react-inlinesvg\";\nimport { get } from \"lodash\";\nimport { TextInput, Button } from \"carbon-components-react\";\nimport { MESSAGE_KEYS, CONDITION_MESSAGE_TYPE } from \"./../../constants/constants\";\nimport * as PropertyUtils from \"./../../util/property-utils\";\nimport classNames from \"classnames\";\nimport { Help16, Edit16, Close16 } from \"@carbon/icons-react\";\n\n\nclass TitleEditor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfocused: false,\n\t\t\ttitleValidation: null\n\t\t};\n\t\tthis.editTitleClickHandler = this.editTitleClickHandler.bind(this);\n\t\tthis.helpClickHandler = this.helpClickHandler.bind(this);\n\t\tthis.id = PropertyUtils.generateId();\n\t\tthis.textInputRef = React.createRef();\n\t\tthis.labelText = PropertyUtils.formatMessage(props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.TITLE_EDITOR_LABEL);\n\t\tthis.textInputOnFocus = this.textInputOnFocus.bind(this);\n\t\tthis.textInputOnBlur = this.textInputOnBlur.bind(this);\n\t\tthis.headingEnabled = this.props.showHeading && (this.props.heading || this.props.icon);\n\t\tthis.handleTitleChange = this.handleTitleChange.bind(this);\n\t\tthis.titleChangeHandler = this.props.controller.getHandlers().titleChangeHandler;\n\t}\n\n\t_handleKeyPress(e) {\n\t\tif (e.key === \"Enter\") {\n\t\t\tthis.textInputRef.current.blur();\n\t\t}\n\t}\n\n\teditTitleClickHandler() {\n\t\tthis.textInputRef.current.focus();\n\t}\n\n\thelpClickHandler() {\n\t\tif (this.props.helpClickHandler) {\n\t\t\tthis.props.helpClickHandler(\n\t\t\t\tthis.props.controller.getForm().componentId,\n\t\t\t\tthis.props.help.data,\n\t\t\t\tthis.props.controller.getAppData());\n\t\t}\n\t}\n\ttextInputOnFocus() {\n\t\tthis.setState({ focused: true });\n\t}\n\n\ttextInputOnBlur() {\n\t\tthis.setState({ focused: false });\n\t}\n\n\thandleTitleChange(evt) {\n\t\t// Clear warning/error message on change.\n\t\tif (this.state.titleValidation !== null) {\n\t\t\tthis.setState({ titleValidation: null });\n\t\t}\n\t\tconst newTitle = evt.target.value;\n\t\tif (typeof this.titleChangeHandler === \"function\") {\n\t\t\tthis.titleChangeHandler(newTitle, (titleValidation) => {\n\t\t\t\tif (titleValidation && (typeof titleValidation === \"object\") && titleValidation.type && titleValidation.message) {\n\t\t\t\t\tthis.setState({ titleValidation: titleValidation });\n\t\t\t\t} else {\n\t\t\t\t\t// titleChangeHandler response is invalid. Don't show error/warning for title.\n\t\t\t\t\tthis.setState({ titleValidation: null });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.props.setTitle(newTitle);\n\t}\n\n\trender() {\n\t\tconst propertiesTitleEditButtonLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.TITLE_EDITOR_LABEL);\n\t\tconst helpButtonLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.TITLE_EDITOR_HELPBUTTON_LABEL);\n\t\tconst closeButtonLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.PROPERTIESEDIT_CLOSEBUTTON_LABEL);\n\t\tconst titleValidationTypes = [CONDITION_MESSAGE_TYPE.ERROR, CONDITION_MESSAGE_TYPE.WARNING];\n\t\tconst titleWithWarning = get(this.state.titleValidation, \"type\", null) === CONDITION_MESSAGE_TYPE.WARNING;\n\t\tconst titleWithErrror = get(this.state.titleValidation, \"type\", null) === CONDITION_MESSAGE_TYPE.ERROR;\n\n\t\tconst propertiesTitleEdit = this.props.labelEditable === false || this.state.focused ? <div />\n\t\t\t: (<Button\n\t\t\t\tkind=\"ghost\"\n\t\t\t\tclassName=\"properties-title-editor-btn edit\"\n\t\t\t\tdata-id=\"edit\"\n\t\t\t\tonClick={this.editTitleClickHandler}\n\t\t\t\ttooltipPosition=\"bottom\"\n\t\t\t\ttooltipAlignment=\"end\"\n\t\t\t\trenderIcon={Edit16}\n\t\t\t\tsize=\"small\"\n\t\t\t\ticonDescription={propertiesTitleEditButtonLabel}\n\t\t\t\thasIconOnly\n\t\t\t/>);\n\n\t\tconst helpButton = this.props.help\n\t\t\t? (<Button\n\t\t\t\tkind=\"ghost\"\n\t\t\t\tclassName=\"properties-title-editor-btn help\"\n\t\t\t\tdata-id=\"help\"\n\t\t\t\tonClick={this.helpClickHandler}\n\t\t\t\ttooltipPosition=\"bottom\"\n\t\t\t\trenderIcon={Help16}\n\t\t\t\tsize=\"small\"\n\t\t\t\ticonDescription={helpButtonLabel}\n\t\t\t\thasIconOnly\n\t\t\t/>)\n\t\t\t: null;\n\n\t\tconst closeButton = this.props.closeHandler\n\t\t\t? (<div className=\"properties-close-button\">\n\t\t\t\t<Button\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tdata-id=\"close\"\n\t\t\t\t\tonClick={this.props.closeHandler}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\trenderIcon={Close16}\n\t\t\t\t\ticonDescription={closeButtonLabel}\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t</div>)\n\t\t\t: null;\n\n\t\tlet heading = null;\n\t\tif (this.headingEnabled) {\n\t\t\tconst label = this.props.heading\n\t\t\t\t? (<div className=\"properties-title-heading-label\">\n\t\t\t\t\t{this.props.heading}\n\t\t\t\t</div>)\n\t\t\t\t: null;\n\t\t\tconst icon = this.props.icon && typeof this.props.icon === \"string\"\n\t\t\t\t? <Isvg className=\"properties-title-heading-icon\" src={this.props.icon} />\n\t\t\t\t: null;\n\t\t\tif (label || icon) {\n\t\t\t\theading = (<div className=\"properties-title-heading\">\n\t\t\t\t\t{icon}\n\t\t\t\t\t{label}\n\t\t\t\t\t{helpButton}\n\t\t\t\t</div>);\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={classNames(\"properties-title-editor\",\n\t\t\t\t{ \"properties-title-with-heading\": this.headingEnabled })}\n\t\t\t>\n\t\t\t\t{closeButton}\n\t\t\t\t{heading}\n\t\t\t\t<div className={classNames(\n\t\t\t\t\t\"properties-title-editor-input\",\n\t\t\t\t\t{\n\t\t\t\t\t\t\"properties-title-editor-with-help\": this.props.help && !this.headingEnabled && !titleValidationTypes.includes(get(this.state.titleValidation, \"type\")),\n\t\t\t\t\t\t\"properties-title-editor-with-warning\": titleWithWarning,\n\t\t\t\t\t\t\"properties-title-editor-with-error\": titleWithErrror\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\tref={this.textInputRef}\n\t\t\t\t\t\tvalue={this.props.title}\n\t\t\t\t\t\tonChange={this.handleTitleChange}\n\t\t\t\t\t\tonKeyPress={(e) => this._handleKeyPress(e)}\n\t\t\t\t\t\treadOnly={this.props.labelEditable === false} // shows a non editable icon\n\t\t\t\t\t\tlabelText={this.labelText}\n\t\t\t\t\t\thideLabel\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tonFocus={this.textInputOnFocus}\n\t\t\t\t\t\tonBlur={this.textInputOnBlur}\n\t\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\t\tinvalid={titleWithErrror}\n\t\t\t\t\t\tinvalidText={get(this.state.titleValidation, \"message\")}\n\t\t\t\t\t\twarn={titleWithWarning}\n\t\t\t\t\t\twarnText={get(this.state.titleValidation, \"message\")}\n\t\t\t\t\t\t{... this.state.focused && { className: \"properties-title-editor-focused\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t{titleValidationTypes.includes(get(this.state.titleValidation, \"type\")) ? null : propertiesTitleEdit}\n\t\t\t\t</div>\n\t\t\t\t{!this.headingEnabled && !titleValidationTypes.includes(get(this.state.titleValidation, \"type\")) ? helpButton : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTitleEditor.propTypes = {\n\thelpClickHandler: PropTypes.func,\n\tcloseHandler: PropTypes.func,\n\tcontroller: PropTypes.object.isRequired,\n\tlabelEditable: PropTypes.bool,\n\thelp: PropTypes.object,\n\ticon: PropTypes.string,\n\theading: PropTypes.string,\n\tshowHeading: PropTypes.bool,\n\ttitle: PropTypes.string, // set by redux\n\tsetTitle: PropTypes.func // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\ttitle: state.componentMetadataReducer.title\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\tsetTitle: (title) => {\n\t\tdispatch(setTitle(title));\n\t}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleEditor);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PropertiesModal from \"./../components/properties-modal\";\nimport PropertiesEditor from \"./../components/properties-editor\";\nimport TearSheet from \"../panels/tearsheet\";\nimport MainEditorPropertiesButtons from \"./../components/main-editor-properties-buttons\";\nimport EditorForm from \"./../components/editor-form\";\nimport Form from \"./../form/Form\";\nimport CommonPropertiesAction from \"./../../command-actions/commonPropertiesAction\";\nimport PropertiesController from \"./../properties-controller\";\nimport * as PropertyUtils from \"./../util/property-utils\";\nimport { MESSAGE_KEYS, CONDITION_RETURN_VALUE_HANDLING, CARBON_ICONS, APPLY, CANCEL, ACTIONS } from \"./../constants/constants\";\nimport { Size } from \"./../constants/form-constants\";\nimport { validateParameterDefAgainstSchema } from \"../schema-validator/properties-schema-validator.js\";\nimport { has, isEqual, omit, pick, cloneDeep } from \"lodash\";\nimport Icon from \"./../../icons/icon.jsx\";\nimport { Button } from \"carbon-components-react\";\nimport { Provider } from \"react-redux\";\nimport logger from \"../../../utils/logger\";\nimport TitleEditor from \"./../components/title-editor\";\nimport classNames from \"classnames\";\n\nimport { injectIntl } from \"react-intl\";\nimport styles from \"./properties-main-widths.scss\";\n\nconst FLYOUT_WIDTH_SMALL = parseInt(styles.flyoutWidthSmall, 10);\nconst FLYOUT_WIDTH_MEDIUM = parseInt(styles.flyoutWidthMedium, 10);\nconst FLYOUT_WIDTH_LARGE = parseInt(styles.flyoutWidthLarge, 10);\nconst FLYOUT_WIDTH_MAX = parseInt(styles.flyoutWidthMax, 10);\n\nclass PropertiesMain extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.propertiesController = new PropertiesController();\n\t\tthis.propertiesController.setPropertiesConfig(this.props.propertiesConfig);\n\t\t// Persist editorSize when resize() is not called\n\t\tif (this.props.propertiesInfo.initialEditorSize) {\n\t\t\tthis.propertiesController.setEditorSize(this.props.propertiesInfo.initialEditorSize);\n\t\t}\n\t\tthis.propertiesController.setCustomControls(props.customControls);\n\t\tthis.propertiesController.setConditionOps(props.customConditionOps);\n\t\tthis.propertiesController.setLight(props.light);\n\t\tthis.propertiesController.setAppData(props.propertiesInfo.appData);\n\t\tthis.propertiesController.setExpressionInfo(props.propertiesInfo.expressionInfo);\n\t\tthis.propertiesController.setHandlers({\n\t\t\tcontrollerHandler: props.callbacks.controllerHandler,\n\t\t\tpropertyListener: props.callbacks.propertyListener,\n\t\t\tactionHandler: props.callbacks.actionHandler,\n\t\t\tbuttonHandler: props.callbacks.buttonHandler,\n\t\t\tbuttonIconHandler: props.callbacks.buttonIconHandler,\n\t\t\tvalidationHandler: props.callbacks.validationHandler,\n\t\t\ttitleChangeHandler: props.callbacks.titleChangeHandler,\n\t\t\ttooltipLinkHandler: props.callbacks.tooltipLinkHandler\n\t\t});\n\t\tthis.setForm(props.propertiesInfo);\n\t\tthis.previousErrorMessages = {};\n\t\t// this has to be after setForm because setForm clears all error messages.\n\t\t// Validate all validationDefinitions but show warning messages for \"colDoesExists\" condition only\n\t\tthis.propertiesController.validatePropertiesValues(false);\n\t\tif (props.propertiesInfo.messages) {\n\t\t\tthis.propertiesController.validatePropertiesValues(true);\n\t\t\tthis.previousErrorMessages = this.propertiesController.getAllErrorMessages();\n\t\t}\n\t\t// Callback after all values and messages are set\n\t\tif (this.props.callbacks.propertyListener) {\n\t\t\tthis.props.callbacks.propertyListener({ action: ACTIONS.PROPERTIES_LOADED });\n\t\t}\n\t\tthis.currentParameters = this.propertiesController.getPropertyValues();\n\t\tconst editorSize = this.getEditorSize();\n\t\tthis.state = {\n\t\t\tshowPropertiesButtons: true,\n\t\t\teditorSize: editorSize\n\t\t};\n\t\tthis.applyPropertiesEditing = this.applyPropertiesEditing.bind(this);\n\t\tthis.showPropertiesButtons = this.showPropertiesButtons.bind(this);\n\t\tthis.updateEditorSize = this.updateEditorSize.bind(this);\n\t\tthis.cancelHandler = this.cancelHandler.bind(this);\n\t\tthis._getOverrideSize = this._getOverrideSize.bind(this);\n\t\tthis._getResizeButton = this._getResizeButton.bind(this);\n\t\tthis._isResizeButtonRequired = this._isResizeButtonRequired.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.callbacks.setPropertiesHasMounted();\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) { // eslint-disable-line camelcase, react/sort-comp\n\t\tif (newProps.propertiesInfo) {\n\t\t\tif (!isEqual(Object.keys(newProps.propertiesInfo), Object.keys(this.props.propertiesInfo)) ||\n\t\t\t\t(newProps.propertiesInfo.formData && !isEqual(newProps.propertiesInfo.formData, this.props.propertiesInfo.formData)) ||\n\t\t\t\t(newProps.propertiesInfo.parameterDef && !isEqual(newProps.propertiesInfo.parameterDef, this.props.propertiesInfo.parameterDef)) ||\n\t\t\t\t(newProps.propertiesInfo.appData && !isEqual(newProps.propertiesInfo.appData, this.props.propertiesInfo.appData))) {\n\t\t\t\tthis.setForm(newProps.propertiesInfo);\n\t\t\t\tconst newEditorSize = this.propertiesController.getForm().editorSize;\n\t\t\t\tif (this.state.editorSize !== newEditorSize) {\n\t\t\t\t\tthis.setState({ editorSize: newEditorSize });\n\t\t\t\t}\n\t\t\t\tthis.currentParameters = this.propertiesController.getPropertyValues();\n\t\t\t\tthis.propertiesController.setAppData(newProps.propertiesInfo.appData);\n\t\t\t\tthis.propertiesController.setCustomControls(newProps.customControls);\n\t\t\t\tthis.propertiesController.setConditionOps(newProps.customConditionOps);\n\t\t\t\tthis.previousErrorMessages = {};\n\t\t\t\tif (newProps.propertiesInfo.messages) {\n\t\t\t\t\tthis.propertiesController.validatePropertiesValues();\n\t\t\t\t\tthis.previousErrorMessages = this.propertiesController.getAllErrorMessages();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tonBlur(e) {\n\t\t// apply properties when focus leave common properties.\n\t\t// subdialogs and summary panel causes focus to leave but shouldn't apply settings\n\t\tif (this.props.propertiesConfig.applyOnBlur &&\n\t\t\tthis.commonProperties && !this.commonProperties.contains(e.relatedTarget) &&\n\t\t\t!this.propertiesController.isSummaryPanelShowing() && !this.propertiesController.isSubPanelsShowing()) {\n\t\t\tthis.applyPropertiesEditing(false);\n\t\t}\n\t}\n\n\tsetForm(propertiesInfo) {\n\t\tlet formData = null;\n\n\t\tif (propertiesInfo.formData && Object.keys(propertiesInfo.formData).length !== 0) {\n\t\t\tformData = propertiesInfo.formData;\n\t\t} else if (propertiesInfo.parameterDef) {\n\t\t\tif (this.props.propertiesConfig.schemaValidation) {\n\t\t\t\tvalidateParameterDefAgainstSchema(propertiesInfo.parameterDef);\n\t\t\t}\n\t\t\tformData = Form.makeForm(propertiesInfo.parameterDef, this.props.propertiesConfig.containerType, this.props.propertiesConfig.convertValueDataTypes);\n\t\t}\n\t\t// TODO: This can be removed once the WML Play service generates datasetMetadata instead of inputDataModel\n\t\tif (formData && formData.data && formData.data.inputDataModel && !formData.data.datasetMetadata) {\n\t\t\tformData.data.datasetMetadata = PropertyUtils.convertInputDataModel(formData.data.inputDataModel);\n\t\t}\n\n\t\tthis.propertiesController.setForm(formData, this.props.intl);\n\t\tif (formData) {\n\t\t\tthis.originalTitle = formData.label;\n\t\t}\n\n\t\t// set initial values for undo\n\t\tthis.initialValueInfo = { additionalInfo: { messages: [] }, undoInfo: {} };\n\t\tthis.uiParameterKeys = this._getUiOnlyKeys();\n\t\tthis.initialValueInfo = this._setValueInforProperties(this.initialValueInfo);\n\t\tif (propertiesInfo.messages) {\n\t\t\tthis.initialValueInfo.additionalInfo.messages = cloneDeep(propertiesInfo.messages);\n\t\t}\n\t\tthis.initialValueInfo.undoInfo.properties = this.propertiesController.getPropertyValues(); // used for undoing when node editor open\n\t\tthis.initialValueInfo.undoInfo.messages = this.propertiesController.getAllErrorMessages(); // used for undoing when node editor open\n\t\tthis.initialValueInfo.additionalInfo.title = this.propertiesController.getTitle();\n\t}\n\n\tgetApplyButtonLabel() {\n\t\tif (this.props.propertiesConfig.buttonLabels && this.props.propertiesConfig.buttonLabels.primary) {\n\t\t\treturn this.props.propertiesConfig.buttonLabels.primary;\n\t\t}\n\t\treturn PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_APPLYBUTTON_LABEL);\n\t}\n\n\tgetRejectButtonLabel() {\n\t\tif (this.props.propertiesConfig.buttonLabels && this.props.propertiesConfig.buttonLabels.secondary) {\n\t\t\treturn this.props.propertiesConfig.buttonLabels.secondary;\n\t\t}\n\t\treturn PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_REJECTBUTTON_LABEL);\n\t}\n\n\tgetPropertiesActionLabel() {\n\t\tif (this.props.callbacks.propertiesActionLabelHandler) {\n\t\t\tconst label = this.props.callbacks.propertiesActionLabelHandler();\n\t\t\tif (label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t\treturn PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_ACTION_LABEL, { node_label: this.propertiesController.getTitle() });\n\t}\n\n\tgetEditorSize() {\n\t\t// Determine whether to persist initialEditorSize or set the defaultEditorSize in certain cases\n\t\tconst defaultEditorSize = this.propertiesController.getForm().editorSize;\n\t\tconst initialEditorSize = this.props.propertiesInfo.initialEditorSize;\n\t\t// When defaultEditorSize=\"small\", initialEditorSize can be \"small\" or \"medium\". For any other value, return defaultEditorSize.\n\t\t// When defaultEditorSize=\"medium\", initialEditorSize can be \"medium\" or \"large\". For any other value, return defaultEditorSize.\n\t\t// When defaultEditorSize=\"large\", initialEditorSize can be \"large\" or \"max\". For any other value, return defaultEditorSize.\n\t\tif (defaultEditorSize === Size.SMALL && (initialEditorSize === Size.LARGE || initialEditorSize === Size.MAX)) {\n\t\t\treturn defaultEditorSize;\n\t\t} else if (defaultEditorSize === Size.MEDIUM && (initialEditorSize === Size.SMALL || initialEditorSize === Size.MAX)) {\n\t\t\treturn defaultEditorSize;\n\t\t} else if (defaultEditorSize === Size.LARGE && (initialEditorSize === Size.SMALL || initialEditorSize === Size.MEDIUM)) {\n\t\t\treturn defaultEditorSize;\n\t\t} else if (defaultEditorSize === Size.MAX) {\n\t\t\treturn defaultEditorSize;\n\t\t}\n\t\treturn (initialEditorSize ? initialEditorSize : defaultEditorSize);\n\t}\n\n\t_getOverrideSize() {\n\t\tconst pixelWidth = this.propertiesController.getForm().pixelWidth;\n\t\tconst editorSizeInForm = this.propertiesController.getForm().editorSize;\n\t\tlet overrideSize = null;\n\n\t\tif (pixelWidth) {\n\t\t\tif (editorSizeInForm === Size.SMALL) {\n\t\t\t\tif (this.state.editorSize === Size.SMALL && pixelWidth.min) {\n\t\t\t\t\toverrideSize = pixelWidth.min;\n\n\t\t\t\t} else if (this.state.editorSize === Size.MEDIUM && pixelWidth.max) {\n\t\t\t\t\toverrideSize = pixelWidth.max;\n\t\t\t\t}\n\n\t\t\t} else if (editorSizeInForm === Size.MEDIUM) {\n\t\t\t\tif (this.state.editorSize === Size.MEDIUM && pixelWidth.min) {\n\t\t\t\t\toverrideSize = pixelWidth.min;\n\n\t\t\t\t} else if (this.state.editorSize === Size.LARGE && pixelWidth.max) {\n\t\t\t\t\toverrideSize = pixelWidth.max;\n\t\t\t\t}\n\n\t\t\t} else if (editorSizeInForm === Size.LARGE) {\n\t\t\t\tif (this.state.editorSize === Size.LARGE && pixelWidth.min) {\n\t\t\t\t\toverrideSize = pixelWidth.min;\n\n\t\t\t\t} else if (this.state.editorSize === Size.MAX && pixelWidth.max) {\n\t\t\t\t\toverrideSize = pixelWidth.max;\n\t\t\t\t}\n\n\t\t\t} else if (editorSizeInForm === Size.MAX && pixelWidth.max) {\n\t\t\t\toverrideSize = pixelWidth.max;\n\t\t\t}\n\t\t}\n\t\treturn overrideSize;\n\t}\n\n\t_getResizeButton() {\n\t\tlet resizeButton = <Icon type={CARBON_ICONS.CHEVRONARROWS.LEFT} className=\"properties-resize-caret-left\" />;\n\t\tif (this.propertiesController.getForm().editorSize === Size.SMALL) {\n\t\t\tif (this.state.editorSize === Size.MEDIUM) {\n\t\t\t\tresizeButton = <Icon type={CARBON_ICONS.CHEVRONARROWS.RIGHT} className=\"properties-resize-caret-right\" />;\n\t\t\t}\n\t\t} else if (this.propertiesController.getForm().editorSize === Size.MEDIUM) {\n\t\t\tif (this.state.editorSize === Size.LARGE) {\n\t\t\t\tresizeButton = <Icon type={CARBON_ICONS.CHEVRONARROWS.RIGHT} className=\"properties-resize-caret-right\" />;\n\t\t\t}\n\t\t} else if (this.propertiesController.getForm().editorSize === Size.LARGE) {\n\t\t\tif (this.state.editorSize === Size.MAX) {\n\t\t\t\tresizeButton = <Icon type={CARBON_ICONS.CHEVRONARROWS.RIGHT} className=\"properties-resize-caret-right\" />;\n\t\t\t}\n\t\t}\n\t\treturn resizeButton;\n\t}\n\n\t_isResizeButtonRequired() {\n\t\tconst pixelWidth = this.propertiesController.getForm().pixelWidth;\n\n\t\tif (this.props.propertiesConfig.enableResize !== false) {\n\t\t\tif (pixelWidth) {\n\t\t\t\tif (!pixelWidth.min && !pixelWidth.max) {\n\t\t\t\t\tlogger.warn(\"Pixel width was provided but no min or max property was found in it.\");\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.SMALL) {\n\t\t\t\t\tif (pixelWidth.min && !pixelWidth.max && pixelWidth.min >= FLYOUT_WIDTH_MEDIUM) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size: \" + FLYOUT_WIDTH_MEDIUM);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!pixelWidth.min && pixelWidth.max && pixelWidth.max <= FLYOUT_WIDTH_SMALL) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width max size is less than or equal to default min size: \" + FLYOUT_WIDTH_SMALL);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pixelWidth.min >= pixelWidth.max) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to pixel width max size.\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.MEDIUM) {\n\t\t\t\t\tif (pixelWidth.min && !pixelWidth.max && pixelWidth.min >= FLYOUT_WIDTH_LARGE) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size: \" + FLYOUT_WIDTH_LARGE);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!pixelWidth.min && pixelWidth.max && pixelWidth.max <= FLYOUT_WIDTH_MEDIUM) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width max size is less than or equal to default min size: \" + FLYOUT_WIDTH_MEDIUM);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pixelWidth.min >= pixelWidth.max) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size.\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.LARGE) {\n\t\t\t\t\tif (pixelWidth.min && !pixelWidth.max && pixelWidth.min >= FLYOUT_WIDTH_MAX) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size: \" + FLYOUT_WIDTH_MAX);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!pixelWidth.min && pixelWidth.max && pixelWidth.max <= FLYOUT_WIDTH_LARGE) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width max size is less than or equal to default min size: \" + FLYOUT_WIDTH_LARGE);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pixelWidth.min >= pixelWidth.max) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size.\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.MAX) {\n\t\t\t\t\tif (pixelWidth.min) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size ignored.\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.MAX) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// options is an object of config options where\n\t//   applyProperties: true - this function is called from applyPropertiesEditing\n\t_setValueInforProperties(valueInfo, options) {\n\t\tconst applyProperties = options && options.applyProperties === true;\n\t\tconst filterHiddenDisabled = this.props.propertiesConfig.conditionReturnValueHandling === CONDITION_RETURN_VALUE_HANDLING.NULL;\n\t\tconst properties = this.propertiesController.getPropertyValues({ filterHiddenDisabled: filterHiddenDisabled, applyProperties: applyProperties });\n\t\tif (this.uiParameterKeys.length > 0) {\n\t\t\tvalueInfo.properties = omit(properties, this.uiParameterKeys);\n\t\t\tvalueInfo.uiProperties = pick(properties, this.uiParameterKeys);\n\t\t} else {\n\t\t\tvalueInfo.properties = properties;\n\t\t}\n\t\treturn valueInfo;\n\t}\n\n\t// this will return an array of control names that are ui only controls.\n\t_getUiOnlyKeys() {\n\t\tconst uiOnlyKeys = [];\n\t\tconst controls = this.propertiesController.getControls();\n\t\tif (Object.keys(controls).length > 0) {\n\t\t\tfor (const controlKey in controls) {\n\t\t\t\tif (!has(controls, controlKey)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst control = controls[controlKey];\n\t\t\t\tif (control.uionly) {\n\t\t\t\t\tuiOnlyKeys.push(controlKey);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn uiOnlyKeys;\n\t}\n\n\t// cancelSource is \"apply\" if called from applyPropertiesEditing(), else \"cancel\"\n\tcancelHandler(cancelSource) {\n\t\tif (this.props.callbacks.closePropertiesDialog) {\n\t\t\tthis.props.callbacks.closePropertiesDialog(cancelSource);\n\t\t}\n\t}\n\n\tapplyPropertiesEditing(closeProperties) {\n\t\t// validate all the input values.\n\t\tthis.propertiesController.validatePropertiesValues();\n\t\tconst newErrorMessages = this.propertiesController.getAllErrorMessages();\n\n\t\t// only save if title or parameters have changed or new error messages\n\t\tif (this.originalTitle !== this.propertiesController.getTitle() ||\n\t\t\t\t(this.currentParameters && JSON.stringify(this.currentParameters) !==\n\t\t\t\tJSON.stringify(this.propertiesController.getPropertyValues())) ||\n\t\t\t\t(JSON.stringify(this.previousErrorMessages) !== JSON.stringify(newErrorMessages)) ||\n\t\t\t\tthis.props.propertiesConfig.applyPropertiesWithoutEdit) {\n\n\t\t\t// set current values\n\t\t\tlet valueInfo = { additionalInfo: {}, undoInfo: {} };\n\t\t\tvalueInfo = this._setValueInforProperties(valueInfo, { applyProperties: true });\n\t\t\tvalueInfo.undoInfo.properties = this.propertiesController.getPropertyValues();\n\t\t\tconst errorMessages = this.propertiesController.getErrorMessages(true, true, true, false);\n\t\t\tif (errorMessages) {\n\t\t\t\tvalueInfo.additionalInfo.messages = errorMessages;\n\t\t\t}\n\t\t\tvalueInfo.undoInfo.messages = this.propertiesController.getAllErrorMessages();\n\t\t\tif (this.propertiesController.getTitle()) {\n\t\t\t\tvalueInfo.additionalInfo.title = this.propertiesController.getTitle();\n\t\t\t}\n\t\t\tconst propertiesActionLabel = this.getPropertiesActionLabel();\n\t\t\tconst command = new CommonPropertiesAction(valueInfo, this.initialValueInfo,\n\t\t\t\tthis.props.propertiesInfo.appData, this.props.callbacks.applyPropertyChanges, propertiesActionLabel);\n\t\t\tthis.propertiesController.getCommandStack().do(command);\n\n\t\t\t// if we don't close the dialog, set the currentParameters to the new parameters\n\t\t\t// so we don't save again unnecessarily when clicking save but no additional changes happened\n\t\t\tthis.currentParameters = this.propertiesController.getPropertyValues();\n\t\t\t// reset undo values\n\t\t\tthis.initialValueInfo = cloneDeep(valueInfo);\n\t\t\tthis.previousErrorMessages = this.propertiesController.getAllErrorMessages();\n\t\t}\n\t\tif (closeProperties) {\n\t\t\tthis.cancelHandler(APPLY); // close property editor\n\t\t}\n\t}\n\n\tshowPropertiesButtons(state) {\n\t\tthis.setState({ showPropertiesButtons: state });\n\t}\n\n\tupdateEditorSize(newEditorSize) {\n\t\tthis.setState({\n\t\t\teditorSize: newEditorSize\n\t\t});\n\t\tthis.propertiesController.setEditorSize(newEditorSize);\n\t}\n\n\tresize() {\n\t\tif (this.propertiesController.getForm().editorSize === Size.SMALL) {\n\t\t\tif (this.state.editorSize === Size.SMALL) {\n\t\t\t\tthis.updateEditorSize(Size.MEDIUM);\n\t\t\t} else {\n\t\t\t\tthis.updateEditorSize(Size.SMALL);\n\t\t\t}\n\t\t} else if (this.propertiesController.getForm().editorSize === Size.MEDIUM) {\n\t\t\tif (this.state.editorSize === Size.MEDIUM) {\n\t\t\t\tthis.updateEditorSize(Size.LARGE);\n\t\t\t} else {\n\t\t\t\tthis.updateEditorSize(Size.MEDIUM);\n\t\t\t}\n\t\t} else if (this.propertiesController.getForm().editorSize === Size.LARGE) {\n\t\t\tif (this.state.editorSize === Size.LARGE) {\n\t\t\t\tthis.updateEditorSize(Size.MAX);\n\t\t\t} else {\n\t\t\t\tthis.updateEditorSize(Size.LARGE);\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst applyOnBlurEnabled = this.props.propertiesConfig.applyOnBlur && this.props.propertiesConfig.rightFlyout;\n\t\tlet cancelHandler = this.cancelHandler.bind(this, CANCEL);\n\t\t// when onBlur cancel shouldn't be rendered.\n\t\tif (applyOnBlurEnabled) {\n\t\t\tcancelHandler = null;\n\t\t}\n\t\tconst applyLabel = this.getApplyButtonLabel();\n\t\tconst rejectLabel = this.getRejectButtonLabel();\n\n\t\tconst formData = this.propertiesController.getForm();\n\t\tif (formData !== null) {\n\t\t\tlet propertiesDialog = [];\n\t\t\tlet propertiesTitle = <div />;\n\t\t\tlet buttonsContainer = <div />;\n\t\t\tlet resizeBtn = null;\n\t\t\tlet hasHeading = false;\n\n\t\t\tif (this.props.propertiesConfig.rightFlyout) {\n\t\t\t\tpropertiesTitle = (<TitleEditor\n\t\t\t\t\tlabelEditable={formData.labelEditable}\n\t\t\t\t\thelp={formData.help}\n\t\t\t\t\tcontroller={this.propertiesController}\n\t\t\t\t\thelpClickHandler={this.props.callbacks.helpClickHandler}\n\t\t\t\t\tcloseHandler={applyOnBlurEnabled ? this.applyPropertiesEditing.bind(this, true) : null}\n\t\t\t\t\ticon={formData.icon}\n\t\t\t\t\theading={formData.heading}\n\t\t\t\t\tshowHeading={this.props.propertiesConfig.heading}\n\t\t\t\t/>);\n\n\t\t\t\thasHeading = this.props.propertiesConfig.heading && (formData.icon || formData.heading);\n\n\t\t\t\tbuttonsContainer = (<MainEditorPropertiesButtons\n\t\t\t\t\tcontroller={this.propertiesController}\n\t\t\t\t\tokHandler={!applyOnBlurEnabled ? this.applyPropertiesEditing.bind(this, true) : null}\n\t\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\t\tshowPropertiesButtons={this.state.showPropertiesButtons}\n\t\t\t\t\tdisableSaveOnRequiredErrors={this.props.propertiesConfig.disableSaveOnRequiredErrors}\n\t\t\t\t/>);\n\t\t\t\tif (this._isResizeButtonRequired()) {\n\t\t\t\t\tconst resizeIcon = this._getResizeButton();\n\t\t\t\t\t// Resize button label can be \"Expand\" or \"Contract\"\n\t\t\t\t\tconst resizeBtnLabel = (resizeIcon.props && resizeIcon.props.className === \"properties-resize-caret-left\")\n\t\t\t\t\t\t? PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_RESIZEBUTTON_EXPAND_LABEL)\n\t\t\t\t\t\t: PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_RESIZEBUTTON_CONTRACT_LABEL);\n\t\t\t\t\tresizeBtn = (\n\t\t\t\t\t\t<Button kind=\"ghost\" className=\"properties-btn-resize\" onClick={this.resize.bind(this)} aria-label={resizeBtnLabel} >\n\t\t\t\t\t\t\t{resizeIcon}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst editorForm = (<EditorForm\n\t\t\t\tkey=\"editor-form-key\"\n\t\t\t\tcontroller={this.propertiesController}\n\t\t\t\tadditionalComponents={this.props.propertiesInfo.additionalComponents}\n\t\t\t\tshowPropertiesButtons={this.showPropertiesButtons}\n\t\t\t\tcustomPanels={this.props.customPanels}\n\t\t\t\trightFlyout={this.props.propertiesConfig.rightFlyout}\n\t\t\t/>);\n\n\t\t\tif (this.props.propertiesConfig.containerType === \"Editing\") {\n\t\t\t\tpropertiesDialog = (<PropertiesEditor\n\t\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\t\tbsSize={this.state.editorSize}\n\t\t\t\t\ttitle={this.propertiesController.getTitle()}\n\t\t\t\t\tokHandler={this.applyPropertiesEditing.bind(this, true)}\n\t\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t\t\tshowPropertiesButtons={this.state.showPropertiesButtons}\n\t\t\t\t>\n\t\t\t\t\t{editorForm}\n\t\t\t\t</PropertiesEditor>);\n\t\t\t} else if (this.props.propertiesConfig.containerType === \"Custom\") {\n\t\t\t\tpropertiesDialog = (\n\t\t\t\t\t<div className={classNames(\"properties-custom-container\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties-custom-container-with-heading\": !applyOnBlurEnabled && hasHeading,\n\t\t\t\t\t\t\t\"properties-custom-container-applyOnBlur\": applyOnBlurEnabled && !hasHeading,\n\t\t\t\t\t\t\t\"properties-custom-container-applyOnBlur-with-heading\": applyOnBlurEnabled && hasHeading\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{editorForm}\n\t\t\t\t\t</div>);\n\t\t\t} else if (this.props.propertiesConfig.containerType === \"Tearsheet\") {\n\t\t\t\tpropertiesDialog = (<TearSheet\n\t\t\t\t\topen\n\t\t\t\t\tonCloseCallback={this.props.propertiesConfig.applyOnBlur ? this.applyPropertiesEditing.bind(this, true) : null}\n\t\t\t\t\ttearsheet={{\n\t\t\t\t\t\ttitle: this.propertiesController.getTitle(),\n\t\t\t\t\t\tcontent: editorForm\n\t\t\t\t\t}}\n\t\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\t\tokHandler={this.applyPropertiesEditing.bind(this, true)}\n\t\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t\t\tshowPropertiesButtons={this.state.showPropertiesButtons}\n\t\t\t\t\tapplyOnBlur={this.props.propertiesConfig.applyOnBlur}\n\t\t\t\t/>);\n\t\t\t} else { // Modal\n\t\t\t\tpropertiesDialog = (<PropertiesModal\n\t\t\t\t\tonHide={this.props.callbacks.closePropertiesDialog}\n\t\t\t\t\ttitle={this.propertiesController.getTitle()}\n\t\t\t\t\tbsSize={this.state.editorSize}\n\t\t\t\t\tokHandler={this.applyPropertiesEditing.bind(this, true)}\n\t\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t\t\tshowPropertiesButtons={this.state.showPropertiesButtons}\n\t\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\t>\n\t\t\t\t\t{editorForm}\n\t\t\t\t</PropertiesModal>);\n\t\t\t}\n\t\t\tconst className = classNames(\"properties-wrapper\",\n\t\t\t\t{\n\t\t\t\t\t\"properties-right-flyout\": this.props.propertiesConfig.rightFlyout,\n\t\t\t\t\t\"properties-light-enabled\": this.props.light,\n\t\t\t\t\t\"properties-light-disabled\": !this.props.light\n\t\t\t\t},\n\t\t\t\t`properties-${this.state.editorSize}`);\n\t\t\tconst overrideSize = this._getOverrideSize();\n\t\t\tlet overrideStyle = null;\n\t\t\tif (overrideSize !== null) {\n\t\t\t\toverrideStyle = { width: overrideSize + \"px\" };\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<Provider store={this.propertiesController.getStore()}>\n\t\t\t\t\t<aside\n\t\t\t\t\t\taria-label={PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_LABEL)}\n\t\t\t\t\t\trole=\"complementary\"\n\t\t\t\t\t\tref={ (ref) => (this.commonProperties = ref) }\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\tonBlur={this.onBlur}\n\t\t\t\t\t\tstyle={overrideStyle}\n\t\t\t\t\t>\n\t\t\t\t\t\t{resizeBtn}\n\t\t\t\t\t\t{propertiesTitle}\n\t\t\t\t\t\t{propertiesDialog}\n\t\t\t\t\t\t{buttonsContainer}\n\t\t\t\t\t</aside>\n\t\t\t\t</Provider>\n\t\t\t);\n\t\t}\n\t\treturn <div />;\n\t}\n}\n\nPropertiesMain.propTypes = {\n\tpropertiesInfo: PropTypes.object.isRequired,\n\tpropertiesConfig: PropTypes.shape({\n\t\tapplyOnBlur: PropTypes.bool,\n\t\tdisableSaveOnRequiredErrors: PropTypes.bool,\n\t\trightFlyout: PropTypes.bool,\n\t\tcontainerType: PropTypes.string,\n\t\tenableResize: PropTypes.bool,\n\t\tconditionReturnValueHandling: PropTypes.string,\n\t\theading: PropTypes.bool,\n\t\tbuttonLabels: PropTypes.shape({\n\t\t\tprimary: PropTypes.string,\n\t\t\tsecondary: PropTypes.string\n\t\t}),\n\t\tschemaValidation: PropTypes.bool,\n\t\tapplyPropertiesWithoutEdit: PropTypes.bool,\n\t\tconditionHiddenPropertyHandling: PropTypes.oneOf([\"null\", \"undefined\", \"value\"]),\n\t\tconditionDisabledPropertyHandling: PropTypes.oneOf([\"null\", \"undefined\", \"value\"]),\n\t\tmaxLengthForMultiLineControls: PropTypes.number,\n\t\tmaxLengthForSingleLineControls: PropTypes.number,\n\t\tconvertValueDataTypes: PropTypes.bool\n\t}),\n\tcallbacks: PropTypes.shape({\n\t\tcontrollerHandler: PropTypes.func,\n\t\tpropertyListener: PropTypes.func,\n\t\tactionHandler: PropTypes.func,\n\t\tclosePropertiesDialog: PropTypes.func,\n\t\tapplyPropertyChanges: PropTypes.func,\n\t\thelpClickHandler: PropTypes.func,\n\t\tsetPropertiesHasMounted: PropTypes.func,\n\t\tbuttonHandler: PropTypes.func,\n\t\tbuttonIconHandler: PropTypes.func,\n\t\tvalidationHandler: PropTypes.func,\n\t\ttitleChangeHandler: PropTypes.func,\n\t\tpropertiesActionLabelHandler: PropTypes.func,\n\t\ttooltipLinkHandler: PropTypes.func\n\t}),\n\tcustomPanels: PropTypes.array, // array of custom panels\n\tcustomControls: PropTypes.array, // array of custom controls\n\tcustomConditionOps: PropTypes.array, // array of custom condition ops\n\tlight: PropTypes.bool,\n\tintl: PropTypes.object.isRequired\n};\n\nexport default injectIntl(PropertiesMain, { forwardRef: true });\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PropertiesButtons from \"./components/properties-buttons\";\nimport PropertiesMain from \"./properties-main\";\nimport PropertiesModal from \"./components/properties-modal\";\nimport ValidationMessage from \"./components/validation-message\";\nimport { formatMessage } from \"./util/property-utils\";\nimport { MESSAGE_KEYS } from \"./constants/constants\";\n\nimport { injectIntl } from \"react-intl\";\n\n\nclass CommonProperties extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false,\n\t\t\terror: null,\n\t\t\tinfo: null,\n\t\t};\n\t\tthis.createPropertiesMainComponent = this.createPropertiesMainComponent.bind(this);\n\t\tthis.revertState = this.revertState.bind(this);\n\t\tthis.propertiesMainHasMounted = false;\n\t\tthis.setPropertiesHasMounted = this.setPropertiesHasMounted.bind(this);\n\t\tthis.applyPropertiesEditing = this.applyPropertiesEditing.bind(this);\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({\n\t\t\thasError: true,\n\t\t\terror: error,\n\t\t\tinfo: info\n\t\t});\n\t}\n\n\tsetPropertiesHasMounted() {\n\t\tthis.propertiesMainHasMounted = true;\n\t}\n\n\tapplyPropertiesEditing(closeEditor) {\n\t\tthis.PropertiesMain.applyPropertiesEditing(closeEditor);\n\t}\n\n\tcreatePropertiesMainComponent() {\n\t\tObject.assign(this.props.callbacks, { \"setPropertiesHasMounted\": this.setPropertiesHasMounted });\n\t\tconst propertiesMain = (\n\t\t\t<PropertiesMain\n\t\t\t\tref={\n\t\t\t\t\t(instance) => {\n\t\t\t\t\t\tthis.PropertiesMain = instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpropertiesInfo={this.props.propertiesInfo}\n\t\t\t\tpropertiesConfig={this.props.propertiesConfig}\n\t\t\t\tcustomPanels={this.props.customPanels}\n\t\t\t\tcallbacks= {this.props.callbacks}\n\t\t\t\tcustomControls={this.props.customControls}\n\t\t\t\tcustomConditionOps={this.props.customConditionOps}\n\t\t\t\tlight={this.props.light}\n\t\t\t/>);\n\t\treturn propertiesMain;\n\t}\n\n\trevertState() {\n\t\tthis.setState({\n\t\t\thasError: false,\n\t\t\terror: null,\n\t\t\tinfo: null\n\t\t});\n\t}\n\n\tdisplayAppropriateUIFallback() {\n\t\tconst errorInfo = {\n\t\t\ttext: formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_UNEXPECTED_MESSAGE),\n\t\t\ttype: \"error\"\n\t\t};\n\t\tconst errorHeading = (\n\t\t\t<div className=\"properties-error-heading\">\n\t\t\t\t<ValidationMessage messageInfo={errorInfo} />\n\t\t\t</div>\n\t\t);\n\t\tlet errorMessage;\n\t\tconst supportMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_SUPPORT_MESSAGE);\n\t\tconst closeText = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_CLOSEBUTTON_LABEL);\n\t\tconst closeFunction = this.props.callbacks.closePropertiesDialog;\n\t\tconst revertText = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_REVERTBUTTON_LABEL);\n\t\tconst revertFunction = this.revertState;\n\t\tconst propertiesLandmarkRoleLabel = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_LABEL);\n\t\tlet closeAndRevertContainer;\n\t\tif (this.props.propertiesConfig.containerType === \"Custom\") { // Right flyout view or Custom\n\t\t\tif (this.propertiesMainHasMounted === true) {\n\t\t\t\terrorMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_REVERT_MESSAGE);\n\t\t\t\tcloseAndRevertContainer = ( // Close and Revert Button\n\t\t\t\t\t<div className=\"properties-modal-buttons\">\n\t\t\t\t\t\t<PropertiesButtons\n\t\t\t\t\t\t\tclassName=\"properties-error-display-close-button\"\n\t\t\t\t\t\t\tokHandler={closeFunction}\n\t\t\t\t\t\t\tcancelHandler={revertFunction}\n\t\t\t\t\t\t\tshowPropertiesButtons\n\t\t\t\t\t\t\tapplyLabel={closeText}\n\t\t\t\t\t\t\trejectLabel={revertText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\terrorMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_CLOSE_MESSAGE);\n\t\t\t\tcloseAndRevertContainer = ( // Close Button only\n\t\t\t\t\t<div className=\"properties-modal-buttons\">\n\t\t\t\t\t\t<PropertiesButtons\n\t\t\t\t\t\t\tclassName=\"properties-error-display-close-button\"\n\t\t\t\t\t\t\tokHandler={closeFunction}\n\t\t\t\t\t\t\tshowPropertiesButtons\n\t\t\t\t\t\t\tapplyLabel={closeText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.props.propertiesConfig.rightFlyout) { // Right Flyout View\n\t\t\t\treturn (\n\t\t\t\t\t<aside\n\t\t\t\t\t\taria-label={propertiesLandmarkRoleLabel}\n\t\t\t\t\t\trole=\"complementary\"\n\t\t\t\t\t\tclassName=\"properties-wrapper properties-right-flyout properties-small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"properties-flyout-error-container\">\n\t\t\t\t\t\t\t{errorHeading}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div className=\"properties-error-content\" >\n\t\t\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t{supportMessage}\n\t\t\t\t\t\t\t</div >\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{closeAndRevertContainer}\n\t\t\t\t\t</aside>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn ( // Non Right Flyout Custom\n\t\t\t\t<aside\n\t\t\t\t\taria-label={propertiesLandmarkRoleLabel}\n\t\t\t\t\trole=\"complementary\"\n\t\t\t\t\tclassName=\"properties-wrapper properties-custom-container\"\n\t\t\t\t>\n\t\t\t\t\t<div className= \"properties-flyout-error-container\">\n\t\t\t\t\t\t{ errorHeading }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div className=\"properties-error-content\" >\n\t\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{supportMessage}\n\t\t\t\t\t\t</div >\n\t\t\t\t\t</div>\n\t\t\t\t\t{closeAndRevertContainer}\n\t\t\t\t</aside>\n\t\t\t);\n\t\t}\n\t\t// Modal View\n\t\tif (this.propertiesMainHasMounted === true) { // Revert and Close Button\n\t\t\terrorMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_REVERT_MESSAGE);\n\t\t\tcloseAndRevertContainer = (\n\t\t\t\t<PropertiesModal\n\t\t\t\t\tbsSize=\"large\"\n\t\t\t\t\tshowPropertiesButtons\n\t\t\t\t\tapplyLabel={closeText}\n\t\t\t\t\trejectLabel={revertText}\n\t\t\t\t\tokHandler={closeFunction}\n\t\t\t\t\tcancelHandler={revertFunction}\n\t\t\t\t\ttitle ={errorHeading}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"properties-modal-container properties-error-content\">\n\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{supportMessage}\n\t\t\t\t\t</div>\n\t\t\t\t</PropertiesModal>\n\t\t\t);\n\t\t} else {\t// Close Button Only\n\t\t\terrorMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_CLOSE_MESSAGE);\n\t\t\tcloseAndRevertContainer = (\n\t\t\t\t<div className = \"properties-modal-error\">\n\t\t\t\t\t<PropertiesModal\n\t\t\t\t\t\tokHandler={closeFunction}\n\t\t\t\t\t\tbsSize=\"large\"\n\t\t\t\t\t\tshowPropertiesButtons\n\t\t\t\t\t\tapplyLabel={closeText}\n\t\t\t\t\t\trejectLabel=\"null\"\n\t\t\t\t\t\ttitle ={errorHeading}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"properties-modal-container properties-error-content\">\n\t\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{supportMessage}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</PropertiesModal>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn ( // Modal flyout vew\n\t\t\tcloseAndRevertContainer\n\t\t);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn this.displayAppropriateUIFallback();\n\t\t}\n\t\treturn this.createPropertiesMainComponent();\n\t}\n\n}\n\nCommonProperties.propTypes = {\n\tpropertiesInfo: PropTypes.object.isRequired,\n\tpropertiesConfig: PropTypes.shape({\n\t\tapplyOnBlur: PropTypes.bool,\n\t\ttrimSpaces: PropTypes.bool,\n\t\tdisableSaveOnRequiredErrors: PropTypes.bool,\n\t\trightFlyout: PropTypes.bool,\n\t\tcontainerType: PropTypes.string,\n\t\tenableResize: PropTypes.bool,\n\t\tconditionReturnValueHandling: PropTypes.oneOf([\"null\", \"value\"]),\n\t\tbuttonLabels: PropTypes.shape({\n\t\t\tprimary: PropTypes.string,\n\t\t\tsecondary: PropTypes.string\n\t\t}),\n\t\tschemaValidation: PropTypes.bool,\n\t\tapplyPropertiesWithoutEdit: PropTypes.bool,\n\t\tconditionHiddenPropertyHandling: PropTypes.oneOf([\"null\", \"value\"]),\n\t\tconditionDisabledPropertyHandling: PropTypes.oneOf([\"null\", \"value\"]),\n\t\tmaxLengthForMultiLineControls: PropTypes.number,\n\t\tmaxLengthForSingleLineControls: PropTypes.number,\n\t\tconvertValueDataTypes: PropTypes.bool\n\t}),\n\tcallbacks: PropTypes.shape({\n\t\tcontrollerHandler: PropTypes.func,\n\t\tpropertyListener: PropTypes.func,\n\t\tactionHandler: PropTypes.func,\n\t\tclosePropertiesDialog: PropTypes.func,\n\t\tapplyPropertyChanges: PropTypes.func,\n\t\thelpClickHandler: PropTypes.func,\n\t\tbuttonHandler: PropTypes.func,\n\t\tbuttonIconHandler: PropTypes.func,\n\t\tvalidationHandler: PropTypes.func,\n\t\ttitleChangeHandler: PropTypes.func,\n\t\tpropertiesActionLabelHandler: PropTypes.func,\n\t\ttooltipLinkHandler: PropTypes.func\n\t}),\n\tcustomPanels: PropTypes.array,\n\tcustomControls: PropTypes.array,\n\tcustomConditionOps: PropTypes.array,\n\tlight: PropTypes.bool,\n\tintl: PropTypes.object.isRequired\n};\n\nCommonProperties.defaultProps = {\n\tpropertiesConfig: {\n\t\tcontainerType: \"Custom\",\n\t\trightFlyout: true,\n\t\tapplyOnBlur: false,\n\t\ttrimSpaces: true,\n\t\tdisableSaveOnRequiredErrors: false,\n\t\tenableResize: true,\n\t\tconditionReturnValueHandling: \"value\",\n\t\tschemaValidation: false,\n\t\tapplyPropertiesWithoutEdit: false,\n\t\tmaxLengthForMultiLineControls: 1024,\n\t\tmaxLengthForSingleLineControls: 128,\n\t\tconvertValueDataTypes: false\n\t},\n\tcallbacks: {\n\t},\n\tlight: true // Enable light option by default\n};\n\nexport default injectIntl(CommonProperties, { forwardRef: true });\n"],"names":["baseGet","require$$0","baseSet","require$$1","castPath","require$$2","basePickBy","object","paths","predicate","index","length","result","path","value","hasIn","_basePick","baseFlatten","flatten","array","overRest","setToString","_flatRest","func","undefined","basePick","pick_1","_baseSlice","start","end","Array","baseSlice","_parent","last","parent","toKey","require$$3","_baseUnset","baseGetTag","getPrototype","isObjectLike","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","objectCtorString","call","isPlainObject","proto","Ctor","constructor","_customOmitClone","arrayMap","baseClone","baseUnset","copyObject","require$$4","customOmitClone","require$$5","flatRest","require$$6","getAllKeysIn","require$$7","omit_1","isDeep","CLONE_DEEP_FLAG","PropertiesModal","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","props","bsSize","Size","SMALL","CARBON_MODAL_SIZE_XSMALL","LARGE","MAX","CARBON_MODAL_SIZE_LARGE","MEDIUM","CARBON_MODAL_SIZE_SMALL","modalSize","getCarbonModalSize","React","createElement","Portal","Modal","className","classNames","noButtons","showPropertiesButtons","open","modalHeading","title","primaryButtonText","applyLabel","secondaryButtonText","rejectLabel","onRequestSubmit","okHandler","onSecondarySubmit","cancelHandler","size","children","Component","PropertiesEditor","propertyEditingClass","buttons","PropertiesButtons","TearSheet","tearsheet","description","content","displayFooterButtons","applyOnBlur","displayTabs","isArray","ComposedModal","stacked","preventCloseOnClickOutside","ModalHeader","onCloseCallback","buttonOnClick","ModalBody","defaultProps","MainEditorPropertiesButtons","saveButtonEnabled","disableSaveOnRequiredErrors","keys","requiredErrorMessages","shouldEnabledSaveButton","applyButtonEnabled","connect","state","ownProps","controller","getSaveButtonDisable","getRequiredErrorMessages","SET_PROPERTY_VALUES","UPDATE_PROPERTY_VALUE","REMOVE_PROPERTY_VALUE","SET_CONTROL_STATES","UPDATE_CONTROL_STATE","SET_PANEL_STATES","UPDATE_PANEL_STATE","SET_ACTION_STATES","UPDATE_ACTION_STATE","SET_ERROR_MESSAGES","UPDATE_ERROR_MESSAGE","CLEAR_ERROR_MESSAGE","SET_DATASET_METADATA","UPDATE_SELECTED_ROWS","CLEAR_SELECTED_ROWS","SET_TITLE","SET_ACTIVE_TAB","DISABLE_ROW_MOVE_BUTTONS","SET_SAVE_BUTTON_DISABLE","SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED","SET_ADD_REMOVE_ROWS","UPDATE_STATIC_ROWS","CLEAR_STATIC_ROWS","SET_TABLE_BUTTON_ENABLED","SET_HIDE_EDIT_BUTTON","SET_ACTIVE_TEARSHEET","setTitle","type","setActiveTab","activeTab","SelectorPanel","_React$Component","panel","panels","getPropertyValue","name","dependsOn","WideFlyout","_this","style","height","updateDimensions","bind","_assertThisInitialized","window","addEventListener","removeEventListener","wideFlyout","commonPropertiesParent","findPropertyWrapper","commonProperties","ReactDOM","findDOMNode","getBoundingClientRect","setState","top","node","parentNode","includes","_this2","overlay","show","okButtonEnabled","ref","light","getControlId","propertyId","id","uuid","uuid4","concat","getDataId","row","col","getCharLimit","control","defaultLimit","limit","charLimit","splitNewlines","text","splitValue","split","joinNewlines","list","joinValue","truncated","concatenatedValue","forEach","truncatedValue","truncateDisplayValue","join","TRUNCATE_LIMIT","substring","getValidationProps","messageInfo","inTable","validationProps","invalid","invalidText","warn","warnText","SummaryPanel","showWideFlyout","handleLinkClicked","hideWideFlyout","cancelWideFlyout","_getSummaryTables","evt","mousePos","x","clientX","y","clientY","setIsSummaryPanelShowing","clearSelectedRows","setPropertyValues","initialControlValues","setErrorMessages","initialMessages","setControlStates","initialStates","getPropertyValues","getAllErrorMessages","getControlStates","summaryTables","summaryControls","getSummaryPanelControls","_step","_iterator","_createForOfIteratorHelper","s","n","done","controlName","summaryControl","getControl","controlValue","filterHiddenDisabled","customValue","getCustPropSumPanelValue","showCustom","summaryLabel","label","summaryValues","summaryColumns","subControls","idx","colPropertyId","isSummary","summary","colWidth","rowIdx","rowValue","rowData","colIdx","displayValue","_getSummaryDisplayValue","contentValue","JSON","stringify","replace","RegExp","push","width","onMouseMove","_onMouseMove","Tooltip","tip","showToolTipIfTruncated","summaryBody","role","largeTableLabel","PropertyUtils","getReactIntl","MESSAGE_KEYS","LONG_TABLE_SUMMARY_PLACEHOLDER","err","e","f","returnValue","values","valueLabels","displayIndex","indexOf","valueDef","propType","Type","STRUCTURE","ParamRole","COLUMN","controls","msg","errorCount","warningCount","controlId","controlMsg","getErrorMessage","_isEmpty","CONDITION_MESSAGE_TYPE","WARNING","ERROR","descriptionText","CONTROL_SUMMARY_ERROR","errorMsgCount","CONTROL_SUMMARY_ERROR_WARNING","warningMsgCount","CONTROL_SUMMARY_WARNING","Icon","icon","_getSummaryIconState","link","Button","onClick","kind","renderIcon","Add16","APPLYBUTTON_LABEL","REJECTBUTTON_LABEL","flyout","getLight","panelClassName","hide","panelState","STATES","HIDDEN","nestedPanel","disabled","DISABLED","ControlUtils","getPanelState","getWideFlyoutPrimaryButtonDisabled","TwistyPanel","Accordion","AccordionItem","SubPanelInvoker","hideHandler","subPanelVisible","showSubDialog","hideSubDialog","increaseVisibleSubPanelCounter","applyChanges","decreaseVisibleSubPanelCounter","propertiesDialog","rightFlyout","isTearsheetContainer","SubPanelButton","showSubPanel","onSubPanelHidden","logger","info","subPanelInvoker","formatMessage","button","small","ColumnPanel","gridColumns","item","gridTemplateColumns","ControlPanel","Subtabs","activeTabId","tabId","subTabs","tabIdx","i","tabs","tab","group","subPanelItems","genUIItem","Tab","leftnav","tabIndex","vertical","Tabs","selected","TextPanel","hidden","dynamicDescriptionText","evaluateText","placement","tooltip","tooltipLinkHandler","getHandlers","direction","disable","showToolTipOnClick","CARBON_ICONS","INFORMATION","propertyValues","ActionPanel","ButtonAction","applyAction","_has","CARBON_BUTTON_KIND","TERTIARY","action","PRIMARY","SECONDARY","GHOST","DANGER","DANGER_TERTIARY","DANGER_GHOST","CARBON_BUTTON_SIZE","DEFAULT","EXTRA_LARGE","actionHandler","getAppData","data","actionButtonKind","getActionButtonKind","actionButtonSize","getActionButtonSize","display","tooltipId","getActionState","convertPropertyId","ImageAction","image","left","right","_extends","src","url","tooltipDirection","tooltip_direction","toLowerCase","ActionFactory","actionType","ALERT_TAB_GROUP","EditorForm","showFieldPicker","genPanel","genUIContent","_getGroupedMessages","closeFieldPicker","openFieldPicker","generateSharedControlNames","messages","ControlFactory","getControlFactory","setFunctions","setRightFlyout","actionFactory","FIRST_TEARSHEET_ID","TEARSHEETS","visibleTearsheet","nextProps","nextState","isSummaryPanelShowing","isSubPanelsShowing","ctrl","id_ref","parentCategoryId","_sortBy","panelId","ev","indexof","tabContent","hasAlertsTab","modalSelected","nonTearsheetTabs","filter","t","itemType","ItemType","TEARSHEET","totalTabs","panelItems","_getContainerIndex","additionalComponent","additionalComponents","panelArrow","CHEVRONARROWS","DOWN","categoryOpen","UP","_showCategoryPanel","_getMessageCountForCategory","_modalTabsOnClick","tabContentClassName","subPanels","generateAdditionalPanels","indent","groupClassName","uiItems","uiContent","uiItem","inPropertyId","textClass","additionalItems","optionalPanels","parentPropertyId","_cloneDeep","updateLastChildPropertyId","createControlItem","subPanel","secondaryText","textType","PropertyUtil","Link","_handleMessageClick","genPrimaryTabs","genPanelSelector","generateCustomPanel","generateAction","customPanels","custPanel","_get","parameters","renderPanel","error","_step2","_iterator2","getSharedCtrlInfo","_step3","sharedCtrlNames","_iterator3","panelItem","addSharedControls","_this3","panelType","getActiveTearsheet","clearActiveTearsheet","newSelectedFields","newSelections","closeFieldPickerCallback","fieldPickerPropertyId","callback","dmImage","currentControlValues","fields","getFilteredDatasetMetadata","tableFieldIndex","formattedFieldsList","FieldPicker","currentFields","dmIcon","msgUIItems","map","ALERTS_TAB_TITLE","getUiItems","unshift","genAlertsTab","stackedTearsheet","wideFly","form","getForm","FIELDPICKER_SAVEBUTTON_LABEL","fieldPicker","componentMetadataReducer","getErrorMessages","dispatch","propertyOf_1","L10nProvider","resources","defaultVal","_propertyOf","resourceObj","resource_key","l10n","uiObject","l10nResource","baseKey","lookupKey","desc","ResourceDef","resource","Group","cname","actions","insertPanels","subGroups","copen","make","GroupType","CONTROLS","uiGroup","group_info","newGroup","makeGroup","GroupMetadata","groups","uiGroups","Action","actionName","ActionDef","actionDef","ActionMetadata","actionDefs","actionId","uihintsActions","actionsDefs","makeActionDef","ParameterDef","settings","valueRestriction","defaultValue","toType","parameter_ref","parameterRef","isList","isMapValue","labelVisible","orientation","placeHolderText","separator","visible","valueIcons","sortable","filterable","resizable","editStyle","required","numberGenerator","isKey","dmDefault","language","enableMaximize","increment","textAfter","textBefore","moveableRows","generatedValues","dateFormat","timeFormat","customControlId","rows","displayChars","uionly","actionRef","customValueAllowed","showRequiredLabel","startsWith","EditStyle","SUBPANEL","OBJECT","baseType","getValidValues","ENUM","UNSPECIFIED","typ","trim","STRING","BOOLEAN","l10nProvider","defaultControl","defaultCol","Separator","AFTER","BEFORE","param","uihint","getParamUIHint","paramName","uihints","ParameterMetadata","paramDefs","paramDef","uihintsParams","uihintsUiParams","requiredParameters","parameter","half","makeParameterDef","carbonIcon","enabled","divider","ButtonDef","buttonDef","carbon_icon","ButtonMetadata","buttonDefs","buttonId","uihintsButtons","makeButtonDef","StructureDef","keyDefinition","parameterMetadata","rowSelection","addRemoveRows","header","includeAllFields","layout","params","isSubPanelEdit","defaults","structure","makeParameterMetadata","makeButtonMetadata","getStructureUIHint","structureName","complex_type_ref","StructureMetadata","structures","structName","structureDef","uihintsStructures","_step4","structureDefs","_iterator4","struct","makeStructure","PropertyDef","editorSize","pixelWidth","labelEditable","help","structureMetadata","groupMetadata","actionMetadata","heading","titleDefinition","makeStructureMetadata","makeActionMetadata","makeGroupMetadata","getParameters","editable","DEFAULT_LABEL_EDITABLE","Control","controlType","additionalText","valueDescs","operation","start_value","startValue","structureType","childItem","keyIndex","defaultRow","hideEditButton","isKeyField","INLINE","UIItem","elements","PRIMARY_TABS","SUB_TABS","groupName","PANEL_SELECTOR","PANEL","dialogText","ADDITIONAL_LINK","CONTROL","ACTION","HORIZONTAL_SEPARATOR","STATIC_TEXT","TEXT_PANEL","CUSTOM_PANEL","_objectSpread","EditorTab","ValueDef","isMap","Label","Description","CustomControlPanel","NumberGenerator","range","makePrimaryTab","propertyDef","containerType","l10nLabel","additionalInfo","_makeUIItem","groupItem","groupLabel","groupType","makePanel","PanelType","GENERAL","_makeControls","COLUMN_SELECTION","ADDITIONAL","makeAdditionalLink","subTabItems","subGroup","subGroupName","makeSubTabs","panSelSubItems","_genPanelSelectorPanels","makePanelSelector","PANELS","panSubItems","COLUMN_PANEL","makeCustomPanel","CUSTOM","parameterNames","SUMMARY_PANEL","SUMMARY","ACTION_PANEL","groupDesc","actionIds","makeAction","_makeAction","getAction","_makeActions","makeTextPanel","TWISTY_PANEL","TEARSHEET_PANEL","additionalInfoUpdated","assign","makeTearsheetPanel","panelInsertedFor","prop","getParameter","getStructure","_makeControl","makeControl","separatorBefore","makeHSeparator","makeStaticText","getTextBefore","getTextBeforeType","getTextAfter","getTextAfterType","separatorAfter","ControlType","RADIOSET","ORIENTATIONS","VERTICAL","_hasPanelBeenInserted","_makeStringControl","isSubControl","getRole","controlObj","TEXT","TEXTAREA","getValidValueCount","CHECKBOXSET","SOMEOFSELECT","SELECTCOLUMNS","_processListParameter","_isEmbeddedOption","ONEOFSELECT","_isEmbeddedMultiOption","SELECTCOLUMN","EXPRESSION","EMAIL","TEXTFIELD","URL","COLOR","structureDefinition","subControl","getAdditionalText","controlDesc","controlLabel","l10nDesc","returnObject","PASSWORD","PASSWORDFIELD","CHECKBOX","INTEGER","LONG","DOUBLE","NUMBERFIELD","DATE","DATEFIELD","TIME","TIMEFIELD","TIMESTAMP","hasSubPanel","_makeEditStyleSubPanel","keyAttributeIndex","defaultStructure","newSubControl","_makeSubControl","STRUCTURETABLE","STRUCTURELISTEDITOR","buttonMetadata","buttonLabel","buttonDescription","_makeButton","getButton","_makeButtons","STRUCTUREEDITOR","READONLY","isCompoundField","paramLabels","paramValue","l10nValueLabel","String","_parameterValueLabels","paramDescs","l10nValueDesc","_parameterValueDescription","CONTAINER_TYPE","columns","actionDesc","actionLabel","o","allowArrayLike","it","Symbol","iterator","minLen","_arrayLikeToArray","slice","from","test","_unsupportedIterableToArray","F","_e","TypeError","normalCompletion","didErr","step","next","_e2","arr","len","arr2","searchMessage","_typeof","message","Form","componentId","conditions","shouldConvertValueDataTypes","okBtn","cancelBtn","propDef","makePropertyDef","currentParameters","convertValueDataTypes","uiCurrentParameters","datasetMetadata","editorSizeDefault","MODAL","editorSizeHint","makePrimaryTabs","translateMessages","isPrimary","CommonPropertiesAction","_Action","newValues","initialValues","appData","applyPropertyChanges","propertiesActionLabel","properties","undoInfo","uiProperties","baseRest","isIterateeCall","_createAssigner","assigner","sources","customizer","guard","source","assignValue","createAssigner","isArrayLike","isPrototype","assign_1","property","newState","updateNestedPropertyValue","states","strRow","strCol","validation_id","displayError","Number","isInteger","selectedRows","staticRows","componentMetadata","disableRowMoveButtons","propertyIds","setSaveButtonDisable","disableState","setWideFlyoutPrimaryButtonDisabled","updateNestedPropertySetting","_set","setting","tearsheetId","PropertiesStore","combinedReducer","combineReducers","propertiesReducer","controlStatesReducer","panelStatesReducer","errorMessagesReducer","datasetMetadataReducer","rowSelectionsReducer","disableRowMoveButtonsReducer","actionStatesReducer","wideFlyoutPrimaryButtonDisableReducer","tearsheetStatesReducer","saveButtonDisableReducer","propertiesSettingsReducer","rowFreezeReducer","enableDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","subscribe","propValue","getState","getNestedPropertyValue","locState","colId","rowId","_isEqual","getPanelStates","setPanelStates","getActionStates","setActionStates","disablePrimaryButtonForPanel","enumFilter","intl","controlMessage","returnMessage","clonedControlMsg","_getTableCellErrors","rowKey","rowMessage","colKey","colMessage","TABLE_SUMMARY_ERROR","TABLE_SUMMARY_WARNING","setDatasetMetadata","rowSelections","selection","rowStatic","getNestedPropertySetting","tableButtons","setTearsheetState","evaluate","paramsList","defaultParameter","or","and","condition","Error","parameter_2_ref","parseControl","parameterName","columnIndex","parseUiItem","summaryPanelId","CHECKBOX_SELECTOR","locPanelId","_step5","_iterator5","parseConditions","container","uiCondition","conditionType","definition","parameter_refs","uniqueList","Set","parseInput","groupDef","_setDefinitions","refs","group_refs","action_refs","target","j","setExpressionInfo","inExpressionInfo","expressionFunctionInfo","functions","expressionInfo","function_info","function_categories","functionInfoList","parmsSet","functionInfo","newEntry","locLabel","return_type_label","returnTypeLabel","locReturnType","_genFunctionParameters","functionCategories","category","functionList","function_refs","functionId","_getFunctionInfo","operators","operator_refs","field_categories","field_table_info","fieldCat","field_columns","field_column_info","value_column_info","fieldColInfoDesc","descLabel","valueColInfoDesc","additional_column_info","fieldInfo","find","functionElem","panelTree","currentPanel","_newPanelTreeObject","baseUniq","isArrayLikeObject","unionWith_1","arrays","comparator","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","Math","min","_baseIntersection","iteratee","othLength","othIndex","caches","maxLength","Infinity","seen","outer","computed","cache","_castArrayLikeObject","baseIntersection","castArrayLikeObject","intersectionWith_1","mapped","pop","validateInput","validation","fail_message","evaluateData","isValidation","failedErrorMessage","focus_parameter_ref","failedMessage","enum_filter","filteredEnum","allow_change","allowChange","default_value","conditionalDefault","filterDef","evaluateFilter","evaluated","op","param2","options","propertiesConfig","getPropertiesConfig","conditionDisabledPropertyHandling","filterDisabled","conditionHiddenPropertyHandling","filterHidden","param2Info","paramInfo","_getPropertyIdFromParam","getConditionOp","filterItem","conditionItem","conditionItems","inFields","newFields","_unionWith","orFilter","_intersectionWith","andFilter","_toConsumableArray","measurementValues","field","measurementValue","metadata","measure","_handleDmMeasurement","typeValues","typeValue","_handleDmType","roleValues","roleValue","modeling_role","_handleDmModelingRole","returnFields","filterFieldsFromSharedProps","_handleSharedFields","conditionFilter","paramPropertyID","offset","startCol","endCol","parseInt","_getColumnNumber","validatePropertiesValues","showErrors","getControls","controlKey","validatePropertiesListValues","validatePropertiesConditions","newStates","_validateConditionsByType","rowIndex","colIndex","subPropId","validatePropertiesListConditions","_propagateParentPanelStates","PANEL_TREE_ROOT","prevPropertyValues","_getConditionPropertyValues","_comparePropertyValues","validateConditions","_validateInput","runCount","newPropertyValues","updatePropertyIds","_union","prevPropertyValue","newPropertyValue","updateState","refState","propState","newPropState","ENABLED","hideColumn","updateColumnVisibility","getColumnVisibility","toggleColumnVisibility","updateEnumerationState","enumValue","getParamRefPropertyId","paramRef","controlPropertyId","baseParam","injectDefaultValidations","validationDefinitions","requiredDefinitionsIds","keyName","controlValId","seedrandom","rng","_injectRequiredDefinition","_injectDateTimeDefinition","locKeyName","_injectInvalidFieldDefinition","disabledOnly","currentPanelState","allowUpdate","_step6","_iterator6","_step7","_iterator7","_step8","_iterator8","errorSet","validations","getDefinitions","CONDITION_TYPE","VALIDATION","CONDITION_DEFINITION_INDEX","getRequiredDefinitionIds","_step9","output","_iterator9","errorMessage","DEFAULT_VALIDATION_MESSAGE","UiConditions","isError","msgPropertyId","alwaysShow","updateErrorMessage","_validateDefinitionsByType","VISIBLE","FILTEREDENUM","condType","_validateByType","definitions","evalState","_updateControlState","lastDefinition","currentDefinition","currentParameter","_isLastDefintiionForParameter","filtered","enumFilters","_getFilteredEnumItems","enumFilterApplied","filterApplied","_updateFilteredState","stateOn","visibleControl","_updateRefsState","_step10","newOnState","newOffState","notAllowedState","_iterator10","groupReferenceId","currentState","_getState","_updateStateIfParent","_updatePanelChildrenState","_updateGroupRefsControlState","refsList","refsType","_step11","refStates","_iterator11","referenceId","_step12","_iterator12","_updateStateIfPanel","_step13","_iterator13","panelPropertyId","_runRefsValidateDefinitions","_step14","_iterator14","_updatePanelChildrenObjectState","_step15","_iterator15","objectId","objectStates","dfnType","refsDefinitions","REFS","panelName","prevValue","previousValues","filterValues","valDefinitions","definitionId","injectedDefinition","default","REQUIRED_ERROR","format","defaultFormat","DEFAULT_DATE_FORMAT","DEFAULT_TIME_FORMAT","dtFormat","DATETIME_FORMAT_ERROR","INVALID_FIELD_ERROR","getMetadataFieldMatch","field2","origName","field_name","schema","link_ref","intersection_1","ValidationMessage","tableOnly","msgText","msgIcon","ReadonlyControl","updateValueFromFilterEnum","prevProps","controlOpts","skipValidateInput","newValue","_intersection","updatePropertyValue","controlIndex","stringifyFieldValue","getCustomControl","table","DATA_TYPE","date","Date","isValid","tableControl","FormattedDate","day","month","year","hour","minute","weekday","readOnly","TruncatedContentTooltip","tooltipText","controlItem","getControlState","getFilteredEnumItems","TextfieldControl","reactIntl","getMaxLengthForSingleLineControls","joined","textInput","TRUNCATE_LONG_STRING_ERROR","truncate_limit","TextInput","autoComplete","placeholder","onChange","handleChange","labelText","hideLabel","ToggletextControl","valuesMap","iconsMap","imgSource","Isvg","alt","rendered","buttonType","iconDescription","TOGGLETEXT_ICON_DESCRIPTION","toggletext_label","TextareaControl","getMaxLengthForMultiLineControls","textArea","showValidationMessage","TextArea","NumberfieldControl","onDirection","generateNumber","originalValue","decimalsInOriginalValue","decimalsInIncrement","numValue","decimalPrecision","toFixed","validity","badInput","isFinite","INVALID_NUMBER_ERROR","actualValue","generator","max","floor","random","Shuffle16","tooltipPosition","tooltipAlignment","hasIconOnly","NumberInput","numberInput","allowEmpty","hideSteppers","toNumber","INFINITY","toFinite","toInteger_1","remainder","baseFindIndex","baseIteratee","toInteger","nativeMax","findIndex_1","fromIndex","TableButtons","getCustomButtonEnabled","customButtonIconCallback","customButtonOnClick","convertToolbarConfig","tableState","buttonConfig","tableDisabled","buttonEnabled","customButtonsState","buttonIconHandler","appIcon","buttonHandler","toolbarConfig","enable","iconEnabled","incLabelWithIcon","leftBar","customButtons","Toolbar","config","instanceId","toolbarActionHandler","SubPanelCell","initialControlValue","subPanelToolTip","SUBPANEL_BUTTON_TOOLTIP","Settings16","AbstractTable","filterText","enableRemoveIcon","onPanelContainer","allowColumnControls","isReadonlyTable","indexOfColumn","setCurrentControlValueSelected","setReadOnlyColumnValue","removeSelected","updateRowSelections","handleRowClick","createTable","onFilter","onSort","setScrollToRow","includeInFilter","makeAddRemoveButtonPanel","makeEditButtonPanel","makeCustomButtonsPanel","buildChildItem","makeCells","checkedAll","isLightTheme","scrollToRow","selectSummaryPropertyName","saveControls","setSelectedSummaryRowValue","updatedControlValues","UPDATE_TYPE","INITIAL_LOAD","isSelectSummaryEdit","updateSelectedRowsValues","removePropertyValue","filterString","spec","column","SORT_DIRECTION","DESC","reverse","colValue","inSelectedRows","idx2","controlValues","columnDef","summaryPropertyId","getDefaultRow","selectedSummaryRowValue","ROW_SELECTION","MULTIPLE","READONLYTABLE","_findIndex","columnControl","SINGLE","metaKey","ctrlKey","splice","shiftKey","anchor","newSelns","newSelectedSummaryRow","cellValue","testCell","updateSelectedRows","sort","a","b","removeErrorMessageRow","propertyName","selectSummaryRow","childPropertyId","setChildPropertyId","cellContent","tableInfo","columnDefObj","cellClassName","getDatasetMetadataFields","stringValue","ON_PANEL","createControl","defaultContent","cellPropertyId","filterFields","hasFilter","addOnClickCallback","onFieldPickerCloseCallback","rowsSelectedLabel","MULTI_SELECTED_ROW_LABEL","rowsSelectedAction","MULTI_SELECTED_ROW_ACTION","headers","makeHeader","tableLabel","FlexibleTable","showHeader","scrollKey","summaryTable","emptyTablePlaceholder","tableButtonConfig","fieldPickerCloseFunction","removeOnClick","removeButtonFunction","removeButtonLabel","STRUCTURETABLE_REMOVEBUTTON_LABEL","removeDisabled","addButtonDisabled","addButtonFunction","addButtonLabel","STRUCTURETABLE_ADDBUTTON_LABEL","TrashCan16","addOnClick","editButton","editCallback","editOnClickCallback","editOnClick","Edit16","customTableButtons","checked","sortFields","rowToScrollTo","selectedEditRow","makeSelectedEditRow","topRightPanel","rowClickCallback","checkboxName","colState","columnLabel","Checkbox","checkedAllValue","TABLE_SUBPANEL_BUTTON_WIDTH","staticWidth","propName","_makeCell","cell","subItemButton","buildUIItem","subCell","prevState","EmptyTable","getEmptyTableText","overrideEmptyTableTextKey","defaultEmptyTableText","PROPERTIES_EMPTY_TABLE_TEXT","button_label","emptyTableButtonLabel","getResource","emptyTableText","emptyTableButtonClickHandler","MoveableTableRows","getTableRowMoveImages","topMoveRow","upMoveRow","downMoveRow","bottomMoveRow","getMoveableTableRows","getLeastValue","getMaxValue","moveCol","moveImages","tableContainer","getSelectedRows","topEnabled","bottomEnabled","getStaticRows","topLabel","MOVEABLE_TABLE_BUTTON_TOP_DESCRIPTION","upLabel","MOVEABLE_TABLE_BUTTON_UP_DESCRIPTION","topImages","UpToTop24","ArrowUp24","bottomLabel","MOVEABLE_TABLE_BUTTON_DOWN_DESCRIPTION","downLabel","MOVEABLE_TABLE_BUTTON_BOTTOM_DESCRIPTION","ArrowDown24","DownToBottom24","leastValue","maxValue","firstRow","selectedRow","shift","tmpRow","moveErrorMessageRows","lastRow","isEmptyTable","isDisableRowMoveButtons","getAddRemoveRows","getTableButtons","NUMBER_TYPES","ListControl","_AbstractTable","addRow","controlPropType","getControlPropType","newRow","currentValue","listHeader","tableHeaders","makeCell","onClickCallback","LIST_TABLE_LABEL","STRUCTURELISTEDITOR_ADDBUTTON_LABEL","STRUCTURELISTEDITOR_REMOVEBUTTON_LABEL","makeRows","propTypes","PropTypes","isRequired","element","string","bool","FIELDS_SPECIAL_CHARACTERS_REGEX","ExpressionSelectFieldOrFunction","valueColumn","EXPRESSION_VALUE_COLUMN","valueColumnDesc","EXPRESSION_VALUE_COLUMN_DESCRIPTION","recentUseCat","EXPRESSION_RECENTLY_USED","recentUseCatInfo","EXPRESSION_RECENTLY_USED_COLUMN","inCategories","_makeDatasetFields","getExpressionInfo","fieldSelected","valueSelected","functionSelected","fieldTableSortSpec","valuesTableSortSpec","functionTableSortSpec","functionCategory","selectedIndex","fieldCategory","currentFieldDataset","field_value_groups","onFunctionCatChange","onFieldCatChange","onFieldFilter","onValueFilter","onFunctionFilter","onFieldTableClick","onFieldTableDblClick","onFunctionTableClick","onFunctionTableDblClick","onValueTableClick","onValueTableDblClick","sortTableRows","shouldQuoteField","switchName","selectedItem","currentData","getExpressionFieldsRecentlyUsed","updateExpressionFieldsRecentlyUsed","quote","fieldFilterText","fieldValue","minValue","valueFilterText","getExpressionRecentlyUsed","updateExpressionRecentlyUsed","functionFilterText","tableColumns","sortedData","match","expressionTableCellContent","expressionTableCellContentWithTooltip","dataset","fieldDataset","catIndex","infoIndex","fieldColumn","EXPRESSION_FIELD_COLUMN","fieldColumnDesc","EXPRESSION_FIELD_COLUMN_DESCRIPTION","storageColumn","EXPRESSION_STORAGE_COLUMN","fieldsCatInfo","EXPRESSION_FIELDS_DROPDOWN_TITLE","fieldsTableInfo","entry","additional_column_entries","val","_makeFieldDropdown","fieldHeaders","valueHeader","categoryInfo","tableContents","tableData","valuesTableData","fieldColumns","createContentObject","_makeAdditionalColumnsContent","_makeValuesContent","selectedField","findIndex","selectedValue","fieldsTableLabel","EXPRESSION_FIELDS_TABLE_LABEL","valuesTableLabel","EXPRESSION_VALUES_TABLE_LABEL","emptyFieldsLabel","EXPRESSION_FIELDS_EMPTY_TABLE_LABEL","emptyValuesLabel","EXPRESSION_VALUES_EMPTY_TABLE_LABEL","EXPRESSION_TABLE_ROWS","onRowDoubleClick","setSortColumn","minLabel","EXPRESSION_MIN_LABEL","maxLabel","EXPRESSION_MAX_LABEL","_addValueRow","valueColumns","categories","selectCategory","_makeFunctionDropdown","functionsTable","_makeFunctionsTable","items","first","TABLE_SEARCH_HEADER","listBoxMenuIconTranslationIds","DROPDOWN_TOOLTIP_CLOSEMENU","DROPDOWN_TOOLTIP_OPENMENU","Dropdown","translateWithId","titleText","newItems","_this4","functionColumn","EXPRESSION_FUNCTION_COLUMN","returnColumn","EXPRESSION_RETURN_COLUMN","_buildFunctionTable","selectedFunction","functionsTableLabel","EXPRESSION_FUNCTIONS_TABLE_LABEL","functionsEmptyLabel","EXPRESSION_NO_FUNCTIONS","helpContainer","categoryFunctions","catFunction","returnType","return_type","fieldAndValueTable","_makeFieldAndValuesContent","_makeFunctionsContent","fieldsTab","EXPRESSION_FIELD_TAB","functionsTab","EXPRESSION_FUNCTIONS_TAB","ContentSwitcher","onSwitch","Switch","ExpressionSelectOperator","operatorList","operatorButtons","operator","second","onOperatorClick","operatorDiv","_makeOperatorContent","ExpressionSelectionPanel","fieldsOrFunction","ExpressionBuilder","editorDidMount","onBlur","onSelectionChange","lastCursorPos","cursor","editor","getCursor","selectionOffset","somethingSelected","replaceSelection","buffer","setCursor","charBefore","getLine","line","ch","_setSelection","exprValue","getValue","skipValidate","expressionSelectionPanel","contains","relatedTarget","firstParam","head","lineCount","paramOffset","insertSelection","expressionLabel","EXPRESSION_BUILDER_LABEL","ExpressionControl","builder","selectionRange","CodeMirror","ExpressionToggle","Maximize16","EXPRESSION_MAXIMIZE_LABEL","tearsheet_ref","setActiveTearsheet","Minimize16","EXPRESSION_MINIMIZE_LABEL","injectIntl","scriptHint","_keywords","getToken","context","cur","token","tprop","completionList","found","maybeAdd","str","lastIndexOf","arrayContains","gatherCompletions","_obj","pythonBuiltinsL","pythonKeywordsL","obj","base","getCompletions","Pos","to","pythonHint","getTokenAt","rBuiltInsL","rKeywordsL","rHint","CLEMKeywords","CLEMHint","keywords","innerMode","getMode","getAutoCompletions","indx","defineMode","isSpecialChar","isDigit","isNumberChar","isWordChar","isOperatorChar","tokenResolve","stream","startOfLine","skipToEnd","tokenize","tokenString","tokenVariable","eatWhile","current","startState","eatSpace","electricChars","cm","navigator","require","registerHelper","registerPython","registerR","defineMIME","registerClem","showExpressionBuilder","validationInProgress","origHint","handleValidate","hasValidate","cancelExpressionBuilder","hideExpressionBuilder","addonHints","getDatasetFields","handleBlur","handleKeyDown","newPos","removed","validateIcon","setSelection","focus","results","controlWidth","expressionEditorDiv","clientWidth","charPerLine","setSize","getHelper","initialMessage","initialState","updateControlState","validationHandler","response","input","blur","code","classList","messageType","INFO","SUCCESS","theme","_showBuilderButton","Calculator24","EXPRESSION_BUILDER_ICON_DESCRIPTION","validateLabel","EXPRESSION_VALIDATING_LABEL","EXPRESSION_VALIDATE_LABEL","validateLink","mirrorOptions","mode","extraKeys","autoRefresh","lineNumbers","expressonTitle","EXPRESSION_BUILDER_TITLE","expressionLink","toggleMaxMin","isTearsheetOpen","codeMirror","onKeyDown","PasswordControl","overrideShowPasswordLabel","overrideHidePasswordLabel","defaultShowPasswordLabel","SHOW_PASSWORD_TOOLTIP","defaultHidePasswordLabel","HIDE_PASSWORD_TOOLTIP","showPasswordLabel","hidePasswordLabel","PasswordInput","DatefieldControl","getDateFormat","parse","formattedValue","TimefieldControl","getTimeFormat","time","CheckboxControl","tooltipIcon","checkboxLabel","Boolean","ToggleControl","overrideLabelKeyOn","overrideLabelKeyOff","defaultOnEditLabel","TOGGLE_ON_LABEL","defaultOffEditLabel","TOGGLE_OFF_LABEL","labelOn","labelOff","toggleControl","Toggle","toggled","labelB","labelA","onToggle","CheckboxsetControl","checkboxes","Information16","RadiosetControl","setEnabledStateOfOptionalPanels","handleCheckedDisabled","isRadioButtonDisabled","targetValue","valueSet","parsePanelTree","ConditionsUtils","panelIds","updateType","oldVal","newVal","convertTargetValue","radioValue","valueStates","itemDisabled","newRadioSelection","optionalPanel","getOptionalPanel","RadioButton","horizontal","getControlValueStates","DropDown","emptyLabel","disableEmptyListDropdown","overrideEmptyListPlaceholder","defaultEmptyListPlaceholder","EMPTY_LIST_PLACEHOLDER","handleComboOnChange","handleOnInputChange","genSchemaSelectOptions","genSelectOptions","genFieldSelectOptions","selectedOption","option","schemaName","getSelectedOption","dropDown","SELECTSCHEMA","dropdownComponent","SelectItem","Select","inline","ComboBox","ariaLabel","onInputChange","getDatasetMetadataSchemas","MultiSelectControl","handleOnChange","setShouldRender","shouldRender","selectedValues","selectedOptions","selectedItems","multiSelectDropdown","DROPDOWN_TOOLTIP_CLEARALL","DROPDOWN_TOOLTIP_CLEARSELECTION","overrideEmptyLabelKey","defaultEmptyLabel","MULTISELECT_DROPDOWN_EMPTY_LABEL","overrideOptionsSelectedLabelKey","defaultOptionsSelectedLabel","MULTISELECT_DROPDOWN_OPTIONS_SELECTED_LABEL","FilterableMultiSelect","initialSelectedItems","MultiSelect","SomeofselectControl","updateSelections","tableOptions","selectable","SelectColumnsControl","allSelectedFields","FIELDPICKER_FIELDCOLUMN_LABEL","onFieldPickerClose","StructureEditorControl","controlFactory","subCtrlName","rowCtrlNames","_getSubControlDef","_getColumnIndex","_makeRow","_makeControlTable","baseEach","_baseFilter","collection","negate_1","args","arrayFilter","baseFilter","negate","reject_1","StructureTableControl","addColumns","removeColumns","indexOfRow","columnName","columnNames","newRows","_reject","dataColumnIndex","NEW_COLUMN","defaultRowIndex","defaultRowValue","newControlValues","getOnPanelContainer","StructurelisteditorControl","ReadonlyTableControl","overrideLabelKey","defaultEditLabel","READONLYTABLE_EDIT_BUTTON_LABEL","getHideEditButton","ControlItem","indicator","LABEL_INDICATOR_REQUIRED","LABEL_INDICATOR_OPTIONAL","accessibleControls","SPINNER","TOGGLETEXT","LIST","TOGGLE","CODE","MULTISELECT","tableControls","createdControl","complex_types","dataModelFields","columnExists","fieldValueMatchesProto","fieldColumnValues","_findFieldColumnValues","columnValue","allValid","valueInDataset","dataModelField","baseValues","values_1","baseIndexOf","isString","dataType","_includes","trimSpaces","regExp","timeDateFormat","valueLength","compareValue","getConditionOps","customOps","ops","cellNotEmpty","colNotExists","colDoesExists","equals","greaterThan","isEmpty","isNotEmpty","lessThan","matches","notContains","notEquals","notMatches","isDateTime","dmTypeEquals","dmTypeNotEquals","dmMeasurementEquals","dmMeasurementNotEquals","dmRoleEquals","dmRoleNotEquals","lengthEquals","lengthLessThan","lengthGreaterThan","custOp","PropertiesController","propertiesStore","handlers","propertyListener","controllerHandler","titleChangeHandler","visibleDefinitions","enabledDefinitions","filterDefinitions","filteredEnumDefinitions","allowChangeDefinitions","conditionalDefaultDefinitions","customControls","summaryPanelControls","controllerHandlerCalled","commandStack","CommandStack","custPropSumPanelValues","sharedCtrlInfo","isSummaryPanel","visibleSubPanelCounter","conditionOps","expressionRecentlyUsed","expressionFieldsRecentlyUsed","selectionListeners","getStore","inHandlers","convertTypes","formData","makeForm","setForm","_parseUiConditions","UiConditionsParser","_parseSummaryControls","conditionsUtil","_assign","_addToControlValues","setInitialAddRemoveRows","setInitialTableButtonState","filteredTearsheets","FILTER","ALLOWCHANGE","CONDITIONALDEFAULT","dfnIndex","conditionDefinitions","retCond","conditionKey","baseId","convertNestedPropertyId","childProperties","panelTreeRoot","parseUiContent","resolveParameterRefs","_populateFieldData","multiSchema","_isMultiSchemaControl","_indexOfField","k","_getDefaultSubControlValue","fieldName","controlsNames","controlNames","getTitle","custOps","getDatasetMetadata","schemas","schemaNames","_filterSharedDataset","defs","skipControlName","sharedCtrlList","propNames","fieldNames","skipName","usedFields","sharedProp","arrayValue","fieldIdx","usedFieldsList","inDatasetMetadata","_loop","dupNamedSchemas","filterSchema","multipleSchemas","_canHaveMultipleSchemas","_notifySelectionListener","setDisableRowMoveButtons","getDisableRowMoveButtons","some","el","listener","selections","enumSet","replacementItems","newControl","_loop2","initialValue","allowValidations","convertedValue","_convertObjectStructure","ACTIONS","UPDATE_PROPERTY","propertyValue","filteredValue","filterHiddenControls","controlState","getControlType","valueState","valueType","applyProperties","convert","returnValues","filteredValues","propKey","isInitProps","inValues","currentValues","convertedValues","conditionalDefaultValues","SET_PROPERTIES","updatePanelState","setActiveTearsheetId","getActiveTearsheetId","updateActionState","filterHiddenDisable","filterSuccess","filterDisplayError","_isUndefined","filteredPipeline","_filterDisplayErrors","_filterMessages","requiredMessages","_filterNonRequiredErrors","_filterHiddenDisabledErrors","filteredMessages","pipelineMessages","paramKey","paramMessage","_filterErrors","testMessage","parameterError","clearErrorMessage","_i","_Object$keys","rowNumber","_moveMessageRows","secondRow","firstRowErrorMsg","secondRowErrorMsg","_i2","_Object$keys2","colNumber","fromRow","toRow","valuesObj","valueObj","saveDisable","wideFlyoutPrimaryButtonDisable","setSummaryPanelControls","inSummary","createFormControl","customCtrl","renderControl","maxLengthForMultiLineControls","maxLengthForSingleLineControls","setAddRemoveRows","setHideEditButton","staticRowsArr","validateSelectionValues","updateStaticRows","clearStaticRows","_this5","setTableButtonEnabled","setInitialTableButtonSubControlState","_this6","valueIdx","getTableButtonEnabled","every","validateParameterDefAgainstSchema","parameterDef","validator","SchemaValidator","canvasPrefix","pipelinePrefix","addSchema","parameterDefsV3Schema","uihintsV3Schema","conditionsV3Schema","operatorsV3Schema","dataRecordMetadataV3Schema","getValidator","valResult","validate","nestedErrors","errors","console","validateAgainstSchema","TitleEditor","focused","titleValidation","editTitleClickHandler","helpClickHandler","textInputRef","createRef","TITLE_EDITOR_LABEL","textInputOnFocus","textInputOnBlur","headingEnabled","showHeading","handleTitleChange","newTitle","propertiesTitleEditButtonLabel","helpButtonLabel","TITLE_EDITOR_HELPBUTTON_LABEL","closeButtonLabel","PROPERTIESEDIT_CLOSEBUTTON_LABEL","titleValidationTypes","titleWithWarning","titleWithErrror","propertiesTitleEdit","helpButton","Help16","closeButton","closeHandler","Close16","onKeyPress","_handleKeyPress","onFocus","FLYOUT_WIDTH_SMALL","styles","flyoutWidthSmall","FLYOUT_WIDTH_MEDIUM","flyoutWidthMedium","FLYOUT_WIDTH_LARGE","flyoutWidthLarge","FLYOUT_WIDTH_MAX","flyoutWidthMax","PropertiesMain","propertiesController","setPropertiesConfig","propertiesInfo","initialEditorSize","setEditorSize","setCustomControls","setConditionOps","customConditionOps","setLight","setAppData","setHandlers","callbacks","previousErrorMessages","PROPERTIES_LOADED","getEditorSize","applyPropertiesEditing","updateEditorSize","_getOverrideSize","_getResizeButton","_isResizeButtonRequired","setPropertiesHasMounted","newProps","newEditorSize","schemaValidation","inputDataModel","originalTitle","initialValueInfo","uiParameterKeys","_getUiOnlyKeys","_setValueInforProperties","buttonLabels","primary","PROPERTIESEDIT_APPLYBUTTON_LABEL","secondary","PROPERTIESEDIT_REJECTBUTTON_LABEL","propertiesActionLabelHandler","PROPERTIES_ACTION_LABEL","node_label","defaultEditorSize","editorSizeInForm","overrideSize","resizeButton","LEFT","RIGHT","enableResize","valueInfo","conditionReturnValueHandling","CONDITION_RETURN_VALUE_HANDLING","NULL","_omit","_pick","uiOnlyKeys","cancelSource","closePropertiesDialog","closeProperties","newErrorMessages","applyPropertiesWithoutEdit","errorMessages","getPropertiesActionLabel","command","getCommandStack","APPLY","applyOnBlurEnabled","CANCEL","getApplyButtonLabel","getRejectButtonLabel","propertiesTitle","buttonsContainer","resizeBtn","hasHeading","resizeIcon","resizeBtnLabel","PROPERTIESEDIT_RESIZEBUTTON_EXPAND_LABEL","PROPERTIESEDIT_RESIZEBUTTON_CONTRACT_LABEL","resize","editorForm","onHide","overrideStyle","Provider","PROPERTIES_LABEL","forwardRef","CommonProperties","hasError","createPropertiesMainComponent","revertState","propertiesMainHasMounted","closeEditor","instance","closeAndRevertContainer","errorInfo","PROPERTIES_UNEXPECTED_MESSAGE","errorHeading","supportMessage","PROPERTIES_SUPPORT_MESSAGE","closeText","closeFunction","revertText","PROPERTIESEDIT_REVERTBUTTON_LABEL","revertFunction","propertiesLandmarkRoleLabel","PROPERTIES_REVERT_MESSAGE","PROPERTIES_CLOSE_MESSAGE","displayAppropriateUIFallback"],"mappings":"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"}