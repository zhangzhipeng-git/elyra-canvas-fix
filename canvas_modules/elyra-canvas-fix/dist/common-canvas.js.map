{"version":3,"file":"common-canvas.js","sources":["../src/flow-validation/validate-flow.js"],"sourcesContent":["/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Form from \"../common-properties/form/Form\";\nimport { convertInputDataModel } from \"../common-properties/util/property-utils\";\nimport PropertiesController from \"../common-properties/properties-controller\";\nimport logger from \"../../utils/logger\";\nimport { isEqual } from \"lodash\";\n\n/* eslint max-depth: [\"error\", 7] */\n\n/**\n* @deprecated Validation should be done on the backend and not through the UI for an entire flow.\n* Validate the properties values for each node in a flow.\n*\n* @param canvasController A common canvas controller object. (required)\n* @param {Function} callback function to get form | parameter data for a node. (required)\n* @param {Function} callback function to store messages data for node. (optional)\n* @param includeMsgTypes (array[strings]) Return invalid only if messages are found of types contained in the array.\n* If not specified then any message type causes invalid return. (optional)\n* @param intl reactIntl object (optional)\n*\n* @return (boolean) If flow is valid returns true, otherwise returns false.\n*/\nfunction validateFlow(canvasController, getParameterData, setMessagesCallback, includeMsgTypes, intl) {\n\treturn validatePipelineFlow(canvasController, canvasController.getPrimaryPipelineId(), getParameterData, setMessagesCallback, includeMsgTypes, intl);\n}\nfunction validatePipelineFlow(canvasController, pipelineId, getParameterData, setMessagesCallback, includeMsgTypes, intl) {\n\tlet flowValid = true;\n\t// get the nodes in the flow\n\tconst nodes = canvasController.getNodes(pipelineId);\n\t// traverse the flow\n\t// this will just visit all the nodes and not traverse it via DAG\n\tfor (const node of nodes) {\n\t\tif (node.type === \"super_node\" &&\n\t\t(typeof node.open_with_tool === \"undefined\" || node.open_with_tool === \"canvas\")) {\n\t\t\tflowValid = validatePipelineFlow(canvasController, node.subflow_ref.pipeline_id_ref,\n\t\t\t\tgetParameterData, setMessagesCallback, includeMsgTypes, intl);\n\t\t} else if (node.type === \"execution_node\" || node.type === \"binding\") {\n\t\t\tconst formData = _getFormData(node.id, pipelineId, getParameterData, canvasController);\n\t\t\tconst propertiesController = _getPropertiesController(formData, intl);\n\t\t\tpropertiesController.validatePropertiesValues();\n\t\t\t_setNodeMessages(node, pipelineId, propertiesController, canvasController, setMessagesCallback);\n\t\t}\n\t}\n\treturn canvasController.isFlowValid(includeMsgTypes, pipelineId) && flowValid;\n}\n\n/**\n* Get the form data and add it to the cache\n* @param {String} node id\n* @param {Function} callback function to get form | parameter data for a node\n*/\nfunction _getFormData(nodeId, pipelineId, getParameterData, canvasController) {\n\tvar formData = {};\n\tvar parameterData = getParameterData(nodeId, pipelineId, canvasController);\n\tif (parameterData) {\n\t\tif (parameterData.type === \"parameterDef\") {\n\t\t\tformData = Form.makeForm(parameterData.data);\n\t\t} else {\n\t\t\tformData = parameterData.data.formData;\n\t\t}\n\t\t// TODO: This can be removed once the WML Play service generates datasetMetadata instead of inputDataModel\n\t\tif (formData && formData.data && formData.data.inputDataModel && !formData.data.datasetMetadata) {\n\t\t\tformData.data.datasetMetadata = convertInputDataModel(formData.data.inputDataModel);\n\t\t}\n\t} else {\n\t\tlogger.warn(\"flow-validation\", { message: \"No parameter def found for node \" + nodeId });\n\t}\n\treturn formData;\n}\n\nfunction _getPropertiesController(formData, intl) {\n\tconst propertiesController = new PropertiesController();\n\tpropertiesController.setForm(formData, intl);\n\treturn propertiesController;\n}\n\nfunction _setNodeMessages(node, pipelineId, propertiesController, canvasController, setMessagesCallback) {\n\tconst nodeMsgs = canvasController.getNodeMessages(node.id, pipelineId);\n\tconst errorMsgs = propertiesController.getErrorMessages(true, true, true);\n\tif ((!nodeMsgs && errorMsgs.length > 0) ||\n\t\t\t(nodeMsgs && !isEqual(errorMsgs, nodeMsgs))) {\n\t\tcanvasController.setNodeMessages(node.id, errorMsgs, pipelineId);\n\t\tif (setMessagesCallback) {\n\t\t\tsetMessagesCallback(node.id, errorMsgs);\n\t\t}\n\t}\n}\n\nexport { validateFlow };\n"],"names":["validatePipelineFlow","canvasController","pipelineId","getParameterData","setMessagesCallback","includeMsgTypes","intl","_step","flowValid","_iterator","_createForOfIteratorHelper","getNodes","s","n","done","node","value","type","open_with_tool","propertiesController","_getPropertiesController","_getFormData","id","validatePropertiesValues","_setNodeMessages","subflow_ref","pipeline_id_ref","err","e","f","isFlowValid","nodeId","formData","parameterData","Form","makeForm","data","inputDataModel","datasetMetadata","convertInputDataModel","logger","warn","message","PropertiesController","setForm","nodeMsgs","getNodeMessages","errorMsgs","getErrorMessages","length","_isEqual","setNodeMessages","getPrimaryPipelineId"],"mappings":"+4CAuCA,SAASA,EAAqBC,EAAkBC,EAAYC,EAAkBC,EAAqBC,EAAiBC,GACnH,IAKwBC,EALpBC,GAAY,EAIhBC,EAAAC,EAFcT,EAAiBU,SAAST,IAGhB,IAAxB,IAAAO,EAAAG,MAAAL,EAAAE,EAAAI,KAAAC,MAA0B,CAAA,IAAfC,EAAIR,EAAAS,MACd,GAAkB,eAAdD,EAAKE,WACuB,IAAxBF,EAAKG,gBAA0D,WAAxBH,EAAKG,gBAG7C,GAAkB,mBAAdH,EAAKE,MAA2C,YAAdF,EAAKE,KAAoB,CACrE,IACME,EAAuBC,EADZC,EAAaN,EAAKO,GAAIpB,EAAYC,EAAkBF,GACLK,GAChEa,EAAqBI,2BACrBC,EAAiBT,EAAMb,EAAYiB,EAAsBlB,EAAkBG,SAN3EI,EAAYR,EAAqBC,EAAkBc,EAAKU,YAAYC,gBACnEvB,EAAkBC,EAAqBC,EAAiBC,UAO1DqB,GAAAlB,EAAAmB,EAAAD,WAAAlB,EAAAoB,IACD,OAAO5B,EAAiB6B,YAAYzB,EAAiBH,IAAeM,CACrE,CAOA,SAASa,EAAaU,EAAQ7B,EAAYC,EAAkBF,GAC3D,IAAI+B,EAAW,GACXC,EAAgB9B,EAAiB4B,EAAQ7B,EAAYD,GAczD,OAbIgC,GAEFD,EAD0B,iBAAvBC,EAAchB,KACNiB,OAAKC,SAASF,EAAcG,MAE5BH,EAAcG,KAAKJ,WAGfA,EAASI,MAAQJ,EAASI,KAAKC,iBAAmBL,EAASI,KAAKE,kBAC/EN,EAASI,KAAKE,gBAAkBC,wBAAsBP,EAASI,KAAKC,iBAGrEG,SAAOC,KAAK,kBAAmB,CAAEC,QAAS,mCAAqCX,IAEzEC,CACR,CAEA,SAASZ,EAAyBY,EAAU1B,GAC3C,IAAMa,EAAuB,IAAIwB,uBAEjC,OADAxB,EAAqByB,QAAQZ,EAAU1B,GAChCa,CACR,CAEA,SAASK,EAAiBT,EAAMb,EAAYiB,EAAsBlB,EAAkBG,GACnF,IAAMyC,EAAW5C,EAAiB6C,gBAAgB/B,EAAKO,GAAIpB,GACrD6C,EAAY5B,EAAqB6B,kBAAiB,GAAM,GAAM,KAC9DH,GAAYE,EAAUE,OAAS,GAClCJ,IAAaK,YAAQH,EAAWF,MAClC5C,EAAiBkD,gBAAgBpC,EAAKO,GAAIyB,EAAW7C,GACjDE,GACHA,EAAoBW,EAAKO,GAAIyB,GAGhC,69BAhEA,SAAsB9C,EAAkBE,EAAkBC,EAAqBC,EAAiBC,GAC/F,OAAON,EAAqBC,EAAkBA,EAAiBmD,uBAAwBjD,EAAkBC,EAAqBC,EAAiBC,EAChJ"}