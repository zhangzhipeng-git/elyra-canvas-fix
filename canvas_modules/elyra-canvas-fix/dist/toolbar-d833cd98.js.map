{"version":3,"file":"toolbar-d833cd98.js","sources":["../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/toNumber.js","../src/toolbar/toolbar-action-item.jsx","../assets/images/zoom_to_fit.svg","../assets/images/arrange_horizontally.svg","../assets/images/arrange_vertically.svg","../assets/images/palette/palette_open.svg","../assets/images/palette/palette_close.svg","../assets/images/notification_counter_icon.svg","../src/toolbar/toolbar-overflow-item.jsx","../src/toolbar/toolbar-divider-item.jsx","../src/toolbar/toolbar.jsx"],"sourcesContent":["/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Tooltip from \"../tooltip/tooltip.jsx\";\nimport ArrangeHorizontally from \"./../../assets/images/arrange_horizontally.svg\";\nimport ArrangeVertically from \"./../../assets/images/arrange_vertically.svg\";\nimport ToggleNotificationPanel from \"./../../assets/images/notification_counter_icon.svg\";\nimport PaletteClose from \"./../../assets/images/palette/palette_close.svg\";\nimport PaletteOpen from \"./../../assets/images/palette/palette_open.svg\";\nimport ZoomToFit from \"./../../assets/images/zoom_to_fit.svg\";\n\nimport { Button } from \"carbon-components-react\";\nimport SVG from \"react-inlinesvg\";\nimport classNames from \"classnames\";\nimport { StopFilledAlt16, Play16, Undo16, Redo16, Cut16, Copy16, Paste16,\n\tAddComment16, TrashCan16, ZoomIn16, ZoomOut16 } from \"@carbon/icons-react\";\nimport { TOOLBAR_STOP, TOOLBAR_RUN, TOOLBAR_UNDO, TOOLBAR_REDO, TOOLBAR_CUT,\n\tTOOLBAR_COPY, TOOLBAR_PASTE, TOOLBAR_CREATE_AUTO_COMMENT,\n\tTOOLBAR_DELETE_SELECTED_OBJECTS, TOOLBAR_ZOOM_IN, TOOLBAR_ZOOM_OUT, TOOLBAR_ZOOM_FIT,\n\tTOOLBAR_ARRANGE_HORIZONALLY, TOOLBAR_ARRANGE_VERTICALLY, TOOLBAR_OPEN_PALETTE,\n\tTOOLBAR_CLOSE_PALETTE, TOOLBAR_TOGGLE_NOTIFICATION_PANEL }\n\tfrom \"../common-canvas/constants/canvas-constants.js\";\n\nclass ToolbarActionItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.actionClickHandler = this.actionClickHandler.bind(this);\n\t}\n\n\t// Returns a default icon, if there is one, for the action passed in. The\n\t// icon may be overridden by the iconTypeOverride field if it is provided.\n\t// It also may be set to disabled state.\n\tgetDefaultIcon(actionObj) {\n\t\tconst iconType = actionObj.iconTypeOverride ? actionObj.iconTypeOverride : actionObj.action;\n\t\tconst disabled = !actionObj.enable;\n\n\t\tswitch (iconType) {\n\t\tcase (TOOLBAR_STOP):\n\t\t\treturn <StopFilledAlt16 disabled={disabled} />;\n\t\tcase (TOOLBAR_RUN):\n\t\t\treturn <Play16 disabled={disabled} />;\n\t\tcase (TOOLBAR_UNDO):\n\t\t\treturn <Undo16 disabled={disabled} />;\n\t\tcase (TOOLBAR_REDO):\n\t\t\treturn <Redo16 disabled={disabled} />;\n\t\tcase (TOOLBAR_CUT):\n\t\t\treturn <Cut16 disabled={disabled} />;\n\t\tcase (TOOLBAR_COPY):\n\t\t\treturn <Copy16 disabled={disabled} />;\n\t\tcase (TOOLBAR_PASTE):\n\t\t\treturn <Paste16 disabled={disabled} />;\n\t\tcase (TOOLBAR_CREATE_AUTO_COMMENT):\n\t\t\treturn <AddComment16 disabled={disabled} />;\n\t\tcase (TOOLBAR_DELETE_SELECTED_OBJECTS):\n\t\t\treturn <TrashCan16 disabled={disabled} />;\n\t\tcase (TOOLBAR_ZOOM_IN):\n\t\t\treturn <ZoomIn16 disabled={disabled} />;\n\t\tcase (TOOLBAR_ZOOM_OUT):\n\t\t\treturn <ZoomOut16 disabled={disabled} />;\n\n\t\tcase (TOOLBAR_ZOOM_FIT):\n\t\t\treturn <SVG src={ZoomToFit} disabled={disabled} />;\n\t\tcase (TOOLBAR_ARRANGE_HORIZONALLY):\n\t\t\treturn <SVG src={ArrangeHorizontally} disabled={disabled} />;\n\t\tcase (TOOLBAR_ARRANGE_VERTICALLY):\n\t\t\treturn <SVG src={ArrangeVertically} disabled={disabled} />;\n\t\tcase (TOOLBAR_OPEN_PALETTE):\n\t\t\treturn <SVG src={PaletteOpen} disabled={disabled} />;\n\t\tcase (TOOLBAR_CLOSE_PALETTE):\n\t\t\treturn <SVG src={PaletteClose} disabled={disabled} />;\n\t\tcase (TOOLBAR_TOGGLE_NOTIFICATION_PANEL):\n\t\t\treturn <SVG src={ToggleNotificationPanel} disabled={disabled} />;\n\n\t\tdefault:\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgenerateLabel(label, disable, overflow, incLabelWithIcon) {\n\t\tlet className = \"toolbar-icon-label\";\n\t\tclassName += this.generateLabelType(overflow, incLabelWithIcon);\n\t\tclassName += disable ? \" disabled\" : \"\";\n\t\treturn (<div className={className}>{label}</div>);\n\t}\n\n\tgenerateLabelType(overflow, inLabelWithIcon) {\n\t\tif (overflow) {\n\t\t\treturn \" overflow\";\n\t\t} else if (inLabelWithIcon === \"before\") {\n\t\t\treturn \" before\";\n\t\t} else if (inLabelWithIcon === \"after\") {\n\t\t\treturn \" after\";\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tgenerateIcon(actionObj) {\n\t\tlet icon = this.getDefaultIcon(actionObj);\n\n\t\t// Host application provided icon. This will override any default icon.\n\t\tif (actionObj.iconEnabled) {\n\t\t\tconst iconEnabled = actionObj.iconEnabled;\n\t\t\tconst iconDisabled = actionObj.iconDisabled || actionObj.iconEnabled;\n\t\t\tconst customIcon = actionObj.enable ? iconEnabled : iconDisabled;\n\t\t\tconst id = \"toolbar-icon-\" + this.props.instanceId + \" -\" + actionObj.action;\n\n\t\t\tif (typeof customIcon === \"string\") {\n\t\t\t\ticon = (<SVG id={id} src={customIcon} disabled={!actionObj.enable} />);\n\t\t\t} else {\n\t\t\t\ticon = customIcon;\n\t\t\t}\n\t\t}\n\n\t\tif (icon) {\n\t\t\treturn (\n\t\t\t\t<div className={\"toolbar-icon\"}>\n\t\t\t\t\t{icon}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\tactionClickHandler(evt) {\n\t\tthis.props.toolbarActionHandler(this.props.actionObj.action, evt);\n\t}\n\n\tgenerateButton(actionObj) {\n\t\tlet labelBefore = null;\n\t\tlet labelAfter = null;\n\n\t\tif (this.props.overflow) {\n\t\t\tlabelAfter = this.generateLabel(actionObj.label, !actionObj.enable, true);\n\n\t\t} else if (actionObj.incLabelWithIcon === \"before\") {\n\t\t\tlabelBefore = this.generateLabel(actionObj.label, !actionObj.enable, false, actionObj.incLabelWithIcon);\n\n\t\t} else if (actionObj.incLabelWithIcon === \"after\") {\n\t\t\tlabelAfter = this.generateLabel(actionObj.label, !actionObj.enable, false, actionObj.incLabelWithIcon);\n\t\t}\n\n\t\tconst icon = this.generateIcon(actionObj);\n\t\tconst textContent = actionObj.textContent ? (<div className=\"toolbar-text-content\"> {actionObj.textContent} </div>) : null;\n\n\t\tconst itemContentClassName = classNames(\n\t\t\t\"toolbar-item-content\",\n\t\t\tactionObj.className ? actionObj.className : null,\n\t\t\t{ \"overflow\": this.props.overflow, \"disabled\": !actionObj.enable, \"default\": !actionObj.kind });\n\n\t\t// If no 'kind' is set, use ghost and then override colors using the \"default\" class in innerDivClassName.\n\t\tconst kind = actionObj.kind || \"ghost\";\n\n\t\tlet buttonContent = (\n\t\t\t<div className={itemContentClassName}>\n\t\t\t\t{labelBefore}\n\t\t\t\t{icon}\n\t\t\t\t{labelAfter}\n\t\t\t\t{textContent}\n\t\t\t</div>\n\t\t);\n\n\t\tbuttonContent = this.wrapInTooltip(buttonContent);\n\n\t\t// Only specify an aria label for the button if a label is not displayed\n\t\t// with the button icon.\n\t\tconst ariaLabel = actionObj.incLabelWithIcon ? null : actionObj.label;\n\n\t\tbuttonContent = (\n\t\t\t<Button kind={kind}\n\t\t\t\tonClick={this.actionClickHandler}\n\t\t\t\tdisabled={!actionObj.enable}\n\t\t\t\tonFocus={this.props.onFocus}\n\t\t\t\taria-label={ariaLabel}\n\t\t\t\tsize={this.props.size}\n\t\t\t>\n\t\t\t\t{buttonContent}\n\t\t\t</Button>\n\t\t);\n\n\t\treturn buttonContent;\n\t}\n\n\tgenerateActionName(actionObj) {\n\t\treturn this.props.actionObj.action + \"-action\";\n\t}\n\n\twrapInTooltip(content) {\n\t\tif (!this.props.overflow && (this.showLabelAsTip(this.props.actionObj) || this.props.actionObj.tooltip)) {\n\t\t\tconst actionName = this.generateActionName();\n\t\t\tconst tip = this.props.actionObj.tooltip ? this.props.actionObj.tooltip : this.props.actionObj.label;\n\t\t\tconst tooltipId = actionName + \"-\" + this.props.instanceId + \"-tooltip\";\n\t\t\tconst enableTooltip = this.props.actionObj.enable || this.props.actionObj.jsx; // JSX 'tools' don't have enable attr so always display a tooltip for them.\n\t\t\tconst direction = this.props.tooltipDirection ? this.props.tooltipDirection : \"bottom\";\n\n\t\t\treturn (\n\t\t\t\t<Tooltip id={tooltipId} tip={tip} disable={!enableTooltip} className=\"icon-tooltip\" direction={direction}>\n\t\t\t\t\t{content}\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\treturn content;\n\t}\n\n\t// Returns true if the label should be shown as a tooltip or false if not.\n\t// We do not show the label as a tooltip if it is already shown in the\n\t// toolbar next to the icon (i.e. incLabelWithIcon is set to something).\n\tshowLabelAsTip(actionObj) {\n\t\tif (actionObj.label) {\n\t\t\tif (actionObj.incLabelWithIcon === \"before\" ||\n\t\t\t\t\tactionObj.incLabelWithIcon === \"after\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\trender() {\n\t\tconst actionObj = this.props.actionObj;\n\t\tconst actionName = this.generateActionName();\n\t\tlet divContent = null;\n\n\t\tif (actionObj.jsx) {\n\t\t\tdivContent = this.wrapInTooltip(actionObj.jsx);\n\t\t} else {\n\t\t\tdivContent = this.generateButton(actionObj);\n\t\t}\n\n\t\tconst isToolbarItem = this.props.overflow ? null : true; // null wil make data-toolbar-item be removed\n\t\tconst kindAsClass = actionObj.kind ? actionObj.kind : \"default\";\n\n\t\tconst itemClassName = classNames(\n\t\t\t{ \"toolbar-overflow-menu-item\": this.props.overflow,\n\t\t\t\t\"toolbar-item\": !this.props.overflow && !actionObj.jsx,\n\t\t\t\t\"toolbar-jsx-item\": !this.props.overflow && actionObj.jsx,\n\t\t\t\t\"toolbar-overflow-jsx-item\": this.props.overflow && actionObj.jsx,\n\t\t\t\t\"toolbar-item-selected\": actionObj.isSelected },\n\t\t\tkindAsClass,\n\t\t\tactionName);\n\n\t\treturn (\n\t\t\t<div className={itemClassName} data-toolbar-item={isToolbarItem}>\n\t\t\t\t{divContent}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nToolbarActionItem.propTypes = {\n\tactionObj: PropTypes.shape({\n\t\taction: PropTypes.string.isRequired,\n\t\tlabel: PropTypes.oneOfType([\n\t\t\tPropTypes.string,\n\t\t\tPropTypes.object\n\t\t]),\n\t\tincLabelWithIcon: PropTypes.oneOf([\"no\", \"before\", \"after\"]),\n\t\tenable: PropTypes.bool,\n\t\ticonEnabled: PropTypes.oneOfType([\n\t\t\tPropTypes.string,\n\t\t\tPropTypes.object\n\t\t]),\n\t\ticonDisabled: PropTypes.oneOfType([\n\t\t\tPropTypes.string,\n\t\t\tPropTypes.object\n\t\t]),\n\t\tclassName: PropTypes.string,\n\t\ttextContent: PropTypes.string,\n\t\ticonTypeOverride: PropTypes.string,\n\t\tisSelected: PropTypes.bool,\n\t\tkind: PropTypes.string,\n\t\tjsx: PropTypes.object,\n\t\ttooltip: PropTypes.oneOfType([\n\t\t\tPropTypes.string,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.func\n\t\t])\n\t}),\n\ttooltipDirection: PropTypes.oneOf([\"top\", \"bottom\"]),\n\ttoolbarActionHandler: PropTypes.func.isRequired,\n\tinstanceId: PropTypes.number.isRequired,\n\toverflow: PropTypes.bool,\n\tonFocus: PropTypes.func,\n\tsize: PropTypes.oneOf([\"md\", \"sm\"])\n};\n\nexport default ToolbarActionItem;\n","export default \"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%20%3Cpath%20d%3D%22M6%2C7.5h4v1H6Z%22%2F%3E%20%3Cpath%20d%3D%22M4%2C12h8a.94.94%2C0%2C0%2C0%2C1-1V5a.94.94%2C0%2C0%2C0-1-1H4A.94.94%2C0%2C0%2C0%2C3%2C5v6A.94.94%2C0%2C0%2C0%2C4%2C12ZM4%2C5h8v6H4Z%22%2F%3E%20%3Cpolygon%20points%3D%222%203.5%201%203.5%201%201%203.5%201%203.5%202%202%202%202%203.5%22%2F%3E%20%3Cpolygon%20points%3D%2215%203.5%2014%203.5%2014%202%2012.5%202%2012.5%201%2015%201%2015%203.5%22%2F%3E%20%3Cpolygon%20points%3D%2215%2015%2012.5%2015%2012.5%2014%2014%2014%2014%2012.5%2015%2012.5%2015%2015%22%2F%3E%20%3Cpolygon%20points%3D%223.5%2015%201%2015%201%2012.5%202%2012.5%202%2014%203.5%2014%203.5%2015%22%2F%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2016%2016%22%3E%3Crect%20x%3D%221.5%22%20y%3D%222%22%20width%3D%2213%22%20height%3D%221%22%2F%3E%3Crect%20x%3D%221.5%22%20y%3D%2213%22%20width%3D%2213%22%20height%3D%221%22%2F%3E%3Cpath%20d%3D%22M7%2C10.5H2a.47.47%2C0%2C0%2C1-.5-.5V6A.47.47%2C0%2C0%2C1%2C2%2C5.5H7a.47.47%2C0%2C0%2C1%2C.5.5v4A.47.47%2C0%2C0%2C1%2C7%2C10.5Zm-4.5-1h4v-3h-4Z%22%2F%3E%3Cpath%20d%3D%22M14%2C10.5H9a.47.47%2C0%2C0%2C1-.5-.5V6A.47.47%2C0%2C0%2C1%2C9%2C5.5h5a.47.47%2C0%2C0%2C1%2C.5.5v4A.47.47%2C0%2C0%2C1%2C14%2C10.5Zm-4.5-1h4v-3h-4Z%22%2F%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2016%2016%22%3E%3Crect%20x%3D%222%22%20y%3D%221.5%22%20width%3D%221%22%20height%3D%2213%22%2F%3E%3Crect%20x%3D%2213%22%20y%3D%221.5%22%20width%3D%221%22%20height%3D%2213%22%2F%3E%3Cpath%20d%3D%22M10.5%2C7.5h-5A.47.47%2C0%2C0%2C1%2C5%2C7V3a.47.47%2C0%2C0%2C1%2C.5-.5h5A.47.47%2C0%2C0%2C1%2C11%2C3V7A.47.47%2C0%2C0%2C1%2C10.5%2C7.5ZM6%2C6.5h4v-3H6Z%22%2F%3E%3Cpath%20d%3D%22M10.5%2C13.5h-5A.47.47%2C0%2C0%2C1%2C5%2C13V9a.47.47%2C0%2C0%2C1%2C.5-.5h5A.47.47%2C0%2C0%2C1%2C11%2C9v4A.47.47%2C0%2C0%2C1%2C10.5%2C13.5ZM6%2C12.5h4v-3H6Z%22%2F%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2032%2032%22%20fill%3D%22currentColor%22%3E%20%3Crect%20width%3D%2232%22%20height%3D%2232%22%20fill%3D%22none%22%2F%3E%20%3Cpath%20d%3D%22M28%2C4H4A2%2C2%2C0%2C0%2C0%2C2%2C6V26a2%2C2%2C0%2C0%2C0%2C2%2C2H28a2%2C2%2C0%2C0%2C0%2C2-2V6A2%2C2%2C0%2C0%2C0%2C28%2C4Zm0%2C22H12V17.1h8.9l-2.5%2C2.5%2C1.5%2C1.5L25%2C16l-5.1-5.1-1.5%2C1.5%2C2.5%2C2.5H12V6H28Z%22%2F%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2032%2032%22%20fill%3D%22currentColor%22%3E%20%3Crect%20width%3D%2232%22%20height%3D%2232%22%20fill%3D%22none%22%2F%3E%20%3Cpath%20d%3D%22M28%2C4H4A2%2C2%2C0%2C0%2C0%2C2%2C6V26a2%2C2%2C0%2C0%2C0%2C2%2C2H28a2%2C2%2C0%2C0%2C0%2C2-2V6A2%2C2%2C0%2C0%2C0%2C28%2C4Zm0%2C11H19.1l2.5-2.5L20.1%2C11%2C15%2C16l5.1%2C5.1%2C1.5-1.5-2.5-2.5H28V26H12V6H28Z%22%2F%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2032%2032%22%20fill%3D%22currentColor%22%3E%20%3Cpath%20d%3D%22M27%2C12V27H5V5H20V3H5A2%2C2%2C0%2C0%2C0%2C3%2C5V27a2%2C2%2C0%2C0%2C0%2C2%2C2H27a2%2C2%2C0%2C0%2C0%2C2-2V12Z%22%2F%3E%20%3Ccircle%20class%3D%22dot%22%20cx%3D%2226.5%22%20cy%3D%225.5%22%20r%3D%223.5%22%2F%3E%3C%2Fsvg%3E\"","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button } from \"carbon-components-react\";\nimport { OverflowMenuVertical16 } from \"@carbon/icons-react\";\n\nclass ToolbarOverflowItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.toggleExtendedMenu = this.toggleExtendedMenu.bind(this);\n\t}\n\n\ttoggleExtendedMenu() {\n\t\tthis.props.toggleExtendedMenu(this.props.index);\n\t}\n\n\trender() {\n\t\tconst menuItems = this.props.showExtendedMenu ? this.props.generateExtensionMenuItems(this.props.index) : [];\n\t\tconst subMenuClassName = this.props.showExtendedMenu ? \"\" : \"toolbar-popover-list-hide\";\n\n\t\tlet overflowMenu = null;\n\t\tif (menuItems.length > 0) {\n\t\t\toverflowMenu = (\n\t\t\t\t<div className={\"toolbar-popover-list \" + subMenuClassName}>\n\t\t\t\t\t{menuItems}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tconst className = \"toolbar-spacer toolbar-index-\" + this.props.index;\n\n\t\treturn (\n\t\t\t<div className={className} >\n\t\t\t\t<div className={\"toolbar-overflow-item\"}>\n\t\t\t\t\t<Button kind=\"ghost\"\n\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\tonClick={this.toggleExtendedMenu}\n\t\t\t\t\t\tonFocus={this.props.onFocus}\n\t\t\t\t\t\taria-label={this.props.label}\n\t\t\t\t\t\tsize={this.props.size}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"toolbar-item-content default\">\n\t\t\t\t\t\t\t<div className=\"toolbar-icon\">\n\t\t\t\t\t\t\t\t<OverflowMenuVertical16 />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t{overflowMenu}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nToolbarOverflowItem.propTypes = {\n\tshowExtendedMenu: PropTypes.bool.isRequired,\n\ttoggleExtendedMenu: PropTypes.func.isRequired,\n\tindex: PropTypes.number.isRequired,\n\tgenerateExtensionMenuItems: PropTypes.func,\n\tonFocus: PropTypes.func,\n\tlabel: PropTypes.string,\n\tsize: PropTypes.oneOf([\"md\", \"sm\"])\n};\n\nexport default ToolbarOverflowItem;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ToolbarDividerItem extends React.Component {\n\n\trender() {\n\t\tconst dividerClassName = this.props.overflow ? \"toolbar-divider-overflow\" : \"toolbar-divider\";\n\n\t\t// Add a space as content. When using display: inline-block the div needs\n\t\t// some content so it is displayed inline with the other elements of the\n\t\t// toolbar. With no content it is displayed above (!) the other elements.\n\t\treturn (\n\t\t\t<div className={dividerClassName} data-toolbar-item tabIndex={-1} aria-hidden >&nbsp;</div>\n\t\t);\n\t}\n}\n\nToolbarDividerItem.propTypes = {\n\toverflow: PropTypes.bool\n};\n\nexport default ToolbarDividerItem;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactResizeDetector from \"react-resize-detector\";\n\nimport ToolbarActionItem from \"./toolbar-action-item.jsx\";\nimport ToolbarOverflowItem from \"./toolbar-overflow-item.jsx\";\nimport ToolbarDividerItem from \"./toolbar-divider-item.jsx\";\n\nclass Toolbar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tshowExtendedMenuIndex: -1\n\t\t};\n\n\t\tthis.leftBar = [];\n\t\tthis.rightBar = [];\n\n\t\tthis.onFocus = this.onFocus.bind(this);\n\t\tthis.onToolbarResize = this.onToolbarResize.bind(this);\n\t\tthis.toggleExtendedMenu = this.toggleExtendedMenu.bind(this);\n\t\tthis.generateExtensionMenuItems = this.generateExtensionMenuItems.bind(this);\n\t}\n\n\t// When the toolbar is initially opened the tabindex for each element may not\n\t// be set correctly because of the time it takes to initially render the DOM.\n\t// Typically, this means the tabindex is not set correctly on whichever\n\t// overflow menu icon is displayed. Therefore, as the user moves the focus\n\t// to the first element in the toolbar (whose tabindex IS typically OK) we\n\t// set the tabindex for all elements again, this then sets the overflow\n\t// icon's tabindex correctly.\n\tonFocus() {\n\t\tthis.setLeftBarItemsTabIndex();\n\t\tthis.setRightBarItemsTabIndex();\n\t}\n\n\t// Prevents the inline-block elements of the left bar being scrolled to\n\t// reveal the wrapped elements, when the user tabs through the elements.\n\tonScroll(evt) {\n\t\tevt.currentTarget.scroll(0, 0);\n\t\tevt.preventDefault();\n\t}\n\n\t// Close the overflow menu, if it is open, when the toolbar is resized in\n\t// case a new menu needs to be displayed with the new toolbar width.\n\tonToolbarResize() {\n\t\tif (this.state.showExtendedMenuIndex > -1) {\n\t\t\tthis.setState({ showExtendedMenuIndex: -1 });\n\t\t}\n\n\t\tthis.setLeftBarItemsTabIndex();\n\t\tthis.setRightBarItemsTabIndex();\n\t}\n\n\t// Sets the tabindex on all left bar items so tabbing works correctly. This\n\t// falls into two parts: 1. Set the tabindex for all overflow items to -1\n\t// except the overflow item that is displayed (if there is one). 2. Set the\n\t// tabindex of all hidden regular toolbar items to -1 and to 0 for all\n\t// displayed regular toolbar items.\n\t// Note: We detect the y coordinate of the 'top row' by using the top of\n\t// the first overflow icon. This is because the toolbar might be compressed\n\t// to the extent that the first overflow icon is the only item on the left\n\t// of the toolbar.\n\tsetLeftBarItemsTabIndex() {\n\t\tconst bar = this.getBar(\"left\");\n\t\tif (!bar) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = bar.querySelectorAll(\"[data-toolbar-item=true]\") || [];\n\t\tconst topRow = this.getTopOfFirstOverflowItem(bar);\n\t\tlet lastTopRowElement = -1;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tconst itemRect = items[i].getBoundingClientRect();\n\n\t\t\tthis.setOverflowItemButtonTabIndex(i, -1, bar);\n\n\t\t\tif (itemRect.top === topRow) {\n\t\t\t\tlastTopRowElement = i;\n\t\t\t\tthis.setToolbarItemButtonTabIndex(items[i], 0);\n\t\t\t} else {\n\t\t\t\tthis.setToolbarItemButtonTabIndex(items[i], -1);\n\t\t\t}\n\t\t}\n\n\t\tif (lastTopRowElement < items.length) {\n\t\t\tthis.setOverflowItemButtonTabIndex(lastTopRowElement + 1, 0, bar);\n\t\t}\n\t}\n\n\t// Sets the tabindex on all right bar items so tabbing works correctly. This\n\t// involves setting the tabindex of all hidden regular toolbar items to -1\n\t// and to 0 for all displayed regular toolbar items.\n\tsetRightBarItemsTabIndex() {\n\t\tconst items = this.getRightBarItems();\n\t\tlet topRow = 0;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tconst itemRect = items[i].getBoundingClientRect();\n\n\t\t\tif (i === 0) {\n\t\t\t\ttopRow = itemRect.top;\n\t\t\t}\n\n\t\t\tif (itemRect.top === topRow) {\n\t\t\t\tthis.setToolbarItemButtonTabIndex(items[i], 0);\n\t\t\t} else {\n\t\t\t\tthis.setToolbarItemButtonTabIndex(items[i], -1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetBar(side) {\n\t\tconst id = this.props.instanceId;\n\t\tconst part = document.querySelector(`.toolbar-div[instanceid='${id}'] > .toolbar-${side}-bar`) || [];\n\t\treturn part;\n\t}\n\n\tgetRightBarItems() {\n\t\tconst bar = this.getBar(\"right\");\n\t\tif (!bar) {\n\t\t\treturn [];\n\t\t}\n\t\treturn bar.querySelectorAll(\"[data-toolbar-item=true]\") || [];\n\t}\n\n\tgetTopOfFirstOverflowItem(bar) {\n\t\tconst firstOverflowItem = this.getOverflowItem(0, bar);\n\t\tif (firstOverflowItem) {\n\t\t\tconst rect = firstOverflowItem.getBoundingClientRect();\n\t\t\treturn rect.top;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetOverflowItem(index, bar) {\n\t\tconst overflowClassName = \"toolbar-index-\" + index;\n\t\treturn bar.getElementsByClassName(overflowClassName)[0];\n\t}\n\n\tsetToolbarItemButtonTabIndex(item, tabIndex) {\n\t\tconst button = item.querySelector(\"button\");\n\t\tif (button) {\n\t\t\tbutton.setAttribute(\"tabindex\", tabIndex);\n\t\t}\n\t}\n\n\tsetOverflowItemButtonTabIndex(index, tabIndex, bar) {\n\t\tconst overflowItem = this.getOverflowItem(index, bar);\n\t\tif (overflowItem) {\n\t\t\tconst overflowButton = overflowItem.querySelector(\"button\");\n\t\t\tif (overflowButton) {\n\t\t\t\toverflowButton.setAttribute(\"tabindex\", tabIndex);\n\t\t\t}\n\t\t}\n\t}\n\n\tgenerateToolbarItems(actionDefinitions, overflow, withSpacer) {\n\t\tconst newItems = [];\n\n\t\tfor (let i = 0; i < actionDefinitions.length; i++) {\n\t\t\tconst actionObj = actionDefinitions[i];\n\t\t\tif (actionObj) {\n\t\t\t\tif (withSpacer && !actionObj.divider) {\n\t\t\t\t\tnewItems.push(this.generateOverflowIcon(i));\n\t\t\t\t}\n\t\t\t\tnewItems.push(this.generateToolbarItem(actionObj, i, overflow));\n\t\t\t}\n\t\t}\n\t\treturn newItems;\n\t}\n\n\tgenerateToolbarItem(actionObj, i, overflow) {\n\t\tlet jsx = null;\n\t\tif (actionObj) {\n\t\t\tif (actionObj.divider) {\n\t\t\t\tjsx = (\n\t\t\t\t\t<ToolbarDividerItem\n\t\t\t\t\t\tkey={\"toolbar-item-key-\" + i}\n\t\t\t\t\t\toverflow={overflow}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tjsx = (\n\t\t\t\t\t<ToolbarActionItem\n\t\t\t\t\t\tkey={\"toolbar-item-key-\" + i}\n\t\t\t\t\t\tactionObj={actionObj}\n\t\t\t\t\t\ttooltipDirection={this.props.tooltipDirection}\n\t\t\t\t\t\ttoolbarActionHandler={this.props.toolbarActionHandler}\n\t\t\t\t\t\toverflow={overflow}\n\t\t\t\t\t\tinstanceId={this.props.instanceId}\n\t\t\t\t\t\tonFocus={this.onFocus}\n\t\t\t\t\t\tsize={this.props.size}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn jsx;\n\t}\n\n\tgenerateOverflowIcon(index) {\n\t\tconst label = this.props.additionalText ? this.props.additionalText.overflowMenuLabel : \"\";\n\t\tconst jsx = (\n\t\t\t<ToolbarOverflowItem\n\t\t\t\tkey={\"toolbar-overflow-item-key-\" + index}\n\t\t\t\tindex={index}\n\t\t\t\tshowExtendedMenu={this.state.showExtendedMenuIndex === index}\n\t\t\t\ttoggleExtendedMenu={this.toggleExtendedMenu}\n\t\t\t\tgenerateExtensionMenuItems={this.generateExtensionMenuItems}\n\t\t\t\tonFocus={this.onFocus}\n\t\t\t\tlabel={label}\n\t\t\t\tsize={this.props.size}\n\t\t\t/>\n\t\t);\n\n\t\treturn jsx;\n\t}\n\n\t// Generates an array of action definition elements that correspond to the\n\t// hidden DOM items on the left and right of the toolbar. For any left bar\n\t// items we can use the leftIndex passed in to split the leftBar defintion\n\t// array, however for the right side we need to loop through the DOM items\n\t// and discover which is hidden and which is displayed.\n\tgenerateExtensionMenuItems(leftIndex) {\n\t\tconst rightItems = this.generateRightOverflowItems();\n\t\trightItems.reverse();\n\n\t\tconst overflowMenuBarItems = this.leftBar.slice(leftIndex).concat(rightItems);\n\t\tconst extensionItems = this.generateToolbarItems(overflowMenuBarItems, true, false);\n\t\treturn extensionItems;\n\t}\n\n\t// Generates an array of right side defintion items that correspond to\n\t// right side DOM items that are hidden.\n\tgenerateRightOverflowItems() {\n\t\tconst newDefItems = [];\n\t\tconst items = this.getRightBarItems();\n\t\tlet topRow = 0;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tconst rect = items[i].getBoundingClientRect();\n\n\t\t\tif (i === 0) {\n\t\t\t\ttopRow = rect.top;\n\t\t\t}\n\n\t\t\tif (rect.top !== topRow) {\n\t\t\t\tnewDefItems.push(this.rightBar[i]);\n\t\t\t}\n\t\t}\n\t\treturn newDefItems;\n\t}\n\n\ttoggleExtendedMenu(index) {\n\t\tconst newIndex = index === this.state.showExtendedMenuIndex ? -1 : index;\n\t\tthis.setState({ showExtendedMenuIndex: newIndex });\n\t}\n\n\trender() {\n\t\tthis.leftBar = this.props.config.leftBar || [];\n\t\tthis.rightBar = this.props.config.rightBar || [];\n\t\tthis.rightBar = [...this.rightBar].reverse() || [];\n\n\t\tconst leftItems = this.generateToolbarItems(this.leftBar, false, true);\n\t\tconst rightItems = this.generateToolbarItems(this.rightBar, false, false);\n\n\t\tconst toolbarSizeClass = this.props.size === \"sm\" ? \"toolbar-div toolbar-size-small\" : \"toolbar-div\";\n\t\tconst canvasToolbar = (\n\t\t\t<ReactResizeDetector handleWidth onResize={this.onToolbarResize}>\n\t\t\t\t<div className={toolbarSizeClass} instanceid={this.props.instanceId}>\n\t\t\t\t\t<div className=\"toolbar-left-bar\" onScroll={this.onScroll}>\n\t\t\t\t\t\t{leftItems}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"toolbar-right-bar\">\n\t\t\t\t\t\t{rightItems}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ReactResizeDetector>\n\t\t);\n\t\treturn canvasToolbar;\n\t}\n}\n\nToolbar.propTypes = {\n\tconfig: PropTypes.object.isRequired,\n\tinstanceId: PropTypes.number,\n\ttoolbarActionHandler: PropTypes.func,\n\ttooltipDirection: PropTypes.string,\n\tadditionalText: PropTypes.object,\n\tsize: PropTypes.oneOf([\"md\", \"sm\"])\n};\n\nexport default Toolbar;\n"],"names":["reWhitespace","trimmedEndIndex","string","index","length","test","charAt","reTrimStart","baseTrim","slice","replace","isObject","require$$1","isSymbol","require$$2","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber_1","value","other","valueOf","isBinary","_React$Component","_inherits","ToolbarActionItem","_super","_createSuper","props","_this","_classCallCheck","call","actionClickHandler","bind","_assertThisInitialized","_createClass","key","actionObj","iconType","iconTypeOverride","action","disabled","enable","TOOLBAR_STOP","React","createElement","StopFilledAlt16","TOOLBAR_RUN","Play16","TOOLBAR_UNDO","Undo16","TOOLBAR_REDO","Redo16","TOOLBAR_CUT","Cut16","TOOLBAR_COPY","Copy16","TOOLBAR_PASTE","Paste16","TOOLBAR_CREATE_AUTO_COMMENT","AddComment16","TOOLBAR_DELETE_SELECTED_OBJECTS","TrashCan16","TOOLBAR_ZOOM_IN","ZoomIn16","TOOLBAR_ZOOM_OUT","ZoomOut16","TOOLBAR_ZOOM_FIT","SVG","src","TOOLBAR_ARRANGE_HORIZONALLY","TOOLBAR_ARRANGE_VERTICALLY","TOOLBAR_OPEN_PALETTE","TOOLBAR_CLOSE_PALETTE","TOOLBAR_TOGGLE_NOTIFICATION_PANEL","label","disable","overflow","incLabelWithIcon","className","this","generateLabelType","inLabelWithIcon","icon","getDefaultIcon","iconEnabled","iconDisabled","customIcon","id","instanceId","evt","toolbarActionHandler","labelBefore","labelAfter","generateLabel","generateIcon","textContent","itemContentClassName","classNames","default","kind","buttonContent","wrapInTooltip","ariaLabel","Button","onClick","onFocus","size","content","showLabelAsTip","tooltip","actionName","generateActionName","tip","tooltipId","enableTooltip","jsx","direction","tooltipDirection","Tooltip","divContent","generateButton","isToolbarItem","kindAsClass","itemClassName","isSelected","Component","ToolbarOverflowItem","toggleExtendedMenu","menuItems","showExtendedMenu","generateExtensionMenuItems","subMenuClassName","overflowMenu","tabIndex","OverflowMenuVertical16","ToolbarDividerItem","apply","arguments","dividerClassName","Toolbar","state","showExtendedMenuIndex","leftBar","rightBar","onToolbarResize","setLeftBarItemsTabIndex","setRightBarItemsTabIndex","currentTarget","scroll","preventDefault","setState","bar","getBar","items","querySelectorAll","topRow","getTopOfFirstOverflowItem","lastTopRowElement","i","itemRect","getBoundingClientRect","setOverflowItemButtonTabIndex","top","setToolbarItemButtonTabIndex","getRightBarItems","side","document","querySelector","concat","firstOverflowItem","getOverflowItem","overflowClassName","getElementsByClassName","item","button","setAttribute","overflowItem","overflowButton","actionDefinitions","withSpacer","newItems","divider","push","generateOverflowIcon","generateToolbarItem","additionalText","overflowMenuLabel","leftIndex","rightItems","generateRightOverflowItems","reverse","overflowMenuBarItems","generateToolbarItems","newDefItems","rect","newIndex","config","_toConsumableArray","leftItems","toolbarSizeClass","ReactResizeDetector","handleWidth","onResize","instanceid","onScroll"],"mappings":"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"}