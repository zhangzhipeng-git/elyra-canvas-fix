{"version":3,"file":"flexible-table-93b87acb.js","sources":["../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/mapValues.js","../node_modules/lodash/differenceBy.js","../src/common-properties/components/virtualized-table/virtualized-table.jsx","../src/common-properties/components/flexible-table/flexible-table.jsx"],"sourcesContent":["var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar differenceBy = baseRest(function(array, values) {\n  var iteratee = last(values);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))\n    : [];\n});\n\nmodule.exports = differenceBy;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Column, Table, AutoSizer } from \"react-virtualized\";\nimport Draggable from \"react-draggable\";\nimport { Checkbox, Loading } from \"carbon-components-react\";\nimport { ArrowUp16, ArrowDown16, ArrowsVertical16, Information16 } from \"@carbon/icons-react\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { SORT_DIRECTION, STATES, ROW_SELECTION, MINIMUM_COLUMN_WIDTH, MINIMUM_COLUMN_WIDTH_WITHOUT_LABEL } from \"./../../constants/constants\";\nimport { injectIntl } from \"react-intl\";\nimport defaultMessages from \"../../../../locales/common-properties/locales/en.json\";\n\nimport { isEmpty, differenceBy, mapValues } from \"lodash\";\nimport { v4 as uuid4 } from \"uuid\";\nimport classNames from \"classnames\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nclass VirtualizedTable extends React.Component {\n\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tconst updatedState = {};\n\t\tif (nextProps.rowCount !== prevState.rowCount) {\n\t\t\tupdatedState.rowCount = nextProps.rowCount;\n\t\t}\n\t\t// Only get new columns if column label (headerLabel) is different. This is useful when changing \"View in tables\" dropdown in Expression control.\n\t\t// We're not comparing all properties in columns object because width can be different after resizing.\n\t\tif (!prevState.columnResized || !isEmpty(differenceBy(nextProps.columns, prevState.columns, \"headerLabel\"))) {\n\t\t\tupdatedState.columns = nextProps.columns;\n\t\t}\n\t\treturn (updatedState);\n\t}\n\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\trowCount: this.props.rowCount,\n\t\t\tcolumns: this.props.columns,\n\t\t\tcolumnResized: false\n\t\t};\n\t\tthis.virtualizedTableRef = React.createRef();\n\t\tthis.lastChecked = isEmpty(props.rowsSelected) ? null : props.rowsSelected.slice(-1).pop();\n\n\t\tthis.isOverSelectOption = false;\n\t\tthis.mouseEventCalled = false;\n\t\tthis.keyBoardEventCalled = false;\n\t\tthis.cellRenderer = this.cellRenderer.bind(this);\n\t\tthis.selectAll = this.selectAll.bind(this);\n\t\tthis.headerRowRenderer = this.headerRowRenderer.bind(this);\n\t\tthis.headerColRenderer = this.headerColRenderer.bind(this);\n\t\tthis.onRowClick = this.onRowClick.bind(this);\n\t\tthis.overSelectOption = this.overSelectOption.bind(this);\n\t\tthis.resizeColumn = this.resizeColumn.bind(this);\n\t}\n\n\tcomponentDidUpdate() {\n\t\t// If the rowHeight prop is a function, the virtualized table doesn't always adjust its\n\t\t// row heights correctly when the table data has changed. So in this case we need\n\t\t// to recompute the row heights.\n\t\tif (typeof this.props.rowHeight === \"function\") {\n\t\t\tthis.recomputeRowHeights();\n\t\t}\n\t}\n\n\t// This is also triggered when clicking on a checkbox\n\tonRowClick(evt, rowData, index) {\n\t\tif (evt.target.className === \"bx--select-option\") {\n\t\t\tevt.stopPropagation(); // stop propagation when selecting dropdown select options within table rows\n\t\t} else {\n\t\t\t// Set selections\n\t\t\tconst selected = !this.isRowSelected(rowData.originalRowIndex);\n\t\t\tif (typeof this.props.setRowsSelected === \"function\") {\n\t\t\t\tthis.props.setRowsSelected({\n\t\t\t\t\t\"index\": index,\n\t\t\t\t\t\"originalRowIndex\": rowData.originalRowIndex,\n\t\t\t\t\t\"selected\": selected,\n\t\t\t\t\t\"isOverSelectOption\": this.isOverSelectOption,\n\t\t\t\t\t\"selectMultipleRows\": evt.shiftKey ? evt.shiftKey : false,\n\t\t\t\t\t\"lastCheckedRow\": this.lastChecked === null ? 0 : this.lastChecked }, evt);\n\n\t\t\t\t// Track lastChecked row for shift key selection\n\t\t\t\tthis.lastChecked = rowData.index;\n\t\t\t}\n\t\t}\n\t}\n\n\tonRowDoubleClick(evt, rowKey, index) {\n\t\tif (this.props.onRowDoubleClick) {\n\t\t\tthis.props.onRowDoubleClick(evt, rowKey, index);\n\t\t}\n\t}\n\n\tgetCheckboxLabelColumnIndex(columns) {\n\t\t// If 1st column is Index, use the next column for labeling\n\t\tfor (let i = 0; i < columns.length; i++) {\n\t\t\tif (columns[i].operation !== \"index\") {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\t// Use first column by default\n\t\treturn 0;\n\t}\n\n\tgetColumnIndex(columns, key) {\n\t\tconst index = columns.findIndex((column) => column.key === key);\n\t\treturn index;\n\t}\n\n\t// Returns an object of deltas for every column - {columnKey: individualDelta}\n\tgetColumnWiseDeltas(columns, deltaX) {\n\t\tconst columnWiseDeltas = {};\n\t\tif (columns.length > 0) {\n\t\t\t// sort columns in ascending order of widths because smallest column will reach MINIMUM_COLUMN_WIDTH first\n\t\t\tcolumns.sort((a, b) => a.width - b.width);\n\t\t\tlet totalDelta = deltaX;\n\t\t\t// Finalize individualDelta for 1 column at a time starting from smallest column\n\t\t\t// If individualDelta is greater than maximum allowed delta for the column, set individualDelta = maximum allowed delta until column reaches MINIMUM_COLUMN_WIDTH\n\t\t\t// Total delta will reduce after every iteration\n\t\t\tfor (let i = 0; i < columns.length; i++) {\n\t\t\t\tconst widthOfAllColumns = columns.slice(i).reduce((prev, current) => prev + current.width, 0);\n\t\t\t\tlet individualDelta = Math.round((columns[i].width * totalDelta) / widthOfAllColumns);\n\t\t\t\t// check if individualDelta is greater than the maximum allowed delta for this column\n\t\t\t\tif (columns[i].headerLabel.length > 0 && columns[i].width - individualDelta < MINIMUM_COLUMN_WIDTH) {\n\t\t\t\t\tindividualDelta = columns[i].width - MINIMUM_COLUMN_WIDTH;\n\t\t\t\t} else if (columns[i].width - individualDelta < MINIMUM_COLUMN_WIDTH_WITHOUT_LABEL) {\n\t\t\t\t\tindividualDelta = columns[i].width - MINIMUM_COLUMN_WIDTH_WITHOUT_LABEL;\n\t\t\t\t}\n\t\t\t\ttotalDelta -= individualDelta;\n\t\t\t\tcolumnWiseDeltas[columns[i].key] = individualDelta;\n\t\t\t}\n\t\t\tif (totalDelta > 0) {\n\t\t\t\t// deltaX is greater than maximum allowed delta for all columns.\n\t\t\t\t// Don't allow resizing by setting individualDelta = 0 for ALL columns\n\t\t\t\treturn mapValues(columnWiseDeltas, () => 0);\n\t\t\t}\n\t\t}\n\t\treturn columnWiseDeltas;\n\t}\n\n\tisRowSelected(index) {\n\t\tif (this.props.rowsSelected) {\n\t\t\treturn this.props.rowsSelected.indexOf(index) > -1;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisLastColumn(dataKey) {\n\t\tconst columnIndex = this.getColumnIndex(this.props.columns, dataKey);\n\t\tconst isLastColumn = (columnIndex === (this.props.columns.length - 1));\n\t\treturn isLastColumn;\n\t}\n\n\tselectAll(selected) {\n\t\tthis.props.setAllRowsSelected(selected);\n\t}\n\n\t// Callback responsible for rendering a cell's contents.\n\tcellRenderer({ cellData }) {\n\t\tif (cellData === null || typeof cellData === \"undefined\") {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn cellData;\n\t}\n\n\tcellRendererHTML({ cellData }) {\n\t\tif (cellData === null || typeof cellData === \"undefined\") {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn (<div dangerouslySetInnerHTML={{ __html: cellData }} />);\n\t}\n\n\trecomputeRowHeights(index) {\n\t\tif (this.virtualizedTableRef && this.virtualizedTableRef.current) {\n\t\t\tthis.virtualizedTableRef.current.recomputeRowHeights(index);\n\t\t}\n\t}\n\n\t// Responsible for rendering the table header row given an array of columns.\n\theaderRowRenderer(scrollKey, { className, columns, style }) {\n\t\tconst checkboxLabelColumnIndex = (typeof this.props.columns === \"undefined\" || this.props.columns.length === 0) ? 0 : this.getCheckboxLabelColumnIndex(this.props.columns);\n\t\tconst headerCheckboxLabel = (typeof this.props.columns === \"undefined\" || this.props.columns.length === 0) ? \"\" : this.props.columns[checkboxLabelColumnIndex].headerLabel;\n\t\tconst translatedHeaderCheckboxLabel = this.props.intl.formatMessage(\n\t\t\t{ id: \"virtualizedTable.header.checkbox.label\", defaultMessage: defaultMessages[\"virtualizedTable.header.checkbox.label\"] },\n\t\t\t{ header_checkbox_label: headerCheckboxLabel }\n\t\t);\n\t\tconst checkbox = this.props.selectable && this.props.rowSelection !== ROW_SELECTION.SINGLE ? (<div role=\"columnheader\" className=\"properties-vt-header-checkbox\">\n\t\t\t<Checkbox\n\t\t\t\tid={`properties-vt-hd-cb-${scrollKey}`}\n\t\t\t\tonChange={this.selectAll}\n\t\t\t\tchecked={this.props.checkedAll}\n\t\t\t\tlabelText={translatedHeaderCheckboxLabel}\n\t\t\t\thideLabel\n\t\t\t/>\n\t\t</div>)\n\t\t\t: \"\";\n\n\t\treturn (<div className={className} data-role=\"properties-header-row\" role=\"row\" style={style}>\n\t\t\t{checkbox}\n\t\t\t{columns}\n\t\t</div>);\n\t}\n\n\theaderColRenderer({ columnData, dataKey, disableSort, label, sortBy, sortDirection }) {\n\t\tlet sortIcon = null;\n\t\tif (typeof this.props.sortColumns[dataKey] !== \"undefined\") {\n\t\t\tlet type = null;\n\t\t\tswitch (this.props.sortColumns[dataKey]) {\n\t\t\tcase SORT_DIRECTION.ASC:\n\t\t\t\ttype = <ArrowUp16 disabled={this.props.tableState === STATES.DISABLED} />;\n\t\t\t\tbreak;\n\t\t\tcase SORT_DIRECTION.DESC:\n\t\t\t\ttype = <ArrowDown16 disabled={this.props.tableState === STATES.DISABLED} />;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttype = <ArrowsVertical16 disabled={this.props.tableState === STATES.DISABLED} />;\n\t\t\t}\n\t\t\tsortIcon = (<span className=\"properties-ft-column-sort-icon\">\n\t\t\t\t{type}\n\t\t\t</span>);\n\t\t}\n\n\t\tconst tooltip = columnData.headerLabel\n\t\t\t? (<div className=\"properties-tooltips\">\n\t\t\t\t<span style= {{ fontWeight: \"bold\" }}>{columnData.headerLabel}</span>\n\t\t\t</div>)\n\t\t\t: null;\n\n\t\tconst infoIcon = isEmpty(columnData.description)\n\t\t\t? null\n\t\t\t: (<div className=\"properties-vt-info-icon-tip\">\n\t\t\t\t<Tooltip\n\t\t\t\t\tid={`properties-tooltip-${columnData.headerLabel}-info`}\n\t\t\t\t\ttip={columnData.description}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t>\n\t\t\t\t\t<Information16 className=\"properties-vt-info-icon\" />\n\t\t\t\t</Tooltip>\n\t\t\t</div>);\n\n\t\tconst tooltipId = uuid4() + \"-tooltip-column-\" + dataKey;\n\n\t\tconst resizeElem = columnData.resizable && !this.isLastColumn(dataKey)\n\t\t\t? (<Draggable\n\t\t\t\taxis=\"x\"\n\t\t\t\tdefaultClassName=\"properties-vt-header-resize\"\n\t\t\t\tdefaultClassNameDragging=\"properties-vt-header-resize-active\"\n\t\t\t\tonDrag={\n\t\t\t\t\t(evt, { deltaX }) => {\n\t\t\t\t\t\tthis.resizeColumn({ dataKey, deltaX });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition={{ x: 0 }}\n\t\t\t\tzIndex={999}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\trole=\"button\" tabIndex=\"0\"\n\t\t\t\t\taria-label=\"Resize column\"\n\t\t\t\t/>\n\t\t\t</Draggable>)\n\t\t\t: \"\";\n\n\t\tconst header = isEmpty(tooltip)\n\t\t\t? (<div className=\"properties-vt-label-icon\">\n\t\t\t\t{label}\n\t\t\t\t{infoIcon}\n\t\t\t</div>)\n\t\t\t: (<div className=\"properties-vt-label-tip-icon\">\n\t\t\t\t<Tooltip\n\t\t\t\t\tid={tooltipId}\n\t\t\t\t\ttip={tooltip}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Tooltip>\n\t\t\t\t{infoIcon}\n\t\t\t</div>);\n\n\t\treturn (\n\t\t\t<div className={classNames({ \"properties-vt-column-with-resize\": resizeElem !== \"\", \"properties-vt-column-without-resize\": resizeElem === \"\" })}>\n\t\t\t\t<div className={classNames(\"properties-vt-column properties-tooltips-container\", { \"sort-column-active\": dataKey === this.props.sortBy })}>\n\t\t\t\t\t{header}\n\t\t\t\t\t{disableSort === false && sortIcon}\n\t\t\t\t</div>\n\t\t\t\t{ resizeElem }\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/* Columns are not resizable by default. Host application specifies resizable columns in parameter definition.\n\t* When a column is resized, width of ALL the columns to the right of resized column is adjusted.\n\t* Every column grows/shrinks directly proportional to column width.\n\t* Example: If a column width is reduced by 10px and there are 4 columns on the right of resized column having widths [40, 30, 20, 10],\n\t* Then 10px will be adjusted in 4 columns as - [4px, 3px, 2px, 1px]\n\t* When every column's width reaches MINIMUM_COLUMN_WIDTH (56px), resizing is stopped.\n\t* Special case - For columns without labels, when their width reaches MINIMUM_COLUMN_WIDTH_WITHOUT_LABEL (32px), resizing is stopped.\n\t*/\n\tresizeColumn({ dataKey, deltaX }) {\n\t\tthis.setState((prevState) => {\n\n\t\t\tconst columns = prevState.columns;\n\t\t\t// Calculate number of resizable columns on the right of resized column\n\t\t\tconst resizedColumnIndex = this.getColumnIndex(columns, dataKey);\n\t\t\tconst allColumnsOnRight = columns.slice(resizedColumnIndex + 1);\n\t\t\t// Exclude columns having staticWidth: true\n\t\t\tconst nonStaticColumns = allColumnsOnRight.filter((column) => !column.staticWidth);\n\n\t\t\tconst resizableColumns = nonStaticColumns.filter((column) => {\n\t\t\t\t// When shrinking, get columns having width greater than MINIMUM_COLUMN_WIDTH\n\t\t\t\tif (deltaX >= 0) {\n\t\t\t\t\tif (column.headerLabel.length > 0) {\n\t\t\t\t\t\t// Column with label has min width 56px\n\t\t\t\t\t\treturn (column.width > MINIMUM_COLUMN_WIDTH);\n\t\t\t\t\t}\n\t\t\t\t\t// Column without label has min width 32px\n\t\t\t\t\treturn (column.width > MINIMUM_COLUMN_WIDTH_WITHOUT_LABEL);\n\t\t\t\t}\n\t\t\t\t// When expanding, get all columns\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t\t// Get column wise delta for resizableColumns\n\t\t\tconst columnWiseDeltas = this.getColumnWiseDeltas(resizableColumns, deltaX);\n\t\t\tconst columnsToBeResized = Object.keys(columnWiseDeltas);\n\n\t\t\t// check if all column wise deltas are 0. This happens when deltaX is more than maximum allowed delta for all columns\n\t\t\tconst everyColumnHasZeroDelta = Object.values(columnWiseDeltas).every((delta) => delta === 0);\n\n\t\t\tif ((columns[resizedColumnIndex].width + deltaX) > MINIMUM_COLUMN_WIDTH && !isEmpty(columnWiseDeltas) && !everyColumnHasZeroDelta) {\n\t\t\t\tcolumns[resizedColumnIndex].width += deltaX;\n\t\t\t\t// Adjust width of all resizable columns\n\t\t\t\tcolumnsToBeResized.forEach((columnKey) => {\n\t\t\t\t\tconst idx = columns.findIndex((col) => col.key === columnKey);\n\t\t\t\t\tcolumns[idx].width -= columnWiseDeltas[columnKey];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tcolumnResized: true,\n\t\t\t\tcolumns: columns\n\t\t\t};\n\t\t});\n\t}\n\n\toverSelectOption(evt) {\n\t\t// Differentiate between mouse and keyboard event\n\t\tif (evt.type === \"mouseenter\" && !this.keyBoardEventCalled) {\n\t\t\tthis.mouseEventCalled = true;\n\t\t\tthis.isOverSelectOption = !this.isOverSelectOption;\n\t\t} else if (evt.type === \"mouseleave\" && this.mouseEventCalled) {\n\t\t\tthis.mouseEventCalled = false;\n\t\t\tthis.isOverSelectOption = !this.isOverSelectOption;\n\t\t} else if (evt.type === \"focus\" && !this.mouseEventCalled) {\n\t\t\tthis.keyBoardEventCalled = true;\n\t\t\tthis.isOverSelectOption = !this.isOverSelectOption;\n\t\t} else if (evt.type === \"blur\" && this.keyBoardEventCalled) {\n\t\t\tthis.keyBoardEventCalled = false;\n\t\t\tthis.isOverSelectOption = !this.isOverSelectOption;\n\t\t}\n\t}\n\n\t// Responsible for rendering a table row given an array of columns.\n\trowRenderer(scrollKey, { className, columns, index, key, rowData, style }) {\n\t\tlet selectOption = \"\";\n\t\tlet selectedRow = false;\n\t\tconst rowDisabled = typeof rowData.disabled === \"boolean\" ? rowData.disabled : false;\n\n\t\tif (typeof this.props.rowHeight === \"function\" && this.props.rowHeight({ index }) === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.props.selectable) {\n\t\t\tconst rowSelected = this.isRowSelected(rowData.originalRowIndex);\n\t\t\tselectedRow = this.props.selectable && rowSelected;\n\t\t\tif (this.props.rowSelection !== ROW_SELECTION.SINGLE) {\n\t\t\t\tconst translatedRowCheckboxLabel = this.props.intl.formatMessage(\n\t\t\t\t\t{ id: \"virtualizedTable.row.checkbox.label\", defaultMessage: defaultMessages[\"virtualizedTable.row.checkbox.label\"] },\n\t\t\t\t\t{ row_index: index + 1, table_label: (this.props.tableLabel ? this.props.tableLabel : \"\") }\n\t\t\t\t);\n\n\t\t\t\tselectOption = (<div className=\"properties-vt-row-checkbox\"\n\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\tonMouseEnter={(evt) => this.overSelectOption(evt)}\n\t\t\t\t\tonMouseLeave={(evt) => this.overSelectOption(evt)}\n\t\t\t\t\tonFocus={(evt) => this.overSelectOption(evt)}\n\t\t\t\t\tonBlur={(evt) => this.overSelectOption(evt)}\n\t\t\t\t\tonKeyDown={(evt) => {\n\t\t\t\t\t\tif (evt.code === \"Space\" || evt.code === \"Enter\") {\n\t\t\t\t\t\t\tthis.onRowClick(evt, rowData, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid={`properties-vt-row-cb-${scrollKey}-${index}`}\n\t\t\t\t\t\tkey={`properties-vt-row-cb-${scrollKey}-${index}`}\n\t\t\t\t\t\tlabelText={translatedRowCheckboxLabel}\n\t\t\t\t\t\thideLabel\n\t\t\t\t\t\tchecked={rowSelected}\n\t\t\t\t\t\tdisabled={rowDisabled}\n\t\t\t\t\t/>\n\t\t\t\t</div>);\n\t\t\t}\n\t\t}\n\n\t\tif (this.props.summaryTable) {\n\t\t\tselectOption = <div className=\"properties-vt-row-checkbox\" />;\n\t\t}\n\n\t\tif (rowData.loading === true) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tkey={key}\n\t\t\t\t\tdata-role=\"properties-loading-row\"\n\t\t\t\t\trole=\"row\"\n\t\t\t\t\tstyle={style}\n\t\t\t\t>\n\t\t\t\t\t<Loading className=\"properties-vt-small-loading\" small withOverlay={false} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tconst width = (parseInt(style.width, 10)) + \"px\"; // Subtract 2px to account for row borders\n\t\tconst newStyle = Object.assign({}, style, { width: width });\n\n\t\t// Empty style required on cell for react-virtualized. This div wrapper is required to apply the onDoubleClick handler.\n\t\treturn (<div style={{}} key={key} className=\"properties-vt-double-click\" onDoubleClick={(evt) => this.onRowDoubleClick(evt, rowData.rowKey, index)}>\n\t\t\t<div\n\t\t\t\tclassName={classNames(className,\n\t\t\t\t\t{ \"properties-vt-row-selected\": selectedRow },\n\t\t\t\t\t{ \"properties-vt-row-disabled\": rowDisabled },\n\t\t\t\t\t{ \"properties-vt-row-non-interactive\": !this.props.selectable } // ReadonlyTable with single row selection is non-interactive.\n\t\t\t\t)}\n\t\t\t\tdata-role=\"properties-data-row\"\n\t\t\t\trole=\"row\"\n\t\t\t\tstyle={newStyle}\n\t\t\t\tonMouseDown={(evt) => this.onRowClick(evt, rowData, index)}\n\t\t\t>\n\t\t\t\t{selectOption}\n\t\t\t\t{columns}\n\t\t\t</div>\n\t\t</div>);\n\t}\n\n\trender() {\n\t\tconst defaultTestHeight = 2000; // 2000 is set to accommodate test data \"category-selection-data\" with all categories expanded\n\n\t\treturn (\n\t\t\t<div className=\"properties-vt\">\n\t\t\t\t<div className={classNames(\"properties-vt-autosizer\",\n\t\t\t\t\t{ \"properties-vt-single-selection\": this.props.rowSelection && this.props.rowSelection === ROW_SELECTION.SINGLE,\n\t\t\t\t\t\t\"properties-light-disabled\": !this.props.light })}\n\t\t\t\t>\n\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t{({ height, width }) => ( // Table height: subtract 50 for margin below the table.\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\tref={this.virtualizedTableRef}\n\t\t\t\t\t\t\t\twidth={width ? width : 500}\n\t\t\t\t\t\t\t\t// AutoSizer manages width and height properties so the table fills the available space.\n\t\t\t\t\t\t\t\t// It does a direct DOM manipulation to the parent, outside React's VirtualDOM.\n\t\t\t\t\t\t\t\t// Since the actual DOM is not available when unit testing, we are passing in a default\n\t\t\t\t\t\t\t\t// width of 500 and a default height of 300.\n\t\t\t\t\t\t\t\theight={this.props.tableHeight || height || defaultTestHeight}\n\n\t\t\t\t\t\t\t\tclassName=\"properties-autosized-vt\"\n\t\t\t\t\t\t\t\taria-label={this.props.tableLabel ? this.props.tableLabel : \"\"}\n\n\t\t\t\t\t\t\t\tdisableHeader={this.props.disableHeader}\n\t\t\t\t\t\t\t\theaderClassName=\"properties-autosized-vt-header\"\n\t\t\t\t\t\t\t\theaderHeight={32}\n\t\t\t\t\t\t\t\theaderRowRenderer={this.headerRowRenderer.bind(this, this.props.scrollKey)}\n\t\t\t\t\t\t\t\tonHeaderClick={this.props.onHeaderClick}\n\n\t\t\t\t\t\t\t\trowClassName=\"properties-vt-row-class\"\n\t\t\t\t\t\t\t\trowHeight={this.props.rowHeight ? this.props.rowHeight : 32}\n\n\t\t\t\t\t\t\t\trowCount={this.state.rowCount}\n\t\t\t\t\t\t\t\trowGetter={this.props.rowGetter}\n\t\t\t\t\t\t\t\trowRenderer={this.rowRenderer.bind(this, this.props.scrollKey)}\n\n\t\t\t\t\t\t\t\tscrollToIndex={this.props.scrollToIndex}\n\t\t\t\t\t\t\t\tscrollToAlignment={this.props.scrollToAlignment}\n\n\t\t\t\t\t\t\t\tsort={this.props.onSort}\n\t\t\t\t\t\t\t\tsortDirection={this.props.sortDirection}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.state.columns.map((column) => (\n\t\t\t\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\t\t\t\tkey={column.key}\n\t\t\t\t\t\t\t\t\t\t\tlabel={column.label}\n\t\t\t\t\t\t\t\t\t\t\tdataKey={column.key}\n\t\t\t\t\t\t\t\t\t\t\twidth={column.width}\n\t\t\t\t\t\t\t\t\t\t\tcolumnData={column}\n\t\t\t\t\t\t\t\t\t\t\tdisableSort={typeof this.props.sortColumns[column.key] === \"undefined\"}\n\t\t\t\t\t\t\t\t\t\t\tcellRenderer={column.isHTML ? this.cellRendererHTML : this.cellRenderer}\n\t\t\t\t\t\t\t\t\t\t\theaderRenderer={this.headerColRenderer}\n\t\t\t\t\t\t\t\t\t\t\t{...column.minWidth && { minWidth: column.minWidth }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</AutoSizer>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nVirtualizedTable.defaultProps = {\n\tdisableHeader: false\n};\n\nVirtualizedTable.propTypes = {\n\ttableLabel: PropTypes.string,\n\ttableHeight: PropTypes.number.isRequired,\n\tselectable: PropTypes.bool,\n\tsummaryTable: PropTypes.bool,\n\trowSelection: PropTypes.string,\n\tdisableHeader: PropTypes.bool,\n\tcolumns: PropTypes.array.isRequired,\n\trowCount: PropTypes.number.isRequired,\n\trowGetter: PropTypes.func.isRequired,\n\trowHeight: PropTypes.oneOfType([\n\t\tPropTypes.func.isRequired,\n\t\tPropTypes.number.isRequired\n\t]),\n\tonRowDoubleClick: PropTypes.func,\n\trowsSelected: PropTypes.array, // Required if selectable is true\n\tcheckedAll: PropTypes.bool, // Required if selectable is true\n\tsetRowsSelected: PropTypes.func, // Required if selectable is true\n\tsetAllRowsSelected: PropTypes.func, // Required if selectable is true\n\tscrollToIndex: PropTypes.number,\n\tscrollToAlignment: PropTypes.string,\n\tonSort: PropTypes.func,\n\tsortBy: PropTypes.string,\n\tsortColumns: PropTypes.object,\n\tsortDirection: PropTypes.string,\n\tonHeaderClick: PropTypes.func,\n\tscrollKey: PropTypes.string,\n\ttableState: PropTypes.string,\n\tlight: PropTypes.bool,\n\tintl: PropTypes.object.isRequired\n};\n\nexport default injectIntl(VirtualizedTable);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint complexity: [\"error\", 25] */\n/* eslint max-depth: [\"error\", 6] */\n\nimport React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { Search } from \"carbon-components-react\";\nimport VirtualizedTable from \"./../virtualized-table/virtualized-table.jsx\";\nimport { REM_ROW_HEIGHT, REM_HEADER_HEIGHT, ONE_REM_HEIGHT, SORT_DIRECTION, STATES, ROW_HEIGHT, ROW_SELECTION } from \"./../../constants/constants\";\nimport ReactResizeDetector from \"react-resize-detector\";\nimport classNames from \"classnames\";\nimport { has, isEmpty } from \"lodash\";\nimport defaultMessages from \"../../../../locales/common-properties/locales/en.json\";\n\nclass FlexibleTable extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst sortDirs = {};\n\t\tif (typeof this.props.sortable !== \"undefined\") {\n\t\t\tfor (var i = 0; i < this.props.sortable.length; i++) {\n\t\t\t\tconst sortCol = this.props.sortable[i];\n\t\t\t\tsortDirs[sortCol] = SORT_DIRECTION.NOT_SORTED;\n\t\t\t}\n\t\t}\n\t\tthis.state = {\n\t\t\tcheckedAllRows: false,\n\t\t\tcolumnSortDir: sortDirs,\n\t\t\tcurrentSortColumn: \"\",\n\t\t\ttableWidth: 0,\n\t\t\ttableHeight: 0,\n\t\t\trows: typeof props.rows !== \"undefined\" ? props.rows : 5.5,\n\t\t\tdynamicHeight: null\n\t\t};\n\n\t\tthis.rowHeight = this.rowHeight.bind(this);\n\t\tthis.rowGetter = this.rowGetter.bind(this);\n\n\t\tthis.getOriginalRowIndex = this.getOriginalRowIndex.bind(this);\n\t\tthis.getLastChildPropertyIdRow = this.getLastChildPropertyIdRow.bind(this);\n\n\t\tthis.calculateColumnWidths = this.calculateColumnWidths.bind(this);\n\t\tthis.handleFilterChange = this.handleFilterChange.bind(this);\n\t\tthis.onSort = this.onSort.bind(this);\n\t\tthis.sortHeaderClick = this.sortHeaderClick.bind(this);\n\t\tthis._updateTableWidth = this._updateTableWidth.bind(this);\n\t\tthis._adjustTableHeight = this._adjustTableHeight.bind(this);\n\t\tthis.handleCheckedRow = this.handleCheckedRow.bind(this);\n\t\tthis.handleCheckedAllRows = this.handleCheckedAllRows.bind(this);\n\t\tthis.handleCheckedMultipleRows = this.handleCheckedMultipleRows.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis._adjustTableHeight();\n\t\twindow.addEventListener(\"resize\", this._adjustTableHeight);\n\t\tthis.tableNode = ReactDOM.findDOMNode(this.refs.table);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevProps.rows !== this.props.rows ||\n\t\t\tprevProps.columns !== this.props.columns ||\n\t\t\tprevProps.noAutoSize !== this.props.noAutoSize) {\n\t\t\tthis._adjustTableHeight();\n\t\t}\n\n\t\t// Calculate if checkedAllRows is true\n\t\tif (this.props.selectedRows && !isEmpty(this.props.data)) {\n\t\t\tthis.setCheckedAll(this.props.selectedRows);\n\t\t}\n\n\t\tthis.tableNode = ReactDOM.findDOMNode(this.refs.table);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"resize\", this._adjustTableHeight);\n\t}\n\n\tonSort({ sortBy }) {\n\t\tif (this.props.onSort) {\n\t\t\tconst sortDirection = (this.state.columnSortDir[sortBy] === SORT_DIRECTION.ASC) ? SORT_DIRECTION.DESC : SORT_DIRECTION.ASC;\n\t\t\tconst spec = {\n\t\t\t\tcolumn: sortBy,\n\t\t\t\tdirection: sortDirection\n\t\t\t};\n\t\t\tthis.props.onSort(spec);\n\t\t}\n\t}\n\n\t/**\n\t* The current displayed row may have an index that is different from its actual index within the dataset\n\t* Given the current displayed row and index of the table,\n\t*  return its original row index from its row's propertyId\n\t*/\n\tgetOriginalRowIndex(row, index) {\n\t\tlet rowIndex = index;\n\t\tif (row.columns && has(row.columns[0], \"content.props.children.props.propertyId.propertyId\")) {\n\t\t\t// this is a nested control\n\t\t\trowIndex = this.getLastChildPropertyIdRow(row.columns[0].content.props.children.props.propertyId, index);\n\t\t} else if (row.columns && has(row.columns[0], \"content.props.children.props.propertyId.index\")) {\n\t\t\t// for rows that have multi-select controls in them\n\t\t\trowIndex = row.columns[0].content.props.children.props.propertyId.index;\n\t\t} else if (row.columns && has(row.columns[0], \"content.props.children.props.propertyId.row\")) {\n\t\t\trowIndex = row.columns[0].content.props.children.props.propertyId.row;\n\t\t} else if (typeof row.rowKey === \"number\") { // expression tables uses rowKey\n\t\t\trowIndex = parseInt(row.rowKey, 10);\n\t\t}\n\t\treturn rowIndex;\n\t}\n\n\t// Get the 'row' of the last child's propertyId\n\tgetLastChildPropertyIdRow(propertyId, defaultRowIndex) {\n\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\treturn this.getLastChildPropertyIdRow(propertyId.propertyId);\n\t\t}\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\treturn propertyId.row;\n\t\t}\n\t\treturn defaultRowIndex;\n\t}\n\n\t/**\n\t* The header checkAll box may change depending on the current visible rows\n\t* Determine if all visible rows in the table are currently selected\n\t*  and set the `checkedAllRows` state accordingly\n\t*/\n\tsetCheckedAll(selectedRows) {\n\t\tlet checkAll = true;\n\t\tfor (let idx = 0; idx < this.props.data.length; idx++) {\n\t\t\tconst row = this.props.data[idx];\n\t\t\tconst originalRowIndex = this.getOriginalRowIndex(row, idx);\n\t\t\tif (selectedRows.indexOf(originalRowIndex) < 0) {\n\t\t\t\tcheckAll = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (this.state.checkedAllRows !== checkAll) {\n\t\t\tthis.setState({ checkedAllRows: checkAll });\n\t\t}\n\t}\n\n\t/**\n\t* Calculate the width for each column to fit within the table\n\t* Widths provided in columns without 'px' are 'weighted' and will be scaled\n\t* Widths provided in columns with 'px' are used as is without scaling\n\t*   if width is provided with 'px', subtract that from the total available table width\n\t*   if width is provided, divide the column 'weighted' width with the max width from columns\n\t*     return the scaled factor\n\t*     multiply each column 'weighted' width with the scaled factor to get the actual width in pixels\n\t* @param columns column definitions\n\t* @param parentTableWidth\n\t*/\n\tcalculateColumnWidths(columns, parentTableWidth) {\n\t\tlet tableWidth = parentTableWidth - 12; // subtract 12 for the left padding scss $spacing-04\n\t\tif (this.props.rowSelection !== ROW_SELECTION.SINGLE) {\n\t\t\ttableWidth -= 40;\n\t\t}\n\t\tlet remainingColumns = columns.length; // keep track of how many columns to calculate width for\n\t\tlet maxWeight = 0;\n\n\t\tfor (const columnDef of columns) {\n\t\t\t// if columns have specific width subtract from total width\n\t\t\tif (columnDef.width) {\n\t\t\t\tif (typeof columnDef.width === \"string\" && columnDef.width.includes(\"px\")) {\n\t\t\t\t\ttableWidth -= parseInt(columnDef.width, 10);\n\t\t\t\t\tremainingColumns--;\n\t\t\t\t} else {\n\t\t\t\t\tmaxWeight = Math.max(maxWeight, columnDef.width); // keep track of which column has highest width provided\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst widths = [];\n\t\tconst defaultWidth = Math.floor(tableWidth / remainingColumns); // use default width for columns without a weight\n\t\tconst weightedWidths = [];\n\t\tlet sumWeightedWidths = 0;\n\n\t\t// scale weight of columns with width provided\n\t\tfor (const columnDef of columns) {\n\t\t\tif (columnDef.width && !isNaN(columnDef.width)) {\n\t\t\t\tweightedWidths.push(columnDef.width / maxWeight);\n\t\t\t\tsumWeightedWidths += (columnDef.width / maxWeight);\n\t\t\t} else {\n\t\t\t\tweightedWidths.push(null);\n\t\t\t}\n\t\t}\n\n\t\tconst scaledWidth = tableWidth / sumWeightedWidths; // scaled width multiplier for each column with width provided\n\n\t\tlet sumColumnWidth = 0;\n\t\tfor (let idx = 0; idx < columns.length; idx++) {\n\t\t\tconst columnDef = columns[idx];\n\t\t\tif (columnDef.width) {\n\t\t\t\t// use the width provided with 'px' as is\n\t\t\t\tif (typeof columnDef.width === \"string\" && columnDef.width.includes(\"px\")) {\n\t\t\t\t\twidths.push(Math.floor(parseInt(columnDef.width, 10)) + \"px\");\n\t\t\t\t\tsumColumnWidth += parseInt(columnDef.width, 10);\n\t\t\t\t} else { // multiply the width provided by the scaled width\n\t\t\t\t\tconst calculatedWidth = Math.floor(weightedWidths[idx] * scaledWidth);\n\t\t\t\t\twidths.push(calculatedWidth + \"px\");\n\t\t\t\t\tsumColumnWidth += calculatedWidth;\n\t\t\t\t}\n\t\t\t} else { // if no width provided, use the defaultWidth\n\t\t\t\twidths.push(defaultWidth);\n\t\t\t\tsumColumnWidth += defaultWidth;\n\t\t\t}\n\t\t}\n\n\t\t// if any columns had decimals floored, allocate additional space to the first column\n\t\tlet compare = parentTableWidth;\n\t\tif (this.props.rowSelection !== ROW_SELECTION.SINGLE) {\n\t\t\tcompare -= 40;\n\t\t}\n\n\t\tif (sumColumnWidth < compare) {\n\t\t\tconst firstColWith = parseInt(widths[0], 10);\n\t\t\twidths[0] = firstColWith + compare - sumColumnWidth + \"px\";\n\t\t}\n\n\t\treturn widths;\n\t}\n\n\t_updateTableWidth(width, height) {\n\t\tif (this.state.tableWidth !== Math.floor(width - 2)) {\n\t\t\tthis.setState({\n\t\t\t\ttableWidth: Math.floor(width - 2) // subtract 2 px for the borders\n\t\t\t});\n\t\t}\n\t}\n\n\t_adjustTableHeight() {\n\t\tif (this.props.noAutoSize) {\n\t\t\treturn;\n\t\t}\n\t\tlet newHeight = this.state.tableHeight;\n\t\tlet dynamicH = this.state.dynamicHeight;\n\t\tconst multiSelectTableHeight = REM_ROW_HEIGHT + REM_HEADER_HEIGHT;\n\t\tif (Array.isArray(this.props.data) && this.props.data.length < this.state.rows) {\n\t\t\tnewHeight = (REM_ROW_HEIGHT * this.props.data.length + REM_HEADER_HEIGHT + (this.props.selectedEditRow ? multiSelectTableHeight : 0)) + \"rem\";\n\t\t} else if (this.state.rows > 0) {\n\t\t\tnewHeight = (REM_ROW_HEIGHT * this.state.rows + REM_HEADER_HEIGHT + (this.props.selectedEditRow ? multiSelectTableHeight : 0)) + \"rem\";\n\t\t} else if (this.state.rows === 0) { // only display header\n\t\t\tnewHeight = REM_HEADER_HEIGHT + \"rem\";\n\t\t} else if (this.state.rows === -1) {\n\t\t\tif (this.flexibleTable) {\n\t\t\t\tconst labelAndDescriptionHeight = 50; // possible dynamically set this in the future\n\t\t\t\tconst ftHeaderHeight = (typeof this.flexibleTableHeader !== \"undefined\") ? ReactDOM.findDOMNode(this.flexibleTableHeader).getBoundingClientRect().height : 0;\n\t\t\t\tconst flyoutHeight = this.findPropertyNodeHeight(this.flexibleTable, \"properties-wf-children\");\n\t\t\t\tif (flyoutHeight === 0) {\n\t\t\t\t\tnewHeight = \"100vh\"; // set full window height if flyout height not found\n\t\t\t\t\tdynamicH = -1;\n\t\t\t\t} else {\n\t\t\t\t\tnewHeight = `calc(${flyoutHeight - ftHeaderHeight - labelAndDescriptionHeight}px - 3.5rem)`; // 3.5rem to adjust padding\n\t\t\t\t\tdynamicH = (flyoutHeight - ftHeaderHeight - labelAndDescriptionHeight) - (3.5 * 16);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (newHeight !== this.state.tableHeight) {\n\t\t\tthis.setState({ tableHeight: newHeight, dynamicHeight: dynamicH });\n\t\t}\n\t}\n\n\tfindPropertyNodeHeight(node, className) {\n\t\tif (node && node.parentNode && node.parentNode.className && node.parentNode.className.includes(className)) {\n\t\t\tconst foundNode = ReactDOM.findDOMNode(node.parentNode).getBoundingClientRect();\n\t\t\tif (foundNode) {\n\t\t\t\treturn foundNode.height;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else if (node && node.parentNode) {\n\t\t\treturn this.findPropertyNodeHeight(node.parentNode, className);\n\t\t}\n\t\treturn 0;\n\t}\n\n\tsortHeaderClick({ dataKey }) {\n\t\tconst colSortDir = this.state.columnSortDir;\n\t\tif (typeof colSortDir[dataKey] !== \"undefined\") {\n\t\t\t// At a time only 1 column will be shown as sorted. Revert other columns to not sorted.\n\t\t\tObject.keys(colSortDir).forEach((key) => {\n\t\t\t\tif (key !== dataKey) {\n\t\t\t\t\tcolSortDir[key] = SORT_DIRECTION.NOT_SORTED;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Only dataKey column will be sorted\n\t\t\tcolSortDir[dataKey] = (colSortDir[dataKey] === SORT_DIRECTION.ASC) ? SORT_DIRECTION.DESC : SORT_DIRECTION.ASC;\n\t\t\tthis.setState({\n\t\t\t\tcolumnSortDir: colSortDir,\n\t\t\t\tcurrentSortColumn: dataKey\n\t\t\t});\n\t\t}\n\t}\n\n\thandleFilterChange(evt) {\n\t\tif (this.props.onFilter) {\n\t\t\tthis.props.onFilter(evt.target.value);\n\t\t}\n\t}\n\n\thandleCheckedAllRows(checked) {\n\t\tlet selectAll = [];\n\t\tconst controlValue = this.props.data;\n\t\tif (checked) {\n\t\t\tselectAll = Array.from(this.props.selectedRows);\n\t\t\tfor (var rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\tconst originalRowIndex = this.getOriginalRowIndex(controlValue[rowIndex], rowIndex);\n\t\t\t\tselectAll.push(originalRowIndex);\n\t\t\t}\n\t\t}\n\t\tselectAll = Array.from(new Set(selectAll));\n\t\tthis.props.updateRowSelections(selectAll);\n\t\tthis.setState({ checkedAllRows: checked });\n\t}\n\n\t/**\n\t* This method is called when user wants to select multiple rows using shift key\n\t* Select/deselect all rows between lastCheckedRow and existingRow\n\t* @param lastCheckedRow (integer) - index of last selected row\n\t* @param existingRow (integer) - index of row where shift key is clicked\n\t* @param checked (boolean) - rows are to be selected or deselected\n\t*/\n\thandleCheckedMultipleRows(lastCheckedRow, existingRow, checked) {\n\t\tlet selectedRows = this.props.selectedRows ? this.props.selectedRows : [];\n\t\t// Calculate rows between lastChecked row and existingRow\n\t\tlet inBetweenRows;\n\t\tif (lastCheckedRow < existingRow) {\n\t\t\tinBetweenRows = Array.from({ length: (existingRow - lastCheckedRow) + 1 }, (_, i) => lastCheckedRow + i);\n\t\t} else {\n\t\t\tinBetweenRows = Array.from({ length: (lastCheckedRow - existingRow) + 1 }, (_, i) => existingRow + i);\n\t\t}\n\t\t// if selectedRows already has inBetweenRows, remove them first\n\t\tselectedRows = selectedRows.filter((row) => !inBetweenRows.includes(row)); // Deselecting inBetweenRows using shift key\n\t\tif (checked) {\n\t\t\tselectedRows = selectedRows.concat(inBetweenRows); \t// Selecting inBetweenRows using shift key\n\t\t}\n\t\treturn selectedRows;\n\t}\n\n\thandleCheckedRow(data, evt) {\n\t\tconst dataRowIndex = data.originalRowIndex; // Use the originalRowIndex for selection in case rows are filtered.\n\t\tconst displayedRowIndex = data.index;\n\t\tconst checked = data.selected;\n\t\tconst overSelectOption = data.isOverSelectOption;\n\n\t\tif (!this.props.data[displayedRowIndex].disabled && typeof this.props.updateRowSelections === \"function\") {\n\t\t\tif (overSelectOption) { // Checkbox is clicked\n\t\t\t\tlet current = this.props.selectedRows ? this.props.selectedRows : [];\n\t\t\t\tif (data.selectMultipleRows) { // multiple rows selected/deselected using shift key\n\t\t\t\t\tcurrent = this.handleCheckedMultipleRows(data.lastCheckedRow, displayedRowIndex, checked);\n\t\t\t\t\tthis.setCheckedAll(current);\n\t\t\t\t} else if (checked) { // single row selected\n\t\t\t\t\tcurrent = current.concat(dataRowIndex);\n\t\t\t\t\tthis.setCheckedAll(current);\n\t\t\t\t} else if (current) { // single row  deselected\n\t\t\t\t\tcurrent = current.filter(function(element) {\n\t\t\t\t\t\treturn element !== dataRowIndex;\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({ checkedAllRows: false });\n\t\t\t\t}\n\t\t\t\t// Sort ascending because we want to add selected rows in the same order as they're displayed in the table\n\t\t\t\tcurrent.sort((a, b) => a - b);\n\t\t\t\tthis.props.updateRowSelections(current);\n\t\t\t} else if (this.props.rowSelection === ROW_SELECTION.SINGLE) { // Table row is clicked\n\t\t\t\tthis.props.updateRowSelections(data.index, evt, this.props.data[data.index].rowKey);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t* Generate the table header specs from this.props.columns\n\t* this.props.columns: array of objects\n\t* [\n\t*   {\n\t*     \"key\": string,\n\t*     \"label\": string,\n\t*     \"width\": integer or string if containts 'px',\n\t*     \"description\": optional string,\n\t*     \"resizable\": optional boolean,\n\t*     \"staticWidth\": optional boolean - This is a special property added only for SPSS modeler which directly calls FlexibleTable. This property is NOT a part of uiHints.\n\t*   }\n\t* ]\n\t* @param columnWidths\n\t*/\n\tgenerateTableHeaderRow(columnWidths) {\n\t\tconst headers = [];\n\t\tlet searchLabel = \"\";\n\t\tfor (var j = 0; j < this.props.columns.length; j++) {\n\t\t\tconst columnDef = this.props.columns[j];\n\t\t\tif (typeof this.props.filterable !== \"undefined\" && this.props.filterable[0] === columnDef.key) {\n\t\t\t\tsearchLabel = columnDef.label;\n\t\t\t}\n\t\t\tconst width = Math.abs(parseInt(columnWidths[j], 10));\n\t\t\tlet headerLabel;\n\t\t\tif (typeof (columnDef.label) === \"object\") {\n\t\t\t\theaderLabel = columnDef.label.props.labelText;\n\t\t\t} else if (typeof (columnDef.label) === \"string\") {\n\t\t\t\theaderLabel = columnDef.label;\n\t\t\t}\n\t\t\theaders.push({\n\t\t\t\tkey: columnDef.key,\n\t\t\t\tlabel: columnDef.label,\n\t\t\t\twidth: width,\n\t\t\t\tdescription: columnDef.description,\n\t\t\t\theaderLabel: headerLabel,\n\t\t\t\tresizable: columnDef.resizable,\n\t\t\t\toperation: columnDef.operation,\n\t\t\t\tstaticWidth: columnDef.staticWidth ? columnDef.staticWidth : false // Used to exclude a column from resizing. If true, \"resizable\" value will be ignored.\n\t\t\t});\n\t\t}\n\t\treturn {\n\t\t\theaders: headers,\n\t\t\tsearchLabel: searchLabel\n\t\t};\n\t}\n\n\t/**\n\t* Callback responsible for returning a data row given an index\n\t*/\n\trowGetter({ index }) {\n\t\tconst row = this.props.data[index];\n\t\tconst originalRowIndex = this.getOriginalRowIndex(row, index);\n\n\t\tconst columns = {};\n\t\tif (row.columns) {\n\t\t\tfor (let cidx = 0; cidx < row.columns.length; cidx++) {\n\t\t\t\tconst column = row.columns[cidx];\n\t\t\t\tcolumns[column.column] = column.content;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, columns, {\n\t\t\tloading: false,\n\t\t\tindex: index,\n\t\t\toriginalRowIndex: originalRowIndex,\n\t\t\trowKey: typeof row.rowKey !== \"undefined\" ? row.rowKey : this.props.scrollKey + \"-row-\" + index,\n\t\t\tdisabled: row.disabled\n\t\t});\n\t}\n\n\t// Function that returns the height of a row given its index\n\trowHeight({ index }) {\n\t\treturn ROW_HEIGHT;\n\t}\n\n\trender() {\n\t\tconst tableWidth = this.state.tableWidth;\n\t\tconst columnWidths = this.calculateColumnWidths(this.props.columns, tableWidth);\n\t\tconst headerInfo = this.generateTableHeaderRow(columnWidths);\n\n\t\tconst headers = headerInfo.headers;\n\t\tconst searchLabel = headerInfo.searchLabel;\n\t\tconst disabled = this.props.tableState === STATES.DISABLED;\n\n\t\tlet searchBar = null;\n\n\t\tif (typeof this.props.filterable !== \"undefined\" && this.props.filterable.length !== 0) {\n\t\t\tconst placeHolder = this.props.intl.formatMessage(\n\t\t\t\t{ id: \"table.search.placeholder\", defaultMessage: defaultMessages[\"table.search.placeholder\"] },\n\t\t\t\t{ column_name: searchLabel }\n\t\t\t);\n\t\t\tconst searchBarLabel = this.props.intl.formatMessage(\n\t\t\t\t{ id: \"table.search.label\", defaultMessage: defaultMessages[\"table.search.label\"] },\n\t\t\t\t{ table_name: this.props.tableLabel }\n\t\t\t);\n\n\t\t\tsearchBar = (\n\t\t\t\t<div className={classNames(\"properties-ft-search-container\", { \"disabled\": disabled })}>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tclassName=\"properties-ft-search-text\"\n\t\t\t\t\t\tplaceholder={placeHolder}\n\t\t\t\t\t\tonChange={this.handleFilterChange}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tlabelText={searchBarLabel}\n\t\t\t\t\t\tlight={this.props.light}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet scrollIndex = -1;\n\t\tif (typeof this.props.scrollToRow !== \"undefined\" && this.props.scrollToRow !== null) {\n\t\t\tscrollIndex = this.props.scrollToRow;\n\t\t}\n\n\t\tlet heightStyle = {};\n\t\tif (!this.props.noAutoSize) {\n\t\t\theightStyle = { height: this.state.tableHeight };\n\t\t}\n\n\t\tconst containerClass = this.props.showHeader ? \"properties-ft-container-absolute \" : \"properties-ft-container-absolute-noheader \";\n\t\tconst messageClass = (!this.props.messageInfo) ? containerClass + STATES.INFO : containerClass;\n\t\tconst ftHeader = (searchBar || this.props.topRightPanel)\n\t\t\t? (<div className=\"properties-ft-table-header\" ref={ (ref) => (this.flexibleTableHeader = ref) }>\n\t\t\t\t{searchBar}\n\t\t\t\t{this.props.topRightPanel}\n\t\t\t</div>)\n\t\t\t: null;\n\n\t\tconst emptyTableContent = isEmpty(this.props.data)\n\t\t\t? (\n\t\t\t\t<div className=\"properties-ft-empty-table\">\n\t\t\t\t\t{this.props.emptyTablePlaceholder}\n\t\t\t\t</div>\n\t\t\t)\n\t\t\t: null;\n\n\t\tconst ftClassname = classNames(\"properties-ft-control-container\", { \"properties-light-disabled\": !this.props.light });\n\n\t\tlet tableHeight = 0;\n\t\tconst multiSelectEditRowsRem = 2 * REM_HEADER_HEIGHT; // multi-select adds two rows when selectedEditRow\n\t\tconst multiSelectEditRowsPixels = multiSelectEditRowsRem * ONE_REM_HEIGHT;\n\t\tif (this.state.rows !== -1 && this.state.tableHeight) {\n\t\t\tconst remHeight = parseInt(this.state.tableHeight, 10);\n\t\t\ttableHeight = (remHeight - (this.props.selectedEditRow ? multiSelectEditRowsRem : 0)) * ONE_REM_HEIGHT;\n\t\t} else if (this.state.rows === -1 && this.state.dynamicHeight && this.state.dynamicHeight !== -1) {\n\t\t\ttableHeight = this.state.dynamicHeight - (this.props.selectedEditRow ? multiSelectEditRowsPixels : 0);\n\t\t}\n\n\t\treturn (\n\t\t\t<div data-id={\"properties-ft-\" + this.props.scrollKey} className={ftClassname} ref={ (ref) => (this.flexibleTable = ref) }>\n\t\t\t\t{ftHeader}\n\t\t\t\t<div className=\"properties-ft-container-panel\">\n\t\t\t\t\t<ReactResizeDetector handleWidth onResize={this._updateTableWidth}>\n\t\t\t\t\t\t<div className={classNames(\"properties-ft-container-wrapper\", this.props.messageInfo ? this.props.messageInfo.type : \"\")} style={ heightStyle }>\n\t\t\t\t\t\t\t<div className={messageClass}>\n\t\t\t\t\t\t\t\t{this.props.selectedEditRow}\n\t\t\t\t\t\t\t\t<VirtualizedTable\n\t\t\t\t\t\t\t\t\ttableLabel={this.props.tableLabel}\n\t\t\t\t\t\t\t\t\ttableHeight={tableHeight}\n\t\t\t\t\t\t\t\t\tcolumns={headers}\n\t\t\t\t\t\t\t\t\tonHeaderClick={this.sortHeaderClick}\n\t\t\t\t\t\t\t\t\trowCount={this.props.data.length}\n\t\t\t\t\t\t\t\t\trowHeight={this.rowHeight}\n\t\t\t\t\t\t\t\t\trowGetter={this.rowGetter}\n\t\t\t\t\t\t\t\t\tsummaryTable={this.props.summaryTable}\n\t\t\t\t\t\t\t\t\tselectable={typeof this.props.updateRowSelections !== \"undefined\"}\n\t\t\t\t\t\t\t\t\trowSelection={this.props.rowSelection}\n\t\t\t\t\t\t\t\t\tdisableHeader={!this.props.showHeader}\n\t\t\t\t\t\t\t\t\tonRowDoubleClick={this.props.onRowDoubleClick}\n\t\t\t\t\t\t\t\t\trowsSelected={this.props.selectedRows}\n\t\t\t\t\t\t\t\t\tcheckedAll={this.state.checkedAllRows}\n\t\t\t\t\t\t\t\t\tsetRowsSelected={this.handleCheckedRow}\n\t\t\t\t\t\t\t\t\tsetAllRowsSelected={this.handleCheckedAllRows}\n\t\t\t\t\t\t\t\t\tscrollKey={this.props.scrollKey}\n\t\t\t\t\t\t\t\t\tonSort={this.onSort}\n\t\t\t\t\t\t\t\t\tsortBy={this.state.currentSortColumn}\n\t\t\t\t\t\t\t\t\tsortColumns={this.state.columnSortDir}\n\t\t\t\t\t\t\t\t\tsortDirection={this.state.columnSortDir[this.state.currentSortColumn]}\n\t\t\t\t\t\t\t\t\ttableState={this.props.tableState}\n\t\t\t\t\t\t\t\t\tlight={this.props.light}\n\t\t\t\t\t\t\t\t\t{...(scrollIndex !== -1 && { scrollToIndex: scrollIndex, scrollToAlignment: \"center\" })}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ReactResizeDetector>\n\t\t\t\t</div>\n\t\t\t\t{emptyTableContent}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nFlexibleTable.defaultProps = {\n\tshowHeader: true,\n\tlight: true,\n\temptyTablePlaceholder: \"\"\n};\n\nFlexibleTable.propTypes = {\n\tsortable: PropTypes.array,\n\tcolumns: PropTypes.array.isRequired,\n\tdata: PropTypes.array.isRequired,\n\temptyTablePlaceholder: PropTypes.string,\n\tfilterable: PropTypes.array,\n\tfilterBy: PropTypes.string,\n\tfilterKeyword: PropTypes.string,\n\thideFilterInput: PropTypes.func,\n\tscrollToRow: PropTypes.number,\n\tonSort: PropTypes.func,\n\tonFilter: PropTypes.func,\n\tshowHeader: PropTypes.bool,\n\tselectedEditRow: PropTypes.object,\n\ttopRightPanel: PropTypes.object,\n\tscrollKey: PropTypes.string,\n\ttableLabel: PropTypes.string,\n\trows: PropTypes.number,\n\tnoAutoSize: PropTypes.bool,\n\ttableState: PropTypes.string,\n\tmessageInfo: PropTypes.object,\n\tupdateRowSelections: PropTypes.func,\n\tonRowDoubleClick: PropTypes.func,\n\tselectedRows: PropTypes.array,\n\trowSelection: PropTypes.string,\n\tsummaryTable: PropTypes.bool,\n\tlight: PropTypes.bool,\n\tintl: PropTypes.object.isRequired\n};\n\nexport default injectIntl(FlexibleTable);\n"],"names":["baseHasIn","object","key","Object","hasPath","require$$1","hasIn_1","path","_matchesStrictComparable","srcValue","undefined","baseIsMatch","require$$0","getMatchData","matchesStrictComparable","require$$2","baseIsEqual","get","hasIn","isKey","require$$3","isStrictComparable","require$$4","require$$5","toKey","require$$6","baseGet","baseProperty","basePropertyDeep","baseMatches","source","matchData","length","baseMatchesProperty","objValue","COMPARE_PARTIAL_FLAG","identity","isArray","property","_baseIteratee","value","baseAssignValue","baseForOwn","baseIteratee","mapValues_1","iteratee","result","baseDifference","baseFlatten","isArrayLikeObject","last","differenceBy_1","array","values","VirtualizedTable","_React$Component","_inherits","_super","_createSuper","props","context","_this","_classCallCheck","call","state","rowCount","columns","columnResized","virtualizedTableRef","React","createRef","lastChecked","_isEmpty","rowsSelected","slice","pop","isOverSelectOption","mouseEventCalled","keyBoardEventCalled","cellRenderer","bind","_assertThisInitialized","selectAll","headerRowRenderer","headerColRenderer","onRowClick","overSelectOption","resizeColumn","_createClass","this","rowHeight","recomputeRowHeights","evt","rowData","index","target","className","stopPropagation","selected","isRowSelected","originalRowIndex","setRowsSelected","selectMultipleRows","shiftKey","lastCheckedRow","rowKey","onRowDoubleClick","i","operation","findIndex","column","deltaX","columnWiseDeltas","sort","a","b","width","totalDelta","widthOfAllColumns","reduce","prev","current","individualDelta","Math","round","headerLabel","MINIMUM_COLUMN_WIDTH","MINIMUM_COLUMN_WIDTH_WITHOUT_LABEL","_mapValues","indexOf","dataKey","isLastColumn","getColumnIndex","setAllRowsSelected","_ref","cellData","_ref2","createElement","dangerouslySetInnerHTML","__html","scrollKey","_ref3","style","checkboxLabelColumnIndex","getCheckboxLabelColumnIndex","headerCheckboxLabel","translatedHeaderCheckboxLabel","intl","formatMessage","id","defaultMessage","defaultMessages","header_checkbox_label","checkbox","selectable","rowSelection","ROW_SELECTION","SINGLE","role","Checkbox","concat","onChange","checked","checkedAll","labelText","hideLabel","_ref4","_this2","columnData","disableSort","label","sortBy","sortDirection","sortIcon","sortColumns","type","SORT_DIRECTION","ASC","ArrowUp16","disabled","tableState","STATES","DISABLED","DESC","ArrowDown16","ArrowsVertical16","tooltip","fontWeight","infoIcon","description","Tooltip","tip","direction","showToolTipOnClick","Information16","tooltipId","uuid4","resizeElem","resizable","Draggable","axis","defaultClassName","defaultClassNameDragging","onDrag","_ref5","position","x","zIndex","tabIndex","header","classNames","_ref6","_this3","setState","prevState","resizedColumnIndex","resizableColumns","filter","staticWidth","getColumnWiseDeltas","columnsToBeResized","keys","everyColumnHasZeroDelta","every","delta","forEach","columnKey","idx","col","_ref7","_this4","selectOption","selectedRow","rowDisabled","rowSelected","translatedRowCheckboxLabel","row_index","table_label","tableLabel","onMouseEnter","onMouseLeave","onFocus","onBlur","onKeyDown","code","summaryTable","loading","Loading","small","withOverlay","parseInt","newStyle","assign","onDoubleClick","onMouseDown","_this5","light","AutoSizer","_ref8","height","Table","ref","tableHeight","disableHeader","headerClassName","headerHeight","onHeaderClick","rowClassName","rowGetter","rowRenderer","scrollToIndex","scrollToAlignment","onSort","map","Column","_extends","isHTML","cellRendererHTML","headerRenderer","minWidth","nextProps","updatedState","_differenceBy","Component","defaultProps","injectIntl","FlexibleTable","sortDirs","sortable","NOT_SORTED","checkedAllRows","columnSortDir","currentSortColumn","tableWidth","rows","dynamicHeight","getOriginalRowIndex","getLastChildPropertyIdRow","calculateColumnWidths","handleFilterChange","sortHeaderClick","_updateTableWidth","_adjustTableHeight","handleCheckedRow","handleCheckedAllRows","handleCheckedMultipleRows","window","addEventListener","tableNode","ReactDOM","findDOMNode","refs","table","prevProps","noAutoSize","selectedRows","data","setCheckedAll","removeEventListener","spec","row","rowIndex","_has","content","children","propertyId","defaultRowIndex","checkAll","parentTableWidth","_step","remainingColumns","maxWeight","_iterator","_createForOfIteratorHelper","s","n","done","columnDef","includes","max","err","e","f","_step2","widths","defaultWidth","floor","weightedWidths","sumWeightedWidths","_iterator2","isNaN","push","scaledWidth","sumColumnWidth","calculatedWidth","compare","firstColWith","newHeight","dynamicH","multiSelectTableHeight","REM_ROW_HEIGHT","REM_HEADER_HEIGHT","Array","selectedEditRow","flexibleTable","ftHeaderHeight","flexibleTableHeader","getBoundingClientRect","flyoutHeight","findPropertyNodeHeight","node","parentNode","foundNode","colSortDir","onFilter","controlValue","from","Set","updateRowSelections","existingRow","inBetweenRows","_","dataRowIndex","displayedRowIndex","element","columnWidths","headers","searchLabel","j","filterable","abs","_typeof","cidx","ROW_HEIGHT","headerInfo","generateTableHeaderRow","searchBar","placeHolder","column_name","searchBarLabel","table_name","Search","placeholder","size","scrollIndex","scrollToRow","heightStyle","containerClass","showHeader","messageClass","messageInfo","INFO","ftHeader","topRightPanel","emptyTableContent","emptyTablePlaceholder","ftClassname","multiSelectEditRowsRem","multiSelectEditRowsPixels","ONE_REM_HEIGHT","ReactResizeDetector","handleWidth","onResize"],"mappings":"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"}