{"version":3,"file":"common-properties-3acb7567.js","sources":["../node_modules/lodash/_basePickBy.js","../node_modules/lodash/_basePick.js","../node_modules/lodash/flatten.js","../node_modules/lodash/_flatRest.js","../node_modules/lodash/pick.js","../node_modules/lodash/_parent.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_baseUnset.js","../node_modules/lodash/isPlainObject.js","../node_modules/lodash/_customOmitClone.js","../node_modules/lodash/omit.js","../src/common-properties/components/properties-modal/properties-modal.jsx","../src/common-properties/components/properties-modal/index.js","../src/common-properties/components/properties-editor/properties-editor.jsx","../src/common-properties/components/properties-editor/index.js","../src/common-properties/panels/tearsheet/tearsheet.jsx","../src/common-properties/components/main-editor-properties-buttons/main-editor-properties-buttons.jsx","../src/common-properties/actions.js","../src/common-properties/panels/selector/selector.jsx","../src/common-properties/components/wide-flyout/wide-flyout.jsx","../src/common-properties/components/wide-flyout/index.js","../src/common-properties/util/control-utils.js","../src/common-properties/panels/summary/summary.jsx","../src/common-properties/panels/twisty/twisty.jsx","../src/common-properties/panels/sub-panel/invoker.jsx","../src/common-properties/panels/sub-panel/button.jsx","../src/common-properties/panels/column/column.jsx","../src/common-properties/panels/control/control.jsx","../src/common-properties/panels/subtabs/subtabs.jsx","../src/common-properties/panels/text-panel/text-panel.jsx","../src/common-properties/panels/action-panel/action-panel.jsx","../src/common-properties/actions/button/button.jsx","../src/common-properties/actions/image/image.jsx","../src/common-properties/actions/action-factory.js","../src/common-properties/components/editor-form/editor-form.jsx","../node_modules/lodash/propertyOf.js","../src/common-properties/util/L10nProvider.js","../src/common-properties/form/GroupInfo.js","../src/common-properties/form/ActionInfo.js","../src/common-properties/form/ParameterInfo.js","../src/common-properties/form/ButtonInfo.js","../src/common-properties/form/StructureInfo.js","../src/common-properties/form/PropertyDef.js","../src/common-properties/form/ControlInfo.js","../src/common-properties/form/UIItem.js","../src/common-properties/form/EditorForm.js","../src/common-properties/form/Conditions.js","../src/common-properties/form/Form.js","../src/command-actions/commonPropertiesAction.js","../node_modules/lodash/_createAssigner.js","../node_modules/lodash/assign.js","../src/common-properties/reducers/properties.js","../src/common-properties/reducers/control-states.js","../src/common-properties/reducers/panel-states.js","../src/common-properties/reducers/action-states.js","../src/common-properties/reducers/error-messages.js","../src/common-properties/reducers/dataset-metadata.js","../src/common-properties/reducers/row-selections.js","../src/common-properties/reducers/row-static.js","../src/common-properties/reducers/component-metadata.js","../src/common-properties/reducers/disable-row-move-buttons.js","../src/common-properties/reducers/save-button-disable.js","../src/common-properties/reducers/wide-flyout-primary-button-disable.js","../src/common-properties/reducers/properties-settings.js","../src/common-properties/reducers/tearsheet-states.js","../src/common-properties/properties-store.js","../src/common-properties/ui-conditions/ui-conditions-parser.js","../src/common-properties/controls/expression/expressionInfo-parser.js","../src/common-properties/ui-conditions/ui-groups-parser.js","../node_modules/lodash/unionWith.js","../node_modules/lodash/_baseIntersection.js","../node_modules/lodash/_castArrayLikeObject.js","../node_modules/lodash/intersectionWith.js","../src/common-properties/ui-conditions/ui-conditions.js","../src/common-properties/ui-conditions/conditions-utils.js","../node_modules/lodash/intersection.js","../src/common-properties/components/validation-message/validation-message.jsx","../src/common-properties/components/validation-message/index.js","../src/common-properties/controls/readonly/readonly.jsx","../src/common-properties/controls/textfield/textfield.jsx","../src/common-properties/controls/toggletext/toggletext.jsx","../src/common-properties/controls/textarea/textarea.jsx","../src/common-properties/controls/numberfield/numberfield.jsx","../node_modules/lodash/toFinite.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/findIndex.js","../src/common-properties/components/table-buttons/table-buttons.jsx","../src/common-properties/panels/sub-panel/cell.jsx","../src/common-properties/controls/abstract-table.jsx","../src/common-properties/components/empty-table/empty-table.jsx","../src/common-properties/components/empty-table/index.js","../src/common-properties/components/moveable-table-rows/moveable-table-rows.jsx","../src/common-properties/controls/list/list.jsx","../src/common-properties/controls/expression/expression-builder/expression-select-field-function.jsx","../src/common-properties/controls/expression/expression-builder/expression-select-operator.jsx","../src/common-properties/controls/expression/expression-builder/expression-selection-panel.jsx","../src/common-properties/controls/expression/expression-builder/expression-builder.jsx","../src/common-properties/controls/expression/expression-toggle/expression-toggle.jsx","../src/common-properties/controls/expression/languages/python-hint.js","../src/common-properties/controls/expression/languages/r-hint.js","../src/common-properties/controls/expression/languages/CLEM-hint.js","../src/common-properties/controls/expression/expression.jsx","../src/common-properties/controls/passwordfield/passwordfield.jsx","../src/common-properties/controls/datefield/datefield.jsx","../src/common-properties/controls/timefield/timefield.jsx","../src/common-properties/controls/checkbox/checkbox.jsx","../src/common-properties/controls/toggle/toggle.jsx","../src/common-properties/controls/checkboxset/checkboxset.jsx","../src/common-properties/controls/radioset/radioset.jsx","../src/common-properties/controls/dropdown/dropdown.jsx","../src/common-properties/controls/multiselect/multiselect.jsx","../src/common-properties/controls/someofselect/someofselect.jsx","../src/common-properties/controls/selectcolumns/selectcolumns.jsx","../src/common-properties/controls/structureeditor/structureeditor.jsx","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/reject.js","../node_modules/lodash/negate.js","../src/common-properties/controls/structuretable/structuretable.jsx","../src/common-properties/controls/structurelisteditor/structurelisteditor.jsx","../src/common-properties/controls/readonlytable/readonlytable.jsx","../src/common-properties/components/control-item/control-item.jsx","../src/common-properties/controls/control-factory.js","../src/common-properties/ui-conditions/condition-ops/cellNotEmpty.js","../src/common-properties/ui-conditions/condition-ops/colNotExists.js","../src/common-properties/ui-conditions/condition-ops/colDoesExists.js","../node_modules/lodash/_baseValues.js","../node_modules/lodash/values.js","../node_modules/lodash/includes.js","../src/common-properties/ui-conditions/condition-ops/contains.js","../src/common-properties/ui-conditions/condition-ops/equals.js","../src/common-properties/ui-conditions/condition-ops/greaterThan.js","../src/common-properties/ui-conditions/condition-ops/isEmpty.js","../src/common-properties/ui-conditions/condition-ops/isNotEmpty.js","../src/common-properties/ui-conditions/condition-ops/lessThan.js","../src/common-properties/ui-conditions/condition-ops/matches.js","../src/common-properties/ui-conditions/condition-ops/notContains.js","../src/common-properties/ui-conditions/condition-ops/notEquals.js","../src/common-properties/ui-conditions/condition-ops/notMatches.js","../src/common-properties/ui-conditions/condition-ops/isDateTime.js","../src/common-properties/ui-conditions/condition-ops/dmTypeEquals.js","../src/common-properties/ui-conditions/condition-ops/dmTypeNotEquals.js","../src/common-properties/ui-conditions/condition-ops/dmMeasurementEquals.js","../src/common-properties/ui-conditions/condition-ops/dmMeasurementNotEquals.js","../src/common-properties/ui-conditions/condition-ops/dmRoleEquals.js","../src/common-properties/ui-conditions/condition-ops/dmRoleNotEquals.js","../src/common-properties/ui-conditions/condition-ops/lengthEquals.js","../src/common-properties/ui-conditions/condition-ops/lengthLessThan.js","../src/common-properties/ui-conditions/condition-ops/lengthGreaterThan.js","../src/common-properties/ui-conditions/condition-ops/condition-ops.js","../src/common-properties/properties-controller.js","../src/common-properties/schema-validator/properties-schema-validator.js","../src/common-properties/components/title-editor/title-editor.jsx","../src/common-properties/properties-main/properties-main.jsx","../src/common-properties/common-properties.jsx"],"sourcesContent":["var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal } from \"carbon-components-react\";\nimport classNames from \"classnames\";\nimport { Portal } from \"react-portal\";\nimport { Size } from \"./../../constants/form-constants\";\nimport { CARBON_MODAL_SIZE_XSMALL, CARBON_MODAL_SIZE_SMALL, CARBON_MODAL_SIZE_LARGE } from \"./../../constants/constants\";\n\nexport default class PropertiesModal extends Component {\n\n\t// Map the editor_size in paramDef to the Carbon modal sizes\n\tgetCarbonModalSize() {\n\t\tswitch (this.props.bsSize) {\n\t\tcase Size.SMALL: return CARBON_MODAL_SIZE_XSMALL;\n\t\tcase Size.LARGE: return CARBON_MODAL_SIZE_LARGE;\n\t\tcase Size.MAX: return CARBON_MODAL_SIZE_LARGE;\n\t\tcase Size.MEDIUM:\n\t\tdefault: return CARBON_MODAL_SIZE_SMALL;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst modalSize = this.getCarbonModalSize();\n\n\t\treturn (\n\t\t\t<Portal>\n\t\t\t\t<Modal\n\t\t\t\t\tclassName={classNames(\"properties-modal\", { \"noButtons\": this.props.showPropertiesButtons === false }, this.props.classNames)}\n\t\t\t\t\topen\n\t\t\t\t\tmodalHeading={this.props.title}\n\t\t\t\t\tprimaryButtonText={this.props.applyLabel}\n\t\t\t\t\tsecondaryButtonText={this.props.rejectLabel}\n\t\t\t\t\tonRequestSubmit={this.props.okHandler}\n\t\t\t\t\tonSecondarySubmit={this.props.cancelHandler}\n\t\t\t\t\taria-label=\"\"\n\t\t\t\t\tsize={modalSize}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"properties-modal-children\">\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t</Portal>\n\t\t);\n\t}\n}\n\nPropertiesModal.propTypes = {\n\tcancelHandler: PropTypes.func,\n\tokHandler: PropTypes.func,\n\tbsSize: PropTypes.string,\n\ttitle: PropTypes.string,\n\tchildren: PropTypes.element,\n\tshowPropertiesButtons: PropTypes.bool,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\tclassNames: PropTypes.string\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropertiesModal from \"./properties-modal.jsx\";\nexport default PropertiesModal;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PropertiesButtons from \"./../properties-buttons\";\n\nexport default class PropertiesEditor extends Component {\n\n\trender() {\n\t\tconst classSize = (typeof this.props.bsSize === \"undefined\") ? \"large\" : this.props.bsSize;\n\t\tconst propertyEditingClass = \"properties-editing properties-\" + classSize;\n\t\tconst buttons = (<PropertiesButtons\n\t\t\tokHandler={this.props.okHandler}\n\t\t\tcancelHandler={this.props.cancelHandler}\n\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\tshowPropertiesButtons={this.props.showPropertiesButtons}\n\t\t/>);\n\n\t\treturn (\n\t\t\t<div className={propertyEditingClass} >\n\t\t\t\t<h2>{this.props.title}</h2>\n\t\t\t\t<div className=\"properties-body\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t\t{buttons}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nPropertiesEditor.propTypes = {\n\tcancelHandler: PropTypes.func,\n\tokHandler: PropTypes.func,\n\tbsSize: PropTypes.string,\n\ttitle: PropTypes.string,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\tchildren: PropTypes.element,\n\tshowPropertiesButtons: PropTypes.bool\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropertiesEditor from \"./properties-editor.jsx\";\nexport default PropertiesEditor;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { ComposedModal, ModalHeader, ModalBody } from \"carbon-components-react\";\nimport { Portal } from \"react-portal\";\n\nimport PropertiesButtons from \"../../components/properties-buttons\";\n\nclass TearSheet extends Component {\n\trender() {\n\t\tconst title = this.props.tearsheet ? this.props.tearsheet.title : null;\n\t\tconst description = this.props.tearsheet ? this.props.tearsheet.description : null;\n\t\tconst content = this.props.tearsheet ? this.props.tearsheet.content : null;\n\t\tconst displayFooterButtons = this.props.showPropertiesButtons && !this.props.applyOnBlur;\n\t\tconst displayTabs = !Array.isArray(content);\n\n\t\tconst buttons = this.props.applyOnBlur\n\t\t\t? null\n\t\t\t: (<PropertiesButtons\n\t\t\t\tokHandler={this.props.okHandler}\n\t\t\t\tcancelHandler={this.props.cancelHandler}\n\t\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\t\tshowPropertiesButtons={this.props.showPropertiesButtons}\n\t\t\t/>);\n\n\t\treturn (\n\t\t\t<Portal>\n\t\t\t\t<ComposedModal\n\t\t\t\t\tclassName={classNames(\"properties-tearsheet-panel\", { \"properties-tearsheet-stacked\": this.props.stacked })}\n\t\t\t\t\topen={this.props.open}\n\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\tpreventCloseOnClickOutside\n\t\t\t\t>\n\t\t\t\t\t<ModalHeader\n\t\t\t\t\t\tclassName={classNames(\"properties-tearsheet-header\",\n\t\t\t\t\t\t\t{ \"with-buttons\": displayFooterButtons },\n\t\t\t\t\t\t\t{ \"with-tabs\": displayTabs },\n\t\t\t\t\t\t\t{ \"hide-close-button\": typeof this.props.onCloseCallback !== \"function\" })}\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tbuttonOnClick={this.props.onCloseCallback}\n\t\t\t\t\t>\n\t\t\t\t\t\t{description ? (<p>{description}</p>) : null}\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className={classNames(\"properties-tearsheet-body\",\n\t\t\t\t\t\t{ \"with-buttons\": displayFooterButtons },\n\t\t\t\t\t\t{ \"with-tabs\": displayTabs })}\n\t\t\t\t\t>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t{buttons}\n\t\t\t\t</ComposedModal>\n\t\t\t</Portal>);\n\t}\n}\nTearSheet.propTypes = {\n\topen: PropTypes.bool,\n\tstacked: PropTypes.bool,\n\tonCloseCallback: PropTypes.func,\n\ttearsheet: PropTypes.shape({\n\t\ttitle: PropTypes.string.isRequired,\n\t\tdescription: PropTypes.string,\n\t\tcontent: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object\n\t\t])\n\t}),\n\tshowPropertiesButtons: PropTypes.bool,\n\tapplyLabel: PropTypes.string, // Required if showPropertiesButtons is true\n\trejectLabel: PropTypes.string, // Required if showPropertiesButtons is true\n\tokHandler: PropTypes.func, // Required if showPropertiesButtons is true\n\tcancelHandler: PropTypes.func, // Required if showPropertiesButtons is true\n\tapplyOnBlur: PropTypes.bool.isRequired\n};\n\nTearSheet.defaultProps = {\n\topen: false,\n\tshowPropertiesButtons: false,\n\tapplyOnBlur: false,\n\tstacked: false\n};\n\nexport default TearSheet;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport PropertiesButtons from \"../properties-buttons\";\n\n\nclass MainEditorPropertiesButtons extends Component {\n\n\tshouldEnabledSaveButton() {\n\t\tif (this.props.saveButtonEnabled) {\n\t\t\tif (this.props.disableSaveOnRequiredErrors) {\n\t\t\t\t// Return false if any required fields are not filled in\n\t\t\t\treturn Object.keys(this.props.requiredErrorMessages).length === 0;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\trender() {\n\t\tconst saveButtonEnabled = this.shouldEnabledSaveButton();\n\t\treturn (<PropertiesButtons\n\t\t\tokHandler={this.props.okHandler}\n\t\t\tcancelHandler={this.props.cancelHandler}\n\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\tshowPropertiesButtons={this.props.showPropertiesButtons}\n\t\t\tapplyButtonEnabled={saveButtonEnabled}\n\t\t/>);\n\t}\n}\n\nMainEditorPropertiesButtons.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tokHandler: PropTypes.func,\n\tcancelHandler: PropTypes.func,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\tshowPropertiesButtons: PropTypes.bool,\n\tdisableSaveOnRequiredErrors: PropTypes.bool,\n\tsaveButtonEnabled: PropTypes.bool, // pass in by redux\n\trequiredErrorMessages: PropTypes.object // pass in by redux\n};\n\nMainEditorPropertiesButtons.defaultProps = {\n\tsaveButtonEnabled: true\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tsaveButtonEnabled: !ownProps.controller.getSaveButtonDisable(),\n\trequiredErrorMessages: ownProps.controller.getRequiredErrorMessages()\n});\n\nexport default connect(mapStateToProps, null)(MainEditorPropertiesButtons);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * action types\n */\n\nexport const SET_PROPERTY_VALUES = \"SET_PROPERTY_VALUES\";\nexport const UPDATE_PROPERTY_VALUE = \"UPDATE_PROPERTY_VALUE\";\nexport const REMOVE_PROPERTY_VALUE = \"REMOVE_PROPERTY_VALUE\";\nexport const SET_CONTROL_STATES = \"SET_CONTROL_STATES\";\nexport const UPDATE_CONTROL_STATE = \"UPDATE_CONTROL_STATE\";\nexport const SET_PANEL_STATES = \"SET_PANEL_STATES\";\nexport const UPDATE_PANEL_STATE = \"UPDATE_PANEL_STATE\";\nexport const SET_ACTION_STATES = \"SET_ACTION_STATES\";\nexport const UPDATE_ACTION_STATE = \"UPDATE_ACTION_STATE\";\nexport const SET_ERROR_MESSAGES = \"SET_ERROR_MESSAGES\";\nexport const UPDATE_ERROR_MESSAGE = \"UPDATE_ERROR_MESSAGE\";\nexport const CLEAR_ERROR_MESSAGE = \"CLEAR_ERROR_MESSAGE\";\nexport const SET_DATASET_METADATA = \"SET_DATASET_METADATA\";\nexport const UPDATE_SELECTED_ROWS = \"UPDATE_SELECTED_ROWS\";\nexport const CLEAR_SELECTED_ROWS = \"CLEAR_SELECTED_ROWS\";\nexport const SET_TITLE = \"SET_TITLE\";\nexport const SET_ACTIVE_TAB = \"SET_ACTIVE_TAB\";\nexport const DISABLE_ROW_MOVE_BUTTONS = \"DISABLE_ROW_MOVE_BUTTONS\";\nexport const SET_SAVE_BUTTON_DISABLE = \"SET_SAVE_BUTTON_DISABLE\";\nexport const SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED = \"SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED\";\nexport const SET_ADD_REMOVE_ROWS = \"SET_ADD_REMOVE_ROWS\";\nexport const UPDATE_STATIC_ROWS = \"UPDATE_STATIC_ROWS\";\nexport const CLEAR_STATIC_ROWS = \"CLEAR_STATIC_ROWS\";\nexport const SET_TABLE_BUTTON_ENABLED = \"SET_TABLE_BUTTON_ENABLED\";\nexport const SET_HIDE_EDIT_BUTTON = \"SET_HIDE_EDIT_BUTTON\";\nexport const SET_ACTIVE_TEARSHEET = \"SET_ACTIVE_TEARSHEET\";\n\n\n/*\n * action creators\n */\nexport function setHideEditButton(disableState) {\n\treturn { type: SET_HIDE_EDIT_BUTTON, info: disableState };\n}\n\nexport function setPropertyValues(properties) {\n\treturn { type: SET_PROPERTY_VALUES, properties };\n}\n\nexport function updatePropertyValue(property) {\n\treturn { type: UPDATE_PROPERTY_VALUE, property };\n}\n\nexport function removePropertyValue(property) {\n\treturn { type: REMOVE_PROPERTY_VALUE, property };\n}\n\n\nexport function setControlStates(states) {\n\treturn { type: SET_CONTROL_STATES, states };\n}\n\nexport function updateControlState(state) {\n\treturn { type: UPDATE_CONTROL_STATE, state };\n}\n\nexport function setPanelStates(states) {\n\treturn { type: SET_PANEL_STATES, states };\n}\n\nexport function updatePanelState(state) {\n\treturn { type: UPDATE_PANEL_STATE, state };\n}\n\nexport function setActionStates(states) {\n\treturn { type: SET_ACTION_STATES, states };\n}\n\nexport function updateActionState(state) {\n\treturn { type: UPDATE_ACTION_STATE, state };\n}\n\n\nexport function setErrorMessages(messages) {\n\treturn { type: SET_ERROR_MESSAGES, messages };\n}\n\nexport function updateErrorMessage(message) {\n\treturn { type: UPDATE_ERROR_MESSAGE, message };\n}\n\nexport function clearErrorMessage(message) {\n\treturn { type: CLEAR_ERROR_MESSAGE, message };\n}\n\nexport function setDatasetMetadata(datasetMetadata) {\n\treturn { type: SET_DATASET_METADATA, datasetMetadata };\n}\n\nexport function updateSelectedRows(info) {\n\treturn { type: UPDATE_SELECTED_ROWS, info };\n}\n\nexport function clearSelectedRows(info) {\n\treturn { type: CLEAR_SELECTED_ROWS, info };\n}\n\nexport function setTitle(title) {\n\treturn { type: SET_TITLE, title };\n}\n\nexport function setActiveTab(activeTab) {\n\treturn { type: SET_ACTIVE_TAB, activeTab };\n}\n\nexport function disableRowMoveButtons(propertyIds) {\n\treturn { type: DISABLE_ROW_MOVE_BUTTONS, propertyIds };\n}\n\nexport function setSaveButtonDisable(disableState) {\n\treturn { type: SET_SAVE_BUTTON_DISABLE, disableState };\n}\n\nexport function setWideFlyoutPrimaryButtonDisabled(info) {\n\treturn { type: SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED, info };\n}\n\nexport function setAddRemoveRows(info) {\n\treturn { type: SET_ADD_REMOVE_ROWS, info };\n}\n\nexport function updateStaticRows(info) {\n\treturn { type: UPDATE_STATIC_ROWS, info };\n}\n\nexport function clearStaticRows(info) {\n\treturn { type: CLEAR_STATIC_ROWS, info };\n}\n\nexport function setTableButtonEnabled(info) {\n\treturn { type: SET_TABLE_BUTTON_ENABLED, info };\n}\n\nexport function setTearsheetState(tearsheetId) {\n\treturn { type: SET_ACTIVE_TEARSHEET, tearsheetId };\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass SelectorPanel extends React.Component {\n\n\trender() {\n\t\tlet panel = this.props.panel;\n\t\tif (typeof panel === \"undefined\") {\n\t\t\tpanel = <div className=\"properties-control-panel\" />;\n\t\t}\n\t\treturn (panel);\n\t}\n}\n\nSelectorPanel.propTypes = {\n\tpanels: PropTypes.object,\n\tdependsOn: PropTypes.string,\n\tcontroller: PropTypes.object.isRequired,\n\tpanel: PropTypes.object // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanel: ownProps.panels[ownProps.controller.getPropertyValue({ name: ownProps.dependsOn })]\n});\n\nexport default connect(mapStateToProps, null)(SelectorPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport PropertiesButtons from \"./../properties-buttons\";\nimport classNames from \"classnames\";\nimport { Portal } from \"react-portal\";\n\nexport default class WideFlyout extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tstyle: {\n\t\t\t\theight: 0\n\t\t\t}\n\t\t};\n\t\tthis.updateDimensions = this.updateDimensions.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateDimensions();\n\t\twindow.addEventListener(\"resize\", this.updateDimensions);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"resize\", this.updateDimensions);\n\t}\n\n\tupdateDimensions() {\n\t\tif (this.wideFlyout) {\n\t\t\t// used to find correct parent\n\t\t\tif (!this.commonPropertiesParent) {\n\t\t\t\tthis.commonPropertiesParent = this.findPropertyWrapper(this.wideFlyout);\n\t\t\t}\n\t\t\tif (this.commonPropertiesParent) {\n\t\t\t\tconst commonProperties = ReactDOM.findDOMNode(this.commonPropertiesParent).getBoundingClientRect();\n\t\t\t\tthis.setState({\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\theight: commonProperties.height + \"px\",\n\t\t\t\t\t\ttop: commonProperties.top + \"px\",\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tfindPropertyWrapper(node) {\n\t\tif (node && node.parentNode && node.parentNode.className && node.parentNode.className.includes(\"properties-right-flyout\")) {\n\t\t\treturn node.parentNode;\n\t\t} else if (node && node.parentNode) {\n\t\t\treturn this.findPropertyWrapper(node.parentNode);\n\t\t}\n\t\treturn null;\n\t}\n\n\trender() {\n\t\tconst overlay = (<div className={classNames(\"properties-wf-overlay\", { \"show\": this.props.show })} />);\n\t\tlet title;\n\t\tlet buttons;\n\t\tlet children;\n\t\tif (this.props.show) {\n\t\t\tif (this.props.title) {\n\t\t\t\ttitle = (<div className=\"properties-wf-title\">{this.props.title}</div>);\n\t\t\t}\n\t\t\tbuttons = (<PropertiesButtons\n\t\t\t\tokHandler={this.props.okHandler}\n\t\t\t\tcancelHandler={this.props.cancelHandler}\n\t\t\t\tshowPropertiesButtons={this.props.showPropertiesButtons}\n\t\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\t\tapplyButtonEnabled={this.props.okButtonEnabled}\n\t\t\t/>);\n\t\t\tchildren = (<div className=\"properties-wf-children\"> {this.props.children} </div>);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"properties-wf-modal\" ref={ (ref) => (this.wideFlyout = ref) }>\n\t\t\t\t<Portal node={this.commonPropertiesParent}>\n\t\t\t\t\t{ overlay }\n\t\t\t\t\t<div className={classNames(\"properties-wf-content\", { \"show\": this.props.show, \"properties-light-disabled\": !this.props.light })} style={this.state.style}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t\t{children}\n\t\t\t\t\t\t{buttons}\n\t\t\t\t\t</div>\n\t\t\t\t</Portal>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nWideFlyout.propTypes = {\n\tchildren: PropTypes.element,\n\tcancelHandler: PropTypes.func,\n\tokHandler: PropTypes.func,\n\tshow: PropTypes.bool,\n\tshowPropertiesButtons: PropTypes.bool,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\ttitle: PropTypes.string,\n\tlight: PropTypes.bool,\n\tokButtonEnabled: PropTypes.bool\n};\n\nWideFlyout.defaultProps = {\n\tshow: false,\n\tokButtonEnabled: true\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WideFlyout from \"./wide-flyout.jsx\";\nexport default WideFlyout;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { v4 as uuid4 } from \"uuid\";\nimport { TRUNCATE_LIMIT } from \"../constants/constants\";\n\n/**\n* Used to return a unique id for a control that requires an html id\n* @param propertyId (required)\n* @param id (optional)\n* @return returns a unique id used for control DOM ids\n*/\nfunction getControlId(propertyId, id) {\n\tconst uuid = id ? id : uuid4();\n\treturn `${getDataId(propertyId)}-${uuid}`;\n}\n\nfunction getDataId(propertyId) {\n\tlet id = propertyId.name;\n\tif (typeof propertyId.row !== \"undefined\") {\n\t\tid += \"_\" + propertyId.row;\n\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\tid += \"_\" + propertyId.col;\n\t\t}\n\t} else if (typeof propertyId.col !== \"undefined\") {\n\t\tid += \"_\" + propertyId.col;\n\t}\n\treturn \"properties-\" + id;\n}\n\nfunction\tgetCharLimit(control, defaultLimit) {\n\tlet limit = defaultLimit;\n\tif (control.charLimit) {\n\t\tlimit = control.charLimit;\n\t}\n\treturn limit;\n}\n\nfunction splitNewlines(text, splitValue) {\n\tif (text.length > 0) {\n\t\tconst split = text.split(splitValue);\n\t\tif (Array.isArray(split)) {\n\t\t\treturn split;\n\t\t}\n\t\treturn [split];\n\t}\n\treturn [];\n}\n\n// returns an object\n//\tvalue = string: the concatenated string\n//\ttruncated = boolean: indicating if any value was too long and had to be truncated\nfunction joinNewlines(list, joinValue) {\n\tlet truncated = false;\n\tif (Array.isArray(list)) {\n\t\tif (list.length === 0) {\n\t\t\treturn { value: \"\", truncated };\n\t\t}\n\n\t\tlet concatenatedValue = \"\";\n\t\tlist.forEach((value, index) => {\n\t\t\tconst truncatedValue = truncateDisplayValue(value);\n\t\t\tconst join = index === list.length - 1 ? \"\" : joinValue; // Do not add joinValue to last value in array\n\t\t\tconcatenatedValue += truncatedValue + join;\n\t\t\tif (!truncated) { // we only need this to be set true once\n\t\t\t\ttruncated = truncatedValue.length !== value.length;\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\tvalue: concatenatedValue,\n\t\t\ttruncated\n\t\t};\n\t}\n\treturn { value: list, truncated };\n}\n\n// truncate the value that gets displayed if its too long\nfunction truncateDisplayValue(value) {\n\tif (value.length > TRUNCATE_LIMIT) {\n\t\treturn value.substring(0, TRUNCATE_LIMIT) + \"...\";\n\t}\n\treturn value;\n}\n\nfunction getValidationProps(messageInfo, inTable) {\n\tconst validationProps = {};\n\t// inline in tables don't show carbon error/warn\n\tif (!messageInfo || inTable) {\n\t\treturn validationProps;\n\t}\n\tif (messageInfo.type === \"error\") {\n\t\tvalidationProps.invalid = true;\n\t\tvalidationProps.invalidText = messageInfo.text;\n\t} else if (messageInfo.type === \"warning\") {\n\t\tvalidationProps.warn = true;\n\t\tvalidationProps.warnText = messageInfo.text;\n\t}\n\treturn validationProps;\n}\n\nexport {\n\tgetCharLimit,\n\tgetControlId,\n\tgetDataId,\n\tsplitNewlines,\n\tjoinNewlines,\n\ttruncateDisplayValue,\n\tgetValidationProps\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint max-depth: [\"error\", 6] */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"carbon-components-react\";\nimport { Add16 } from \"@carbon/icons-react\";\nimport WideFlyout from \"./../../components/wide-flyout\";\nimport Icon from \"./../../../icons/icon.jsx\";\n\nimport { isEmpty } from \"lodash\";\nimport * as PropertyUtils from \"./../../util/property-utils\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { MESSAGE_KEYS, CONDITION_MESSAGE_TYPE } from \"./../../constants/constants\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { Type, ParamRole } from \"./../../constants/form-constants.js\";\nimport classNames from \"classnames\";\n\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\n\nclass SummaryPanel extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowWideFlyout: false\n\t\t};\n\t\tthis.handleLinkClicked = this.handleLinkClicked.bind(this);\n\t\tthis.hideWideFlyout = this.hideWideFlyout.bind(this);\n\t\tthis.cancelWideFlyout = this.cancelWideFlyout.bind(this);\n\t\tthis._getSummaryTables = this._getSummaryTables.bind(this);\n\t}\n\t_onMouseMove(evt) {\n\t\tthis.setState({ mousePos: { x: evt.clientX, y: evt.clientY } });\n\t}\n\n\thideWideFlyout() {\n\t\tthis.props.controller.setIsSummaryPanelShowing(false);\n\t\tthis.setState({ showWideFlyout: false });\n\t\t// on close clear *all* selected rows\n\t\tthis.props.controller.clearSelectedRows();\n\t}\n\tcancelWideFlyout() {\n\t\t// on cancel reset back to original value\n\t\tthis.props.controller.setPropertyValues(this.initialControlValues);\n\t\tthis.props.controller.setErrorMessages(this.initialMessages);\n\t\tthis.props.controller.setControlStates(this.initialStates);\n\t\tthis.hideWideFlyout();\n\t}\n\n\thandleLinkClicked() {\n\t\tif (this.props.children) {\n\t\t\tthis.props.controller.setIsSummaryPanelShowing(true);\n\t\t\tthis.setState({ showWideFlyout: true });\n\t\t}\n\t\t// sets the current value for parameter.  Used on cancel\n\t\tthis.initialControlValues = this.props.controller.getPropertyValues();\n\t\tthis.initialMessages = this.props.controller.getAllErrorMessages();\n\t\tthis.initialStates = this.props.controller.getControlStates();\n\t}\n\n\t/*\n\t* Returns summary tables to be displayed in summary panel\n\t*/\n\t_getSummaryTables() {\n\t\tconst summaryTables = [];\n\t\tconst summaryControls = this.props.controller.getSummaryPanelControls(this.props.panel.id);\n\t\t// no controls in summary panel\n\t\tif (!Array.isArray(summaryControls)) {\n\t\t\treturn summaryTables;\n\t\t}\n\t\tfor (const controlName of summaryControls) {\n\t\t\tconst propertyId = { name: controlName };\n\t\t\tconst summaryControl = this.props.controller.getControl(propertyId);\n\t\t\t// get filtered controlValue (filters out hidden and disabled values)\n\t\t\tlet controlValue = this.props.controller.getPropertyValue(propertyId, { filterHiddenDisabled: true });\n\n\t\t\t// let custom control set their own value to be displayed\n\t\t\tconst customValue = this.props.controller.getCustPropSumPanelValue(propertyId);\n\t\t\tlet showCustom = false;\n\t\t\tif (typeof customValue !== \"undefined\" && customValue !== null) {\n\t\t\t\tcontrolValue = customValue.value;\n\t\t\t\tsummaryControl.summaryLabel = customValue.label;\n\t\t\t\tshowCustom = true;\n\t\t\t}\n\t\t\tconst summaryValues = [];\n\t\t\tif (Array.isArray(controlValue)) {\n\t\t\t\tlet summaryColumns = 0;\n\t\t\t\tif (summaryControl.subControls) {\n\t\t\t\t\tfor (let idx = 0; idx < summaryControl.subControls.length; idx++) {\n\t\t\t\t\t\tconst colPropertyId = {\n\t\t\t\t\t\t\tname: propertyId.name,\n\t\t\t\t\t\t\tcol: idx\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (this.props.controller.isSummary(colPropertyId) || showCustom) {\n\t\t\t\t\t\t\tsummaryColumns++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (summaryControl.summary) {\n\t\t\t\t\tsummaryColumns = 1;\n\t\t\t\t}\n\t\t\t\t// subtract 2 px for some buffer between columns\n\t\t\t\tconst colWidth = summaryColumns !== 0 ? \"calc((100% / \" + summaryColumns + \") - 2px)\" : \"100%\";\n\n\t\t\t\tfor (let rowIdx = 0; rowIdx < controlValue.length; rowIdx++) {\n\t\t\t\t\tconst rowValue = controlValue[rowIdx];\n\t\t\t\t\tconst rowData = [];\n\t\t\t\t\t// table value\n\t\t\t\t\tif (Array.isArray(rowValue)) {\n\t\t\t\t\t\tfor (let colIdx = 0; colIdx < rowValue.length; colIdx++) {\n\t\t\t\t\t\t\tconst colPropertyId = {\n\t\t\t\t\t\t\t\tname: propertyId.name,\n\t\t\t\t\t\t\t\tcol: colIdx\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (this.props.controller.isSummary(colPropertyId) || showCustom) {\n\t\t\t\t\t\t\t\t// This allows array cell content to look acceptable\n\t\t\t\t\t\t\t\tconst displayValue = this._getSummaryDisplayValue(rowValue[colIdx], colPropertyId);\n\t\t\t\t\t\t\t\tconst contentValue = typeof displayValue === \"undefined\" ? \"\"\n\t\t\t\t\t\t\t\t\t: JSON.stringify(displayValue).replace(\"\\\"\", \"\")\n\t\t\t\t\t\t\t\t\t\t.replace(new RegExp(\"\\\"\", \"g\"), \"\") + \" \";\n\t\t\t\t\t\t\t\trowData.push(\n\t\t\t\t\t\t\t\t\t<td key={\"summary-table-data-\" + colIdx}\n\t\t\t\t\t\t\t\t\t\tclassName={\"properties-summary-row-data \"}\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: colWidth }}\n\t\t\t\t\t\t\t\t\t\tonMouseMove={this._onMouseMove.bind(this)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Tooltip id={uuid4()} tip={contentValue} mousePos={this.state.mousePos} showToolTipIfTruncated>\n\t\t\t\t\t\t\t\t\t\t\t<span id={\"span_\" + uuid4()}>{contentValue}</span>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t</td>);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.props.controller.isSummary(propertyId) || showCustom) { // only push row data if control is in summary\n\t\t\t\t\t\tconst displayValue = this._getSummaryDisplayValue(rowValue, propertyId);\n\t\t\t\t\t\trowData.push(\n\t\t\t\t\t\t\t<td key={\"summary-table-row-data-\" + rowIdx} className={\"properties-summary-row-data \"}>\n\t\t\t\t\t\t\t\t<Tooltip id={uuid4()} tip={displayValue} mousePos={this.state.mousePos} showToolTipIfTruncated>\n\t\t\t\t\t\t\t\t\t<span id={\"span_\" + uuid4()}>{displayValue}</span>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</td>);\n\t\t\t\t\t}\n\t\t\t\t\tif (rowData.length > 0) {\n\t\t\t\t\t\tsummaryValues.push(\n\t\t\t\t\t\t\t<tr key={\"summary-table-row-\" + rowIdx} className={\"properties-summary-row\"}>\n\t\t\t\t\t\t\t\t{rowData}\n\t\t\t\t\t\t\t</tr>);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (controlValue) {\n\t\t\t\t// assume simple parameter\n\t\t\t\tif (this.props.controller.isSummary(propertyId) || showCustom) {\n\t\t\t\t\tconst displayValue = this._getSummaryDisplayValue(controlValue, propertyId);\n\t\t\t\t\tsummaryValues.push(\n\t\t\t\t\t\t<tr key={\"summary-row-\" + controlName} className=\"properties-summary-row\">\n\t\t\t\t\t\t\t<td key={\"summary-table-row-data-\" + controlName} className={\"properties-summary-rows-data\"}>\n\t\t\t\t\t\t\t\t{ displayValue }\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (summaryValues.length > 0) {\n\t\t\t\t// Added role presentation to fix a11y violation - no headers in the table\n\t\t\t\tlet summaryBody = (<table role=\"presentation\" key={\"summary-table-\" + controlName} className=\"properties-summary-table\">\n\t\t\t\t\t<tbody key={\"summary-body-\" + controlName}>\n\t\t\t\t\t\t{summaryValues}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>);\n\t\t\t\tif (summaryValues.length > 10) {\n\t\t\t\t\tconst largeTableLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\t\t\tMESSAGE_KEYS.LONG_TABLE_SUMMARY_PLACEHOLDER);\n\t\t\t\t\tsummaryBody = (<div className={\"properties-summary-table\"}><span>{largeTableLabel}</span></div>);\n\t\t\t\t}\n\t\t\t\tsummaryTables.push(\n\t\t\t\t\t<div key={\"summary-container-\" + controlName} className={\"properties-summary-values\"}>\n\t\t\t\t\t\t<span key={\"summary-text-\" + controlName} className={\"properties-summary-label\"}>{summaryControl.summaryLabel}</span>\n\t\t\t\t\t\t{summaryBody}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn summaryTables;\n\t}\n\n\t/**\n\t * Retrieves a properly formatted summary display value.\n\t *\n\t * @param displayValue The default value to display\n\t * @param propertyId The id of the property to display\n\t * @return A formatted display value\n\t */\n\t_getSummaryDisplayValue(displayValue, propertyId) {\n\t\tlet returnValue = displayValue;\n\t\tconst control = this.props.controller.getControl(propertyId);\n\n\t\t// Use label for controlValue if possible\n\t\tif (control.values && control.valueLabels) {\n\t\t\tconst displayIndex = control.values.indexOf(displayValue);\n\t\t\tif (displayIndex > -1 && control.valueLabels[displayIndex]) {\n\t\t\t\treturnValue = control.valueLabels[displayIndex];\n\t\t\t}\n\t\t}\n\t\tif (PropertyUtils.toType(returnValue) === \"object\") {\n\t\t\tif (control.valueDef.propType === Type.STRUCTURE && control.role === ParamRole.COLUMN) {\n\t\t\t\treturnValue = PropertyUtils.stringifyFieldValue(displayValue, control);\n\t\t\t} else {\n\t\t\t\t// We don't know what this object is, but we know we can't display it as an object\n\t\t\t\treturnValue = JSON.stringify(returnValue);\n\t\t\t}\n\t\t}\n\n\t\treturn returnValue;\n\t}\n\n\t_getSummaryIconState() {\n\t\tconst controls = this.props.controller.getSummaryPanelControls(this.props.panel.id);\n\t\tlet msg = {};\n\t\tlet errorCount = 0;\n\t\tlet warningCount = 0;\n\t\tif (Array.isArray(controls)) {\n\t\t\tcontrols.forEach((controlId) => {\n\t\t\t\tconst controlMsg = this.props.controller.getErrorMessage({ name: controlId }, true);\n\t\t\t\tif (!isEmpty(controlMsg)) {\n\t\t\t\t\tif (controlMsg.type === CONDITION_MESSAGE_TYPE.WARNING) {\n\t\t\t\t\t\twarningCount += 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (controlMsg.type === CONDITION_MESSAGE_TYPE.ERROR) {\n\t\t\t\t\t\terrorCount += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isEmpty(controlMsg) && (!isEmpty(msg) || msg.type !== \"error\")) {\n\t\t\t\t\tmsg = controlMsg;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (!isEmpty(msg)) {\n\t\t\tlet descriptionText = \"\";\n\t\t\tif (errorCount > 0 && warningCount === 0) {\n\t\t\t\tdescriptionText = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\t\tMESSAGE_KEYS.CONTROL_SUMMARY_ERROR, { errorMsgCount: errorCount });\n\t\t\t} else if (errorCount > 0 && warningCount > 0) {\n\t\t\t\tdescriptionText = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\t\tMESSAGE_KEYS.CONTROL_SUMMARY_ERROR_WARNING,\n\t\t\t\t\t{ errorMsgCount: errorCount, warningMsgCount: warningCount });\n\t\t\t} else if (errorCount === 0 && warningCount > 0) {\n\t\t\t\tdescriptionText = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\t\tMESSAGE_KEYS.CONTROL_SUMMARY_WARNING, { warningMsgCount: warningCount });\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Tooltip\n\t\t\t\t\tid= {uuid4() + \"summary-icon\"}\n\t\t\t\t\ttip={descriptionText}\n\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t>\n\t\t\t\t\t{<Icon type={msg.type} className={`properties-summary-link-icon ${msg.type}`} />}\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\trender() {\n\t\tconst icon = this._getSummaryIconState();\n\t\tconst link = (<div className=\"properties-summary-link-container\">\n\t\t\t<Button\n\t\t\t\tclassName=\"properties-summary-link-button\"\n\t\t\t\tonClick={this.handleLinkClicked}\n\t\t\t\tsize=\"small\"\n\t\t\t\tkind=\"ghost\"\n\t\t\t\trenderIcon={Add16}\n\t\t\t>\n\t\t\t\t{this.props.panel.label}\n\t\t\t</Button>\n\t\t\t{icon}\n\t\t</div>);\n\t\tconst applyLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.APPLYBUTTON_LABEL);\n\t\tconst rejectLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.REJECTBUTTON_LABEL);\n\t\tconst flyout = this.state.showWideFlyout ? (<WideFlyout\n\t\t\tcancelHandler={this.cancelWideFlyout}\n\t\t\tokHandler={this.hideWideFlyout}\n\t\t\tshow\n\t\t\tapplyLabel={applyLabel}\n\t\t\trejectLabel={rejectLabel}\n\t\t\ttitle={this.props.panel.label}\n\t\t\tlight={this.props.controller.getLight()}\n\t\t\tokButtonEnabled={this.props.okButtonEnabled}\n\t\t>\n\t\t\t<div>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t</WideFlyout>) : <div />;\n\t\tconst panelClassName = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst className = classNames(\n\t\t\t\"properties-summary-panel\",\n\t\t\t\"properties-control-panel\",\n\t\t\t{ \"hide\": this.props.panelState === STATES.HIDDEN },\n\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\tpanelClassName\n\t\t);\n\t\treturn (\n\t\t\t<div className={className} disabled={this.props.panelState === STATES.DISABLED} data-id={ControlUtils.getDataId({ name: this.props.panel.id })}>\n\t\t\t\t{flyout}\n\t\t\t\t{link}\n\t\t\t\t{this._getSummaryTables()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSummaryPanel.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.array,\n\tpanel: PropTypes.object.isRequired,\n\tpanelState: PropTypes.string, // set by redux\n\tokButtonEnabled: PropTypes.bool // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id }),\n\tokButtonEnabled: !ownProps.controller.getWideFlyoutPrimaryButtonDisabled({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(SummaryPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { Accordion, AccordionItem } from \"carbon-components-react\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\n\n\nclass TwistyPanel extends React.Component {\n\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst disabled = this.props.panelState === STATES.DISABLED;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-twisty-panel\",\n\t\t\t\t\t{ \"hide\": this.props.panelState === STATES.HIDDEN },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\tclassName\n\t\t\t\t)} data-id={ControlUtils.getDataId({ name: this.props.panel.id })}\n\t\t\t>\n\t\t\t\t<Accordion disabled={disabled}>\n\t\t\t\t\t<AccordionItem disabled={disabled} open={this.props.panel.open} title={this.props.panel.label}>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</AccordionItem>\n\t\t\t\t</Accordion>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTwistyPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.array,\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(TwistyPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PropertiesModal from \"./../../components/properties-modal\";\nimport WideFlyout from \"./../../components/wide-flyout\";\n\nexport default class SubPanelInvoker extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpanel: null,\n\t\t\ttitle: null,\n\t\t\thideHandler: null,\n\t\t\tsubPanelVisible: false\n\t\t};\n\t\tthis.showSubDialog = this.showSubDialog.bind(this);\n\t\tthis.hideSubDialog = this.hideSubDialog.bind(this);\n\t}\n\n\tshowSubDialog(title, panel, hideHandler) {\n\t\tthis.props.controller.increaseVisibleSubPanelCounter();\n\t\tthis.setState({\n\t\t\tpanel: panel,\n\t\t\ttitle: title,\n\t\t\thideHandler: hideHandler,\n\t\t\tsubPanelVisible: true\n\t\t});\n\t}\n\n\thideSubDialog(applyChanges) {\n\t\tthis.props.controller.decreaseVisibleSubPanelCounter();\n\t\tthis.state.hideHandler(applyChanges);\n\t\tthis.setState({\n\t\t\tpanel: null,\n\t\t\ttitle: null,\n\t\t\thideHandler: null,\n\t\t\tsubPanelVisible: false\n\t\t});\n\t}\n\n\trender() {\n\t\tlet propertiesDialog = [];\n\t\tif (this.state.subPanelVisible && !this.props.rightFlyout) {\n\t\t\tconst className = this.props.controller.isTearsheetContainer() ? \"properties-subpanel-modal-in-tearsheet\" : \"\";\n\t\t\tpropertiesDialog = (<PropertiesModal\n\t\t\t\ttitle={this.state.title}\n\t\t\t\tokHandler={this.hideSubDialog.bind(this, true)}\n\t\t\t\tcancelHandler={this.hideSubDialog.bind(this, false)}\n\t\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\t\tclassNames={className}\n\t\t\t>\n\t\t\t\t{this.state.panel}\n\t\t\t</PropertiesModal>);\n\t\t} else if (this.props.rightFlyout && this.state.subPanelVisible) {\n\t\t\tpropertiesDialog = (<WideFlyout\n\t\t\t\tcancelHandler={this.hideSubDialog.bind(this, false)}\n\t\t\t\tokHandler={this.hideSubDialog.bind(this, true)}\n\t\t\t\tshow\n\t\t\t\tapplyLabel={this.props.applyLabel}\n\t\t\t\trejectLabel={this.props.rejectLabel}\n\t\t\t\ttitle={this.state.title}\n\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.panel}\n\t\t\t\t</div>\n\t\t\t</WideFlyout>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{propertiesDialog}\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSubPanelInvoker.propTypes = {\n\tchildren: PropTypes.element,\n\tapplyLabel: PropTypes.string,\n\trejectLabel: PropTypes.string,\n\trightFlyout: PropTypes.bool,\n\tcontroller: PropTypes.object.isRequired\n};\n\nSubPanelInvoker.defaultProps = {\n\trightFlyout: false\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"carbon-components-react\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { MESSAGE_KEYS } from \"./../../constants/constants\";\n\n\nimport SubPanelInvoker from \"./invoker.jsx\";\n\nexport default class SubPanelButton extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.showSubPanel = this.showSubPanel.bind(this);\n\t\tthis.onSubPanelHidden = this.onSubPanelHidden.bind(this);\n\t}\n\n\n\tonSubPanelHidden(applyChanges) {\n\t\tlogger.info(\"onSubPanelHidden(): applyChanges=\" + applyChanges);\n\t}\n\n\tshowSubPanel() {\n\t\tthis.subPanelInvoker.showSubDialog(this.props.title, this.props.panel, this.onSubPanelHidden);\n\t}\n\n\trender() {\n\t\tconst applyLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.APPLYBUTTON_LABEL);\n\t\tconst rejectLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.REJECTBUTTON_LABEL);\n\n\t\tconst button = (<Button\n\t\t\tclassName=\"properties-subpanel-button\"\n\t\t\ttype=\"button\"\n\t\t\tsmall\n\t\t\tkind=\"secondary\"\n\t\t\tonClick={this.showSubPanel}\n\t\t>\n\t\t\t{this.props.label || \"\"}\n\t\t</Button>);\n\t\treturn (\n\t\t\t<SubPanelInvoker ref={ (ref) => (this.subPanelInvoker = ref) }\n\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t>\n\t\t\t\t{button}\n\t\t\t</SubPanelInvoker>\n\t\t);\n\t}\n}\n\nSubPanelButton.propTypes = {\n\tlabel: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\trightFlyout: PropTypes.bool,\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\n\n\nclass ColumnPanel extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tlet gridColumns = \"\";\n\t\tprops.children.forEach((item, idx) => {\n\t\t\tif (idx === 0) {\n\t\t\t\tgridColumns = \"1fr\";\n\t\t\t} else {\n\t\t\t\tgridColumns += \" 1fr\";\n\t\t\t}\n\t\t});\n\t\tthis.style = {\n\t\t\t\"gridTemplateColumns\": gridColumns\n\t\t};\n\t}\n\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\t// grid-template-columns\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-column-panel\",\n\t\t\t\t\t{ \"hide\": this.props.panelState === STATES.HIDDEN },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tdisabled={this.props.panelState === STATES.DISABLED} data-id={ControlUtils.getDataId({ name: this.props.panel.id })}\n\t\t\t\tstyle={this.style}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nColumnPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.array.isRequired,\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(ColumnPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\n\n\nclass ControlPanel extends React.Component {\n\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst controlPanel = this.props.children.length > 0\n\t\t\t? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\"properties-control-panel\",\n\t\t\t\t\t\t{ \"hide\": this.props.panelState === STATES.HIDDEN },\n\t\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\t\t{ \"tearsheet-container\": this.props.controller.isTearsheetContainer() },\n\t\t\t\t\t\tclassName\n\t\t\t\t\t)}\n\t\t\t\t\tdisabled={this.props.panelState === STATES.DISABLED} data-id={ControlUtils.getDataId({ name: this.props.panel.id })}\n\t\t\t\t>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t)\n\t\t\t: null;\n\t\treturn controlPanel;\n\t}\n}\n\nControlPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.array.isRequired,\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(ControlPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Tabs, Tab } from \"carbon-components-react\";\nimport { getDataId } from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\n\nclass Subtabs extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveTabId: \"\"\n\t\t};\n\t}\n\n\tonClick(tabId) {\n\t\tthis.setState({ activeTabId: tabId });\n\t}\n\n\trender() {\n\t\tconst subTabs = [];\n\t\tlet activeTab = 0;\n\t\tlet tabIdx = 0;\n\t\tconst className = this.props.className ? this.props.className : \"\";\n\t\tfor (let i = 0; i < this.props.tabs.length; i++) {\n\t\t\tconst tab = this.props.tabs[i];\n\t\t\t// TODO this might not work once we don't rerender on each change\n\t\t\tconst panelState = this.props.controller.getPanelState({ name: tab.group });\n\t\t\tif (panelState !== STATES.HIDDEN) {\n\t\t\t\tconst subPanelItems = this.props.genUIItem(i, tab.content);\n\t\t\t\tif (this.state.activeTabId === tab.group && panelState !== STATES.DISABLED) {\n\t\t\t\t\tactiveTab = tabIdx;\n\t\t\t\t}\n\n\t\t\t\tsubTabs.push(\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tkey={\"subtabs.tab.\" + i}\n\t\t\t\t\t\tdisabled={panelState === STATES.DISABLED}\n\t\t\t\t\t\tclassName={classNames(\"properties-subtab\", { \"properties-leftnav-subtab-item\": this.props.leftnav })}\n\t\t\t\t\t\ttabIndex={tabIdx}\n\t\t\t\t\t\tlabel={tab.text}\n\t\t\t\t\t\ttitle={tab.text}\n\t\t\t\t\t\tonClick={this.onClick.bind(this, tab.group)}\n\t\t\t\t\t\tdata-id={getDataId({ name: tab.group })}\n\t\t\t\t\t>\n\t\t\t\t\t\t{subPanelItems}\n\t\t\t\t\t</Tab>\n\t\t\t\t);\n\t\t\t\ttabIdx++;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-sub-tab-container\",\n\t\t\t\t\t{ vertical: !this.props.rightFlyout },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.nestedPanel },\n\t\t\t\t\t{ \"properties-leftnav-container\": this.props.leftnav },\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<Tabs className={classNames(\"properties-subtabs\", { \"properties-leftnav-subtabs\": this.props.leftnav })}\n\t\t\t\t\tselected={activeTab}\n\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t>\n\t\t\t\t\t{subTabs}\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSubtabs.propTypes = {\n\ttabs: PropTypes.array.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\trightFlyout: PropTypes.bool,\n\tgenUIItem: PropTypes.func.isRequired,\n\tclassName: PropTypes.string,\n\tnestedPanel: PropTypes.bool,\n\tleftnav: PropTypes.bool\n};\n\nSubtabs.defaultProps = {\n\tleftnav: false\n};\n\nexport default Subtabs;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { evaluateText } from \"./../../util/property-utils.js\";\nimport classNames from \"classnames\";\nimport { STATES, CARBON_ICONS } from \"./../../constants/constants\";\nimport { isEmpty } from \"lodash\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport Icon from \"./../../../icons/icon.jsx\";\n\nclass TextPanel extends Component {\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst hidden = this.props.panelState === STATES.HIDDEN;\n\t\tconst disabled = this.props.panelState === STATES.DISABLED;\n\t\tlet label = this.props.panel.label ? (<div className=\"panel-label\">{this.props.panel.label}</div>) : null;\n\t\tlet description;\n\t\tif (this.props.panel.description && !isEmpty(this.props.panel.description.text)) {\n\t\t\tconst dynamicDescriptionText = evaluateText(this.props.panel.description.text, this.props.controller);\n\t\t\tif (this.props.panel.description.placement === \"as_tooltip\") {\n\t\t\t\t// If tooltip has a link, add propertyId in the link object\n\t\t\t\tif (this.props.panel.description.link) {\n\t\t\t\t\tthis.props.panel.description.link.propertyId = { name: this.props.panel.id };\n\t\t\t\t}\n\t\t\t\tconst tooltip = (<Tooltip\n\t\t\t\t\tid={`tooltip-label-${this.props.panel.id}`}\n\t\t\t\t\ttip={dynamicDescriptionText}\n\t\t\t\t\tlink={this.props.panel.description.link ? this.props.panel.description.link : null}\n\t\t\t\t\ttooltipLinkHandler={this.props.controller.getHandlers().tooltipLinkHandler}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t>\n\t\t\t\t\t<Icon type={CARBON_ICONS.INFORMATION} className=\"properties-control-description-icon-info\" />\n\t\t\t\t</Tooltip>);\n\t\t\t\tlabel = (\n\t\t\t\t\t<div className={classNames(\"properties-label-container\")}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t\t{tooltip}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdescription = <div className=\"panel-description\">{dynamicDescriptionText}</div>;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-text-panel\",\n\t\t\t\t\t{ \"hide\": hidden },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t\t{description}\n\t\t\t</div>);\n\t}\n}\n\nTextPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id }),\n\tpropertyValues: ownProps.controller.getPropertyValues() // not used locally but needed to cause a rerender to evaluate text with a property value\n});\n\nexport default connect(mapStateToProps, null)(TextPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES, CARBON_ICONS } from \"./../../constants/constants\";\nimport { evaluateText } from \"./../../util/property-utils.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport Icon from \"./../../../icons/icon.jsx\";\nimport { isEmpty } from \"lodash\";\n\nclass ActionPanel extends Component {\n\trender() {\n\t\tconst className = this.props.panel.className ? this.props.panel.className : \"\";\n\t\tconst hidden = this.props.panelState === STATES.HIDDEN;\n\t\tconst disabled = this.props.panelState === STATES.DISABLED;\n\t\tlet label;\n\t\tif (this.props.panel.label) {\n\t\t\tlet tooltip;\n\t\t\tif (this.props.panel.description && !isEmpty(this.props.panel.description.text)) {\n\t\t\t\tconst dynamicDescriptionText = evaluateText(this.props.panel.description.text, this.props.controller);\n\t\t\t\t// If tooltip has a link, add propertyId in the link object\n\t\t\t\tif (this.props.panel.description.link) {\n\t\t\t\t\tthis.props.panel.description.link.propertyId = { name: this.props.panel.id };\n\t\t\t\t}\n\t\t\t\ttooltip = (<Tooltip\n\t\t\t\t\tid={`tooltip-label-${this.props.panel.id}`}\n\t\t\t\t\ttip={dynamicDescriptionText}\n\t\t\t\t\tlink={this.props.panel.description.link ? this.props.panel.description.link : null}\n\t\t\t\t\ttooltipLinkHandler={this.props.controller.getHandlers().tooltipLinkHandler}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t>\n\t\t\t\t\t<Icon type={CARBON_ICONS.INFORMATION} className=\"properties-control-description-icon-info\" />\n\t\t\t\t</Tooltip>);\n\t\t\t}\n\t\t\tlabel = (\n\t\t\t\t<div className={classNames(\"properties-label-container\")}>\n\t\t\t\t\t<label className=\"properties-control-label\">{this.props.panel.label}</label>\n\t\t\t\t\t{tooltip}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t\"properties-action-panel\",\n\t\t\t\t\t{ \"hide\": hidden },\n\t\t\t\t\t{ \"properties-control-nested-panel\": this.props.panel.nestedPanel },\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tdata-id={ControlUtils.getDataId({ name: this.props.panel.id })}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t\t{this.props.children}\n\t\t\t</div>);\n\t}\n}\n\nActionPanel.propTypes = {\n\tpanel: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.element,\n\t\tPropTypes.array\n\t]),\n\tpanelState: PropTypes.string // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tpanelState: ownProps.controller.getPanelState({ name: ownProps.panel.id })\n});\n\nexport default connect(mapStateToProps, null)(ActionPanel);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"carbon-components-react\";\nimport { STATES, CARBON_BUTTON_KIND, CARBON_BUTTON_SIZE } from \"./../../constants/constants.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport classNames from \"classnames\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { has } from \"lodash\";\n\nclass ButtonAction extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t};\n\t\tthis.applyAction = this.applyAction.bind(this);\n\t\tthis.uuid = uuid4();\n\t}\n\n\tgetActionButtonKind() {\n\t\tif (!has(this.props, \"action.button.kind\")) {\n\t\t\treturn CARBON_BUTTON_KIND.TERTIARY;\n\t\t}\n\t\tswitch (this.props.action.button.kind) {\n\t\tcase CARBON_BUTTON_KIND.PRIMARY: return CARBON_BUTTON_KIND.PRIMARY;\n\t\tcase CARBON_BUTTON_KIND.SECONDARY: return CARBON_BUTTON_KIND.SECONDARY;\n\t\tcase CARBON_BUTTON_KIND.TERTIARY: return CARBON_BUTTON_KIND.TERTIARY;\n\t\tcase CARBON_BUTTON_KIND.GHOST: return CARBON_BUTTON_KIND.GHOST;\n\t\tcase CARBON_BUTTON_KIND.DANGER: return CARBON_BUTTON_KIND.DANGER;\n\t\tcase CARBON_BUTTON_KIND.DANGER_TERTIARY: return CARBON_BUTTON_KIND.DANGER_TERTIARY;\n\t\tcase CARBON_BUTTON_KIND.DANGER_GHOST: return CARBON_BUTTON_KIND.DANGER_GHOST;\n\t\tdefault: return CARBON_BUTTON_KIND.TERTIARY;\n\t\t}\n\t}\n\n\tgetActionButtonSize() {\n\t\tif (!has(this.props, \"action.button.size\")) {\n\t\t\treturn CARBON_BUTTON_SIZE.SMALL;\n\t\t}\n\t\tswitch (this.props.action.button.size) {\n\t\tcase CARBON_BUTTON_SIZE.SMALL: return CARBON_BUTTON_SIZE.SMALL;\n\t\tcase CARBON_BUTTON_SIZE.MEDIUM: return CARBON_BUTTON_SIZE.DEFAULT; // TODO: update this after upgrading to carbon 11.x\n\t\tcase CARBON_BUTTON_SIZE.LARGE: return CARBON_BUTTON_SIZE.LARGE;\n\t\tcase CARBON_BUTTON_SIZE.EXTRA_LARGE: return CARBON_BUTTON_SIZE.EXTRA_LARGE;\n\t\tdefault: return CARBON_BUTTON_SIZE.SMALL;\n\t\t}\n\t}\n\n\tapplyAction() {\n\t\t// fire event and let the application determine how to handle the action\n\t\tconst actionHandler = this.props.controller.getHandlers().actionHandler;\n\t\tif (typeof actionHandler === \"function\") {\n\t\t\tactionHandler(this.props.action.name,\n\t\t\t\tthis.props.controller.getAppData(), this.props.action.data);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst className = classNames(\"properties-action-button\", { \"hide\": this.props.state === STATES.HIDDEN });\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\t\tconst actionButtonKind = this.getActionButtonKind();\n\t\tconst actionButtonSize = this.getActionButtonSize();\n\t\tconst button = (\n\t\t\t<Button\n\t\t\t\ttype=\"button\"\n\t\t\t\tsize={actionButtonSize}\n\t\t\t\tkind={actionButtonKind}\n\t\t\t\tonClick={this.applyAction}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t{this.props.action.label.text}\n\t\t\t</Button>\n\t\t);\n\n\t\tlet display = button;\n\t\tif (this.props.action.description) {\n\t\t\tconst tooltipId = this.uuid + \"-tooltip-action-\" + this.props.action.name;\n\t\t\tconst tooltip = (\n\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t{this.props.action.description.text}\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t\tdisplay = (<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tdirection=\"bottom\"\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tdisable={disabled}\n\t\t\t>\n\t\t\t\t{button}\n\t\t\t</Tooltip>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={className} data-id={this.props.action.name}>\n\t\t\t\t{display}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nButtonAction.propTypes = {\n\taction: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tstate: PropTypes.string, // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tstate: ownProps.controller.getActionState(ownProps.controller.convertPropertyId(ownProps.action.name)),\n});\n\nexport default connect(mapStateToProps, null)(ButtonAction);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport classNames from \"classnames\";\nimport { v4 as uuid4 } from \"uuid\";\n\nclass ImageAction extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t};\n\t\tthis.applyAction = this.applyAction.bind(this);\n\t\tthis.uuid = uuid4();\n\t}\n\n\tapplyAction() {\n\t\tif (this.props.state !== STATES.DISABLED) { // this is needed to mimic disabled action button\n\t\t\t// fire event and let the application determine how to handle the action\n\t\t\tconst actionHandler = this.props.controller.getHandlers().actionHandler;\n\t\t\tif (typeof actionHandler === \"function\") {\n\t\t\t\tactionHandler(this.props.action.name,\n\t\t\t\t\tthis.props.controller.getAppData(), this.props.action.data);\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tlet height = {};\n\t\tlet width = {};\n\t\tif (this.props.action.image.size) {\n\t\t\theight = this.props.action.image.size.height ? { \"height\": this.props.action.image.size.height } : {};\n\t\t\twidth = this.props.action.image.size.width ? { \"width\": this.props.action.image.size.width } : {};\n\t\t}\n\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\t\tconst className = classNames(\"properties-action-image\", { \"left\": this.props.action.image.placement === \"left\" },\n\t\t\t{ \"right\": this.props.action.image.placement === \"right\" }, { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\t{ \"disabled\": disabled });\n\n\t\tconst image = (\n\t\t\t<div data-id={this.props.action.name}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={this.props.action.image.url}\n\t\t\t\t\tonClick={this.applyAction}\n\t\t\t\t\t{...height}\n\t\t\t\t\t{...width}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\n\t\tlet display = image;\n\t\tif (this.props.action.description) {\n\t\t\tconst tooltipId = this.uuid + \"-tooltip-action-\" + this.props.action.name;\n\t\t\tconst tooltip = (\n\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t{this.props.action.description.text}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tconst directions = [\"left\", \"right\", \"top\", \"bottom\"];\n\t\t\tconst tooltipDirection = this.props.action.image.tooltip_direction && directions.includes(this.props.action.image.tooltip_direction.toLowerCase())\n\t\t\t\t? this.props.action.image.tooltip_direction.toLowerCase()\n\t\t\t\t: \"bottom\";\n\n\t\t\tdisplay = (<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tdirection={tooltipDirection}\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tdisable={disabled}\n\t\t\t>\n\t\t\t\t{image}\n\t\t\t</Tooltip>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t{display}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nImageAction.propTypes = {\n\taction: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tstate: PropTypes.string, // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tstate: ownProps.controller.getActionState(ownProps.controller.convertPropertyId(ownProps.action.name)),\n});\n\nexport default connect(mapStateToProps, null)(ImageAction);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\n\nimport ButtonAction from \"./button\";\nimport ImageAction from \"./image\";\n\n\nexport default class ActionFactory {\n\n\tconstructor(controller) {\n\t\tthis.controller = controller;\n\t}\n\n\n\tgenerateAction(key, action) {\n\t\tif (action) {\n\t\t\tif (action.actionType === \"button\") {\n\t\t\t\treturn (\n\t\t\t\t\t<ButtonAction\n\t\t\t\t\t\tkey={\"action.\" + key}\n\t\t\t\t\t\taction={action}\n\t\t\t\t\t\tcontroller={this.controller}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else if (action.actionType === \"image\") {\n\t\t\t\treturn (\n\t\t\t\t\t<ImageAction\n\t\t\t\t\t\tkey={\"action.\" + key}\n\t\t\t\t\t\taction={action}\n\t\t\t\t\t\tcontroller={this.controller}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setActiveTab } from \"./../../actions\";\nimport { Tab, Tabs, Link } from \"carbon-components-react\";\nimport * as PropertyUtil from \"./../../util/property-utils\";\nimport { MESSAGE_KEYS, CARBON_ICONS, CONDITION_MESSAGE_TYPE, STATES } from \"./../../constants/constants\";\nimport { cloneDeep, isEmpty, sortBy, get } from \"lodash\";\nimport logger from \"./../../../../utils/logger\";\nimport classNames from \"classnames\";\n\nimport SelectorPanel from \"./../../panels/selector\";\nimport SummaryPanel from \"./../../panels/summary\";\nimport TwistyPanel from \"./../../panels/twisty\";\nimport SubPanelButton from \"./../../panels/sub-panel/button\";\nimport ColumnPanel from \"./../../panels/column\";\nimport ControlPanel from \"./../../panels/control\";\nimport Subtabs from \"./../../panels/subtabs\";\n\nimport WideFlyout from \"./../wide-flyout\";\nimport TearSheet from \"../../panels/tearsheet\";\nimport FieldPicker from \"./../field-picker\";\nimport TextPanel from \"./../../panels/text-panel\";\nimport ActionPanel from \"./../../panels/action-panel\";\n\nimport ActionFactory from \"./../../actions/action-factory\";\nimport Icon from \"./../../../icons/icon\";\nimport { ItemType } from \"../../constants/form-constants\";\n\nconst ALERT_TAB_GROUP = \"alertMsgs\";\nclass EditorForm extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowFieldPicker: false\n\t\t};\n\n\t\tthis.genPanel = this.genPanel.bind(this);\n\t\tthis.genUIContent = this.genUIContent.bind(this);\n\t\tthis.genUIItem = this.genUIItem.bind(this);\n\t\tthis._getGroupedMessages = this._getGroupedMessages.bind(this);\n\n\t\tthis.closeFieldPicker = this.closeFieldPicker.bind(this);\n\t\tthis.openFieldPicker = this.openFieldPicker.bind(this);\n\t\tthis.generateSharedControlNames = this.generateSharedControlNames.bind(this);\n\n\t\tthis.messages = this._getGroupedMessages(props.messages);\n\n\t\t// initialize ControlFactory with correct values\n\t\tthis.ControlFactory = props.controller.getControlFactory();\n\t\tthis.ControlFactory.setFunctions(this.openFieldPicker, this.genUIItem);\n\t\tthis.ControlFactory.setRightFlyout(props.rightFlyout);\n\n\t\tthis.actionFactory = new ActionFactory(this.props.controller);\n\n\t\tthis.FIRST_TEARSHEET_ID = null;\n\t\tthis.TEARSHEETS = {};\n\t\tthis.visibleTearsheet = null;\n\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\tif (!this.props.controller.isSummaryPanelShowing() && !this.props.controller.isSubPanelsShowing()) {\n\t\t\t// only update list of error messages when no summary panel or sub-panel is shown,\n\t\t\t// otherwise changes in the summary/sub panel might trigger a re-render and the\n\t\t\t// summary/sub panel to disappear because the alerts tab is added/removed\n\t\t\tthis.messages = this._getGroupedMessages(nextProps.messages);\n\t\t}\n\t\treturn true;\n\t}\n\n\t_getMessageCountForCategory(tab) {\n\t\tif (tab.group === ALERT_TAB_GROUP) {\n\t\t\treturn \" (\" + this.messages.length + \")\";\n\t\t}\n\t\tlet result = 0;\n\t\tthis.messages.forEach((msg) => {\n\t\t\tconst ctrl = this.props.controller.getControl({ \"name\": msg.id_ref });\n\t\t\tif (ctrl && ctrl.parentCategoryId === tab.group) {\n\t\t\t\tresult++;\n\t\t\t}\n\t\t});\n\t\treturn result > 0 ? \" (\" + result + \")\" : null;\n\t}\n\n\t_getGroupedMessages(messages) {\n\t\t// returns messages grouped by type, first errors, then warnings\n\t\tif (!isEmpty(messages)) {\n\t\t\treturn sortBy(messages, [\"type\"]);\n\t\t}\n\t\treturn [];\n\t}\n\n\t_getTabId(tab) {\n\t\treturn tab.group;\n\t}\n\n\t_showCategoryPanel(panelId) {\n\t\tlet activeTab = panelId;\n\t\tif (this.props.activeTab === panelId) {\n\t\t\tactiveTab = \"\";\n\t\t}\n\t\tthis.props.setActiveTab(activeTab);\n\t}\n\n\t_handleMessageClick(controlId, ev) {\n\t\tconst control = this.props.controller.getControl(controlId);\n\t\tthis.props.setActiveTab(control.parentCategoryId);\n\t}\n\n\t_modalTabsOnClick(tabId) {\n\t\tthis.props.setActiveTab(tabId);\n\t}\n\n\tgenPrimaryTabs(key, tabs, propertyId, indexof) {\n\t\tconst tabContent = [];\n\t\tlet hasAlertsTab = false;\n\t\tlet modalSelected = 0;\n\t\tconst nonTearsheetTabs = tabs.filter((t) => t.content.itemType !== ItemType.TEARSHEET);\n\t\tconst tearsheetTabs = tabs.filter((t) => t.content.itemType === ItemType.TEARSHEET);\n\t\tconst totalTabs = tearsheetTabs.concat(nonTearsheetTabs);\n\n\t\tfor (let i = 0; i < totalTabs.length; i++) {\n\t\t\tconst tab = totalTabs[i];\n\t\t\tconst tabState = this.props.controller.getPanelState({ name: tab.group });\n\t\t\tif (tabState === STATES.HIDDEN) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (i === 0 && tab.group === ALERT_TAB_GROUP) {\n\t\t\t\thasAlertsTab = true;\n\t\t\t}\n\t\t\tconst panelItems = this.genUIItem(this._getContainerIndex(hasAlertsTab, i), tab.content, propertyId, indexof);\n\t\t\tlet additionalComponent = null;\n\t\t\tif (this.props.additionalComponents) {\n\t\t\t\tadditionalComponent = this.props.additionalComponents[tab.group];\n\t\t\t}\n\t\t\t// if only 1 tab AND\n\t\t\t// if total non-tearsheet tabs is 1; don't show any tabs\n\t\t\tif (totalTabs.length === 1 && nonTearsheetTabs.length === 1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={\"cat.\" + key} className=\"properties-single-category\">\n\t\t\t\t\t\t{panelItems}\n\t\t\t\t\t\t{additionalComponent}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.props.rightFlyout) {\n\t\t\t\tlet panelArrow = <Icon type={CARBON_ICONS.CHEVRONARROWS.DOWN} className=\"properties-category-caret-down\" />;\n\t\t\t\tlet categoryOpen = false;\n\t\t\t\tif (this.props.activeTab === tab.group) {\n\t\t\t\t\tpanelArrow = <Icon type={CARBON_ICONS.CHEVRONARROWS.UP} className=\"properties-category-caret-up\" />;\n\t\t\t\t\tcategoryOpen = true;\n\t\t\t\t}\n\t\t\t\tif (tab.content.itemType !== ItemType.TEARSHEET && nonTearsheetTabs.length === 1) {\n\t\t\t\t\ttabContent.push(\n\t\t\t\t\t\t<div key={\"cat.\" + key} className=\"properties-single-category\">\n\t\t\t\t\t\t\t{panelItems}\n\t\t\t\t\t\t\t{additionalComponent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttabContent.push(\n\t\t\t\t\t\t<div key={this._getContainerIndex(hasAlertsTab, i) + \"-\" + key}\n\t\t\t\t\t\t\tclassName={classNames(\"properties-category-container\", { \"properties-hidden-container\": tab.content.itemType === ItemType.TEARSHEET })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button type=\"button\" onClick={this._showCategoryPanel.bind(this, tab.group)}\n\t\t\t\t\t\t\t\tclassName={classNames(\"properties-category-title\", { \"properties-light-enabled\": this.props.controller.getLight() }) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{tab.text}{this._getMessageCountForCategory(tab)}\n\t\t\t\t\t\t\t\t{panelArrow}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<div className={classNames(\"properties-category-content\", { \"show\": categoryOpen }) }>\n\t\t\t\t\t\t\t\t{panelItems}\n\t\t\t\t\t\t\t\t{additionalComponent}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.props.activeTab === tab.group) {\n\t\t\t\t\tmodalSelected = i;\n\t\t\t\t}\n\t\t\t\ttabContent.push(\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tkey={this._getContainerIndex(hasAlertsTab, i) + \"-\" + key}\n\t\t\t\t\t\ttabIndex={i}\n\t\t\t\t\t\tlabel={tab.text}\n\t\t\t\t\t\ttitle={tab.text}\n\t\t\t\t\t\tclassName={classNames({ \"properties-hidden-container\": tab.content.itemType === ItemType.TEARSHEET })}\n\t\t\t\t\t\tonClick={this._modalTabsOnClick.bind(this, tab.group)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{panelItems}\n\t\t\t\t\t\t{additionalComponent}\n\t\t\t\t\t</Tab>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (this.props.rightFlyout) {\n\t\t\treturn (\n\t\t\t\t<div key={\"cat.\" + key} className=\"properties-categories\">\n\t\t\t\t\t{tabContent}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Tabs key={\"tab.\" + key}\n\t\t\t\tclassName=\"properties-primaryTabs\"\n\t\t\t\tselected={modalSelected}\n\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\ttabContentClassName={classNames(\"properties-primary-tab-panel\", { \"tearsheet-container\": this.props.controller.isTearsheetContainer() })}\n\t\t\t>\n\t\t\t\t{tabContent}\n\t\t\t</Tabs>\n\t\t);\n\t}\n\n\t_getContainerIndex(hasAlertsTab, index) {\n\t\t// need to ensure that when alert tab is rendered, the existing tabs get the same id\n\t\t// otherwise re-render will cause controls to lose focus\n\t\tif (hasAlertsTab && index === 0) {\n\t\t\treturn \"alerts\";\n\t\t}\n\t\tif (hasAlertsTab) {\n\t\t\treturn index - 1;\n\t\t}\n\t\treturn index;\n\t}\n\n\tgenPanelSelector(key, tabs, dependsOn, propertyId, indexof, panelId, className) {\n\t\tconst subPanels = this.generateAdditionalPanels(tabs, key, propertyId, indexof, false, className);\n\t\treturn (\n\t\t\t<SelectorPanel\n\t\t\t\tkey={\"selectorPanel\" + key}\n\t\t\t\tpanels={subPanels}\n\t\t\t\tdependsOn={dependsOn}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateAdditionalPanels(tabs, key, propertyId, indexof, indent, groupClassName) {\n\t\tconst subPanels = {};\n\t\tfor (let i = 0; i < tabs.length; i++) {\n\t\t\tconst tab = tabs[i];\n\t\t\tlet className = \"properties-control-panel\";\n\t\t\tif (tab.content && tab.content.itemType === \"textPanel\") {\n\t\t\t\tclassName = \"\";\n\t\t\t}\n\t\t\t// Always show indentation when insert_panels set to true\n\t\t\tif (indent) {\n\t\t\t\tclassName += \" properties-control-nested-panel\";\n\t\t\t}\n\t\t\tsubPanels[tab.group] = (\n\t\t\t\t<div className={classNames(className, groupClassName)} key={tab.group + key}>\n\t\t\t\t\t{this.genUIItem(i, tab.content, propertyId, indexof)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn subPanels;\n\t}\n\n\tgenUIContent(uiItems, propertyId, indexof) {\n\t\tvar uiContent = [];\n\t\tfor (var i = 0; i < uiItems.length; i++) {\n\t\t\tuiContent.push(this.genUIItem(i, uiItems[i], propertyId, indexof));\n\t\t}\n\t\treturn uiContent;\n\t}\n\n\t/*\n\t*  inPropertyId and indexOf only used for subpanel in tables\n\t*/\n\tgenUIItem(key, uiItem, inPropertyId, indexof) {\n\t\tlet textClass = \"\";\n\t\tlet icon = null;\n\t\tlet text = \"\";\n\t\tswitch (uiItem.itemType) {\n\t\tcase (\"control\"): {\n\t\t\t// If the uiItem has additonalPanels, this indicates that the uiItem is\n\t\t\t// a vertical radio button set followed by a SelectorPanel which has the\n\t\t\t// insert_panels boolean set to true.\n\t\t\tif (uiItem.additionalItems && uiItem.additionalItems.length > 0) {\n\t\t\t\tuiItem.control.additionalItems = uiItem.additionalItems;\n\t\t\t\tuiItem.control.optionalPanels =\n\t\t\t\t\tthis.generateAdditionalPanels(uiItem.additionalItems, key, null, indexof, true);\n\t\t\t}\n\n\t\t\tconst propertyId = { name: uiItem.control.name };\n\n\t\t\t// Used for subpanels in tables\n\t\t\tif (inPropertyId) {\n\t\t\t\tconst parentPropertyId = cloneDeep(inPropertyId);\n\t\t\t\t// This control is the last child in parentPropertyId, need to update the child's col index\n\t\t\t\tthis.props.controller.updateLastChildPropertyId(parentPropertyId, { col: indexof(uiItem.control.name) });\n\t\t\t\treturn this.ControlFactory.createControlItem(uiItem.control, parentPropertyId);\n\t\t\t}\n\n\t\t\treturn this.ControlFactory.createControlItem(uiItem.control, propertyId);\n\t\t}\n\t\tcase (\"additionalLink\"):\n\t\t\tvar subPanel = this.genPanel(key, uiItem.panel, inPropertyId, indexof);\n\t\t\treturn (<SubPanelButton key={\"sub-panel-button.\" + key}\n\t\t\t\tlabel={uiItem.text}\n\t\t\t\ttitle={uiItem.secondaryText}\n\t\t\t\tpanel={subPanel}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t/>);\n\t\tcase (\"staticText\"):\n\t\t\ttextClass = classNames(\"properties-static-text\", uiItem.textType);\n\t\t\ticon = uiItem.textType === \"info\" ? <div><Icon type={CARBON_ICONS.INFORMATION} className=\"properties-static-text-icon-info\" /></div> : null;\n\t\t\ttext = <div className={textClass}>{PropertyUtil.evaluateText(uiItem.text, this.props.controller)}</div>;\n\t\t\treturn <div key={\"static-text.\" + key} className=\"properties-static-text-container\">{icon}{text}</div>;\n\t\tcase (\"linkText\"): // linkText used for Alerts tab. Only used internally\n\t\t\ttextClass = classNames(\"properties-link-text-container\", uiItem.textType);\n\t\t\tif (uiItem.textType === \"warning\") {\n\t\t\t\ticon = <Icon type={CONDITION_MESSAGE_TYPE.WARNING} />;\n\t\t\t} else if (uiItem.textType === \"error\") {\n\t\t\t\ticon = <Icon type={CONDITION_MESSAGE_TYPE.ERROR} />;\n\t\t\t}\n\t\t\ttext = (\n\t\t\t\t<Link className=\"properties-link-text\" onClick={this._handleMessageClick.bind(this, uiItem.controlId)} >\n\t\t\t\t\t{PropertyUtil.evaluateText(uiItem.text, this.props.controller)}\n\t\t\t\t</Link>);\n\t\t\treturn <div key={\"link-text.\" + key} className={textClass} >{icon}{text}</div>;\n\t\tcase (\"hSeparator\"):\n\t\t\treturn <hr key={\"h-separator.\" + key} className=\"properties-h-separator\" />;\n\t\tcase (\"panel\"):\n\t\tcase (\"tearsheet\"):\n\t\t\treturn this.genPanel(key, uiItem.panel, inPropertyId, indexof);\n\t\tcase (\"subTabs\"):\n\t\t\t// All Subtabs will become a LeftNav if displayed inside a Tearsheet container\n\t\t\treturn (<Subtabs key={\"subtabs.\" + key}\n\t\t\t\ttabs={uiItem.tabs}\n\t\t\t\tclassName={uiItem.className}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\tgenUIItem={this.genUIItem}\n\t\t\t\tnestedPanel={uiItem.nestedPanel}\n\t\t\t\tleftnav={this.props.controller.isTearsheetContainer()}\n\t\t\t/>);\n\t\tcase (\"primaryTabs\"):\n\t\t\treturn this.genPrimaryTabs(key, uiItem.tabs, inPropertyId, indexof);\n\t\tcase (\"panelSelector\"):\n\t\t\treturn this.genPanelSelector(key, uiItem.tabs, uiItem.dependsOn, inPropertyId, indexof, uiItem.id, uiItem.className);\n\t\tcase (\"checkboxSelector\"):\n\t\t\treturn this.genPanel(key, uiItem.panel, inPropertyId, indexof);\n\t\tcase (\"customPanel\"):\n\t\t\treturn this.generateCustomPanel(key, uiItem.panel);\n\t\t\t// only generate summary panel for right side flyout\n\t\tcase (\"action\"):\n\t\t\treturn this.actionFactory.generateAction(key, uiItem.action);\n\t\tcase (\"textPanel\"):\n\t\t\tif (uiItem.panel) {\n\t\t\t\treturn (<TextPanel key={\"text-panel-\" + key} panel={uiItem.panel} controller={this.props.controller} />);\n\t\t\t}\n\t\t\treturn <div key={\"unknown.\" + key}>Unknown: {uiItem.itemType}</div>;\n\t\tdefault:\n\t\t\treturn <div key={\"unknown.\" + key}>Unknown: {uiItem.itemType}</div>;\n\t\t}\n\t}\n\n\tgenerateCustomPanel(key, panel) {\n\t\tif (this.props.customPanels) {\n\t\t\tfor (const custPanel of this.props.customPanels) {\n\t\t\t\tif (custPanel.id() === panel.id) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={classNames(\"properties-custom-panel\", { \"properties-control-nested-panel\": get(panel, \"nestedPanel\", false) }) }\n\t\t\t\t\t\t\t\tkey={\"custom.\" + key}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{new custPanel(panel.parameters, this.props.controller, panel.data).renderPanel()}\n\t\t\t\t\t\t\t</div>);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tlogger.warn(\"Error thrown creating custom panel: \" + error);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn <div key={\"custom.\" + key}>Panel Not Found: {panel.id}</div>;\n\t}\n\n\tgenerateSharedControlNames(panel) {\n\t\tfor (const info of this.props.controller.getSharedCtrlInfo()) {\n\t\t\tif (typeof info.id !== \"undefined\" && info.id === panel.id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tconst sharedCtrlNames = [];\n\t\tfor (const panelItem of panel.uiItems) {\n\t\t\t// only push uiItems with controls.  Some uiItems are for display only and shouldn't be added.\n\t\t\tif (panelItem.control && panelItem.control.name) {\n\t\t\t\tconst controlName = panelItem.control.name;\n\t\t\t\tsharedCtrlNames.push({\n\t\t\t\t\t\"controlName\": controlName\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.props.controller.addSharedControls(panel.id, sharedCtrlNames);\n\t}\n\n\tgenPanel(key, panel, propertyId, indexof) {\n\t\tlet content = this.genUIContent(panel.uiItems, propertyId, indexof);\n\t\tconst id = \"panel.\" + key;\n\t\tswitch (panel.panelType) {\n\t\tcase (\"columnSelection\"):\n\t\t\tthis.generateSharedControlNames(panel);\n\t\t\t// needs to be ran after setting shared controls to get correct fields in shared controls\n\t\t\tcontent = this.genUIContent(panel.uiItems, propertyId, indexof);\n\t\t\treturn (<ControlPanel\n\t\t\t\tkey={id}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\tpanel={panel}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t</ControlPanel>);\n\t\tcase (\"summary\"):\n\t\t\tif (this.props.rightFlyout) {\n\t\t\t\treturn (\n\t\t\t\t\t<SummaryPanel\n\t\t\t\t\t\tkey={\"summary-panel-\" + id}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tpanel={panel}\n\t\t\t\t\t>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</SummaryPanel>);\n\t\t\t}\n\t\t\treturn content;\n\t\tcase (\"actionPanel\"):\n\t\t\treturn (\n\t\t\t\t<ActionPanel key={\"action-panel-\" + key} controller={this.props.controller} panel={panel}>\n\t\t\t\t\t{content}\n\t\t\t\t</ActionPanel>);\n\t\tcase (\"twisty\"):\n\t\t\treturn (\n\t\t\t\t<TwistyPanel\n\t\t\t\t\tkey={id}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpanel={panel}\n\t\t\t\t>\n\t\t\t\t\t{content}\n\t\t\t\t</TwistyPanel>);\n\t\tcase (\"tearsheet\"):\n\t\t\tthis.TEARSHEETS[panel.id] = {\n\t\t\t\tpanel: panel,\n\t\t\t\ttitle: panel.label,\n\t\t\t\tdescription: panel.description ? panel.description.text : null,\n\t\t\t\tcontent: content\n\t\t\t};\n\t\t\tif (this.props.controller.getActiveTearsheet() !== null) {\n\t\t\t\tthis.visibleTearsheet = this.TEARSHEETS[this.props.controller.getActiveTearsheet()];\n\t\t\t} else {\n\t\t\t\tthis.visibleTearsheet = null;\n\t\t\t}\n\t\t\tif (!this.FIRST_TEARSHEET_ID || this.FIRST_TEARSHEET_ID === panel.id) {\n\t\t\t\tthis.FIRST_TEARSHEET_ID = panel.id;\n\t\t\t\tconst onCloseCallback = () => {\n\t\t\t\t\tthis.props.controller.clearActiveTearsheet();\n\t\t\t\t};\n\t\t\t\treturn (\n\t\t\t\t\t<TearSheet\n\t\t\t\t\t\topen={this.props.controller.getActiveTearsheet() !== null}\n\t\t\t\t\t\tonCloseCallback={onCloseCallback}\n\t\t\t\t\t\tkey={panel.id}\n\t\t\t\t\t\ttearsheet={this.visibleTearsheet}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn null;\n\t\tcase (\"column\"):\n\t\t\treturn (\n\t\t\t\t<ColumnPanel\n\t\t\t\t\tkey={id}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpanel={panel}\n\t\t\t\t>\n\t\t\t\t\t{content}\n\t\t\t\t</ColumnPanel>);\n\t\tdefault:\n\t\t\treturn (<ControlPanel\n\t\t\t\tkey={id}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\tpanel={panel}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t</ControlPanel>);\n\t\t}\n\t}\n\n\t/**\n\t* Close the field picker and invoke callback function\n\t* @param newSelectedFields all fields selected, includes newSelections\n\t* @param newSelections the newly selected rows\n\t*/\n\tcloseFieldPicker(newSelectedFields, newSelections) {\n\t\tif (this.closeFieldPickerCallback) {\n\t\t\tthis.closeFieldPickerCallback(newSelectedFields, newSelections);\n\t\t\tthis.closeFieldPickerCallback = null;\n\t\t}\n\t\tthis.props.showPropertiesButtons(true);\n\t\tthis.fieldPickerPropertyId = null;\n\t\tthis.setState({\n\t\t\tshowFieldPicker: false\n\t\t});\n\t}\n\n\t/**\n\t* Opens the field picker\n\t* @param propertyId of the control opening the field picker\n\t* @param callback function to invoke when closing the field picker\n\t*/\n\topenFieldPicker(propertyId, callback) {\n\t\tthis.props.showPropertiesButtons(false);\n\t\tthis.fieldPickerPropertyId = propertyId;\n\t\tthis.closeFieldPickerCallback = callback;\n\t\tthis.setState({\n\t\t\tshowFieldPicker: true\n\t\t});\n\t}\n\n\t/**\n\t* Renders the field picker with the control's current selected values and fields\n\t* @param title string to display as the field picker's title\n\t*/\n\tfieldPicker(title) {\n\t\tif (this.fieldPickerPropertyId && this.fieldPickerPropertyId.name) {\n\t\t\tconst currentControlValues = this.props.controller.getPropertyValue(this.fieldPickerPropertyId);\n\t\t\t// if in columnSelectionPanel, filter out fields that are in the other controls\n\t\t\tconst fields = this.props.controller.getFilteredDatasetMetadata(this.fieldPickerPropertyId);\n\n\t\t\t// create a list of field names to be passed into the field picker\n\t\t\tconst control = this.props.controller.getControl(this.fieldPickerPropertyId);\n\t\t\tlet dmImage;\n\t\t\tconst tableFieldIndex = PropertyUtil.getTableFieldIndex(control);\n\t\t\tconst subControls = control.subControls;\n\t\t\tif (tableFieldIndex !== -1) {\n\t\t\t\tif (!subControls) {\n\t\t\t\t\tdmImage = control.dmImage;\n\t\t\t\t} else {\n\t\t\t\t\tdmImage = subControls[tableFieldIndex].dmImage;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst formattedFieldsList = PropertyUtil.getFieldsFromControlValues(control, currentControlValues, fields);\n\n\t\t\treturn (<div className=\"properties-fp-table\">\n\t\t\t\t<FieldPicker\n\t\t\t\t\tkey=\"field-picker-control\"\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tcloseFieldPicker={this.closeFieldPicker}\n\t\t\t\t\tcurrentFields={formattedFieldsList}\n\t\t\t\t\tfields={fields}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\t\tdmIcon={dmImage}\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t}\n\t\treturn <div />;\n\t}\n\n\tgenAlertsTab(messages) {\n\t\tconst msgUIItems = messages.map((msg) => (\n\t\t\t{\n\t\t\t\t\"itemType\": \"linkText\",\n\t\t\t\t\"text\": msg.text,\n\t\t\t\t\"textType\": msg.type,\n\t\t\t\t\"controlId\": { \"name\": msg.id_ref }\n\t\t\t}));\n\n\t\treturn {\n\t\t\t\"text\": PropertyUtil.formatMessage(\n\t\t\t\tthis.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.ALERTS_TAB_TITLE),\n\t\t\t\"group\": ALERT_TAB_GROUP,\n\t\t\t\"content\":\n\t\t\t\t{ \"itemType\": \"panel\",\n\t\t\t\t\t\"panel\": {\n\t\t\t\t\t\t\"id\": \"alerts-panel\",\n\t\t\t\t\t\t\"panelType\": \"general\",\n\t\t\t\t\t\t\"uiItems\": msgUIItems\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\t}\n\n\trender() {\n\t\tlet uiItems = this.props.controller.getUiItems();\n\t\tif (!isEmpty(this.messages) && uiItems[0].itemType === \"primaryTabs\" && uiItems[0].tabs && uiItems[0].tabs.length > 1) {\n\t\t\t// create a new copy for uiItems object so that alerts are not added multiple times\n\t\t\tuiItems = cloneDeep(uiItems);\n\t\t\tuiItems[0].tabs.unshift(this.genAlertsTab(this.messages)); // add alerts tab to the beginning of the tabs array\n\t\t}\n\n\t\tlet content = this.genUIContent(uiItems);\n\t\tlet wideFly = <div />;\n\t\tlet stackedTearsheet;\n\n\t\tconst form = this.props.controller.getForm();\n\t\tconst title = PropertyUtil.formatMessage(this.props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.FIELDPICKER_SAVEBUTTON_LABEL) + \" \" + form.label;\n\n\t\tif (this.state.showFieldPicker) {\n\t\t\tif (this.props.rightFlyout) {\n\t\t\t\twideFly = (<WideFlyout\n\t\t\t\t\tshowPropertiesButtons={false}\n\t\t\t\t\tshow\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t>\n\t\t\t\t\t{this.fieldPicker(title)}\n\t\t\t\t</WideFlyout>);\n\t\t\t} else if (this.props.controller.isTearsheetContainer()) {\n\t\t\t\tstackedTearsheet = (<TearSheet\n\t\t\t\t\topen\n\t\t\t\t\tstacked\n\t\t\t\t\ttearsheet={{\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tcontent: this.fieldPicker()\n\t\t\t\t\t}}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcontent = this.fieldPicker(title);\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={classNames(\"properties-editor-form\",\n\t\t\t\t{ \"tearsheet-container\": this.props.controller.isTearsheetContainer() },\n\t\t\t\t{ \"field-picker\": this.state.showFieldPicker })}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t\t{wideFly}\n\t\t\t\t{stackedTearsheet}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nEditorForm.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tadditionalComponents: PropTypes.object,\n\tshowPropertiesButtons: PropTypes.func,\n\tcustomPanels: PropTypes.array,\n\trightFlyout: PropTypes.bool,\n\tactiveTab: PropTypes.string, // set by redux\n\tsetActiveTab: PropTypes.func, // set by redux\n\tmessages: PropTypes.array // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tactiveTab: state.componentMetadataReducer.activeTab,\n\tmessages: ownProps.controller.getErrorMessages(true, true, true)\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\tsetActiveTab: (tabId) => {\n\t\tdispatch(setActiveTab(tabId));\n\t}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorForm);\n","var baseGet = require('./_baseGet');\n\n/**\n * The opposite of `_.property`; this method creates a function that returns\n * the value at a given path of `object`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var array = [0, 1, 2],\n *     object = { 'a': array, 'b': array, 'c': array };\n *\n * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n * // => [2, 0]\n *\n * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n * // => [2, 0]\n */\nfunction propertyOf(object) {\n  return function(path) {\n    return object == null ? undefined : baseGet(object, path);\n  };\n}\n\nmodule.exports = propertyOf;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { propertyOf } from \"lodash\";\n\nexport class L10nProvider {\n\tconstructor(resources) {\n\t\tthis.resources = resources;\n\t}\n\n\t/**\n\t * Look up a localised resource using the supplied key.\n\t */\n\tl10n(key, defaultVal) {\n\t\tif (this.resources) {\n\t\t\tconst value = propertyOf(this.resources)(key);\n\t\t\tif (value || value === \"\") {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t\tif (defaultVal) {\n\t\t\treturn defaultVal;\n\t\t}\n\t\treturn key;\n\t}\n\n\t/**\n\t * Look up a localised resource.  Check for resource first, then fall back to default value\n\t */\n\tl10nResource(resourceObj) {\n\t\tlet text;\n\t\tif (resourceObj) {\n\t\t\tif (resourceObj.resource_key) {\n\t\t\t\ttext = this.l10n(resourceObj.resource_key);\n\t\t\t\tif ((!text || text === resourceObj.resource_key) && resourceObj.default) {\n\t\t\t\t\ttext = resourceObj.default;\n\t\t\t\t}\n\t\t\t} else if (resourceObj.default) {\n\t\t\t\ttext = resourceObj.default;\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t}\n\n\t/**\n\t * Look up a localised resource label using the supplied base key with \".label\" appended.\n\t */\n\tl10nLabel(uiObject, key) {\n\t\treturn this.l10nResource(uiObject.label) ? this.l10nResource(uiObject.label) : this.l10n(key + \".label\", key);\n\t}\n\n\t/**\n\t * Look up a localised resource description/tooltip using the supplied base key with \".desc\" appended.\n\t */\n\tl10nDesc(uiObject, key) {\n\t\treturn this.l10nResource(uiObject.description) ? this.l10nResource(uiObject.description) : this.l10n(key + \".desc\", key);\n\t}\n\n\t/**\n\t * Look up a localised resource label for an enumerated value using the supplied\n\t * base key with the value and \".label\" appended e.g. \"measurement.continous.label\".\n\t */\n\tl10nValueLabel(baseKey, value) {\n\t\tconst lookupKey = baseKey + \".\" + value + \".label\";\n\t\treturn this.l10n(lookupKey, value);\n\t}\n\n\tl10nValueDesc(baseKey, value) {\n\t\tconst lookupKey = baseKey + \".\" + value + \".desc\";\n\t\tconst desc = this.l10n(lookupKey, value);\n\t\treturn (desc !== value ? desc : null);\n\t}\n}\n\nexport class ResourceDef {\n\tstatic make(resourceObj) {\n\t\tlet resource;\n\t\tif (resourceObj) {\n\t\t\tresource = new ResourceDef();\n\t\t\tresource.default = resourceObj.default;\n\t\t\tresource.resource_key = resourceObj.resource_key;\n\t\t\tif (resourceObj.placement) {\n\t\t\t\tresource.placement = resourceObj.placement;\n\t\t\t}\n\t\t\tif (resourceObj.type) {\n\t\t\t\tresource.type = resourceObj.type;\n\t\t\t}\n\t\t\tif (resourceObj.link) {\n\t\t\t\tresource.link = resourceObj.link;\n\t\t\t}\n\t\t}\n\t\treturn resource;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GroupType } from \"../constants/form-constants\";\nimport { ResourceDef } from \"../util/L10nProvider\";\nimport { has, propertyOf } from \"lodash\";\nimport { v4 as uuid4 } from \"uuid\";\n\nclass Group {\n\tconstructor(cname, parameters, actions, type, label, dependsOn, insertPanels, nestedPanel, subGroups, description, data, className, copen) {\n\t\tthis.name = cname;\n\t\tthis.parameters = parameters;\n\t\tthis.actions = actions;\n\t\tthis.type = type;\n\t\tthis.label = ResourceDef.make(label);\n\t\tthis.dependsOn = dependsOn;\n\t\tthis.insertPanels = insertPanels;\n\t\tthis.nestedPanel = nestedPanel;\n\t\tthis.subGroups = subGroups;\n\t\tthis.description = ResourceDef.make(description);\n\t\tthis.data = data;\n\t\tthis.className = className;\n\t\tthis.open = copen;\n\t}\n\n\tparameterNames() {\n\t\treturn this.parameters;\n\t}\n\n\tactionIds() {\n\t\treturn this.actions;\n\t}\n\n\tgroupType() {\n\t\treturn (this.type ? this.type : GroupType.CONTROLS);\n\t}\n\n\tstatic makeGroup(uiGroup) {\n\t\tif (uiGroup) {\n\t\t\tlet subGroups;\n\t\t\tif (has(uiGroup, \"group_info\")) {\n\t\t\t\tsubGroups = [];\n\t\t\t\tfor (const group of uiGroup.group_info) {\n\t\t\t\t\tconst newGroup = Group.makeGroup(group);\n\t\t\t\t\tif (newGroup !== null) {\n\t\t\t\t\t\tsubGroups.push(newGroup);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new Group(\n\t\t\t\tpropertyOf(uiGroup)(\"id\"),\n\t\t\t\tpropertyOf(uiGroup)(\"parameter_refs\"),\n\t\t\t\tpropertyOf(uiGroup)(\"action_refs\"),\n\t\t\t\tpropertyOf(uiGroup)(\"type\"),\n\t\t\t\tpropertyOf(uiGroup)(\"label\"),\n\t\t\t\tpropertyOf(uiGroup)(\"depends_on_ref\"),\n\t\t\t\tpropertyOf(uiGroup)(\"insert_panels\"),\n\t\t\t\tpropertyOf(uiGroup)(\"nested_panel\"),\n\t\t\t\tsubGroups,\n\t\t\t\tpropertyOf(uiGroup)(\"description\"),\n\t\t\t\tpropertyOf(uiGroup)(\"data\"),\n\t\t\t\tpropertyOf(uiGroup)(\"class_name\"),\n\t\t\t\tpropertyOf(uiGroup)(\"open\")\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class GroupMetadata {\n\tconstructor(groups) {\n\t\tthis.groups = groups;\n\t}\n\n\tstatic makeGroupMetadata(uiGroups, parameters) {\n\t\tconst groups = [];\n\t\tif (uiGroups) {\n\t\t\tfor (const group of uiGroups) {\n\t\t\t\tconst newGroup = Group.makeGroup(group);\n\t\t\t\tif (newGroup !== null) {\n\t\t\t\t\tgroups.push(newGroup);\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\t// if no group create a default group with controls\n\t\t\tgroups.push(new Group(uuid4(), parameters, null, GroupType.CONTROLS));\n\t\t}\n\t\treturn new GroupMetadata(groups);\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ResourceDef } from \"../util/L10nProvider\";\n\nexport class Action {\n\tconstructor(actionName, label, description, control, data, image, button) {\n\t\tthis.name = actionName;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t\tthis.actionType = control;\n\t\tthis.data = data;\n\t\tthis.image = image;\n\t\tthis.button = button;\n\t}\n}\n\nclass ActionDef {\n\tstatic makeActionDef(action) {\n\t\tif (action) {\n\t\t\tconst actionDef = new ActionDef();\n\t\t\tactionDef.id = action.id;\n\t\t\tactionDef.label = ResourceDef.make(action.label);\n\t\t\tactionDef.description = ResourceDef.make(action.description);\n\t\t\tactionDef.control = action.control;\n\t\t\tactionDef.data = action.data;\n\t\t\tactionDef.image = action.image;\n\t\t\tactionDef.button = action.button;\n\t\t\treturn actionDef;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class ActionMetadata {\n\tconstructor(actionDefs) {\n\t\tthis.actionDefs = actionDefs;\n\t}\n\n\t// Return a single action\n\tgetAction(actionId) {\n\t\tlet actionDef;\n\t\tthis.actionDefs.forEach(function(action) {\n\t\t\tif (action.id === actionId) {\n\t\t\t\tactionDef = action;\n\t\t\t}\n\t\t});\n\t\treturn actionDef;\n\t}\n\n\tstatic makeActionMetadata(uihintsActions) {\n\t\tif (uihintsActions) {\n\t\t\tconst actionsDefs = [];\n\t\t\tfor (const action of uihintsActions) {\n\t\t\t\tconst actionDef = ActionDef.makeActionDef(action);\n\t\t\t\tif (actionDef) {\n\t\t\t\t\tactionsDefs.push(actionDef);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new ActionMetadata(actionsDefs);\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Separator } from \"../constants/form-constants\";\nimport { Type, ParamRole, EditStyle } from \"../constants/form-constants\";\nimport { ResourceDef } from \"../util/L10nProvider\";\nimport { propertyOf } from \"lodash\";\nimport { toType } from \"../util/property-utils\";\n\nexport class ParameterDef {\n\tconstructor(settings) {\n\t\tif (settings.id) {\n\t\t\tthis.name = settings.id;\n\t\t}\n\t\tif (settings.label) {\n\t\t\tthis.label = ResourceDef.make(settings.label);\n\t\t}\n\t\tif (settings.description) {\n\t\t\tthis.description = ResourceDef.make(settings.description);\n\t\t}\n\t\tif (settings.type) {\n\t\t\tthis.type = settings.type;\n\t\t}\n\t\tif (settings.role) {\n\t\t\tthis.role = settings.role;\n\t\t}\n\t\tif (settings.valueRestriction) {\n\t\t\tthis.valueRestriction = settings.valueRestriction;\n\t\t}\n\t\tif (settings.defaultValue !== null && toType(settings.defaultValue) !== \"undefined\") {\n\t\t\tif (settings.defaultValue.parameter_ref) {\n\t\t\t\tthis.defaultValue = {};\n\t\t\t\tthis.defaultValue.parameterRef = settings.defaultValue.parameter_ref;\n\t\t\t} else {\n\t\t\t\tthis.defaultValue = settings.defaultValue;\n\t\t\t}\n\t\t} else if (typeof settings.defaultValue === \"undefined\" && (this.isList() || this.isMapValue())) {\n\t\t\tthis.defaultValue = []; // This is a nested structure\n\t\t}\n\t\tif (typeof settings.labelVisible === \"boolean\") {\n\t\t\tthis.labelVisible = settings.labelVisible;\n\t\t}\n\t\tif (settings.control) {\n\t\t\tthis.control = settings.control;\n\t\t}\n\t\tif (settings.orientation) {\n\t\t\tthis.orientation = settings.orientation;\n\t\t}\n\t\tif (settings.width) {\n\t\t\tthis.width = settings.width;\n\t\t}\n\t\tif (settings.charLimit) {\n\t\t\tthis.charLimit = settings.charLimit;\n\t\t}\n\t\tif (settings.placeHolderText) {\n\t\t\tthis.placeHolderText = ResourceDef.make(settings.placeHolderText);\n\t\t}\n\t\tif (settings.separator) {\n\t\t\tthis.separator = settings.separator;\n\t\t}\n\t\tif (settings.resource_key) {\n\t\t\tthis.resource_key = settings.resource_key;\n\t\t}\n\t\tif (toType(settings.visible) === \"boolean\") {\n\t\t\tthis.visible = settings.visible;\n\t\t} else {\n\t\t\tthis.visible = true;\n\t\t}\n\t\tif (settings.valueIcons) {\n\t\t\tthis.valueIcons = settings.valueIcons;\n\t\t}\n\t\tif (toType(settings.sortable) === \"boolean\") {\n\t\t\tthis.sortable = settings.sortable;\n\t\t}\n\t\tif (toType(settings.filterable) === \"boolean\") {\n\t\t\tthis.filterable = settings.filterable;\n\t\t}\n\t\tif (toType(settings.resizable) === \"boolean\") {\n\t\t\tthis.resizable = settings.resizable;\n\t\t}\n\t\tif (settings.editStyle) {\n\t\t\tthis.editStyle = settings.editStyle;\n\t\t}\n\t\tif (toType(settings.required) === \"boolean\") {\n\t\t\tthis.required = settings.required;\n\t\t}\n\t\tif (settings.numberGenerator) {\n\t\t\tsettings.numberGenerator.label = ResourceDef.make(settings.numberGenerator.label);\n\t\t\tthis.numberGenerator = settings.numberGenerator;\n\t\t}\n\t\tif (settings.isKey) {\n\t\t\tthis.isKey = settings.isKey;\n\t\t}\n\t\tif (settings.dmDefault) {\n\t\t\tthis.dmDefault = settings.dmDefault;\n\t\t}\n\t\tif (settings.dmImage) {\n\t\t\tthis.dmImage = settings.dmImage;\n\t\t}\n\t\tif (settings.language) {\n\t\t\tthis.language = settings.language;\n\t\t}\n\t\tif (settings.enableMaximize) {\n\t\t\tthis.enableMaximize = settings.enableMaximize;\n\t\t}\n\n\t\tif (toType(settings.summary) === \"boolean\") {\n\t\t\tthis.summary = settings.summary;\n\t\t}\n\t\tif (settings.increment) {\n\t\t\tthis.increment = settings.increment;\n\t\t}\n\t\tif (settings.textAfter) {\n\t\t\tthis.textAfter = ResourceDef.make(settings.textAfter);\n\t\t}\n\t\tif (settings.textBefore) {\n\t\t\tthis.textBefore = ResourceDef.make(settings.textBefore);\n\t\t}\n\t\tif (toType(settings.moveableRows) === \"boolean\") {\n\t\t\tthis.moveableRows = settings.moveableRows;\n\t\t}\n\t\tif (settings.generatedValues) {\n\t\t\tthis.generatedValues = settings.generatedValues;\n\t\t}\n\t\tif (settings.dateFormat) {\n\t\t\tthis.dateFormat = settings.dateFormat;\n\t\t}\n\t\tif (settings.timeFormat) {\n\t\t\tthis.timeFormat = settings.timeFormat;\n\t\t}\n\t\tif (settings.customControlId) {\n\t\t\tthis.customControlId = settings.customControlId;\n\t\t}\n\t\tif (settings.data) {\n\t\t\tthis.data = settings.data;\n\t\t}\n\t\tif (settings.rows) {\n\t\t\tthis.rows = settings.rows;\n\t\t}\n\t\tif (settings.displayChars) {\n\t\t\tthis.displayChars = settings.displayChars;\n\t\t}\n\t\tif (settings.uionly) {\n\t\t\tthis.uionly = settings.uionly;\n\t\t}\n\t\tif (settings.actionRef) {\n\t\t\tthis.actionRef = settings.actionRef;\n\t\t}\n\t\tif (toType(settings.customValueAllowed) === \"boolean\") {\n\t\t\tthis.customValueAllowed = settings.customValueAllowed;\n\t\t}\n\t\tif (settings.className) {\n\t\t\tthis.className = settings.className;\n\t\t}\n\t\tif (settings.showRequiredLabel) {\n\t\t\tthis.showRequiredLabel = settings.showRequiredLabel;\n\t\t}\n\t}\n\n\tisList() {\n\t\tif (this.type) {\n\t\t\treturn this.type.startsWith(\"array[\");\n\t\t}\n\t\treturn false;\n\t}\n\n\tisMapValue() {\n\t\tif (this.type) {\n\t\t\treturn this.type.startsWith(\"map[\");\n\t\t}\n\t\treturn false;\n\t}\n\n\tisSubPanelEdit() {\n\t\tif (this.editStyle === EditStyle.SUBPANEL) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines if the given parameter object represents a compound field.\n\t *\n\t * @return True if the parameter represents a compound field\n\t */\n\tisCompoundField() {\n\t\tif (this.role && this.type) {\n\t\t\tconst isObject = this.type === Type.OBJECT || this.baseType() === Type.OBJECT;\n\t\t\treturn isObject && this.role === ParamRole.COLUMN;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpropType() {\n\t\t// If we don't recognize the base type as one of the built-in types, assume it's a structure\n\t\tlet value;\n\t\tfor (const key in Type) {\n\t\t\tif (this.baseType() === Type[key]) {\n\t\t\t\tvalue = Type[key];\n\t\t\t}\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = Type.STRUCTURE;\n\t\t}\n\t\treturn value;\n\t}\n\n\tgetRole() {\n\t\tif (this.role) {\n\t\t\treturn this.role;\n\t\t} else if (this.getValidValues()) {\n\t\t\t// Assume valueRestriction implies ENUM\n\t\t\treturn ParamRole.ENUM;\n\t\t}\n\t\treturn ParamRole.UNSPECIFIED;\n\t}\n\n\t/**\n\t * Returns the type of a parameter.\n\t */\n\tbaseType() {\n\t\tconst typ = this.type;\n\t\tif (this.isList()) {\n\t\t\t// \"array[<value-type>]\" so remove the leading \"array[\" and trailing \"]\"\n\t\t\treturn typ.substring(6, this.type.length - 1);\n\t\t} else if (this.isMapValue()) {\n\t\t\t// \"map[<key-type>,<value-type>]\" so remove everything up to and including \",\" and drop the trailing \"]\"\n\t\t\treturn typ.substring(typ.indexOf(\",\") + 1, this.type.length - 1).trim();\n\t\t} else if (this.valueRestriction && !this.type) { // assume String for enums\n\t\t\treturn Type.STRING;\n\t\t}\n\t\treturn typ;\n\t}\n\n\tgetValidValues() {\n\t\tvar undef;\n\t\tif (this.valueRestriction) {\n\t\t\treturn this.valueRestriction;\n\t\t} else if (this.type === Type.BOOLEAN) {\n\t\t\treturn [true, false];\n\t\t}\n\t\treturn undef;\n\t}\n\n\tgetValidValueCount() {\n\t\treturn (this.getValidValues() ? this.getValidValues().length : 0);\n\t}\n\n\t/**\n\t * Returns the \"additionalText\" attribute which can be used to include additional\n\t * text associated with the property control on the UI.\n\t */\n\tgetAdditionalText(l10nProvider) {\n\t\treturn l10nProvider.l10nResource(this.placeHolderText);\n\t}\n\n\tgetTextAfter(l10nProvider) {\n\t\treturn l10nProvider.l10nResource(this.textAfter);\n\t}\n\tgetTextAfterType() {\n\t\treturn this.textAfter ? this.textAfter.type : null;\n\t}\n\tgetTextBefore(l10nProvider) {\n\t\treturn l10nProvider.l10nResource(this.textBefore);\n\t}\n\tgetTextBeforeType() {\n\t\treturn this.textBefore ? this.textBefore.type : null;\n\t}\n\n\t/**\n\t * Returns the \"control\" attribute which can be used to define which control should be used\n\t * for editing a property. The control should be valid for the associated property.\n\t */\n\tgetControl(defaultControl) {\n\t\treturn (this.control ? this.control : defaultControl);\n\t}\n\n\t/**\n\t * Returns the \"columns\" uihint or the default value if a \"columns\" hint has not been supplied.\n\t */\n\tcolumns(defaultCol) {\n\t\treturn (this.width ? this.width : defaultCol);\n\t}\n\n\t/**\n\t * Returns the \"separatorAfter\" attribute which can be used to insert a horizontal\n\t * separator before the control in the UI.\n\t */\n\tseparatorAfter() {\n\t\tif (this.separator === Separator.AFTER) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the \"separatorBefore\" attribute which can be used to insert a horizontal\n\t * separator before the control in the UI.\n\t */\n\tseparatorBefore() {\n\t\tif (this.separator === Separator.BEFORE) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tstatic makeParameterDef(param, uihint, isKey) {\n\t\tif (param) {\n\t\t\treturn new ParameterDef({\n\t\t\t\t\"id\": propertyOf(param)(\"id\"),\n\t\t\t\t\"enableMaximize\": propertyOf(uihint)(\"enable_maximize\"),\n\t\t\t\t\"label\": propertyOf(uihint)(\"label\"),\n\t\t\t\t\"description\": propertyOf(uihint)(\"description\"),\n\t\t\t\t\"type\": propertyOf(param)(\"type\"),\n\t\t\t\t\"role\": propertyOf(param)(\"role\"),\n\t\t\t\t\"valueRestriction\": propertyOf(param)(\"enum\"),\n\t\t\t\t\"defaultValue\": propertyOf(param)(\"default\"),\n\t\t\t\t\"labelVisible\": propertyOf(uihint)(\"label_visible\"),\n\t\t\t\t\"control\": propertyOf(uihint)(\"control\"),\n\t\t\t\t\"orientation\": propertyOf(uihint)(\"orientation\"),\n\t\t\t\t\"width\": propertyOf(uihint)(\"width\"),\n\t\t\t\t\"charLimit\": propertyOf(uihint)(\"char_limit\"),\n\t\t\t\t\"placeHolderText\": propertyOf(uihint)(\"place_holder_text\"),\n\t\t\t\t\"separator\": propertyOf(uihint)(\"separator\"),\n\t\t\t\t\"resource_key\": propertyOf(uihint)(\"resource_key\"),\n\t\t\t\t\"visible\": propertyOf(uihint)(\"visible\"),\n\t\t\t\t\"valueIcons\": propertyOf(uihint)(\"value_icons\"),\n\t\t\t\t\"sortable\": propertyOf(uihint)(\"sortable\"),\n\t\t\t\t\"filterable\": propertyOf(uihint)(\"filterable\"),\n\t\t\t\t\"resizable\": propertyOf(uihint)(\"resizable\"),\n\t\t\t\t\"editStyle\": propertyOf(uihint)(\"edit_style\"),\n\t\t\t\t\"required\": propertyOf(param)(\"required\"),\n\t\t\t\t\"numberGenerator\": propertyOf(uihint)(\"number_generator\"),\n\t\t\t\t\"isKey\": isKey,\n\t\t\t\t\"dmDefault\": propertyOf(uihint)(\"dm_default\"),\n\t\t\t\t\"dmImage\": propertyOf(uihint)(\"dm_image\"),\n\t\t\t\t\"language\": propertyOf(uihint)(\"language\"),\n\t\t\t\t\"summary\": propertyOf(uihint)(\"summary\"),\n\t\t\t\t\"increment\": propertyOf(uihint)(\"increment\"),\n\t\t\t\t\"textAfter\": propertyOf(uihint)(\"text_after\"),\n\t\t\t\t\"textBefore\": propertyOf(uihint)(\"text_before\"),\n\t\t\t\t\"moveableRows\": propertyOf(uihint)(\"moveable_rows\"),\n\t\t\t\t\"generatedValues\": propertyOf(uihint)(\"generated_values\"),\n\t\t\t\t\"dateFormat\": propertyOf(uihint)(\"date_format\"),\n\t\t\t\t\"timeFormat\": propertyOf(uihint)(\"time_format\"),\n\t\t\t\t\"customControlId\": propertyOf(uihint)(\"custom_control_id\"),\n\t\t\t\t\"data\": propertyOf(uihint)(\"data\"),\n\t\t\t\t\"rows\": propertyOf(uihint)(\"rows\"),\n\t\t\t\t\"displayChars\": propertyOf(uihint)(\"display_chars\"),\n\t\t\t\t\"uionly\": propertyOf(param)(\"uionly\"),\n\t\t\t\t\"actionRef\": propertyOf(uihint)(\"action_ref\"),\n\t\t\t\t\"customValueAllowed\": propertyOf(uihint)(\"custom_value_allowed\"),\n\t\t\t\t\"className\": propertyOf(uihint)(\"class_name\"),\n\t\t\t\t\"showRequiredLabel\": propertyOf(param)(\"showRequiredLabel\")\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n}\n\n// searches uihints to match up with parameter\nfunction getParamUIHint(paramName, uihints) {\n\tif (uihints) {\n\t\tfor (const uihint of uihints) {\n\t\t\tif (paramName === uihint.parameter_ref) {\n\t\t\t\treturn uihint;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\n// PropertyProvider\nexport class ParameterMetadata {\n\tconstructor(paramDefs) {\n\t\tthis.paramDefs = paramDefs;\n\t}\n\n\t// Return a single parameter\n\tgetParameter(paramName) {\n\t\tlet paramDef;\n\t\tthis.paramDefs.forEach(function(param) {\n\t\t\tif (param.name === paramName) {\n\t\t\t\tparamDef = param;\n\t\t\t}\n\t\t});\n\t\treturn paramDef;\n\t}\n\n\t// Return a single parameter\n\tgetParameters() {\n\t\treturn this.paramDefs.map((param) => param.name);\n\t}\n\n\t// operation arguments\n\tstatic makeParameterMetadata(parameters, uihintsParams, uihintsUiParams) {\n\t\tconst paramDefs = [];\n\t\tif (parameters) {\n\t\t\t// Add a new option for showing \"required\" or \"optional\" indicator in control-item\n\t\t\tconst requiredParameters = parameters.filter((parameter) => parameter.required === true);\n\t\t\tconst half = parameters.length / 2;\n\t\t\tparameters.forEach((parameter) => {\n\t\t\t\tif (requiredParameters.length <= half) {\n\t\t\t\t\tparameter.showRequiredLabel = true;\n\t\t\t\t} else {\n\t\t\t\t\tparameter.showRequiredLabel = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (Array.isArray(parameters)) {\n\t\t\tfor (const param of parameters) {\n\t\t\t\tconst paramDef = ParameterDef.makeParameterDef(param, getParamUIHint(param.id, uihintsParams));\n\t\t\t\tif (paramDef) {\n\t\t\t\t\tparamDefs.push(paramDef);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Add any ui_parameters\n\t\tif (Array.isArray(uihintsUiParams)) {\n\t\t\tfor (const param of uihintsUiParams) {\n\t\t\t\tconst paramDef = ParameterDef.makeParameterDef(param, getParamUIHint(param.id, uihintsParams));\n\t\t\t\tif (paramDef) {\n\t\t\t\t\tparamDef.uionly = true;\n\t\t\t\t\tparamDefs.push(paramDef);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ParameterMetadata(paramDefs);\n\t}\n}\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ResourceDef } from \"../util/L10nProvider\";\n\nexport class Button {\n\tconstructor(id, label, description, icon, carbonIcon, enabled, divider) {\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t\tthis.icon = icon;\n\t\tthis.carbonIcon = carbonIcon;\n\t\tthis.enabled = enabled;\n\t\tthis.divider = divider;\n\t}\n}\n\nclass ButtonDef {\n\tstatic makeButtonDef(button) {\n\t\tif (button) {\n\t\t\tconst buttonDef = new ButtonDef();\n\t\t\tbuttonDef.id = button.id;\n\t\t\tbuttonDef.label = ResourceDef.make(button.label);\n\t\t\tbuttonDef.description = ResourceDef.make(button.description);\n\t\t\tbuttonDef.icon = button.icon;\n\t\t\tbuttonDef.carbonIcon = button.carbon_icon;\n\t\t\tbuttonDef.enabled = button.enabled;\n\t\t\tbuttonDef.divider = button.divider;\n\t\t\treturn buttonDef;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class ButtonMetadata {\n\tconstructor(buttonDefs) {\n\t\tthis.buttonDefs = buttonDefs;\n\t}\n\n\tgetButton(buttonId) {\n\t\tlet buttonDef;\n\t\tthis.buttonDefs.forEach(function(button) {\n\t\t\tif (button.id === buttonId) {\n\t\t\t\tbuttonDef = button;\n\t\t\t}\n\t\t});\n\t\treturn buttonDef;\n\t}\n\n\tstatic makeButtonMetadata(uihintsButtons) {\n\t\tif (uihintsButtons) {\n\t\t\tconst buttonDefs = [];\n\t\t\tfor (const button of uihintsButtons) {\n\t\t\t\tconst buttonDef = ButtonDef.makeButtonDef(button);\n\t\t\t\tif (buttonDef) {\n\t\t\t\t\tbuttonDefs.push(buttonDef);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new ButtonMetadata(buttonDefs);\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ParameterDef, ParameterMetadata } from \"./ParameterInfo\";\nimport { ButtonMetadata } from \"./ButtonInfo\";\nimport { propertyOf } from \"lodash\";\nimport { ResourceDef } from \"../util/L10nProvider\";\n\nexport class StructureDef {\n\tconstructor(cname, keyDefinition, parameterMetadata, moveableRows, label,\n\t\trowSelection, addRemoveRows, header, includeAllFields, layout, buttons, type) {\n\t\tthis.name = cname;\n\t\tthis.keyDefinition = keyDefinition;\n\t\tthis.parameterMetadata = parameterMetadata;\n\t\tthis.moveableRows = moveableRows;\n\t\tthis.label = ResourceDef.make(label);\n\t\tthis.rowSelection = rowSelection;\n\t\tthis.buttons = buttons;\n\t\tif (typeof addRemoveRows === \"boolean\") {\n\t\t\tthis.addRemoveRows = addRemoveRows;\n\t\t} else {\n\t\t\tthis.addRemoveRows = true; // set the default value\n\t\t}\n\t\tif (typeof header === \"boolean\") {\n\t\t\tthis.header = header;\n\t\t} else {\n\t\t\tthis.header = true; // set the default value\n\t\t}\n\t\tif (typeof includeAllFields === \"boolean\") {\n\t\t\tthis.includeAllFields = includeAllFields;\n\t\t}\n\t\tif (Array.isArray(layout)) {\n\t\t\tthis.layout = layout;\n\t\t}\n\t\tif (typeof type === \"undefined\") {\n\t\t\tthis.type = \"array\"; // set the default value\n\t\t} else {\n\t\t\tthis.type = type;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a array of parameter names\n\t */\n\tparameterNames() {\n\t\tconst params = [];\n\t\tif (this.parameterMetadata) {\n\t\t\tfor (const param of this.parameterMetadata.paramDefs) {\n\t\t\t\tparams.push(param.name);\n\t\t\t}\n\t\t}\n\t\treturn params;\n\t}\n\thasSubPanel() {\n\t\tif (this.parameterMetadata) {\n\t\t\tfor (const param of this.parameterMetadata.paramDefs) {\n\t\t\t\tif (param.isSubPanelEdit()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tkeyAttributeIndex() {\n\t\tif (this.keyDefinition) {\n\t\t\t// Assume the key is always in the first column\n\t\t\treturn 0;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tdefaultStructure() {\n\t\tconst defaults = [];\n\t\tthis.parameterMetadata.paramDefs.forEach(function(param) {\n\t\t\tdefaults.push(param.defaultValue);\n\t\t});\n\t\tif (this.keyDefinition) {\n\t\t\t// Assume the key is always in the first column\n\t\t\tdefaults.unshift(this.keyDefinition.defaultValue);\n\t\t}\n\t\treturn defaults;\n\t}\n\n\tstatic makeStructure(structure, uihints) {\n\t\tif (structure) {\n\t\t\treturn new StructureDef(\n\t\t\t\tpropertyOf(structure)(\"id\"),\n\t\t\t\tParameterDef.makeParameterDef(propertyOf(structure)(\"key_definition\"), propertyOf(uihints)(\"key_definition\"), true),\n\t\t\t\tParameterMetadata.makeParameterMetadata(propertyOf(structure)(\"parameters\"), propertyOf(uihints)(\"parameters\")),\n\t\t\t\tpropertyOf(uihints)(\"moveable_rows\"),\n\t\t\t\tpropertyOf(uihints)(\"label\"),\n\t\t\t\tpropertyOf(uihints)(\"row_selection\"),\n\t\t\t\tpropertyOf(uihints)(\"add_remove_rows\"),\n\t\t\t\tpropertyOf(uihints)(\"header\"),\n\t\t\t\tpropertyOf(uihints)(\"include_all_fields\"),\n\t\t\t\tpropertyOf(uihints)(\"layout\"),\n\t\t\t\tButtonMetadata.makeButtonMetadata(propertyOf(uihints)(\"buttons\")),\n\t\t\t\tpropertyOf(structure)(\"type\")\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n\n// searches uihints to match up with parameter\nfunction getStructureUIHint(structureName, uihints) {\n\tif (uihints) {\n\t\tfor (const uihint of uihints) {\n\t\t\tif (structureName === uihint.complex_type_ref) {\n\t\t\t\treturn uihint;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\nexport class StructureMetadata {\n\tconstructor(structures) {\n\t\tthis.structures = structures;\n\t}\n\n\tgetStructure(structName) {\n\t\tlet structureDef;\n\t\tthis.structures.forEach(function(structure) {\n\t\t\tif (structure.name === structName) {\n\t\t\t\tstructureDef = structure;\n\t\t\t}\n\t\t});\n\t\treturn structureDef;\n\t}\n\n\n\tstatic makeStructureMetadata(structures, uihintsStructures) {\n\t\tif (structures) {\n\t\t\tconst structureDefs = [];\n\t\t\tfor (const structure of structures) {\n\t\t\t\tconst struct = StructureDef.makeStructure(structure, getStructureUIHint(structure.id, uihintsStructures));\n\t\t\t\tif (struct !== null) {\n\t\t\t\t\tstructureDefs.push(struct);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new StructureMetadata(structureDefs);\n\t\t}\n\t\treturn null;\n\t}\n\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GroupMetadata } from \"./GroupInfo\";\nimport { ActionMetadata } from \"./ActionInfo\";\nimport { ParameterMetadata } from \"./ParameterInfo\";\nimport { StructureMetadata } from \"./StructureInfo\";\nimport { DEFAULT_LABEL_EDITABLE } from \"../constants/constants\";\nimport { Size } from \"../constants/form-constants\";\nimport { ResourceDef } from \"../util/L10nProvider\";\nimport { propertyOf } from \"lodash\";\n\nexport class PropertyDef {\n\tconstructor(cname, icon, editorSize, pixelWidth, label, labelEditable, help, description, structureMetadata, parameterMetadata, groupMetadata, actionMetadata, heading) {\n\t\tthis.name = cname;\n\t\tthis.icon = icon;\n\t\tthis.editorSize = editorSize;\n\t\tthis.pixelWidth = pixelWidth;\n\t\tthis.label = label;\n\t\tthis.labelEditable = labelEditable;\n\t\tthis.help = help;\n\t\tthis.description = ResourceDef.make(description);\n\t\tthis.structureMetadata = structureMetadata;\n\t\tthis.parameterMetadata = parameterMetadata;\n\t\tthis.groupMetadata = groupMetadata;\n\t\tthis.actionMetadata = actionMetadata;\n\t\tthis.heading = heading;\n\t}\n\n\t/**\n\t * Returns the \"editorSize\" attribute which can be used to define how large\n\t * a node editor should be in the UI. Default to small editor unless defaultValue is set.\n\t */\n\teditorSizeHint(defaultValue) {\n\t\tif (this.editorSize) {\n\t\t\treturn this.editorSize;\n\t\t}\n\t\tif (defaultValue) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn Size.SMALL;\n\t}\n\n\n\tstatic makePropertyDef(titleDefinition, parameters, structures, uihints) {\n\t\tconst structureMetadata = StructureMetadata.makeStructureMetadata(structures, propertyOf(uihints)(\"complex_type_info\"));\n\t\tconst parameterMetadata = ParameterMetadata.makeParameterMetadata(parameters,\n\t\t\tpropertyOf(uihints)(\"parameter_info\"), propertyOf(uihints)(\"ui_parameters\"));\n\t\tconst actionMetadata = ActionMetadata.makeActionMetadata(propertyOf(uihints)(\"action_info\"));\n\t\tconst groupMetadata = GroupMetadata.makeGroupMetadata(propertyOf(uihints)(\"group_info\"), parameterMetadata.getParameters());\n\n\t\tconst label = titleDefinition && titleDefinition.title ? titleDefinition.title : \"\";\n\t\tconst labelEditable = titleDefinition && typeof titleDefinition.editable !== \"undefined\" ? titleDefinition.editable : DEFAULT_LABEL_EDITABLE;\n\n\t\treturn new PropertyDef(\n\t\t\tpropertyOf(uihints)(\"id\"),\n\t\t\tpropertyOf(uihints)(\"icon\"),\n\t\t\tpropertyOf(uihints)(\"editor_size\"),\n\t\t\tpropertyOf(uihints)(\"pixel_width\"),\n\t\t\tlabel,\n\t\t\tlabelEditable,\n\t\t\tpropertyOf(uihints)(\"help\"),\n\t\t\tpropertyOf(uihints)(\"description\"),\n\t\t\tstructureMetadata,\n\t\t\tparameterMetadata,\n\t\t\tgroupMetadata,\n\t\t\tactionMetadata,\n\t\t\tpropertyOf(uihints)(\"label\")\n\t\t);\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { get } from \"lodash\";\n\nimport { EditStyle } from \"../constants/form-constants\";\n\n\nexport class Control {\n\tconstructor(settings) {\n\t\tthis.name = settings.name;\n\t\tif (settings.label) {\n\t\t\tthis.label = settings.label;\n\t\t}\n\t\tif (settings.description) {\n\t\t\tthis.description = settings.description;\n\t\t}\n\t\tif (typeof settings.labelVisible === \"boolean\") {\n\t\t\tthis.labelVisible = settings.labelVisible;\n\t\t}\n\t\tif (settings.controlType) {\n\t\t\tthis.controlType = settings.controlType;\n\t\t}\n\t\tif (settings.valueDef) {\n\t\t\tthis.valueDef = settings.valueDef;\n\t\t}\n\t\tif (settings.role) {\n\t\t\tthis.role = settings.role;\n\t\t}\n\t\tif (settings.additionalText) {\n\t\t\tthis.additionalText = settings.additionalText;\n\t\t}\n\t\tif (settings.orientation) {\n\t\t\tthis.orientation = settings.orientation;\n\t\t}\n\t\tif (settings.values) {\n\t\t\tthis.values = settings.values;\n\t\t}\n\t\tif (settings.valueLabels) {\n\t\t\tthis.valueLabels = settings.valueLabels;\n\t\t}\n\t\tif (settings.valueDescs) {\n\t\t\tthis.valueDescs = settings.valueDescs;\n\t\t}\n\t\tif (settings.valueIcons) {\n\t\t\tthis.valueIcons = settings.valueIcons;\n\t\t}\n\t\tif (typeof settings.sortable === \"boolean\") {\n\t\t\tthis.sortable = settings.sortable;\n\t\t}\n\t\tif (typeof settings.filterable === \"boolean\") {\n\t\t\tthis.filterable = settings.filterable;\n\t\t}\n\t\tif (typeof settings.resizable === \"boolean\") {\n\t\t\tthis.resizable = settings.resizable;\n\t\t}\n\t\tif (settings.language) {\n\t\t\tthis.language = settings.language;\n\t\t}\n\t\tif (settings.enableMaximize) {\n\t\t\tthis.enableMaximize = settings.enableMaximize;\n\t\t}\n\t\tif (settings.charLimit) {\n\t\t\tthis.charLimit = settings.charLimit;\n\t\t}\n\t\tif (settings.summary) {\n\t\t\tthis.summary = settings.summary;\n\t\t}\n\t\tif (settings.increment) {\n\t\t\tthis.increment = settings.increment;\n\t\t}\n\t\tif (settings.generatedValues) {\n\t\t\tthis.generatedValues = {};\n\t\t\tif (settings.generatedValues.operation) {\n\t\t\t\tthis.generatedValues.operation = settings.generatedValues.operation;\n\t\t\t}\n\t\t\tif (settings.generatedValues.start_value) {\n\t\t\t\tthis.generatedValues.startValue = settings.generatedValues.start_value;\n\t\t\t}\n\t\t}\n\t\tif (settings.dateFormat) {\n\t\t\tthis.dateFormat = settings.dateFormat;\n\t\t}\n\t\tif (settings.timeFormat) {\n\t\t\tthis.timeFormat = settings.timeFormat;\n\t\t}\n\t\tif (settings.customControlId) {\n\t\t\tthis.customControlId = settings.customControlId;\n\t\t}\n\t\tif (settings.data) {\n\t\t\tthis.data = settings.data;\n\t\t}\n\t\tif (settings.rows) {\n\t\t\tthis.rows = settings.rows;\n\t\t}\n\t\tif (settings.displayChars) {\n\t\t\tthis.displayChars = settings.displayChars;\n\t\t}\n\t\tif (settings.action) {\n\t\t\tthis.action = settings.action;\n\t\t}\n\t\tif (settings.structureType) {\n\t\t\tthis.structureType = settings.structureType;\n\t\t}\n\t\tif (settings.subControls) {\n\t\t\tthis.subControls = settings.subControls;\n\t\t}\n\t\tif (settings.childItem) {\n\t\t\tthis.childItem = settings.childItem;\n\t\t}\n\t\tif (settings.layout) {\n\t\t\tthis.layout = settings.layout;\n\t\t}\n\t\tif (typeof settings.keyIndex === \"number\") {\n\t\t\tthis.keyIndex = settings.keyIndex;\n\t\t}\n\t\tif (settings.defaultRow) {\n\t\t\tthis.defaultRow = settings.defaultRow;\n\t\t}\n\t\tif (typeof settings.moveableRows === \"boolean\") {\n\t\t\tthis.moveableRows = settings.moveableRows;\n\t\t}\n\t\tif (typeof settings.required === \"boolean\") {\n\t\t\tthis.required = settings.required;\n\t\t}\n\t\tif (settings.rowSelection) {\n\t\t\tthis.rowSelection = settings.rowSelection;\n\t\t}\n\t\tif (typeof settings.addRemoveRows === \"boolean\") {\n\t\t\tthis.addRemoveRows = settings.addRemoveRows;\n\t\t}\n\n\t\tif (typeof settings.hideEditButton === \"boolean\") {\n\t\t\tthis.hideEditButton = settings.hideEditButton;\n\t\t}\n\n\t\tif (typeof settings.header === \"boolean\") {\n\t\t\tthis.header = settings.header;\n\t\t}\n\t\tif (typeof settings.uionly === \"boolean\") {\n\t\t\tthis.uionly = settings.uionly;\n\t\t}\n\t\tif (typeof settings.includeAllFields === \"boolean\") {\n\t\t\tthis.includeAllFields = settings.includeAllFields;\n\t\t}\n\t\tif (settings.dmImage) {\n\t\t\tthis.dmImage = settings.dmImage;\n\t\t}\n\n\t\tif (typeof settings.visible === \"boolean\") {\n\t\t\tthis.visible = settings.visible;\n\t\t}\n\t\tif (typeof settings.width === \"number\") {\n\t\t\tthis.width = settings.width;\n\t\t}\n\t\tif (settings.editStyle) {\n\t\t\tthis.editStyle = settings.editStyle;\n\t\t} else if (!settings.isKeyField && typeof settings.structureType !== \"undefined\") {\n\t\t\tthis.editStyle = EditStyle.INLINE; // Should only be set for structure controls\n\t\t}\n\t\tif (settings.dmDefault) {\n\t\t\tthis.dmDefault = settings.dmDefault;\n\t\t}\n\t\tif (settings.dmImage) {\n\t\t\tthis.dmImage = settings.dmImage;\n\t\t}\n\t\tif (settings.customValueAllowed) {\n\t\t\tthis.customValueAllowed = settings.customValueAllowed;\n\t\t}\n\t\tif (settings.className) {\n\t\t\tthis.className = settings.className;\n\t\t}\n\t\tif (settings.showRequiredLabel) {\n\t\t\tthis.showRequiredLabel = settings.showRequiredLabel;\n\t\t}\n\t\tif (settings.buttons) {\n\t\t\tthis.buttons = settings.buttons;\n\t\t}\n\t\tthis.light = get(settings, \"light\", true);\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ItemType } from \"../constants/form-constants\";\nimport { propertyOf } from \"lodash\";\n\nexport class UIItem {\n\tconstructor(elements) {\n\t\tthis.id = propertyOf(elements)(\"id\");\n\t\tthis.itemType = propertyOf(elements)(\"itemType\");\n\t\tthis.tabs = propertyOf(elements)(\"tabs\"); // when PRIMARY_TABS, SUB_TABS or PANEL_SELECTOR\n\t\tthis.panel = propertyOf(elements)(\"panel\"); // when PANEL or ADDITIONAL_LINK\n\t\tthis.control = propertyOf(elements)(\"control\"); // when CONTROL\n\t\tthis.text = propertyOf(elements)(\"text\"); // when ADDITIONAL_LINK (link label) or STATIC_TEXT\n\t\tthis.textType = propertyOf(elements)(\"textType\"); // when STATIC_TEXT\n\t\tthis.secondaryText = propertyOf(elements)(\"secondaryText\"); // when ADDITIONAL_LINK (subpanel label)\n\t\tthis.dependsOn = propertyOf(elements)(\"dependsOn\"); // when PANEL_SELECTOR (control to obtain value from)\n\t\tthis.action = propertyOf(elements)(\"action\"); // when ACTION\n\t\tthis.className = propertyOf(elements)(\"className\");\n\t\tthis.nestedPanel = propertyOf(elements)(\"nestedPanel\"); // when SUB_TABS\n\t}\n\n\tstatic makePrimaryTabs(tabs) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.PRIMARY_TABS,\n\t\t\ttabs: tabs\n\t\t});\n\t}\n\n\tstatic makeSubTabs(tabs, className, nestedPanel) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.SUB_TABS,\n\t\t\ttabs: tabs,\n\t\t\tclassName: className,\n\t\t\tnestedPanel: nestedPanel\n\t\t});\n\t}\n\n\tstatic makePanelSelector(groupName, tabs, dependsOn, className) {\n\t\treturn new UIItem({\n\t\t\tid: groupName,\n\t\t\titemType: ItemType.PANEL_SELECTOR,\n\t\t\ttabs: tabs,\n\t\t\tdependsOn: dependsOn,\n\t\t\tclassName: className\n\t\t});\n\t}\n\n\tstatic makePanel(panel) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.PANEL,\n\t\t\tpanel: panel\n\t\t});\n\t}\n\n\tstatic makeAdditionalLink(text, dialogText, panel) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.ADDITIONAL_LINK,\n\t\t\tpanel: panel,\n\t\t\ttext: text,\n\t\t\tsecondaryText: dialogText\n\t\t});\n\t}\n\n\tstatic makeControl(control) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.CONTROL,\n\t\t\tcontrol: control\n\t\t});\n\t}\n\n\tstatic makeAction(action) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.ACTION,\n\t\t\taction: action\n\t\t});\n\t}\n\n\tstatic makeHSeparator() {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.HORIZONTAL_SEPARATOR\n\t\t});\n\t}\n\n\tstatic makeStaticText(text, textType) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.STATIC_TEXT,\n\t\t\ttext: text,\n\t\t\ttextType: textType\n\t\t});\n\t}\n\n\tstatic makeTextPanel(groupName, label, description, className, nestedPanel) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.TEXT_PANEL,\n\t\t\tpanel: {\n\t\t\t\tid: groupName,\n\t\t\t\tlabel: label,\n\t\t\t\tdescription: description,\n\t\t\t\tclassName: className,\n\t\t\t\tnestedPanel: nestedPanel\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic makeCustomPanel(panel, className) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.CUSTOM_PANEL,\n\t\t\tpanel: panel,\n\t\t\tclassName: className\n\t\t});\n\t}\n\n\tstatic makeTearsheetPanel(control, description) {\n\t\treturn new UIItem({\n\t\t\titemType: ItemType.TEARSHEET,\n\t\t\tpanel: {\n\t\t\t\t...control,\n\t\t\t\tdescription\n\t\t\t}\n\t\t});\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint max-depth: [\"error\", 5] */\n\nimport { Control } from \"./ControlInfo\";\nimport { UIItem } from \"./UIItem\";\nimport { GroupType, PanelType, Type, ControlType, ParamRole, ORIENTATIONS } from \"../constants/form-constants\";\nimport { CONTAINER_TYPE } from \"../constants/constants\";\nimport logger from \"../../../utils/logger\";\nimport { StructureDef } from \"./StructureInfo\";\nimport { Action } from \"./ActionInfo\";\nimport { Button } from \"./ButtonInfo\";\nimport { get } from \"lodash\";\n\n/**\n * The Editor is the primary container for the editing controls. It defines the tabs within the\n * form which themselves contain the controls and other UI artifacts.\n */\nexport class EditorTab {\n\tconstructor(label, cname, uiItem) {\n\t\tthis.text = label;\n\t\tthis.group = cname;\n\t\tthis.content = uiItem;\n\t}\n}\n\nclass ValueDef {\n\tconstructor(propType, isList, isMap, defaultValue) {\n\t\tthis.propType = propType === Type.OBJECT ? Type.STRUCTURE : propType;\n\t\tthis.isList = isList;\n\t\tthis.isMap = isMap;\n\t\tthis.defaultValue = defaultValue;\n\t}\n\tstatic make(parameter) {\n\t\treturn new ValueDef(parameter.propType(), parameter.isList(),\n\t\t\tparameter.isMapValue(), parameter.defaultValue);\n\t}\n}\n\nclass Label {\n\tconstructor(text, numberGenerator) {\n\t\tthis.text = text;\n\t\tif (numberGenerator) {\n\t\t\tthis.numberGenerator = numberGenerator;\n\t\t}\n\t}\n}\n\nclass Description {\n\tconstructor(text, placement, link) {\n\t\tthis.text = text;\n\t\tif (placement) {\n\t\t\tthis.placement = placement;\n\t\t}\n\t\tif (link) {\n\t\t\tthis.link = link;\n\t\t}\n\t}\n}\n\nclass ControlPanel {\n\tconstructor(id, panelType, className, nestedPanel, controls, label, copen = false) {\n\t\tthis.id = id;\n\t\tthis.panelType = panelType;\n\t\tthis.nestedPanel = nestedPanel;\n\t\tthis.uiItems = controls;\n\t\tthis.open = copen;\n\t\tif (label) {\n\t\t\tthis.label = label;\n\t\t}\n\t\tif (className) {\n\t\t\tthis.className = className;\n\t\t}\n\t}\n}\n\nclass ActionPanel {\n\tconstructor(id, panelType, className, nestedPanel, actions, label, description) {\n\t\tthis.id = id;\n\t\tthis.panelType = panelType;\n\t\tthis.nestedPanel = nestedPanel;\n\t\tthis.uiItems = actions;\n\t\tif (className) {\n\t\t\tthis.className = className;\n\t\t}\n\t\tif (label) {\n\t\t\tthis.label = label;\n\t\t}\n\t\tif (description) {\n\t\t\tthis.description = description;\n\t\t}\n\t}\n}\n\nclass CustomControlPanel {\n\tconstructor(id, panelType, className, nestedPanel, parameters, data) {\n\t\tthis.id = id;\n\t\tthis.panelType = panelType;\n\t\tthis.nestedPanel = nestedPanel;\n\t\tthis.parameters = parameters;\n\t\tthis.data = data;\n\t\tif (className) {\n\t\t\tthis.className = className;\n\t\t}\n\t}\n}\n\nclass NumberGenerator {\n\tconstructor(text, numberGenerator) {\n\t\tthis.text = text;\n\t\tif (numberGenerator.range) {\n\t\t\tthis.range = numberGenerator.range;\n\t\t}\n\t}\n}\n\n/**\n * Creates tab based on parameter definition\n */\nfunction makePrimaryTab(propertyDef, group, l10nProvider, containerType) {\n\tconst label = l10nProvider.l10nLabel(group, group.name);\n\tconst additionalInfo = {\n\t\tlight: true,\n\t\tcontainerType\n\t};\n\treturn new EditorTab(label, group.name,\n\t\t_makeUIItem(propertyDef.parameterMetadata, propertyDef.actionMetadata, group, propertyDef.structureMetadata, l10nProvider, additionalInfo));\n}\n\nfunction _makeUIItem(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo) {\n\tconst groupName = group.name;\n\tlet groupItem = null;\n\tlet groupLabel = null;\n\tconst groupClassName = group.className;\n\tconst nestedPanel = get(group, \"nestedPanel\", false);\n\tswitch (group.groupType()) {\n\tcase GroupType.CONTROLS:\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.GENERAL, groupClassName, nestedPanel,\n\t\t\t_makeControls(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo)));\n\tcase GroupType.COLUMN_SELECTION:\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.COLUMN_SELECTION, groupClassName, nestedPanel,\n\t\t\t_makeControls(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo)));\n\tcase GroupType.ADDITIONAL: {\n\t\tconst panel = new ControlPanel(groupName, PanelType.GENERAL, groupClassName, nestedPanel,\n\t\t\t_makeControls(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo));\n\t\tgroupLabel = l10nProvider.l10nLabel(group, group.name);\n\t\treturn UIItem.makeAdditionalLink(groupLabel, groupLabel, panel);\n\t}\n\tcase GroupType.SUB_TABS: {\n\t\t// Defines a sub-tab group where each child group represents a sub-tab.\n\t\tconst subTabItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tconst subGroupName = subGroup.name;\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tgroupLabel = l10nProvider.l10nLabel(subGroup, subGroup.name);\n\t\t\t\tsubTabItems.push(new EditorTab(groupLabel, subGroupName, groupItem));\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makeSubTabs(subTabItems, groupClassName, nestedPanel);\n\t}\n\tcase GroupType.PANEL_SELECTOR: {\n\t\t// Defines a sub-tab group where each child group represents a sub-tab.\n\t\tconst panSelSubItems = _genPanelSelectorPanels(group, parameterMetadata, actionMetadata, structureMetadata, l10nProvider, additionalInfo);\n\t\treturn UIItem.makePanelSelector(groupName, panSelSubItems, group.dependsOn, groupClassName);\n\t}\n\tcase GroupType.PANELS: {\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.GENERAL, groupClassName, nestedPanel, panSubItems));\n\t}\n\tcase GroupType.COLUMN_PANEL: {\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.COLUMN_PANEL, groupClassName, nestedPanel, panSubItems));\n\t}\n\tcase GroupType.CUSTOM_PANEL: {\n\t\treturn UIItem.makeCustomPanel(new CustomControlPanel(groupName, PanelType.CUSTOM, groupClassName, nestedPanel, group.parameterNames(), group.data));\n\t}\n\tcase GroupType.SUMMARY_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nLabel(group, group.name);\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.SUMMARY, groupClassName, nestedPanel, panSubItems, groupLabel));\n\t}\n\tcase GroupType.ACTION_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nResource(group.label);\n\t\tlet groupDesc;\n\t\tif (group.description) {\n\t\t\tgroupDesc = new Description(l10nProvider.l10nResource(group.description),\n\t\t\t\tnull,\n\t\t\t\tgroup.description ? group.description.link : null);\n\t\t}\n\t\treturn UIItem.makePanel(new ActionPanel(groupName, PanelType.ACTION_PANEL, groupClassName, nestedPanel,\n\t\t\t_makeActions(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider), groupLabel, groupDesc));\n\t}\n\tcase GroupType.TEXT_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nResource(group.label);\n\t\tlet groupDesc;\n\t\tif (group.description) {\n\t\t\tgroupDesc = new Description(l10nProvider.l10nResource(group.description),\n\t\t\t\tgroup.description ? group.description.placement : null,\n\t\t\t\tgroup.description ? group.description.link : null);\n\t\t}\n\t\treturn UIItem.makeTextPanel(groupName, groupLabel, groupDesc, groupClassName, nestedPanel);\n\t}\n\tcase GroupType.TWISTY_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nLabel(group, group.name);\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makePanel(new ControlPanel(groupName, PanelType.TWISTY_PANEL, groupClassName, nestedPanel, panSubItems, groupLabel, group.open));\n\t}\n\tcase GroupType.TEARSHEET_PANEL: {\n\t\tgroupLabel = l10nProvider.l10nLabel(group, group.name);\n\t\tlet groupDesc;\n\t\tif (group.description) {\n\t\t\tgroupDesc = new Description(l10nProvider.l10nResource(group.description));\n\t\t}\n\t\tconst panSubItems = [];\n\t\tif (Array.isArray(group.subGroups)) {\n\t\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\t\tconst additionalInfoUpdated = Object.assign({}, additionalInfo, { light: false });\n\t\t\t\tgroupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfoUpdated);\n\t\t\t\tpanSubItems.push(groupItem);\n\t\t\t});\n\t\t}\n\t\treturn UIItem.makeTearsheetPanel(new ControlPanel(groupName, PanelType.TEARSHEET, groupClassName, nestedPanel, panSubItems, groupLabel, false), groupDesc);\n\t}\n\tdefault:\n\t\tlogger.warn(\"(Unknown group type '\" + group.groupType() + \"')\");\n\t\treturn null;\n\t}\n}\n\n/**\n * Called on a base property group.\n */\nfunction _makeControls(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider, additionalInfo) {\n\tconst uiItems = [];\n\tconst panelInsertedFor = [];\n\tif (!Array.isArray(group.parameterNames())) {\n\t\treturn uiItems;\n\t}\n\tgroup.parameterNames().forEach(function(paramName) {\n\t\t// Assume property definition exists\n\t\tconst prop = parameterMetadata.getParameter(paramName);\n\t\tlet structureDef;\n\t\tif (prop.propType() === Type.STRUCTURE && structureMetadata) {\n\t\t\tstructureDef = structureMetadata.getStructure(prop.baseType());\n\t\t}\n\t\tif (!(group instanceof StructureDef) || (group instanceof StructureDef && prop.isSubPanelEdit())) {\n\t\t\tconst ctrl = _makeControl(parameterMetadata, paramName, group, structureDef, l10nProvider, actionMetadata, structureMetadata, null, additionalInfo);\n\t\t\tconst control = UIItem.makeControl(ctrl);\n\t\t\tif (prop.separatorBefore()) {\n\t\t\t\tuiItems.push(UIItem.makeHSeparator());\n\t\t\t}\n\t\t\tif (prop.textBefore) {\n\t\t\t\tuiItems.push(UIItem.makeStaticText(prop.getTextBefore(l10nProvider), prop.getTextBeforeType()));\n\t\t\t}\n\t\t\tuiItems.push(control);\n\t\t\tif (prop.textAfter) {\n\t\t\t\tuiItems.push(UIItem.makeStaticText(prop.getTextAfter(l10nProvider), prop.getTextAfterType()));\n\t\t\t}\n\t\t\tif (prop.separatorAfter()) {\n\t\t\t\tuiItems.push(UIItem.makeHSeparator());\n\t\t\t}\n\n\t\t\t// If this control is a vertical radio button set and any element of\n\t\t\t// the associated subgroups is a panel of type panelSelector which has\n\t\t\t// the insertPanels boolean set to true and has its 'depends on' field\n\t\t\t// set to the name of the parameter being displayed by this radio\n\t\t\t// button control, then process the subgroup in the usual way but add\n\t\t\t// each to the additionalItems in the control. This allows them to be\n\t\t\t// inserted into the radio button set at display time.\n\t\t\tif (group.subGroups && group.subGroups.length > 0) {\n\t\t\t\tfor (var i = 0; i < group.subGroups.length; i++) {\n\t\t\t\t\tif (control.control.controlType === ControlType.RADIOSET &&\n\t\t\t\t\t\t\tcontrol.control.orientation === ORIENTATIONS.VERTICAL &&\n\t\t\t\t\t\t\tgroup.subGroups[i].type === GroupType.PANEL_SELECTOR &&\n\t\t\t\t\t\t\tgroup.subGroups[i].insertPanels === true &&\n\t\t\t\t\t\t\tgroup.subGroups[i].dependsOn === control.control.name) {\n\t\t\t\t\t\tpanelInsertedFor.push(group.subGroups[i].dependsOn);\n\t\t\t\t\t\tcontrol.additionalItems =\n\t\t\t\t\t\t\t_genPanelSelectorPanels(group.subGroups[i], parameterMetadata, actionMetadata, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Process any subgroups which have not already been inserted into a\n\t// radio button set (see code in loop above).\n\tif (Array.isArray(group.subGroups)) {\n\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\tif (!_hasPanelBeenInserted(panelInsertedFor, subGroup.dependsOn)) {\n\t\t\t\tconst uiItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\t\tuiItems.push(uiItem);\n\t\t\t}\n\t\t});\n\t}\n\treturn uiItems;\n}\n\n/* Returns true if the panelInsertedFor array contains the dependsOn\n * value passed in.\n */\nfunction _hasPanelBeenInserted(panelInsertedFor, dependsOn) {\n\tif (dependsOn) {\n\t\tfor (var i = 0; i < panelInsertedFor.length; i++) {\n\t\t\tif (panelInsertedFor[i] === dependsOn) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n/* Creates a set of panel objects for a panelSelector panel. The UIItem for\n * each panel is wrapped in an EditorTab object which pairs together the UIItem\n * and its ID. The ID is subsequently used by the radioset control to decide\n * which panel is displayed with which radio button.\n */\nfunction _genPanelSelectorPanels(group, parameterMetadata, actionMetadata, structureMetadata, l10nProvider, additionalInfo) {\n\tconst panSelSubItems = [];\n\tif (Array.isArray(group.subGroups)) {\n\t\tgroup.subGroups.forEach(function(subGroup) {\n\t\t\tconst subGroupName = subGroup.name;\n\t\t\tconst groupItem = _makeUIItem(parameterMetadata, actionMetadata, subGroup, structureMetadata, l10nProvider, additionalInfo);\n\t\t\tconst groupLabel = l10nProvider.l10nLabel(subGroup, subGroup.name);\n\t\t\tpanSelSubItems.push(new EditorTab(groupLabel, subGroupName, groupItem));\n\t\t});\n\t}\n\treturn panSelSubItems;\n}\n\nfunction _makeStringControl(parameter, isSubControl) {\n\tlet controlType;\n\tlet role = parameter.getRole();\n\tif (parameter.isList()) {\n\t\tconst controlObj = _processListParameter(parameter);\n\t\tcontrolType = controlObj.controlType;\n\t\tif (controlObj.role) {\n\t\t\trole = controlObj.role;\n\t\t}\n\t} else {\n\t\tswitch (parameter.getRole()) {\n\t\tcase ParamRole.TEXT:\n\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\tbreak;\n\t\tcase ParamRole.ENUM:\n\t\t\t// show oneofselect when inside a table cell\n\t\t\tif (parameter.getValidValueCount() > 4 || (isSubControl && !_isEmbeddedOption(parameter))) {\n\t\t\t\tcontrolType = ControlType.ONEOFSELECT;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.RADIOSET;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ParamRole.COLUMN:\n\t\t\trole = ParamRole.COLUMN;\n\t\t\tif (isSubControl && _isEmbeddedMultiOption(parameter)) {\n\t\t\t\tcontrolType = ControlType.SELECTCOLUMNS;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.SELECTCOLUMN;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ParamRole.EXPRESSION:\n\t\t\tcontrolType = ControlType.EXPRESSION;\n\t\t\tbreak;\n\t\tcase ParamRole.EMAIL:\n\t\t\trole = ParamRole.EMAIL;\n\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t\tbreak;\n\t\tcase ParamRole.URL:\n\t\t\trole = ParamRole.URL;\n\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t\tbreak;\n\t\tcase ParamRole.COLOR:\n\t\t\trole = ParamRole.COLOR;\n\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t}\n\t}\n\treturn { controlType: controlType, role: role };\n}\n\n/**\n * Creates a control for the supplied property.\n */\nfunction _makeControl(parameterMetadata, paramName, group, structureDefinition, l10nProvider, actionMetadata, structureMetadata, subControl, additionalInfo) {\n\tconst isSubControl = typeof subControl !== \"undefined\" && subControl;\n\n\t// Assume the property is defined\n\tconst parameter = isSubControl ? subControl : parameterMetadata.getParameter(paramName);\n\n\tconst additionalText = parameter.getAdditionalText(l10nProvider);\n\tconst orientation = parameter.orientation;\n\tconst required = parameter.required;\n\tif (parameter.numberGenerator) {\n\t\tparameter.numberGenerator = new NumberGenerator(l10nProvider.l10nLabel(parameter.numberGenerator, parameter.name), parameter.numberGenerator);\n\t}\n\tconst controlLabel = new Label(l10nProvider.l10nLabel(parameter, parameter.name), parameter.numberGenerator);\n\tlet controlDesc;\n\tif (parameter.description) {\n\t\tcontrolDesc = new Description(l10nProvider.l10nDesc(parameter, parameter.name),\n\t\t\tparameter.description ? parameter.description.placement : null,\n\t\t\tparameter.description ? parameter.description.link : null);\n\t}\n\n\t// The role is used to modify the behaviour of certain controls\n\tlet labelVisible = true;\n\tlet role;\n\tlet controlType;\n\tlet subControls;\n\tlet keyIndex;\n\tlet defaultRow;\n\tlet childItem;\n\tlet moveableRows = parameter.moveableRows;\n\tlet rowSelection;\n\tlet addRemoveRows;\n\tlet header;\n\tlet includeAllFields;\n\tlet layout;\n\tlet buttons;\n\tlet structureType = parameter.structureType;\n\n\t// The control type defines the basic UI element that should be used to edit the property\n\tif (!isSubControl && parameter.getRole() === ParamRole.CUSTOM) {\n\t\tcontrolType = ControlType.CUSTOM;\n\t} else {\n\t\tswitch (parameter.propType()) {\n\t\tcase Type.STRING: {\n\t\t\tconst returnObject = _makeStringControl(parameter, isSubControl);\n\t\t\tcontrolType = returnObject.controlType;\n\t\t\trole = returnObject.role;\n\t\t\tbreak;\n\t\t}\n\t\tcase Type.PASSWORD:\n\t\t\tcontrolType = ControlType.PASSWORDFIELD;\n\t\t\tbreak;\n\t\tcase Type.BOOLEAN:\n\t\t\tif (!parameter.control || parameter.control === ControlType.CHECKBOX) {\n\t\t\t\tlabelVisible = false;\n\t\t\t\tcontrolType = ControlType.CHECKBOX;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Type.INTEGER:\n\t\tcase Type.LONG:\n\t\tcase Type.DOUBLE:\n\t\t\tif (parameter.isList()) {\n\t\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.NUMBERFIELD;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Type.DATE:\n\t\t\trole = Type.DATE;\n\t\t\tif (parameter.isList()) {\n\t\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.DATEFIELD;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Type.TIME:\n\t\t\trole = Type.TIME;\n\t\t\tif (parameter.isList()) {\n\t\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.TIMEFIELD;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Type.TIMESTAMP:\n\t\t\tcontrolType = ControlType.TIMESTAMP;\n\t\t\tbreak;\n\t\tcase Type.STRUCTURE: {\n\t\t\tconst structureDef = isSubControl ? structureMetadata.getStructure(parameter.baseType()) : structureDefinition;\n\n\t\t\tif (structureDef) {\n\t\t\t\tif (structureDef.hasSubPanel()) {\n\t\t\t\t\tchildItem = _makeEditStyleSubPanel(structureDef, l10nProvider, structureMetadata, additionalInfo);\n\t\t\t\t}\n\t\t\t\tkeyIndex = structureDef.keyAttributeIndex();\n\t\t\t\t// The defaultRow allows the UI to create a new row with sensible settings\n\t\t\t\t// when needed\n\t\t\t\tdefaultRow = structureDef.defaultStructure();\n\t\t\t\t// For inline/row editing, create definitions for all the columns that can be edited\n\t\t\t\tsubControls = [];\n\t\t\t\tif (structureDef.parameterMetadata && Array.isArray(structureDef.parameterMetadata.paramDefs)) {\n\t\t\t\t\tstructureDef.parameterMetadata.paramDefs.forEach(function(param) {\n\t\t\t\t\t\tconst newSubControl = _makeSubControl(param, l10nProvider, structureMetadata, additionalInfo);\n\t\t\t\t\t\tsubControls.push(newSubControl);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// If the property is a keyed property or a structure list then the key should not be included in the\n\t\t\t\t// structure definition. However it will still need to be included in the table column definitions.\n\t\t\t\tif ((parameter.isMapValue() || parameter.isList()) && structureDef.keyDefinition) {\n\t\t\t\t\tconst newSubControl = _makeSubControl(structureDef.keyDefinition, l10nProvider, structureMetadata, additionalInfo);\n\t\t\t\t\tsubControls.unshift(newSubControl);\n\t\t\t\t}\n\t\t\t\tif (parameter.isList() || parameter.isMapValue()) {\n\t\t\t\t\tif ((!isSubControl && group && typeof group.groupType !== \"undefined\" && group.groupType() === GroupType.COLUMN_SELECTION) ||\n\t\t\t\t\t\t\tparameter.control === ControlType.STRUCTURETABLE ||\n\t\t\t\t\t\t\tparameter.getRole() === ParamRole.COLUMN) {\n\t\t\t\t\t\tcontrolType = ControlType.STRUCTURETABLE;\n\t\t\t\t\t\tmoveableRows = structureDef.moveableRows;\n\t\t\t\t\t\trowSelection = structureDef.rowSelection;\n\t\t\t\t\t\taddRemoveRows = structureDef.addRemoveRows;\n\t\t\t\t\t\theader = structureDef.header;\n\t\t\t\t\t\tincludeAllFields = structureDef.includeAllFields;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontrolType = ControlType.STRUCTURELISTEDITOR;\n\t\t\t\t\t\tmoveableRows = structureDef.moveableRows;\n\t\t\t\t\t\trowSelection = structureDef.rowSelection;\n\t\t\t\t\t\taddRemoveRows = structureDef.addRemoveRows;\n\t\t\t\t\t\theader = structureDef.header;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (structureDef.buttons) {\n\t\t\t\t\t\tbuttons = _makeButtons(structureDef.buttons, l10nProvider);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontrolType = ControlType.STRUCTUREEDITOR;\n\t\t\t\t\tif (structureDef.layout) {\n\t\t\t\t\t\tlayout = structureDef.layout;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstructureType = structureDef.type;\n\t\t\t} else {\n\t\t\t\tcontrolType = ControlType.TEXTFIELD;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase Type.OBJECT:\n\t\t\tif (isSubControl) {\n\t\t\t\trole = parameter.getRole();\n\t\t\t\tif (role === ParamRole.COLUMN) {\n\t\t\t\t\tcontrolType = ControlType.SELECTCOLUMN;\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\"Complex subControl type that is not a field! Name: \" + parameter.name);\n\t\t\t\t\tcontrolType = ControlType.READONLY;\n\t\t\t\t}\n\t\t\t} else if (parameter.isCompoundField()) {\n\t\t\t\tconst returnObject = _makeStringControl(parameter, isSubControl);\n\t\t\t\tcontrolType = returnObject.controlType;\n\t\t\t\trole = returnObject.role;\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Complex parameter type that is not a field! Name: \" + parameter.name);\n\t\t\t\tcontrolType = ControlType.READONLY;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\trole = \"???\" + parameter.propType() + \"???\";\n\t\t\tcontrolType = ControlType.TEXTAREA;\n\t\t\tbreak;\n\t\t}\n\t}\n\tlet valueLabels;\n\tif (parameter.getRole() === ParamRole.ENUM) {\n\t\tvalueLabels = _parameterValueLabels(parameter, l10nProvider);\n\t}\n\n\tlet valueDescs;\n\tif (parameter.getRole() === ParamRole.ENUM) {\n\t\tvalueDescs = _parameterValueDescription(parameter, l10nProvider);\n\t}\n\tlet action;\n\tif (!isSubControl && parameter.actionRef) {\n\t\taction = _makeAction(actionMetadata.getAction(parameter.actionRef), l10nProvider);\n\t}\n\tconst settings = {};\n\tsettings.name = parameter.name;\n\tsettings.label = controlLabel;\n\tsettings.description = controlDesc;\n\tsettings.labelVisible = typeof parameter.labelVisible === \"boolean\" ? parameter.labelVisible : labelVisible;\n\tsettings.controlType = parameter.getControl(controlType);\n\tsettings.valueDef = ValueDef.make(parameter);\n\tsettings.structureType = structureType;\n\tsettings.role = role;\n\tsettings.additionalText = additionalText;\n\tsettings.orientation = orientation;\n\tsettings.values = parameter.getValidValues();\n\tsettings.valueLabels = valueLabels;\n\tsettings.valueDescs = valueDescs;\n\tsettings.valueIcons = parameter.valueIcons;\n\tsettings.sortable = parameter.sortable;\n\tsettings.filterable = parameter.filterable;\n\tsettings.resizable = parameter.resizable;\n\tsettings.charLimit = parameter.charLimit;\n\tsettings.subControls = subControls;\n\tsettings.keyIndex = keyIndex;\n\tsettings.defaultRow = defaultRow;\n\tsettings.childItem = childItem;\n\tsettings.moveableRows = moveableRows;\n\tsettings.required = required;\n\tsettings.language = parameter.language;\n\tsettings.enableMaximize = parameter.enableMaximize;\n\tsettings.summary = parameter.summary;\n\tsettings.increment = parameter.increment;\n\tsettings.rowSelection = rowSelection;\n\tsettings.generatedValues = parameter.generatedValues;\n\tsettings.addRemoveRows = addRemoveRows;\n\tsettings.dateFormat = parameter.dateFormat;\n\tsettings.timeFormat = parameter.timeFormat;\n\tsettings.customControlId = parameter.customControlId;\n\tsettings.data = parameter.data;\n\tsettings.rows = parameter.rows;\n\tsettings.displayChars = parameter.displayChars;\n\tsettings.header = header;\n\tsettings.uionly = parameter.uionly;\n\tsettings.includeAllFields = includeAllFields;\n\tsettings.layout = layout;\n\tsettings.dmImage = parameter.dmImage;\n\tsettings.action = action;\n\tsettings.customValueAllowed = parameter.customValueAllowed;\n\tsettings.className = parameter.className;\n\tsettings.showRequiredLabel = parameter.showRequiredLabel;\n\tsettings.buttons = buttons;\n\tsettings.light = _isControlLight(additionalInfo.light, additionalInfo.containerType, parameter.isSubPanelEdit());\n\tif (isSubControl) {\n\t\tsettings.visible = parameter.visible;\n\t\tsettings.width = parameter.columns(8);\n\t\tsettings.editStyle = parameter.editStyle;\n\t\tsettings.isKeyField = parameter.isKey;\n\t\tsettings.dmDefault = parameter.dmDefault;\n\t}\n\treturn new Control(settings);\n}\n\nfunction _isControlLight(light, containerType, isSubPanelEdit) {\n\treturn light &&\n\t\t(containerType !== CONTAINER_TYPE.TEARSHEET || // Controls displayed in a Tearsheet are not light themed\n\t\t(containerType === CONTAINER_TYPE.TEARSHEET && isSubPanelEdit)); // Controls inside a subpanel of tearsheet container are light themed\n}\n\nfunction _processListParameter(parameter) {\n\tconst controlObj = {};\n\tswitch (parameter.getRole()) {\n\tcase ParamRole.TEXT:\n\t\tcontrolObj.controlType = ControlType.TEXTAREA;\n\t\tbreak;\n\tcase ParamRole.ENUM:\n\t\tif (parameter.getValidValueCount() < 5) {\n\t\t\tcontrolObj.controlType = ControlType.CHECKBOXSET;\n\t\t} else {\n\t\t\tcontrolObj.controlType = ControlType.SOMEOFSELECT;\n\t\t}\n\t\tbreak;\n\tcase ParamRole.COLUMN:\n\t\tcontrolObj.role = ParamRole.COLUMN;\n\t\tcontrolObj.controlType = ControlType.SELECTCOLUMNS;\n\t\tbreak;\n\tdefault:\n\t\tcontrolObj.controlType = ControlType.TEXTAREA;\n\t}\n\treturn controlObj;\n}\n\nfunction _makeEditStyleSubPanel(structureDef, l10nProvider, structureMetadata, additionalInfo) {\n\t// If we\"re not editing in-line then create a sub-panel that can be used to edit the attributes\n\tconst panel = new ControlPanel(\n\t\tstructureDef.name,\n\t\tPanelType.GENERAL,\n\t\t\"properties-editstyle-sub-panel\",\n\t\tfalse,\n\t\t_makeControls(structureDef.parameterMetadata,\n\t\t\tstructureDef.actionMetadata,\n\t\t\tstructureDef,\n\t\t\tstructureMetadata,\n\t\t\tl10nProvider,\n\t\t\tadditionalInfo)\n\t);\n\tconst groupLabel = l10nProvider.l10nLabel(structureDef, structureDef.name);\n\treturn UIItem.makeAdditionalLink(\"...\", groupLabel, panel);\n}\n\n/**\n * Creates a column control for the supplied property/attribute.\n */\nfunction _makeSubControl(parameter, l10nProvider, structureMetadata, additionalInfo) {\n\tconst parameterMetadata = null;\n\tconst paramName = null;\n\tconst group = null;\n\tconst structureDef = parameter.propType() === Type.STRUCTURE ? structureMetadata.getStructure(parameter.baseType()) : null;\n\tconst actionMetadata = null;\n\tconst subControl = parameter;\n\treturn _makeControl(parameterMetadata, paramName, group, structureDef, l10nProvider, actionMetadata, structureMetadata, subControl, additionalInfo);\n}\n\n/**\n * Returns true if the given parameter is a multi-option type that can be embedded within a table cell.\n */\nfunction _isEmbeddedMultiOption(parameter) {\n\tif (parameter.isList() || parameter.isMapValue()) {\n\t\treturn _isEmbeddedOption(parameter);\n\t}\n\treturn false;\n}\n\n/**\n * Returns true if the given parameter is a multi-option type that can be embedded within a table cell.\n */\nfunction _isEmbeddedOption(parameter) {\n\treturn parameter.editStyle === \"on_panel\" || parameter.editStyle === \"subpanel\";\n}\n\n/**\n * Called on a base property group.\n */\nfunction _makeActions(parameterMetadata, actionMetadata, group, structureMetadata, l10nProvider) {\n\tconst uiItems = [];\n\tif (Array.isArray(group.actionIds())) {\n\t\tgroup.actionIds().forEach(function(actionId) {\n\t\t\t// Assume property definition exists\n\t\t\tconst action = UIItem.makeAction(_makeAction(actionMetadata.getAction(actionId), l10nProvider));\n\t\t\tuiItems.push(action);\n\t\t});\n\t}\n\treturn uiItems;\n}\n\nfunction _makeAction(action, l10nProvider) {\n\tconst actionLabel = new Label(l10nProvider.l10nLabel(action, action.id));\n\tlet actionDesc;\n\tif (action.description) {\n\t\tactionDesc = new Description(l10nProvider.l10nDesc(action, action.id));\n\t}\n\treturn new Action(action.id, actionLabel, actionDesc, action.control, action.data, action.image, action.button);\n}\n\nfunction _makeButtons(buttonMetadata, l10nProvider) {\n\tconst buttons = [];\n\tbuttonMetadata.buttonDefs.forEach((buttonDef) => {\n\t\tbuttons.push(_makeButton(buttonMetadata.getButton(buttonDef.id), l10nProvider));\n\t});\n\treturn buttons;\n}\n\nfunction _makeButton(button, l10nProvider) {\n\tlet buttonLabel;\n\tif (button.label) {\n\t\tbuttonLabel = new Label(l10nProvider.l10nLabel(button, button.id));\n\t}\n\tlet buttonDescription;\n\tif (button.description) {\n\t\tbuttonDescription = new Description(l10nProvider.l10nDesc(button, button.description));\n\t}\n\treturn new Button(button.id, buttonLabel, buttonDescription, button.icon, button.carbonIcon, button.enabled, button.divider);\n}\n\nfunction _parameterValueLabels(parameter, l10nProvider) {\n\tif (Array.isArray(parameter.getValidValues())) {\n\t\tlet key;\n\t\tif (parameter.resource_key) {\n\t\t\tkey = parameter.resource_key;\n\t\t} else {\n\t\t\tkey = parameter.name;\n\t\t}\n\t\tconst paramLabels = [];\n\t\tparameter.getValidValues().forEach(function(paramValue) {\n\t\t\tparamLabels.push(l10nProvider.l10nValueLabel(key, String(paramValue)));\n\t\t});\n\t\treturn paramLabels;\n\t}\n\treturn [];\n}\n\nfunction _parameterValueDescription(parameter, l10nProvider) {\n\tif (Array.isArray(parameter.getValidValues())) {\n\t\tlet key;\n\t\tif (parameter.resource_key) {\n\t\t\tkey = parameter.resource_key;\n\t\t} else {\n\t\t\tkey = parameter.name;\n\t\t}\n\t\tconst paramDescs = [];\n\t\tparameter.getValidValues().forEach(function(paramValue) {\n\t\t\tparamDescs.push(l10nProvider.l10nValueDesc(key, String(paramValue)));\n\t\t});\n\t\treturn paramDescs;\n\t}\n\treturn [];\n}\n\n\nexport {\n\tmakePrimaryTab, _makeControl as makeControl\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { has } from \"lodash\";\n\n/*\n* Iterates over the conditions and replaces the default message with translated message\n*/\nfunction translateMessages(conditions, l10nProvider) {\n\tif (conditions && Array.isArray(conditions)) {\n\t\tfor (var condition of conditions) {\n\t\t\tsearchMessage(condition, l10nProvider);\n\t\t}\n\t}\n\treturn conditions;\n}\n\nfunction searchMessage(object, l10nProvider) {\n\tfor (var x in object) {\n\t\tif (has(object, x)) {\n\t\t\tif (typeof object[x] === \"object\" && object[x] !== null) {\n\t\t\t\tif (object[x].message) {\n\t\t\t\t\tobject[x].message.default = l10nProvider.l10nResource(object[x].message);\n\t\t\t\t} else {\n\t\t\t\t\tsearchMessage(object[x], l10nProvider);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport { translateMessages };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyDef } from \"./PropertyDef\";\nimport { propertyOf } from \"lodash\";\nimport { makePrimaryTab } from \"./EditorForm\";\nimport { UIItem } from \"./UIItem\";\nimport { L10nProvider } from \"../util/L10nProvider\";\nimport { translateMessages } from \"./Conditions\";\nimport { convertValueDataTypes } from \"../util/property-utils\";\nimport { Size } from \"../constants/form-constants\";\nimport { CONTAINER_TYPE } from \"../constants/constants\";\n\nexport default class Form {\n\tconstructor(componentId, label, labelEditable, help, editorSize, pixelWidth, uiItems, buttons, data, conditions, resources, icon, heading) {\n\t\tthis.componentId = componentId;\n\t\tthis.label = label;\n\t\tthis.labelEditable = labelEditable;\n\t\tthis.help = help;\n\t\tthis.editorSize = editorSize;\n\t\tthis.pixelWidth = pixelWidth;\n\t\tthis.uiItems = uiItems;\n\t\tthis.buttons = buttons;\n\t\tthis.data = data;\n\t\tthis.conditions = conditions;\n\t\tthis.resources = resources;\n\t\tthis.icon = icon;\n\t\tthis.heading = heading;\n\t}\n\n\t/**\n\t* Returns a new Form\n\t* @param paramDef Parameter definition\n\t* @param containerType Type of container common properties will be displayed in, set in propertiesConfig\n\t* @param shouldConvertValueDataTypes Boolean, if true, convert the currentParameters values into the type defined in parameterDef\n\t*/\n\tstatic makeForm(paramDef, containerType, shouldConvertValueDataTypes) {\n\t\tconst propDef = PropertyDef.makePropertyDef(propertyOf(paramDef)(\"titleDefinition\"), propertyOf(paramDef)(\"parameters\"), propertyOf(paramDef)(\"complex_types\"),\n\t\t\tpropertyOf(paramDef)(\"uihints\"));\n\t\tconst resources = propertyOf(paramDef)(\"resources\");\n\t\tconst conditions = propertyOf(paramDef)(\"conditions\");\n\t\tif (propDef) {\n\t\t\tconst l10nProvider = new L10nProvider(resources);\n\t\t\tconst tabs = [];\n\t\t\tif (propDef.groupMetadata && propDef.groupMetadata.groups) {\n\t\t\t\tfor (const group of propDef.groupMetadata.groups) {\n\t\t\t\t\ttabs.push(makePrimaryTab(propDef, group, l10nProvider, containerType));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet currentParameters = propertyOf(paramDef)(\"current_parameters\");\n\t\t\tif (shouldConvertValueDataTypes) {\n\t\t\t\tcurrentParameters = convertValueDataTypes(currentParameters, propDef.parameterMetadata.paramDefs);\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\tcurrentParameters: currentParameters,\n\t\t\t\tuiCurrentParameters: propertyOf(paramDef)(\"current_ui_parameters\"),\n\t\t\t\tdatasetMetadata: propertyOf(paramDef)(\"dataset_metadata\")\n\t\t\t};\n\t\t\tconst isModal = containerType === CONTAINER_TYPE.TEARSHEET || containerType === CONTAINER_TYPE.MODAL;\n\t\t\tconst editorSizeDefault = isModal ? Size.LARGE : Size.SMALL;\n\t\t\treturn new Form(propDef.name,\n\t\t\t\tpropDef.label,\n\t\t\t\tpropDef.labelEditable,\n\t\t\t\tpropDef.help,\n\t\t\t\tpropDef.editorSizeHint(editorSizeDefault),\n\t\t\t\tpropDef.pixelWidth,\n\t\t\t\t[UIItem.makePrimaryTabs(tabs)],\n\t\t\t\t_defaultButtons(),\n\t\t\t\tdata,\n\t\t\t\ttranslateMessages(conditions, l10nProvider),\n\t\t\t\tresources,\n\t\t\t\tpropDef.icon,\n\t\t\t\tl10nProvider.l10nResource(propDef.heading)\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nfunction _defaultButtons() {\n\tconst okBtn = new Button(\"ok\", \"OK\", true, \"\");\n\tconst cancelBtn = new Button(\"cancel\", \"Cancel\", false, \"\");\n\treturn [okBtn, cancelBtn];\n}\n\nclass Button {\n\tconstructor(id, text, isPrimary, url) {\n\t\tthis.id = id;\n\t\tthis.text = text;\n\t\tthis.isPrimary = isPrimary;\n\t\tthis.url = url;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Action from \"../command-stack/action.js\";\n\nexport default class CommonPropertiesAction extends Action {\n\tconstructor(newValues, initialValues, appData, applyPropertyChanges, propertiesActionLabel) {\n\t\tsuper(newValues);\n\t\tthis.newValues = newValues;\n\t\tthis.initialValues = initialValues;\n\t\tthis.appData = appData;\n\t\tthis.applyPropertyChanges = applyPropertyChanges;\n\t\tthis.propertiesActionLabel = propertiesActionLabel;\n\t}\n\n\t// Standard methods\n\tdo() {\n\t\tthis.applyPropertyChanges(this.newValues.properties, this.appData, this.newValues.additionalInfo, this.newValues.undoInfo, this.newValues.uiProperties);\n\t}\n\n\tundo() {\n\t\tthis.applyPropertyChanges(this.initialValues.properties, this.appData, this.initialValues.additionalInfo, this.initialValues.undoInfo, this.initialValues.uiProperties);\n\t}\n\n\tredo() {\n\t\tthis.applyPropertyChanges(this.newValues.properties, this.appData, this.newValues.additionalInfo, this.newValues.undoInfo, this.newValues.uiProperties);\n\t}\n\n\tgetLabel() {\n\t\treturn this.propertiesActionLabel;\n\t}\n}\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_PROPERTY_VALUE, SET_PROPERTY_VALUES, REMOVE_PROPERTY_VALUE } from \"../actions\";\n\nfunction properties(state = {}, action) {\n\tconst propertyId = action.property && action.property.propertyId ? action.property.propertyId : null;\n\tswitch (action.type) {\n\tcase UPDATE_PROPERTY_VALUE: {\n\t\tif (propertyId === null) {\n\t\t\treturn state;\n\t\t}\n\t\tvar newState = state;\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\t\tnewState[propertyId.name] = [];\n\t\t\t}\n\t\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\t\tif (typeof newState[propertyId.name][propertyId.row] === \"undefined\") {\n\t\t\t\t\tnewState[propertyId.name][propertyId.row] = [];\n\t\t\t\t}\n\n\t\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\t\tupdateNestedPropertyValue(propertyId.propertyId, newState[propertyId.name][propertyId.row][propertyId.col], action.property.value);\n\t\t\t\t} else {\n\t\t\t\t\tnewState[propertyId.name][propertyId.row][propertyId.col] = action.property.value;\n\t\t\t\t}\n\t\t\t} else if (typeof propertyId.propertyId !== \"undefined\") { // nested structureeditor\n\t\t\t\tupdateNestedPropertyValue(propertyId.propertyId, newState[propertyId.name][propertyId.row], action.property.value);\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][propertyId.row] = action.property.value;\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name] = action.property.value;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_PROPERTY_VALUES: {\n\t\treturn Object.assign({}, action.properties);\n\t}\n\tcase REMOVE_PROPERTY_VALUE: {\n\t\tconst nextState = state;\n\t\tif (propertyId !== null && typeof propertyId.name !== \"undefined\") {\n\t\t\tdelete nextState[propertyId.name];\n\t\t}\n\t\treturn Object.assign({}, state, nextState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nfunction updateNestedPropertyValue(propertyId, newState, value) {\n\tif (typeof propertyId.row !== \"undefined\") {\n\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\tif (typeof newState[propertyId.row] === \"undefined\") {\n\t\t\t\tnewState[propertyId.row] = [];\n\t\t\t}\n\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\tupdateNestedPropertyValue(propertyId.propertyId, newState[propertyId.row][propertyId.col], value);\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.row][propertyId.col] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.row] = value;\n\t\t}\n\t}\n}\n\nexport default properties;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_CONTROL_STATE, SET_CONTROL_STATES } from \"../actions\";\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_CONTROL_STATE: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.state.propertyId;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tconst strRow = propertyId.row.toString();\n\t\t\tif (typeof newState[propertyId.name][strRow] === \"undefined\") {\n\t\t\t\tnewState[propertyId.name][strRow] = {};\n\t\t\t}\n\t\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\t\tconst strCol = propertyId.col.toString();\n\t\t\t\tif (typeof newState[propertyId.name][strRow][strCol] === \"undefined\") {\n\t\t\t\t\tnewState[propertyId.name][strRow][strCol] = {};\n\t\t\t\t}\n\t\t\t\tnewState[propertyId.name][strRow][strCol] = {\n\t\t\t\t\tvalue: action.state.value\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][strRow] = {\n\t\t\t\t\tvalue: action.state.value\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name] = {\n\t\t\t\tvalue: action.state.value\n\t\t\t};\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_CONTROL_STATES: {\n\t\treturn Object.assign({}, action.states);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_PANEL_STATE, SET_PANEL_STATES } from \"../actions\";\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_PANEL_STATE: {\n\t\tconst newState = state;\n\t\tnewState[action.state.panelId.name] = {\n\t\t\tvalue: action.state.value\n\t\t};\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_PANEL_STATES: {\n\t\treturn Object.assign({}, action.states);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_ACTION_STATE, SET_ACTION_STATES } from \"../actions\";\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_ACTION_STATE: {\n\t\tconst newState = state;\n\t\tnewState[action.state.actionId.name] = {\n\t\t\tvalue: action.state.value\n\t\t};\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_ACTION_STATES: {\n\t\treturn Object.assign({}, action.states);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_ERROR_MESSAGE, SET_ERROR_MESSAGES, CLEAR_ERROR_MESSAGE } from \"../actions\";\nimport { isEmpty } from \"lodash\";\n/* eslint max-depth: [\"error\", 6] */\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction messages(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_ERROR_MESSAGE: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.message.propertyId;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tconst strRow = propertyId.row.toString();\n\t\t\tif (typeof newState[propertyId.name][strRow] === \"undefined\") {\n\t\t\t\tnewState[propertyId.name][strRow] = {};\n\t\t\t}\n\t\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\t\tconst strCol = propertyId.col.toString();\n\t\t\t\tif (typeof newState[propertyId.name][strRow][strCol] === \"undefined\") {\n\t\t\t\t\tnewState[propertyId.name][strRow][strCol] = {};\n\t\t\t\t}\n\t\t\t\tnewState[propertyId.name][strRow][strCol] = action.message.value;\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][strRow] = Object.assign({}, action.message.value);\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name] = Object.assign({}, action.message.value);\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase CLEAR_ERROR_MESSAGE: {\n\t\tconst newState = state;\n\t\tif (newState[action.message.propertyId.name]) {\n\t\t\tif (typeof action.message.propertyId.row !== \"undefined\") {\n\t\t\t\tif (typeof action.message.propertyId.col !== \"undefined\") {\n\t\t\t\t\tdelete newState[action.message.propertyId.name][action.message.propertyId.row][action.message.propertyId.col];\n\t\t\t\t} else {\n\t\t\t\t\tdelete newState[action.message.propertyId.name][action.message.propertyId.row];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete newState[action.message.propertyId.name].type;\n\t\t\t\tdelete newState[action.message.propertyId.name].text;\n\t\t\t\tdelete newState[action.message.propertyId.name].validation_id;\n\t\t\t\tdelete newState[action.message.propertyId.name].required;\n\t\t\t\tdelete newState[action.message.propertyId.name].propertyId;\n\t\t\t\tdelete newState[action.message.propertyId.name].displayError;\n\t\t\t\tif (isEmpty(newState[action.message.propertyId.name])) {\n\t\t\t\t\tdelete newState[action.message.propertyId.name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_ERROR_MESSAGES: {\n\t\treturn Object.assign({}, action.messages);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default messages;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_DATASET_METADATA } from \"../actions\";\n\nfunction datasetMetadata(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_DATASET_METADATA:\n\t\treturn Object.assign({}, state, action.datasetMetadata);\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default datasetMetadata;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_SELECTED_ROWS, CLEAR_SELECTED_ROWS } from \"../actions\";\n/* eslint max-depth: [\"error\", 6] */\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_SELECTED_ROWS: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.info.propertyId;\n\t\tif (!newState[propertyId.name]) {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\tconst strRow = String(propertyId.row);\n\t\t\tif (!newState[propertyId.name][strRow]) {\n\t\t\t\tnewState[propertyId.name][strRow] = {};\n\t\t\t}\n\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\tconst strCol = String(propertyId.col);\n\t\t\t\tif (!newState[propertyId.name][strRow][strCol]) {\n\t\t\t\t\tnewState[propertyId.name][strRow][strCol] = {};\n\t\t\t\t}\n\t\t\t\tnewState[propertyId.name][strRow][strCol].selectedRows = action.info.selectedRows;\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][strRow].selectedRows = action.info.selectedRows;\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name].selectedRows = action.info.selectedRows;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase CLEAR_SELECTED_ROWS: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.info.propertyId;\n\t\tif (action.info.propertyId) {\n\t\t\tif (newState[propertyId.name]) {\n\t\t\t\tif (Number.isInteger(propertyId.row) && newState[propertyId.name][String(propertyId.row)]) {\n\t\t\t\t\tconst strRow = String(propertyId.row);\n\t\t\t\t\tif (Number.isInteger(propertyId.col) && newState[propertyId.name][strRow][String(propertyId.col)]) {\n\t\t\t\t\t\tnewState[propertyId.name][strRow][String(propertyId.col)].selectedRows = [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewState[propertyId.name][strRow].selectedRows = [];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewState[propertyId.name].selectedRows = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Object.assign({}, state, newState);\n\t\t}\n\t\treturn {};\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_STATIC_ROWS, CLEAR_STATIC_ROWS } from \"../actions\";\n/* eslint max-depth: [\"error\", 6] */\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tswitch (action.type) {\n\tcase UPDATE_STATIC_ROWS: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.info.propertyId;\n\t\tif (!newState[propertyId.name]) {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\tconst strRow = String(propertyId.row);\n\t\t\tif (!newState[propertyId.name][strRow]) {\n\t\t\t\tnewState[propertyId.name][strRow] = {};\n\t\t\t}\n\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\tconst strCol = String(propertyId.col);\n\t\t\t\tif (!newState[propertyId.name][strRow][strCol]) {\n\t\t\t\t\tnewState[propertyId.name][strRow][strCol] = {};\n\t\t\t\t}\n\t\t\t\tnewState[propertyId.name][strRow][strCol].staticRows = action.info.staticRows;\n\t\t\t} else {\n\t\t\t\tnewState[propertyId.name][strRow].staticRows = action.info.staticRows;\n\t\t\t}\n\t\t} else {\n\t\t\tnewState[propertyId.name].staticRows = action.info.staticRows;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase CLEAR_STATIC_ROWS: {\n\t\tconst newState = state;\n\t\tconst propertyId = action.info.propertyId;\n\t\tif (action.info.propertyId) {\n\t\t\tif (newState[propertyId.name]) {\n\t\t\t\tif (Number.isInteger(propertyId.row) && newState[propertyId.name][String(propertyId.row)]) {\n\t\t\t\t\tconst strRow = String(propertyId.row);\n\t\t\t\t\tif (Number.isInteger(propertyId.col) && newState[propertyId.name][strRow][String(propertyId.col)]) {\n\t\t\t\t\t\tnewState[propertyId.name][strRow][String(propertyId.col)].staticRows = [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewState[propertyId.name][strRow].staticRows = [];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewState[propertyId.name].staticRows = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Object.assign({}, state, newState);\n\t\t}\n\t\treturn {};\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_TITLE, SET_ACTIVE_TAB } from \"../actions\";\n\n\nfunction componentMetadata(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_TITLE: {\n\t\tconst newState = state;\n\t\tnewState.title = action.title;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_ACTIVE_TAB: {\n\t\tconst newState = state;\n\t\tnewState.activeTab = action.activeTab;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default componentMetadata;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DISABLE_ROW_MOVE_BUTTONS } from \"../actions\";\n\nfunction disableRowMoveButtons(state = [], action) {\n\tswitch (action.type) {\n\tcase DISABLE_ROW_MOVE_BUTTONS: {\n\t\tconst newState = state;\n\t\tnewState.propertyIds = action.propertyIds;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default disableRowMoveButtons;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_SAVE_BUTTON_DISABLE } from \"../actions\";\n\nfunction setSaveButtonDisable(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_SAVE_BUTTON_DISABLE: {\n\t\tconst newState = state;\n\t\tnewState.disable = action.disableState;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default setSaveButtonDisable;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED } from \"../actions\";\n\nfunction setWideFlyoutPrimaryButtonDisabled(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED: {\n\t\tconst newState = state;\n\t\tnewState[action.info.panelId.name] = action.info.disableState;\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default setWideFlyoutPrimaryButtonDisabled;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { set } from \"lodash\";\nimport { SET_ADD_REMOVE_ROWS, SET_TABLE_BUTTON_ENABLED, SET_HIDE_EDIT_BUTTON } from \"../actions\";\n\n/*\n* Stores the state information for all controls.  States are stored as objects with keys being name, row, col.\n* All keys need to be strings\n*/\nfunction states(state = {}, action) {\n\tconst propertyId = action.info && action.info.propertyId ? action.info.propertyId : null;\n\tswitch (action.type) {\n\tcase SET_ADD_REMOVE_ROWS: {\n\t\tif (propertyId === null) {\n\t\t\treturn state;\n\t\t}\n\t\tconst newState = state;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tupdateNestedPropertySetting(propertyId, newState[propertyId.name], \"addRemoveRows\", action.info.value);\n\t\t} else {\n\t\t\tnewState[propertyId.name].addRemoveRows = action.info.value;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_TABLE_BUTTON_ENABLED: {\n\t\tif (propertyId === null) {\n\t\t\treturn state;\n\t\t}\n\t\tconst newState = state;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = { };\n\t\t}\n\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tupdateNestedPropertySetting(propertyId, newState[propertyId.name], `tableButtons.${action.info.buttonId}`, action.info.value);\n\t\t} else {\n\t\t\tset(newState[propertyId.name], `tableButtons.${action.info.buttonId}`, action.info.value);\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tcase SET_HIDE_EDIT_BUTTON: {\n\t\tif (propertyId === null) {\n\t\t\treturn state;\n\t\t}\n\t\tconst newState = state;\n\t\tif (typeof newState[propertyId.name] === \"undefined\") {\n\t\t\tnewState[propertyId.name] = {};\n\t\t}\n\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tupdateNestedPropertySetting(propertyId, newState[propertyId.name], \"hideEditButton\", action.info.value);\n\t\t} else {\n\t\t\tnewState[propertyId.name].hideEditButton = action.info.value;\n\t\t}\n\t\treturn Object.assign({}, state, newState);\n\t}\n\tdefault: {\n\t\treturn state;\n\t}\n\t}\n}\n\nfunction updateNestedPropertySetting(propertyId, newState, setting, value) {\n\tif (typeof propertyId.row !== \"undefined\") {\n\t\tif (typeof newState[propertyId.row] === \"undefined\") {\n\t\t\tnewState[propertyId.row] = {};\n\t\t}\n\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\tif (typeof newState[propertyId.row][propertyId.col] === \"undefined\") {\n\t\t\t\tnewState[propertyId.row][propertyId.col] = {};\n\t\t\t}\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\tupdateNestedPropertySetting(propertyId.propertyId, newState[propertyId.row][propertyId.col], setting, value);\n\t\t\t} else {\n\t\t\t\tset(newState[propertyId.row][propertyId.col], setting, value);\n\t\t\t}\n\t\t} else if (typeof propertyId.propertyId !== \"undefined\") { // nested structureeditor\n\t\t\tupdateNestedPropertySetting(propertyId.propertyId, newState[propertyId.row], setting, value);\n\t\t} else {\n\t\t\tset(newState[propertyId.row], setting, value);\n\t\t}\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SET_ACTIVE_TEARSHEET } from \"../actions\";\n\nfunction states(state = [], action) {\n\tswitch (action.type) {\n\tcase SET_ACTIVE_TEARSHEET: {\n\t\treturn Object.assign({}, state, action.tearsheetId);\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nexport default states;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createStore, combineReducers } from \"redux\";\nimport { has, get, isEqual, cloneDeep } from \"lodash\";\nimport { setTearsheetState } from \"./actions\";\nimport { setPropertyValues, updatePropertyValue, removePropertyValue } from \"./actions\";\nimport { setControlStates, updateControlState } from \"./actions\";\nimport { setPanelStates, updatePanelState } from \"./actions\";\nimport { setActionStates, updateActionState } from \"./actions\";\n\nimport { clearSelectedRows, updateSelectedRows, disableRowMoveButtons } from \"./actions\";\nimport { clearStaticRows, updateStaticRows } from \"./actions\";\nimport { setErrorMessages, updateErrorMessage, clearErrorMessage } from \"./actions\";\nimport { setDatasetMetadata, setSaveButtonDisable, setWideFlyoutPrimaryButtonDisabled, setAddRemoveRows, setTableButtonEnabled, setHideEditButton } from \"./actions\";\nimport { setTitle, setActiveTab } from \"./actions\";\nimport propertiesReducer from \"./reducers/properties\";\nimport controlStatesReducer from \"./reducers/control-states\";\nimport panelStatesReducer from \"./reducers/panel-states\";\nimport actionStatesReducer from \"./reducers/action-states\";\nimport errorMessagesReducer from \"./reducers/error-messages\";\nimport datasetMetadataReducer from \"./reducers/dataset-metadata\";\nimport rowSelectionsReducer from \"./reducers/row-selections\";\nimport rowFreezeReducer from \"./reducers/row-static\";\nimport componentMetadataReducer from \"./reducers/component-metadata\";\nimport disableRowMoveButtonsReducer from \"./reducers/disable-row-move-buttons\";\nimport saveButtonDisableReducer from \"./reducers/save-button-disable\";\nimport wideFlyoutPrimaryButtonDisableReducer from \"./reducers/wide-flyout-primary-button-disable\";\nimport propertiesSettingsReducer from \"./reducers/properties-settings\";\nimport tearsheetStatesReducer from \"./reducers/tearsheet-states\";\nimport * as PropertyUtils from \"./util/property-utils.js\";\nimport { CONDITION_MESSAGE_TYPE, MESSAGE_KEYS } from \"./constants/constants.js\";\n\n/* eslint max-depth: [\"error\", 6] */\n\nexport default class PropertiesStore {\n\tconstructor() {\n\t\tthis.combinedReducer = combineReducers({ propertiesReducer, controlStatesReducer, panelStatesReducer,\n\t\t\terrorMessagesReducer, datasetMetadataReducer, rowSelectionsReducer, componentMetadataReducer,\n\t\t\tdisableRowMoveButtonsReducer, actionStatesReducer, wideFlyoutPrimaryButtonDisableReducer, tearsheetStatesReducer,\n\t\t\tsaveButtonDisableReducer, propertiesSettingsReducer, rowFreezeReducer });\n\t\tlet enableDevTools = false;\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tenableDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\t\t}\n\t\tthis.store = createStore(this.combinedReducer, enableDevTools);\n\t}\n\n\tdispatch(action) {\n\t\tthis.store.dispatch(action);\n\t}\n\n\tgetStore() {\n\t\treturn this.store;\n\t}\n\tsubscribe(callback) {\n\t\tthis.store.subscribe(callback);\n\t}\n\n\tgetPropertyValue(propertyId) {\n\t\tconst state = this.store.getState();\n\t\tconst propValue = state.propertiesReducer[propertyId.name];\n\t\treturn this.getNestedPropertyValue(propertyId, propValue);\n\t}\n\n\tgetNestedPropertyValue(propertyId, propValue) {\n\t\tif (typeof propertyId.row !== \"undefined\" && (typeof propValue !== \"undefined\" && propValue !== null)) {\n\t\t\tconst rowValue = propValue[propertyId.row];\n\t\t\tif (typeof propertyId.col !== \"undefined\" && (typeof rowValue !== \"undefined\" && rowValue !== null) && Array.isArray(rowValue)) {\n\t\t\t\tif (typeof propertyId.index !== \"undefined\") {\n\t\t\t\t\treturn rowValue[propertyId.col][propertyId.index];\n\t\t\t\t}\n\n\t\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\t\treturn this.getNestedPropertyValue(propertyId.propertyId, rowValue[propertyId.col]);\n\t\t\t\t}\n\t\t\t\treturn rowValue[propertyId.col];\n\t\t\t}\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") { // nested structureeditor\n\t\t\t\treturn this.getNestedPropertyValue(propertyId.propertyId, rowValue);\n\t\t\t}\n\t\t\treturn rowValue;\n\t\t}\n\t\treturn propValue;\n\t}\n\tgetPropertyValues() {\n\t\tconst state = this.store.getState();\n\t\treturn PropertyUtils.copy(state.propertiesReducer);\n\t}\n\tsetPropertyValues(values) {\n\t\tthis.store.dispatch(setPropertyValues(values));\n\t}\n\n\tupdatePropertyValue(propertyId, value) {\n\t\tthis.store.dispatch(updatePropertyValue({ propertyId: propertyId, value: value }));\n\t}\n\n\tremovePropertyValue(propertyId) {\n\t\tthis.store.dispatch(removePropertyValue({ propertyId: propertyId }));\n\t}\n\n\tgetControlState(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tlet locState = state.controlStatesReducer[propertyId.name];\n\t\t// in a table return state of parent if set.\n\t\tif (locState && (locState.value === \"hidden\" || locState.value === \"disabled\")) {\n\t\t\treturn locState;\n\t\t}\n\n\t\t// First check for control-level, then column level, and finally cell level property addressing\n\t\tconst colId = typeof propertyId.col !== \"undefined\" ? propertyId.col.toString() : null;\n\t\tconst rowId = typeof propertyId.row !== \"undefined\" ? propertyId.row.toString() : null;\n\t\tif (colId !== null && locState && locState[colId] &&\n\t\t\t\t(typeof locState[colId].value !== \"undefined\" || (locState[colId][rowId] &&\n\t\t\t\t\t(typeof locState[colId][rowId].value !== \"undefined\" ||\n\t\t\t\t\t\ttypeof locState[colId][rowId].values !== \"undefined\")))) {\n\t\t\t// Column level state\n\t\t\tlocState = locState[colId];\n\t\t\tif (rowId !== null && locState && locState[rowId] &&\n\t\t\t\t(typeof locState[rowId].value !== \"undefined\" || typeof locState[rowId].values !== \"undefined\")) {\n\t\t\t\t// Cell level state\n\t\t\t\tlocState = locState[rowId];\n\t\t\t}\n\t\t}\n\t\tif (locState) {\n\t\t\treturn locState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetControlStates() {\n\t\tconst state = this.store.getState();\n\t\t// get a copy and not direct reference\n\t\treturn PropertyUtils.copy(state.controlStatesReducer);\n\t}\n\n\tsetControlStates(values) {\n\t\t// check to see if values are equal before firing event\n\t\tif (!isEqual(this.getControlStates(), values)) {\n\t\t\tthis.store.dispatch(setControlStates(values));\n\t\t}\n\t}\n\n\tupdateControlState(propertyId, value) {\n\t\tthis.store.dispatch(updateControlState({ propertyId: propertyId, value: value }));\n\t}\n\n\tgetPanelState(panelId) {\n\t\tif (typeof panelId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tconst locState = state.panelStatesReducer[panelId.name];\n\t\tif (locState && locState.value) {\n\t\t\treturn locState.value;\n\t\t}\n\t\treturn null;\n\t}\n\tgetPanelStates() {\n\t\tconst state = this.store.getState();\n\t\t// get a copy and not direct reference\n\t\treturn PropertyUtils.copy(state.panelStatesReducer);\n\t}\n\tsetPanelStates(values) {\n\t\t// check to see if values are equal before firing event\n\t\tif (!isEqual(this.getPanelStates(), values)) {\n\t\t\tthis.store.dispatch(setPanelStates(values));\n\t\t}\n\t}\n\tupdatePanelState(panelId, value) {\n\t\tthis.store.dispatch(updatePanelState({ panelId: panelId, value: value }));\n\t}\n\n\tgetActionState(actionId) {\n\t\tif (typeof actionId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tconst locState = state.actionStatesReducer[actionId.name];\n\t\tif (locState && locState.value) {\n\t\t\treturn locState.value;\n\t\t}\n\t\treturn null;\n\t}\n\tgetActionStates() {\n\t\tconst state = this.store.getState();\n\t\t// get a copy and not direct reference\n\t\treturn PropertyUtils.copy(state.actionStatesReducer);\n\t}\n\tsetActionStates(values) {\n\t\t// check to see if values are equal before firing event\n\t\tif (!isEqual(this.getActionStates(), values)) {\n\t\t\tthis.store.dispatch(setActionStates(values));\n\t\t}\n\t}\n\tupdateActionState(actionId, value) {\n\t\tthis.store.dispatch(updateActionState({ actionId: actionId, value: value }));\n\t}\n\n\tsetSaveButtonDisable(disableState) {\n\t\tthis.store.dispatch(setSaveButtonDisable(disableState));\n\t}\n\n\tgetSaveButtonDisable() {\n\t\tconst state = this.store.getState();\n\t\treturn state.saveButtonDisableReducer.disable;\n\t}\n\n\tsetWideFlyoutPrimaryButtonDisabled(panelId, disableState) {\n\t\tthis.store.dispatch(setWideFlyoutPrimaryButtonDisabled({ panelId: panelId, disableState: disableState }));\n\t}\n\n\tgetWideFlyoutPrimaryButtonDisabled(panelId) {\n\t\tif (typeof panelId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tconst disablePrimaryButtonForPanel = state.wideFlyoutPrimaryButtonDisableReducer[panelId.name];\n\t\tif (typeof disablePrimaryButtonForPanel !== \"undefined\") {\n\t\t\treturn disablePrimaryButtonForPanel;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/*\n\t* Retrieves filtered enumeration values for the given propertyId.\n\t*/\n\tgetFilteredEnumItems(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\t// First check for control-level, then column level, and finally cell level property addressing\n\t\tconst state = this.store.getState();\n\t\tlet locState = state.controlStatesReducer[propertyId.name];\n\t\tif (typeof propertyId.col !== \"undefined\" && locState && locState[propertyId.col.toString()]) {\n\t\t\t// Column level filtering\n\t\t\tlocState = locState[propertyId.col.toString()];\n\t\t\tif (typeof propertyId.row !== \"undefined\" && locState[propertyId.row.toString()]) {\n\t\t\t\t// Cell level filtering\n\t\t\t\tlocState = locState[propertyId.row.toString()];\n\t\t\t}\n\t\t}\n\t\tif (locState) {\n\t\t\treturn locState.enumFilter;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/*\n\t* Returns the message for a propertyId.  Iterates over row and cell level messages\n\t* and returns an error message summary for all cell level errors.\n\t*/\n\tgetErrorMessage(propertyId, intl) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tlet controlMsg = state.errorMessagesReducer[propertyId.name];\n\t\tif (typeof propertyId.row !== \"undefined\" && controlMsg) {\n\t\t\tcontrolMsg = controlMsg[propertyId.row.toString()];\n\t\t\tif (typeof propertyId.col !== \"undefined\" && controlMsg) {\n\t\t\t\treturn controlMsg[propertyId.col.toString()]; // return cell message\n\t\t\t}\n\t\t\tif (controlMsg && controlMsg.text) {\n\t\t\t\treturn controlMsg;\n\t\t\t}\n\t\t}\n\t\tlet controlMessage = null;\n\t\tlet returnMessage = null;\n\t\tif (controlMsg && controlMsg.text) { // save the control level message\n\t\t\tcontrolMessage = controlMsg;\n\t\t}\n\t\tif (controlMsg) {\n\t\t\tconst clonedControlMsg = cloneDeep(controlMsg); // Prevent modifying state directly\n\t\t\treturnMessage = this._getTableCellErrors(clonedControlMsg, intl);\n\t\t}\n\t\tif (controlMessage !== null && returnMessage !== null) {\n\t\t\tcontrolMessage.text = controlMessage.text + \" \" + returnMessage.text;\n\t\t} else if (controlMessage === null) {\n\t\t\tcontrolMessage = returnMessage;\n\t\t}\n\t\treturn controlMessage;\n\t}\n\n\t// get the table cell level error messages. if more than one cell is in error, return summary message;\n\t_getTableCellErrors(controlMsg, intl) {\n\t\tlet returnMessage = null;\n\t\tlet errorMsgCount = 0;\n\t\tlet warningMsgCount = 0;\n\t\t// search message for param and return first error message found, else first warning\n\t\tfor (const rowKey in controlMsg) {\n\t\t\tif (!has(controlMsg, rowKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (rowKey === \"text\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst rowMessage = controlMsg[rowKey];\n\t\t\tif (rowMessage && rowMessage.text) {\n\t\t\t\treturnMessage = rowMessage;\n\t\t\t\terrorMsgCount += (rowMessage.type === CONDITION_MESSAGE_TYPE.ERROR) ? 1 : 0;\n\t\t\t\twarningMsgCount += (rowMessage.type === CONDITION_MESSAGE_TYPE.WARNING) ? 1 : 0;\n\t\t\t}\n\t\t\tif (rowMessage) { // table cell\n\t\t\t\tfor (const colKey in rowMessage) {\n\t\t\t\t\tif (!has(rowMessage, colKey)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (colKey === \"text\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst colMessage = rowMessage[colKey];\n\t\t\t\t\tif (colMessage && colMessage.text) {\n\t\t\t\t\t\treturnMessage = colMessage;\n\t\t\t\t\t\terrorMsgCount += (colMessage.type === CONDITION_MESSAGE_TYPE.ERROR) ? 1 : 0;\n\t\t\t\t\t\twarningMsgCount += (colMessage.type === CONDITION_MESSAGE_TYPE.WARNING) ? 1 : 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ((errorMsgCount + warningMsgCount) !== 1 && returnMessage) {\n\t\t\treturnMessage.type = (errorMsgCount > 0) ? CONDITION_MESSAGE_TYPE.ERROR : CONDITION_MESSAGE_TYPE.WARNING;\n\t\t\treturnMessage.text = (errorMsgCount > 0)\n\t\t\t\t? PropertyUtils.formatMessage(intl,\n\t\t\t\t\tMESSAGE_KEYS.TABLE_SUMMARY_ERROR, { errorMsgCount: errorMsgCount })\n\t\t\t\t: \"\";\n\t\t\treturnMessage.text += (warningMsgCount > 0)\n\t\t\t\t? PropertyUtils.formatMessage(intl,\n\t\t\t\t\tMESSAGE_KEYS.TABLE_SUMMARY_WARNING, { warningMsgCount: warningMsgCount })\n\t\t\t\t: \"\";\n\t\t}\n\t\treturn returnMessage;\n\t}\n\n\tgetErrorMessages() {\n\t\tconst state = this.store.getState();\n\t\treturn PropertyUtils.copy(state.errorMessagesReducer);\n\t}\n\tsetErrorMessages(values) {\n\t\t// check to see if values are equal before firing event\n\t\tif (!isEqual(this.getErrorMessages(), values)) {\n\t\t\tthis.store.dispatch(setErrorMessages(values));\n\t\t}\n\t}\n\tupdateErrorMessage(propertyId, value) {\n\t\tif (!isEqual(this.getErrorMessage(propertyId), value)) {\n\t\t\tthis.store.dispatch(updateErrorMessage({ propertyId: propertyId, value: value }));\n\t\t}\n\t}\n\tclearErrorMessage(propertyId) {\n\t\tif (this.getErrorMessage(propertyId) !== null) {\n\t\t\tthis.store.dispatch(clearErrorMessage({ propertyId: propertyId }));\n\t\t}\n\t}\n\n\t/*\n\t* DataModel methods\n\t*/\n\tsetDatasetMetadata(datasetMetadata) {\n\t\tthis.store.dispatch(setDatasetMetadata(datasetMetadata));\n\t}\n\tgetDatasetMetadata() {\n\t\tconst state = this.store.getState();\n\t\treturn state.datasetMetadataReducer;\n\t}\n\n\t/*\n\t* Row Selection Methods\n\t*/\n\tgetSelectedRows(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn [];\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tlet rowSelections = state.rowSelectionsReducer[propertyId.name];\n\t\tif (Number.isInteger(propertyId.row) && rowSelections) {\n\t\t\trowSelections = rowSelections[String(propertyId.row)]; // row selection\n\t\t\tif (Number.isInteger(propertyId.col) && rowSelections) {\n\t\t\t\trowSelections = rowSelections[String(propertyId.col)]; // cell selection\n\t\t\t}\n\t\t}\n\t\treturn rowSelections && rowSelections.selectedRows ? rowSelections.selectedRows : [];\n\t}\n\n\tupdateSelectedRows(propertyId, selection) {\n\t\tthis.store.dispatch(updateSelectedRows({ propertyId: propertyId, selectedRows: selection }));\n\t}\n\n\tclearSelectedRows(propertyId) {\n\t\tthis.store.dispatch(clearSelectedRows({ propertyId: propertyId }));\n\t}\n\n\tgetStaticRows(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn [];\n\t\t}\n\t\tconst state = this.store.getState();\n\t\tlet rowStatic = state.rowFreezeReducer[propertyId.name];\n\t\tif (Number.isInteger(propertyId.row) && rowStatic) {\n\t\t\trowStatic = rowStatic[String(propertyId.row)]; // row selection\n\t\t\tif (Number.isInteger(propertyId.col) && rowStatic) {\n\t\t\t\trowStatic = rowStatic[String(propertyId.col)]; // cell selection\n\t\t\t}\n\t\t}\n\t\treturn rowStatic && rowStatic.staticRows ? rowStatic.staticRows : [];\n\t}\n\n\tupdateStaticRows(propertyId, staticRows) {\n\t\tthis.store.dispatch(updateStaticRows({ propertyId: propertyId, staticRows: staticRows }));\n\t}\n\n\tclearStaticRows(propertyId) {\n\t\tthis.store.dispatch(clearStaticRows({ propertyId: propertyId }));\n\t}\n\n\t/**\n\t * Disable table row move buttons for all propertyIds in given array\n\t * @param propertyIds Array of propertyIds\n\t */\n\tsetDisableRowMoveButtons(propertyIds) {\n\t\tthis.store.dispatch(disableRowMoveButtons(propertyIds));\n\t}\n\n\tgetDisableRowMoveButtons() {\n\t\tconst state = this.store.getState();\n\t\treturn state.disableRowMoveButtonsReducer.propertyIds;\n\t}\n\n\tsetTitle(title) {\n\t\tthis.store.dispatch(setTitle(title));\n\t}\n\n\tgetTitle() {\n\t\tconst state = this.store.getState();\n\t\treturn state.componentMetadataReducer.title;\n\t}\n\n\tsetActiveTab(activeTab) {\n\t\tthis.store.dispatch(setActiveTab(activeTab));\n\t}\n\n\tgetActiveTab() {\n\t\tconst state = this.store.getState();\n\t\treturn state.componentMetadataReducer.activeTab;\n\t}\n\n\t/**\n\t* Set the addRemoveRows attribute to 'enabled' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param enabled boolean value to enable or disable addRemoveRows\n\t*/\n\tsetAddRemoveRows(propertyId, enabled) {\n\t\tthis.store.dispatch(setAddRemoveRows({ propertyId: propertyId, value: enabled }));\n\t}\n\n\t/**\n\t* Returns true if addRemoveRows is enabled for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetAddRemoveRows(propertyId) {\n\t\tconst state = this.store.getState();\n\t\tconst defaultValue = true; // Default to true to show the addRemoveRows buttons\n\t\tif (state.propertiesSettingsReducer[propertyId.name]) {\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId, state.propertiesSettingsReducer[propertyId.name], \"addRemoveRows\", defaultValue);\n\t\t\t}\n\t\t\treturn state.propertiesSettingsReducer[propertyId.name].addRemoveRows;\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\tsetTableButtonEnabled(propertyId, buttonId, enabled) {\n\t\tthis.store.dispatch(setTableButtonEnabled({ propertyId: propertyId, buttonId: buttonId, value: enabled }));\n\t}\n\n\tgetTableButtons(propertyId) {\n\t\tconst state = this.store.getState();\n\t\tconst defaultValue = {};\n\t\tif (state.propertiesSettingsReducer[propertyId.name]) {\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId, state.propertiesSettingsReducer[propertyId.name], \"tableButtons\", defaultValue);\n\t\t\t}\n\t\t\treturn state.propertiesSettingsReducer[propertyId.name].tableButtons || defaultValue;\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\tgetTableButtonEnabled(propertyId, buttonId) {\n\t\tconst state = this.store.getState();\n\t\tconst defaultValue = false; // Disable button by default\n\t\tif (state.propertiesSettingsReducer[propertyId.name]) {\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId, state.propertiesSettingsReducer[propertyId.name], `tableButtons.${buttonId}`, defaultValue);\n\t\t\t}\n\t\t\treturn state.propertiesSettingsReducer[propertyId.name].tableButtons[buttonId];\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\t/**\n\t* Set the hideEditButton attribute to 'true' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param enabled boolean value for disable or enable edit button by state hideEditButton\n\t*/\n\tsetHideEditButton(propertyId, enabled) {\n\t\tthis.store.dispatch(setHideEditButton({ propertyId: propertyId, value: enabled }));\n\t}\n\n\t/**\n\t* Returns true if hideEditButton is true for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetHideEditButton(propertyId) {\n\t\tconst state = this.store.getState();\n\t\tconst defaultValue = false; // Default to false to show disable edit buttons\n\t\tif (state.propertiesSettingsReducer[propertyId.name]) {\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId, state.propertiesSettingsReducer[propertyId.name], \"hideEditButton\", defaultValue);\n\t\t\t}\n\t\t\treturn state.propertiesSettingsReducer[propertyId.name].hideEditButton;\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\tsetActiveTearsheetId(tearsheetId) {\n\t\tthis.store.dispatch(setTearsheetState({ tearsheetId: tearsheetId }));\n\t}\n\n\tgetActiveTearsheetId() {\n\t\tconst state = this.store.getState();\n\t\tconst tearsheetId = state.tearsheetStatesReducer.tearsheetId;\n\t\tif (typeof tearsheetId !== \"undefined\") {\n\t\t\treturn tearsheetId;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nfunction getNestedPropertySetting(propertyId, state, setting, defaultValue) {\n\tif (typeof propertyId.row !== \"undefined\" && state[propertyId.row]) {\n\t\tif (typeof propertyId.col !== \"undefined\" && state[propertyId.row][propertyId.col]) {\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\treturn getNestedPropertySetting(propertyId.propertyId, state[propertyId.row][propertyId.col], setting, defaultValue);\n\t\t\t}\n\t\t\treturn get(state[propertyId.row][propertyId.col], setting);\n\t\t} else if (typeof propertyId.propertyId !== \"undefined\") { // nested structureeditor\n\t\t\treturn getNestedPropertySetting(propertyId.propertyId, state[propertyId.row], setting, defaultValue);\n\t\t}\n\t\treturn get(state[propertyId.row], setting);\n\t}\n\treturn defaultValue;\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"../../../utils/logger\";\nimport { ItemType, PanelType } from \"../constants/form-constants\";\n\n\nfunction parseInput(definition) {\n\tvar data = definition;\n\tif (data.evaluate) {\n\t\tvar paramsList = [];\n\t\tif (data.parameter_refs) {\n\t\t\tevaluate(data.evaluate, paramsList, data.parameter_refs);\n\t\t} else {\n\t\t\tevaluate(data.evaluate, paramsList, data.parameter_ref);\n\t\t}\n\t\t// remove duplicates in paramsList array\n\t\tvar uniqueList = Array.from(new Set(paramsList));\n\t\tif (uniqueList.length > 1) {\n\t\t\treturn uniqueList;\n\t\t}\n\t\t// return single control; this will never be an empty list\n\t\tvar controlName = uniqueList[0];\n\t\treturn controlName;\n\t}\n\tthrow new Error(\"Invalid validation schema\");\n}\n\n\n/**\n * Evaluate Definition\n */\nfunction evaluate(data, paramsList, defaultParameter) {\n\tif (data.or) {\n\t\tor(data.or, paramsList, defaultParameter);\n\t} else if (data.and) {\n\t\tand(data.and, paramsList, defaultParameter);\n\t} else if (data.condition) { // condition\n\t\tcondition(data.condition, paramsList, defaultParameter);\n\t} else {\n\t\tthrow new Error(\"Failed to parse definition\");\n\t}\n}\n\n/**\n * The 'or' condition.\n */\nfunction or(data, paramsList, defaultParameter) {\n\tfor (let i = 0; i < data.length; i++) {\n\t\tevaluate(data[i], paramsList, defaultParameter);\n\t}\n}\n\n/**\n * The 'and' condition. All sub-conditions evaluate to true.\n * Can nest any number of additional conditional types.\n * @param {Object} data an array of items\n * @return {boolean}\n */\nfunction and(data, paramsList, defaultParameter) {\n\tfor (let i = 0; i < data.length; i++) {\n\t\tevaluate(data[i], paramsList, defaultParameter);\n\t}\n}\n\n/**\n * A parameter condition.\n */\nfunction condition(data, paramsList, defaultParameter) {\n\tif (data.parameter_ref) {\n\t\tparamsList.push(data.parameter_ref);\n\t\tif (data.parameter_2_ref) {\n\t\t\tparamsList.push(data.parameter_2_ref);\n\t\t}\n\t} else {\n\t\t// needed for filtering of dm fields\n\t\tparamsList.push(defaultParameter);\n\t}\n}\n\n// Parse the set of Controls from the form data\nfunction parseControls(controls, actions, formData) {\n\tif (formData.uiItems) {\n\t\tfor (const uiItem of formData.uiItems) {\n\t\t\tparseUiItem(controls, actions, uiItem);\n\t\t}\n\t}\n}\n\nfunction parseControl(controls, control, parentCategoryId) {\n\tif (control.label) {\n\t\tcontrol.summaryLabel = control.label.text;\n\t}\n\tif (parentCategoryId) {\n\t\tcontrol.parentCategoryId = parentCategoryId;\n\t}\n\tcontrols.push(control);\n\tif (control.subControls) {\n\t\tfor (let idx = 0; idx < control.subControls.length; idx++) {\n\t\t\tconst subControl = control.subControls[idx];\n\t\t\tsubControl.parameterName = control.name;\n\t\t\tsubControl.columnIndex = idx;\n\t\t\tif (parentCategoryId) {\n\t\t\t\tsubControl.parentCategoryId = parentCategoryId;\n\t\t\t}\n\t\t\tcontrols.push(subControl);\n\t\t}\n\t}\n}\n\nfunction parseUiItem(controls, actions, uiItem, panelId, parentCategoryId) {\n\tswitch (uiItem.itemType) {\n\tcase ItemType.CONTROL: {\n\t\tconst control = uiItem.control;\n\t\tif (panelId) {\n\t\t\tcontrol.summaryPanelId = panelId;\n\t\t}\n\t\tif (parentCategoryId) {\n\t\t\tcontrol.parentCategoryId = parentCategoryId;\n\t\t}\n\t\tparseControl(controls, control, parentCategoryId);\n\t\t// If some panels from a Selector Panel have been inserted in a\n\t\t// radio set control the control will have additionalItems which need\n\t\t// to be parsed.\n\t\tif (uiItem.additionalItems) {\n\t\t\tfor (const additionalItem of uiItem.additionalItems) {\n\t\t\t\tparseUiItem(controls, actions, additionalItem.content, panelId, parentCategoryId);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.ADDITIONAL_LINK:\n\tcase ItemType.CHECKBOX_SELECTOR:\n\tcase ItemType.TEARSHEET:\n\tcase ItemType.PANEL: {\n\t\tif (uiItem.panel && uiItem.panel.uiItems) {\n\t\t\tlet locPanelId = panelId;\n\t\t\tif (uiItem.panel.panelType === PanelType.SUMMARY) {\n\t\t\t\tlocPanelId = uiItem.panel.id;\n\t\t\t}\n\t\t\tfor (const panelUiItem of uiItem.panel.uiItems) {\n\t\t\t\tparseUiItem(controls, actions, panelUiItem, locPanelId, parentCategoryId);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.PRIMARY_TABS:\n\tcase ItemType.PANEL_SELECTOR:\n\tcase ItemType.SUB_TABS: {\n\t\tif (uiItem.tabs) {\n\t\t\tfor (const tab of uiItem.tabs) {\n\t\t\t\tparseUiItem(controls, actions, tab.content, panelId,\n\t\t\t\t\tuiItem.itemType === ItemType.PANEL_SELECTOR || uiItem.itemType === ItemType.SUB_TABS\n\t\t\t\t\t\t? parentCategoryId\n\t\t\t\t\t\t: tab.group);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.CUSTOM_PANEL:\n\t\tif (uiItem.panel && uiItem.panel.parameters) {\n\t\t\tfor (const param of uiItem.panel.parameters) {\n\t\t\t\tconst control = {\n\t\t\t\t\tname: param,\n\t\t\t\t\tcontrolType: \"custom\"\n\t\t\t\t};\n\t\t\t\tif (panelId) {\n\t\t\t\t\tcontrol.summaryPanelId = panelId;\n\t\t\t\t}\n\t\t\t\tif (parentCategoryId) {\n\t\t\t\t\tcontrol.parentCategoryId = parentCategoryId;\n\t\t\t\t}\n\t\t\t\tcontrols.push(control);\n\t\t\t}\n\t\t}\n\t\tbreak; // required parameters are handled by panel\n\tcase ItemType.ACTION:\n\t\tif (uiItem.action && uiItem.action.name) {\n\t\t\tactions[uiItem.action.name] = uiItem.action;\n\t\t}\n\t\tbreak;\n\tcase ItemType.STATIC_TEXT:\n\tcase ItemType.TEXT_PANEL:\n\tcase ItemType.HORIZONTAL_SEPARATOR: {\n\t\tbreak;\n\t}\n\tdefault:\n\t\tlogger.warn(\"Unknown UiItem type when parsing ui conditions: \" + uiItem.itemType);\n\t\tbreak;\n\n\t}\n\treturn controls;\n\n}\n\n// Parse the condition section of the form data\nfunction parseConditions(container, uiCondition, conditionType) {\n\ttry {\n\t\tvar controls = parseInput(uiCondition[conditionType]);\n\t\tvar groupDef = {\n\t\t\t\"params\": controls,\n\t\t\t\"definition\": uiCondition\n\t\t};\n\t\t_setDefinitions(container.controls, controls, groupDef);\n\t\tlet refs = uiCondition[conditionType].parameter_refs;\n\t\tif (uiCondition[conditionType].group_refs) {\n\t\t\trefs = uiCondition[conditionType].group_refs;\n\t\t} else if (uiCondition[conditionType].action_refs) {\n\t\t\trefs = uiCondition[conditionType].action_refs;\n\t\t} else if (uiCondition[conditionType].target && uiCondition[conditionType].target.parameter_ref) {\n\t\t\trefs = [uiCondition[conditionType].target.parameter_ref];\n\t\t}\n\t\tif (refs) {\n\t\t\t_setDefinitions(container.refs, refs, groupDef);\n\t\t}\n\t} catch (error) { // invalid\n\t\tlogger.info(\"Error parsing ui conditions: \" + error);\n\t}\n\treturn container;\n}\n\nfunction _setDefinitions(container, controls, groupDef) {\n\tif (Array.isArray(controls) === true) {\n\t\tfor (let j = 0; j < controls.length; j++) {\n\t\t\tif (typeof container[controls[j]] === \"undefined\") {\n\t\t\t\tcontainer[controls[j]] = [];\n\t\t\t}\n\t\t\tcontainer[controls[j]].push(groupDef);\n\t\t}\n\t} else { // single control\n\t\tif (typeof container[controls] === \"undefined\") {\n\t\t\tcontainer[controls] = [];\n\t\t}\n\t\tcontainer[controls].push(groupDef);\n\t}\n}\n\nexport {\n\tparseInput,\n\tparseControls,\n\tparseConditions,\n\tparseControl\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"../../../../utils/logger\";\nimport { L10nProvider, ResourceDef } from \"../../util/L10nProvider\";\nimport { cloneDeep, propertyOf } from \"lodash\";\n\nfunction setExpressionInfo(inExpressionInfo) {\n\tconst expressionFunctionInfo = {};\n\tif (inExpressionInfo && inExpressionInfo.functions) {\n\t\tconst l10nProvider = new L10nProvider(propertyOf(inExpressionInfo)(\"resources\"));\n\t\tconst expressionInfo = cloneDeep(inExpressionInfo.functions);\n\t\tif (Array.isArray(expressionInfo.function_info) && Array.isArray(expressionInfo.function_categories)) {\n\t\t\t// build up the visible function labels from the input label and the parameter information.\n\t\t\tconst functionInfoList = expressionInfo.parmsSet ? expressionInfo.function_info : _genFunctionParameters(expressionInfo.function_info, l10nProvider);\n\t\t\texpressionInfo.parmsSet = true;\n\n\t\t\t// build up the categories for the functions and associate the category with the function info detail.\n\t\t\texpressionFunctionInfo.functionCategories = [];\n\t\t\texpressionInfo.function_categories.forEach((category) => {\n\t\t\t\texpressionFunctionInfo.functionCategories[category.id] = {};\n\t\t\t\texpressionFunctionInfo.functionCategories[category.id].locLabel = l10nProvider.l10nLabel(category, category.id);\n\t\t\t\texpressionFunctionInfo.functionCategories[category.id].functionList = [];\n\t\t\t\tcategory.function_refs.forEach((functionId) => {\n\t\t\t\t\tconst functionInfo = _getFunctionInfo(functionId, functionInfoList);\n\t\t\t\t\tif (functionInfo) {\n\t\t\t\t\t\texpressionFunctionInfo.functionCategories[category.id].functionList.push(functionInfo);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// build up the operator buttons list with the operator function info detail.\n\t\t\texpressionFunctionInfo.operators = [];\n\t\t\tif (expressionInfo.operator_refs) {\n\t\t\t\texpressionInfo.operator_refs.forEach((functionId) => {\n\t\t\t\t\tconst functionInfo = _getFunctionInfo(functionId, functionInfoList);\n\t\t\t\t\tif (functionInfo) {\n\t\t\t\t\t\texpressionFunctionInfo.operators.push(functionInfo);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\texpressionFunctionInfo.fields = { \"field_categories\": [], \"field_table_info\": [] };\n\t\t\tif (inExpressionInfo.fields) {\n\t\t\t\tif (inExpressionInfo.fields.field_categories) {\n\t\t\t\t\tinExpressionInfo.fields.field_categories.forEach((fieldCat) => {\n\t\t\t\t\t\tfieldCat.locLabel = l10nProvider.l10nLabel(fieldCat, fieldCat.id);\n\n\t\t\t\t\t\tfieldCat.field_columns.field_column_info.locLabel = l10nProvider.l10nLabel(fieldCat.field_columns.field_column_info, fieldCat.id + \".field_column_info\");\n\t\t\t\t\t\tfieldCat.field_columns.value_column_info.locLabel = l10nProvider.l10nLabel(fieldCat.field_columns.value_column_info, fieldCat.id + \".value_column_info\");\n\n\t\t\t\t\t\tconst fieldColInfoDesc = l10nProvider.l10nDesc(fieldCat.field_columns.field_column_info, fieldCat.id + \".field_column_info\");\n\t\t\t\t\t\tif (fieldColInfoDesc !== fieldCat.id + \".field_column_info\") {\n\t\t\t\t\t\t\tfieldCat.field_columns.field_column_info.descLabel = fieldColInfoDesc;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst valueColInfoDesc = l10nProvider.l10nDesc(fieldCat.field_columns.value_column_info, fieldCat.id + \".value_column_info\");\n\t\t\t\t\t\tif (valueColInfoDesc !== fieldCat.id + \".value_column_info\") {\n\t\t\t\t\t\t\tfieldCat.field_columns.value_column_info.descLabel = valueColInfoDesc;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fieldCat.field_columns.additional_column_info) {\n\t\t\t\t\t\t\tfieldCat.field_columns.additional_column_info.forEach((col) => {\n\t\t\t\t\t\t\t\tcol.locLabel = l10nProvider.l10nLabel(col, fieldCat.id + \".additional_column_info.\" + col.id);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\texpressionFunctionInfo.fields.field_categories.push(fieldCat);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (inExpressionInfo.fields.field_table_info) {\n\t\t\t\t\tinExpressionInfo.fields.field_table_info.forEach((fieldInfo) => {\n\t\t\t\t\t\texpressionFunctionInfo.fields.field_table_info.push(fieldInfo);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (inExpressionInfo && inExpressionInfo.resources) {\n\t\texpressionFunctionInfo.resources = inExpressionInfo.resources;\n\t}\n\n\treturn expressionFunctionInfo;\n}\n\n// build up the visible function labels from the label and the parameter information.\nfunction _genFunctionParameters(functionInfoList, l10nProvider) {\n\treturn functionInfoList.map((functionInfo) => {\n\t\tconst newEntry = functionInfo;\n\t\tnewEntry.locLabel = l10nProvider.l10nLabel(newEntry, newEntry.id);\n\t\tnewEntry.help = l10nProvider.l10nDesc(newEntry, newEntry.locLabel);\n\t\tnewEntry.value = newEntry.locLabel;\n\t\t// Translatable return type of function\n\t\tif (newEntry.return_type_label) {\n\t\t\tconst returnTypeLabel = ResourceDef.make(newEntry.return_type_label);\n\t\t\tnewEntry.locReturnType = l10nProvider.l10nResource(returnTypeLabel);\n\t\t}\n\t\tif (Array.isArray(functionInfo.parameters)) {\n\t\t\t// if the function label has any parameter substituion char '?' then replace with parameter label\n\t\t\tif (newEntry.locLabel && newEntry.locLabel.indexOf(\"?\") !== -1) {\n\t\t\t\tfunctionInfo.parameters.forEach((parameter) => {\n\t\t\t\t\tconst paramIndex = newEntry.locLabel.indexOf(\"?\");\n\t\t\t\t\tif (paramIndex !== -1) {\n\t\t\t\t\t\tnewEntry.locLabel = newEntry.locLabel.replace(\"?\", \" \" + l10nProvider.l10nLabel(parameter, parameter.id) + \" \");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// build up function label as a function call with parameters.\n\t\t\t\tnewEntry.value += \"(\";\n\t\t\t\tnewEntry.locLabel += \"(\";\n\t\t\t\tfunctionInfo.parameters.forEach((parameter, index) => {\n\t\t\t\t\tconst separator = (index > 0) ? \", \" : \"\";\n\t\t\t\t\tnewEntry.locLabel += separator + l10nProvider.l10nLabel(parameter, parameter.id);\n\t\t\t\t\tnewEntry.value += separator + \"?\";\n\t\t\t\t});\n\t\t\t\tnewEntry.locLabel += \")\";\n\t\t\t\tnewEntry.value += \")\";\n\t\t\t}\n\t\t}\n\t\treturn newEntry;\n\t});\n\n}\n\nfunction _getFunctionInfo(functionId, functionInfoList) {\n\tconst functionInfo = functionInfoList.find((functionElem) => functionElem.id === functionId);\n\tif (!functionInfo) {\n\t\tlogger.warn(\"Expression function information list, no function information found for \" + functionId);\n\t\treturn null;\n\t}\n\treturn functionInfo;\n}\n\n\nexport default setExpressionInfo;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { has } from \"lodash\";\n\nimport logger from \"../../../utils/logger\";\nimport { ItemType } from \"../constants/form-constants\";\n\n// Parse the set of panelTree from the form data\nfunction parseUiContent(panelTree, formData, panelTreeRoot) {\n\tif (formData.uiItems) {\n\t\tfor (const uiItem of formData.uiItems) {\n\t\t\tparseUiItem(panelTree, uiItem, panelTreeRoot);\n\t\t}\n\t}\n\treturn panelTree;\n}\n\nfunction parseUiItem(panelTree, uiItem, currentPanel) {\n\tswitch (uiItem.itemType) {\n\tcase ItemType.PRIMARY_TABS:\n\tcase ItemType.SUB_TABS: {\n\t\tif (uiItem.tabs) {\n\t\t\tfor (const tab of uiItem.tabs) {\n\t\t\t\tparseUiItem(panelTree, tab.content, currentPanel);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.TEXT_PANEL:\n\tcase ItemType.PANEL:\n\tcase ItemType.CUSTOM_PANEL:\n\tcase ItemType.ADDITIONAL_LINK:\n\tcase ItemType.TEARSHEET:\n\tcase ItemType.CHECKBOX_SELECTOR: {\n\t\tif (uiItem.panel && uiItem.panel.id) {\n\t\t\tpanelTree[currentPanel].panels.push(uiItem.panel.id);\n\t\t\t_newPanelTreeObject(panelTree, uiItem.panel.id);\n\t\t\tif (uiItem.panel.uiItems) {\n\t\t\t\tfor (const panelUiItem of uiItem.panel.uiItems) {\n\t\t\t\t\tparseUiItem(panelTree, panelUiItem, uiItem.panel.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.CONTROL: {\n\t\tpanelTree[currentPanel].controls.push(uiItem.control.name);\n\t\t// a control item may have an action ref associated with it.\n\t\tif (uiItem.control.action) {\n\t\t\tpanelTree[currentPanel].actions.push(uiItem.control.action.name);\n\t\t}\n\t\t// This is a special case for the radio button set which has panels\n\t\t// inserted after each radio button. Those panels are provided in the\n\t\t// additionalItems array which is an array of EditorTab objects.\n\t\tif (uiItem.control.additionalItems) {\n\t\t\tfor (const editorTab of uiItem.control.additionalItems) {\n\t\t\t\tparseUiItem(panelTree, editorTab.content, currentPanel);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tcase ItemType.PANEL_SELECTOR: {\n\t\tpanelTree[currentPanel].panels.push(uiItem.id);\n\t\t_newPanelTreeObject(panelTree, uiItem.id);\n\t\tif (uiItem.dependsOn) {\n\t\t\tpanelTree[uiItem.id].controls.push(uiItem.dependsOn);\n\t\t}\n\t\tif (uiItem.tabs) {\n\t\t\tfor (const tab of uiItem.tabs) {\n\t\t\t\tparseUiItem(panelTree, tab.content, uiItem.id);\n\t\t\t}\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tcase ItemType.ACTION:\n\t{\n\t\tpanelTree[currentPanel].actions.push(uiItem.action.name);\n\t\tbreak;\n\t}\n\tcase ItemType.STATIC_TEXT:\n\tcase ItemType.HORIZONTAL_SEPARATOR: {\n\t\tbreak;\n\t}\n\tdefault:\n\t\tlogger.warn(\"Unknown UiItem type when parsing ui conditions: \" + uiItem.itemType);\n\t\tbreak;\n\t}\n}\n\nfunction _newPanelTreeObject(panelTree, panelId) {\n\tif (has(panelTree, panelId)) {\n\t\tlogger.warn(\"Duplicate panel ids, each panel id must be unique.  Panel id = \" + panelId);\n\t}\n\tpanelTree[panelId] = { controls: [], panels: [], actions: [] };\n}\n\nexport { parseUiContent };\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. The order and references\n * of result values are determined by the first array. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = baseRest(function(arrays) {\n  var comparator = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  if (comparator) {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, undefined, comparator)\n    : [];\n});\n\nmodule.exports = intersectionWith;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint max-depth: [\"error\", 7] */\n\nimport logger from \"./../../../utils/logger\";\nimport { cloneDeep, intersectionWith, unionWith, isEqual } from \"lodash\";\n\n/**\n* @param {Object} definition Condition definition\n* @param {Any} userInput Contains the control value entered by the user\n* @param {Object} fields Optional datasetMetadata fields\n* @param {Object} cellCoordinates Cell coordinates for tables\n*/\n\nfunction validateInput(definition, propertyId, controller) {\n\tconst data = definition;\n\tif (data.validation) {\n\t\treturn validation(data.validation, propertyId, controller);\n\t} else if (data.enabled) {\n\t\treturn enabled(data.enabled, propertyId, controller);\n\t} else if (data.visible) {\n\t\treturn visible(data.visible, propertyId, controller);\n\t} else if (data.enum_filter) {\n\t\treturn filteredEnum(data.enum_filter, propertyId, controller);\n\t} else if (data.allow_change) {\n\t\treturn allowChange(data.allow_change, propertyId, controller);\n\t} else if (data.default_value) {\n\t\treturn conditionalDefault(data.default_value, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid user input validation definition schema\");\n}\n\n/**\n * A single validation. The fail_message is displayed upon validation failure.\n * @param {Object} validationData contains an object that adheres to the validation_definition\n * @param {Any} userInput Contains the control value entered by the user\n * @param {Object} info optional dataset fields and cell coordinates info\n * @return {boolean} true if valid, failMessage {Object} if false.\n */\nfunction validation(data, propertyId, controller) {\n\tif (data.fail_message && data.evaluate) {\n\t\tconst evaluateData = data.evaluate;\n\t\tevaluateData.isValidation = true;\n\t\tconst result = evaluate(evaluateData, propertyId, controller);\n\t\tif (typeof result === \"object\") {\n\t\t\treturn result;\n\t\t}\n\t\treturn result || failedMessage(data.fail_message);\n\t}\n\tthrow new Error(\"Invalid validation schema\");\n}\n\n/**\n * Enablement test. Disables controls if evaluate is false.\n * @param {Object} enabledData contains an object that adheres to the enabled_definition\n * @return {boolean} true if valid.\n */\nfunction enabled(data, propertyId, controller) {\n\tif ((data.parameter_refs || data.group_refs || data.action_refs) && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid enabled schema\");\n}\n\n/**\n * Visibility test. Hides controls if evaluate is false.\n * @param {Object} data contains an object that adheres to the visible_definition\n * @return {boolean} true if valid.\n */\nfunction visible(data, propertyId, controller) {\n\tif ((data.parameter_refs || data.group_refs || data.action_refs) && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid visible schema\");\n}\n\n/**\n * Filters fields based on conditions.\n *\n * @param propertyId Id of the control being filtered\n * @param filterDef A filter definition for this item\n * @param controller Properties controller\n * @param fields Fields to filter\n * @return Array of filtered fields\n */\nfunction filter(propertyId, filterDef, controller, fields) {\n\tif (filterDef && filterDef.filter && filterDef.filter.evaluate) {\n\t\treturn evaluateFilter(propertyId, filterDef.filter, filterDef.filter.evaluate, controller, fields);\n\t}\n\treturn fields;\n}\n\nfunction filteredEnum(data, propertyId, controller) {\n\tif (data.target && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid filteredEnum schema\");\n}\n\nfunction allowChange(data, propertyId, controller) {\n\tif ((data.parameter_refs || data.group_refs) && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid allow change schema\");\n}\n\n/**\n * Set default value for a field if conditions evaluate to true.\n *\n * @param data conditional default definition\n * @param propertyId Id of the control\n * @param controller Properties controller\n * @return {boolean} true if conditions are met.\n */\nfunction conditionalDefault(data, propertyId, controller) {\n\tif (data.parameter_ref && data.value && data.evaluate) {\n\t\treturn evaluate(data.evaluate, propertyId, controller);\n\t}\n\tthrow new Error(\"Invalid conditional default schema\");\n}\n\n/**\n * Evaluate Definition\n */\nfunction evaluate(data, propertyId, controller) {\n\tif (data.or) {\n\t\treturn or(data.or, propertyId, controller);\n\t} else if (data.and) {\n\t\treturn and(data.and, propertyId, controller);\n\t} else if (data.condition) { // condition\n\t\treturn condition(data.condition, propertyId, controller, data.isValidation);\n\t}\n\tthrow new Error(\"Failed to parse definition\");\n}\n\n/**\n * Evaluate Definition.\n */\nfunction evaluateFilter(propertyId, filterItem, conditionItem, controller, fields) {\n\tif (conditionItem.or) {\n\t\treturn orFilter(propertyId, filterItem, conditionItem.or, controller, fields);\n\t} else if (conditionItem.and) {\n\t\treturn andFilter(propertyId, filterItem, conditionItem.and, controller, fields);\n\t} else if (conditionItem.condition) { // condition\n\t\treturn conditionFilter(propertyId, filterItem, conditionItem.condition, controller, fields);\n\t}\n\tthrow new Error(\"Failed to parse filter definition\");\n}\n\n/**\n * The 'or' condition. Any sub-condition evaluates to true.\n * Can nest any number of additional conditional types.\n * @param {Object} data an array of items\n * @param {string} userInput User-entered value to evaluate\n * @param {Object} info optional dataset fields and cell coordinates info\n * @return {boolean}\n */\nfunction or(data, propertyId, controller) {\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst evaluated = evaluate(data[i], propertyId, controller);\n\t\tif (evaluated === true) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction orFilter(propertyId, filterItem, conditionItems, controller, inFields) {\n\tlet fields = [];\n\tfor (const item of conditionItems) {\n\t\tconst newFields = evaluateFilter(propertyId, filterItem, item, controller, inFields);\n\t\tfields = unionWith(fields, newFields, isEqual);\n\t}\n\treturn fields;\n}\n\n/**\n * The 'and' condition. All sub-conditions evaluate to true.\n * Can nest any number of additional conditional types.\n * @param {Object} data an array of items\n * @param {string} userInput User-entered value to evaluate\n * @param {Object} info optional dataset fields and cell coordinates info\n * @return {boolean}\n */\nfunction and(data, propertyId, controller) {\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst evaluated = evaluate(data[i], propertyId, controller);\n\t\tif (evaluated === false) {\n\t\t\treturn false;\n\t\t} else if (typeof evaluated === \"object\") {\n\t\t\treturn evaluated;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction andFilter(propertyId, filterItem, conditionItems, controller, inFields) {\n\tlet fields = cloneDeep(inFields);\n\tfor (const item of conditionItems) {\n\t\tconst newFields = evaluateFilter(propertyId, filterItem, item, controller, fields);\n\t\tfields = intersectionWith(fields, newFields, isEqual);\n\t}\n\treturn fields;\n}\n\n/**\n * A parameter condition. Evaluates to true or false.\n * @param {Object} data.op A single operator for the properties of the condition.\n * @param {Object} data.parameter_ref required parameter the condition checks for\n * @param {Object} data.parameter_2_ref optional parameter the condition checks for\n * @param {Object} data.value optional value the condition checks for\n * @param {Object} info optional dataset fields and cell coordinates info\n * @param {boolean} isValidation optional parameter used to determine type of condition\n * @return {boolean} true if the parameter(s) satisfy the condition\n */\nfunction condition(data, propertyId, controller, isValidation) {\n\tconst op = data.op;\n\tconst param = data.parameter_ref;\n\tconst param2 = data.parameter_2_ref;\n\tconst value = data.value;\n\n\t// get configuration options to determine how properties values are handled in condition logic\n\t// get actual value for input validation (isValidation)\n\tconst options = {};\n\tconst propertiesConfig = controller.getPropertiesConfig();\n\tif (!isValidation && propertiesConfig.conditionDisabledPropertyHandling === \"null\") {\n\t\toptions.filterDisabled = true;\n\t}\n\tif (!isValidation && propertiesConfig.conditionHiddenPropertyHandling === \"null\") {\n\t\toptions.filterHidden = true;\n\t}\n\n\tconst paramInfo = { param: param, id: _getPropertyIdFromParam(propertyId, param) };\n\n\tparamInfo.value = controller.getPropertyValue(paramInfo.id, options, null);\n\tparamInfo.control = controller.getControl(paramInfo.id);\n\n\tif (typeof paramInfo.control === \"undefined\") {\n\t\tlogger.warn(\"Control not found when validating condition for \" + param);\n\t}\n\n\tlet param2Info;\n\n\tif (typeof param2 !== \"undefined\") {\n\t\tparam2Info = {\n\t\t\tparam: param2,\n\t\t\tid: _getPropertyIdFromParam(propertyId, param2),\n\t\t};\n\t\tparam2Info.value = controller.getPropertyValue(param2Info.id, options, null);\n\t\tparam2Info.control = controller.getControl(param2Info.id);\n\t}\n\tconst operation = controller.getConditionOp(op);\n\tif (operation) {\n\t\treturn operation(paramInfo, param2Info, value, controller);\n\t}\n\tlogger.warn(\"Ignoring unknown condition operation '\" + op + \"' for parameter_ref \" + param);\n\treturn true;\n}\n\n/**\n * A filter parameter condition. Evaluates to an array of field names.\n *\n * @param {Object} propertyId Id of the property being operated upon\n * @param {Object} filterItem Top level filter entry for the property\n * @param {Object} conditionItem A single condition to evaluate\n * @param {Object} controller The properties controller\n * @param {Object} fields Array of fields to filter\n * @return {Object} Array of filtered field names\n */\nfunction conditionFilter(propertyId, filterItem, conditionItem, controller, fields) {\n\tconst op = conditionItem.op;\n\tconst values = [];\n\tif (typeof conditionItem.value !== \"undefined\" && conditionItem.value !== null) {\n\t\tvalues.push(conditionItem.value);\n\t} else if (Array.isArray(conditionItem.values)) {\n\t\tvalues.push(...conditionItem.values); // add all values into array\n\t}\n\tswitch (op) {\n\tcase \"dmMeasurement\":\n\t\treturn _handleDmMeasurement(fields, values);\n\tcase \"dmType\":\n\t\treturn _handleDmType(fields, values);\n\tcase \"dmModelingRole\":\n\t\treturn _handleDmModelingRole(fields, values);\n\tcase \"dmSharedFields\":\n\t\treturn _handleSharedFields(propertyId, filterItem, controller, fields);\n\tdefault:\n\t\tlogger.warn(\"Ignoring unknown condition operation '\" + op + \"'\");\n\t\treturn fields;\n\t}\n}\n\nfunction _handleDmMeasurement(inFields, measurementValues) {\n\tlet fields = cloneDeep(inFields);\n\tif (fields) {\n\t\tfields = fields.filter(function(field) {\n\t\t\tfor (const measurementValue of measurementValues) {\n\t\t\t\tif (field.metadata && field.metadata.measure === measurementValue) {\n\t\t\t\t\t// return true of any value meets condition\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\treturn fields;\n}\n\nfunction _handleDmType(inFields, typeValues) {\n\tlet fields = cloneDeep(inFields);\n\tif (fields) {\n\t\tfields = fields.filter(function(field) {\n\t\t\tfor (const typeValue of typeValues) {\n\t\t\t\tif (field.type === typeValue) {\n\t\t\t\t\t// return true of any value meets condition\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\treturn fields;\n}\n\nfunction _handleDmModelingRole(inFields, roleValues) {\n\tlet fields = cloneDeep(inFields);\n\tif (fields) {\n\t\tfields = fields.filter(function(field) {\n\t\t\tfor (const roleValue of roleValues) {\n\t\t\t\tif (field.metadata && field.metadata.modeling_role === roleValue) {\n\t\t\t\t\t// return true of any value meets condition\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\treturn fields;\n}\n\nfunction _handleSharedFields(propertyId, filterItem, controller, fields) {\n\tlet returnFields = fields;\n\tif (filterItem.parameter_refs) {\n\t\treturnFields = controller.filterFieldsFromSharedProps(fields, filterItem.parameter_refs, propertyId.name);\n\t}\n\treturn returnFields;\n}\n\n/**\n *\n * @param {Object}  failed message object with \"focus_parameter_ref\" and \"message\"\n * @return {String} failed message\n */\nfunction failedMessage(failedErrorMessage) {\n\tif (failedErrorMessage.focus_parameter_ref && failedErrorMessage.message) {\n\t\treturn {\n\t\t\t\"text\": failedErrorMessage.message.default,\n\t\t\t\"type\": failedErrorMessage.type\n\t\t};\n\t}\n\treturn \"Failed to parse failedMessage\";\n}\n\nfunction _getPropertyIdFromParam(propertyId, param) {\n\tlet paramPropertyID = {};\n\tconst offset = param.indexOf(\"[\");\n\tif (offset > -1) {\n\t\tparamPropertyID = cloneDeep(propertyId);\n\t\tparamPropertyID.name = param.substring(0, offset);\n\t\tparamPropertyID.col = _getColumnNumber(param);\n\t} else {\n\t\tparamPropertyID.name = param;\n\t}\n\treturn paramPropertyID;\n}\n\n// returns -1 if no column specified in parameter\nfunction _getColumnNumber(param) {\n\tconst startCol = param.indexOf(\"[\");\n\tif (startCol > -1) {\n\t\tconst endCol = param.indexOf(\"]\");\n\t\tif (endCol > -1) {\n\t\t\treturn parseInt(param.substring(startCol + 1, endCol), 10);\n\t\t}\n\t\treturn -1;\n\t}\n\treturn -1;\n}\n\nexport {\n\tvalidateInput,\n\tfilter\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\teslint max-depth: [\"error\", 10]*/\n\nimport logger from \"../../../utils/logger\";\nimport * as UiConditions from \"./ui-conditions\";\nimport { formatMessage } from \"../util/property-utils\";\nimport { DEFAULT_VALIDATION_MESSAGE, STATES, PANEL_TREE_ROOT,\n\tCONDITION_TYPE, CONDITION_DEFINITION_INDEX,\n\tMESSAGE_KEYS, DEFAULT_DATE_FORMAT, DEFAULT_TIME_FORMAT } from \"../constants/constants\";\nimport { isEmpty, cloneDeep, has, union, isEqual } from \"lodash\";\nimport seedrandom from \"seedrandom\";\n\n\n// ========= APIs ==================\n// ========= Validate all properties\n\n/**\n* This function will get all controls and validate each properties value.\n*\n* @param {object} properties controller. required\n* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n*/\nfunction validatePropertiesValues(controller, showErrors = true) {\n\tconst controls = controller.getControls();\n\tvalidatePropertiesListValues(controller, controls, showErrors);\n}\n\n/**\n* This function will get all controls and validate each one for visible,\n* enables and filteredEnum.\n*\n* @param {object} properties controller. required\n*/\nfunction validatePropertiesConditions(controller) {\n\tconst newStates = {\n\t\tcontrols: controller.getControlStates(),\n\t\tpanels: controller.getPanelStates(),\n\t\tactions: controller.getActionStates()\n\t};\n\n\tconst controls = controller.getControls();\n\tvalidatePropertiesListConditions(controller, controls, newStates);\n\t// propagate parent panel states\n\t_propagateParentPanelStates(controller.panelTree, newStates, PANEL_TREE_ROOT);\n\n\t// get property values before any states have been updated\n\tconst prevPropertyValues = _getConditionPropertyValues(controller);\n\n\tcontroller.setControlStates(newStates.controls);\n\tcontroller.setPanelStates(newStates.panels);\n\tcontroller.setActionStates(newStates.actions);\n\t// get property values before any states have been updated\n\tconst newPropertyValues = _getConditionPropertyValues(controller);\n\t// compared values to see if any values change based on state updates\n\tconst updatedPropertyIds = _comparePropertyValues(prevPropertyValues, newPropertyValues);\n\tfor (const updatePropertyId of updatedPropertyIds) {\n\t\tvalidateConditions(updatePropertyId, controller, 1);\n\t}\n}\n\n// ========= Validate a list of properties\n\n/**\n* This function will take a list of controls or properties names\n* and validate each properties value.\n*\n* @param {object} properties controller. required\n* @param {object} list of control objects or properties. required\n* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n*/\nfunction validatePropertiesListValues(controller, controls, showErrors) {\n\tif (Object.keys(controls).length > 0) {\n\t\tfor (const controlKey in controls) {\n\t\t\tif (!has(controls, controlKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst control = controls[controlKey];\n\t\t\t// control is a subcontrol\n\t\t\tif (control.parameterName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst propertyId = control.name ? { name: control.name } : { name: control };\n\t\t\tvalidateInput(propertyId, controller, showErrors);\n\t\t}\n\t}\n}\n\n/**\n* This function will take a list of controls or properties names\n* and validate each properties for visible, enabled or filteredEnum.\n*\n* @param {object} properties controller. required\n* @param {object} list of control objects or properties. required\n* @param {object} list of states for controls and panels. required\n*/\nfunction validatePropertiesListConditions(controller, controls, newStates) {\n\tif (Object.keys(controls).length > 0) {\n\t\tfor (const controlKey in controls) {\n\t\t\tif (!has(controls, controlKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst control = controls[controlKey];\n\t\t\t// control is a subcontrol\n\t\t\tif (control.parameterName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst propertyId = control.name ? { name: control.name } : { name: control };\n\t\t\tconst controlValue = controller.getPropertyValue(propertyId);\n\t\t\tif (control.subControls) {\n\t\t\t\tif (control.valueDef.isList || control.valueDef.isMap) {\n\t\t\t\t\t// validate the table as a whole\n\t\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t\t\t// validate each cell\n\t\t\t\t\tif (Array.isArray(controlValue)) {\n\t\t\t\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\t\t\t\tpropertyId.row = rowIndex;\n\t\t\t\t\t\t\t\tpropertyId.col = colIndex;\n\t\t\t\t\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// An 'unrolled' structure not within a table\n\t\t\t\t\tconst subPropId = {\n\t\t\t\t\t\tname: propertyId.name\n\t\t\t\t\t};\n\t\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\t\tsubPropId.col = colIndex;\n\t\t\t\t\t\t_validateConditionsByType(subPropId, newStates, controller);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// ========= Validate a single property\n\n/**\n* This function will validate a single properties value.\n* If the propertyId is a table it will also validate each cell in the table\n*\n* @param {object} propertyId. required\n* @param {object} properties controller. required\n* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n*/\nfunction validateInput(inPropertyId, controller, showErrors = true) {\n\tconst control = controller.getControl(inPropertyId);\n\tif (!control) {\n\t\tlogger.warn(\"Control not found for \" + inPropertyId.name);\n\t\treturn;\n\t}\n\tconst propertyId = cloneDeep(inPropertyId);\n\tconst controlValue = controller.getPropertyValue(propertyId);\n\tif (Array.isArray(controlValue)) {\n\t// validate the table as a whole\n\t\t_validateInput(propertyId, controller, control, showErrors);\n\t\t// validate each cell\n\t\tif (control.subControls) {\n\t\t\tif (control.valueDef.isList || control.valueDef.isMap) {\n\t\t\t\t// Handle tables\n\t\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\t\tpropertyId.row = rowIndex;\n\t\t\t\t\t\tpropertyId.col = colIndex;\n\t\t\t\t\t\t_validateInput(propertyId, controller, control.subControls[colIndex], showErrors);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Handle 'unrolled' structs outside of tables\n\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\tconst subPropId = {\n\t\t\t\t\t\tname: inPropertyId.name,\n\t\t\t\t\t\tcol: colIndex\n\t\t\t\t\t};\n\t\t\t\t\t_validateInput(subPropId, controller, control.subControls[colIndex], showErrors);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof propertyId.row === \"undefined\") { // validate each row in array for controls that are not within a table.\n\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\tpropertyId.row = rowIndex;\n\t\t\t\tpropertyId.col = 0;\n\t\t\t\t_validateInput(propertyId, controller, control, showErrors);\n\t\t\t}\n\t\t}\n\n\t} else {\n\t\t_validateInput(propertyId, controller, control, showErrors);\n\t}\n}\n\n/**\n* This function will validate a single properties for visible, enabled and\n* filteredEnum.\n*\n* @param {object} propertyId. required\n* @param {object} properties controller. required\n* @param {int} runCount. Used to prevent an infinite loop of rerun conditions\n*/\nfunction validateConditions(inPropertyId, controller, runCount = 0) {\n\tconst control = controller.getControl(inPropertyId);\n\tif (!control) {\n\t\tlogger.warn(\"Control not found for \" + inPropertyId.name);\n\t\treturn;\n\t}\n\tconst newStates = {\n\t\tcontrols: controller.getControlStates(),\n\t\tpanels: controller.getPanelStates(),\n\t\tactions: controller.getActionStates()\n\t};\n\tconst propertyId = cloneDeep(inPropertyId);\n\tconst controlValue = controller.getPropertyValue(propertyId);\n\tif (Array.isArray(controlValue) && control.subControls) {\n\t\tif (!(control.valueDef.isList || control.valueDef.isMap)) {\n\t\t\t// An unrolled structure on a panel (e.g. not a row in a table)\n\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\tpropertyId.col = colIndex;\n\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t}\n\t\t} else {\n\t\t\t// validate the table as a whole\n\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t// validate each cell\n\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\tfor (let colIndex = 0; colIndex < control.subControls.length; colIndex++) {\n\t\t\t\t\tpropertyId.row = rowIndex;\n\t\t\t\t\tpropertyId.col = colIndex;\n\t\t\t\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t_validateConditionsByType(propertyId, newStates, controller);\n\t}\n\t// get property values before any states have been updated\n\tconst prevPropertyValues = _getConditionPropertyValues(controller);\n\n\tcontroller.setControlStates(newStates.controls);\n\tcontroller.setPanelStates(newStates.panels);\n\tcontroller.setActionStates(newStates.actions);\n\n\t// get property values before any states have been updated\n\tconst newPropertyValues = _getConditionPropertyValues(controller);\n\t// compared values to see if any values change based on state updates\n\tconst updatedPropertyIds = _comparePropertyValues(prevPropertyValues, newPropertyValues, runCount);\n\t// rerun validation on controls where value changes based on state updates\n\tfor (const updatePropertyId of updatedPropertyIds) {\n\t\tvalidateConditions(updatePropertyId, controller, runCount + 1);\n\t}\n\tif (runCount > 0) {\n\t\t// need to make sure all children of panels get correct states after rerun\n\t\t_propagateParentPanelStates(controller.panelTree, newStates, PANEL_TREE_ROOT);\n\t}\n}\n\nfunction _comparePropertyValues(prevPropertyValues, newPropertyValues, runCount) {\n\tconst updatePropertyIds = [];\n\tif (runCount > 10) { // stop at top reruns.  After this it's most likely an infinite loop\n\t\tlogger.warn(\"More than 10 iteration of processing conditions found. Check your conditions for loops. Updated properties: \" + JSON.stringify(newPropertyValues));\n\t\treturn [];\n\t}\n\tconst keys = union(Object.keys(prevPropertyValues), Object.keys(newPropertyValues));\n\tfor (const key of keys) {\n\t\tconst prevPropertyValue = prevPropertyValues[key];\n\t\tconst newPropertyValue = newPropertyValues[key];\n\t\tif (!isEqual(prevPropertyValue, newPropertyValue)) {\n\t\t\tupdatePropertyIds.push({ name: key });\n\t\t}\n\t}\n\treturn updatePropertyIds;\n}\n\nfunction _getConditionPropertyValues(controller) {\n\tconst propertiesConfig = controller.getPropertiesConfig();\n\tconst options = {};\n\tif (propertiesConfig.conditionDisabledPropertyHandling === \"null\") {\n\t\toptions.filterDisabled = true;\n\t}\n\tif (propertiesConfig.conditionHiddenPropertyHandling === \"null\") {\n\t\toptions.filterHidden = true;\n\t}\n\tif (isEmpty(options)) {\n\t\treturn {};\n\t}\n\treturn controller.getPropertyValues(options);\n}\n\n/**\n* This function will validate a single properties for allow_change.\n*\n* @param {object} propertyId. required\n* @param {object} properties controller. required\n*/\nfunction allowConditions(inPropertyId, controller) {\n\tlet result = true;\n\tconst control = controller.getControl(inPropertyId);\n\tif (!control) {\n\t\tlogger.warn(\"Control not found for \" + inPropertyId.name);\n\t\treturn result;\n\t}\n\tconst allowValidations = controller.getDefinitions(inPropertyId, CONDITION_TYPE.ALLOWCHANGE, CONDITION_DEFINITION_INDEX.CONTROLS);\n\tif (allowValidations.length > 0) {\n\t\ttry {\n\t\t\tfor (const validation of allowValidations) {\n\t\t\t\tresult = UiConditions.validateInput(validation.definition, inPropertyId, controller);\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in validation: \" + error);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n* Set default value for a field if conditions evaluate to true.\n* This function sets parameter_ref and default value in conditionalDefaultValues object using pass-by-reference.\n* Return value is never used anywhere. Calling function works on the updated conditionalDefaultValues object.\n*\n* @param {object} propertyId. required\n* @param {object} properties controller. required\n* @param {object} conditionalDefaultValues. required\n*/\nfunction setConditionalDefaultValue(inPropertyId, controller, conditionalDefaultValues) {\n\tconst control = controller.getControl(inPropertyId);\n\tif (!control) {\n\t\tlogger.warn(\"Control not found for \" + inPropertyId.name);\n\t\treturn null;\n\t}\n\tconst validations = controller.getDefinitions(inPropertyId, CONDITION_TYPE.CONDITIONALDEFAULT, CONDITION_DEFINITION_INDEX.CONTROLS);\n\tif (validations.length > 0) {\n\t\ttry {\n\t\t\tfor (const validation of validations) {\n\t\t\t\tconst parameterRef = validation.definition.default_value.parameter_ref;\n\t\t\t\t//  For a given parameter_ref, only the first default_value condition is used.\n\t\t\t\tif (!(parameterRef in conditionalDefaultValues)) {\n\t\t\t\t\tconst result = UiConditions.validateInput(validation.definition, inPropertyId, controller);\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\t// Condition evaluate to true\n\t\t\t\t\t\tconditionalDefaultValues[parameterRef] = validation.definition.default_value.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in validation: \" + error);\n\t\t}\n\t}\n\treturn null;\n}\n\n/**\n* Filters the datamodel fields for the given parameter.\n*\n* @param {object} propertyId. required\n* @param {object} list of filter definitions. required.\n* @param {object} properties controller. required\n* @param {object} list of fields to filter. required\n* @return {object} list of filtered fields\n*/\nfunction filterConditions(propertyId, filterDefinitions, controller, fields) {\n\t// Check each definition\n\tlet returnFields = fields;\n\tif (filterDefinitions && Array.isArray(filterDefinitions[propertyId.name])) {\n\t\ttry {\n\t\t\tconst defs = filterDefinitions[propertyId.name];\n\t\t\tfor (let i = 0; i < defs.length; i++) {\n\t\t\t\treturnFields = UiConditions.filter(propertyId, filterDefinitions[propertyId.name][i].definition, controller, returnFields);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in filter for propertyId (\" + propertyId.name + \"): \" + error);\n\t\t}\n\t}\n\treturn returnFields;\n}\n\n// ========= miscellanious APIs\n\n/**\n* Takes an array of panel IDs and updates the states of the children of\n* the panels identified by those IDs to be the same as the states of the panels.\n*/\nfunction updatePanelChildrenStatesForPanelIds(panelIds, controller) {\n\tconst newStates = {\n\t\tcontrols: controller.getControlStates(),\n\t\tpanels: controller.getPanelStates(),\n\t\tactions: controller.getActionStates()\n\t};\n\n\tfor (let i = 0; i < panelIds.length; i++) {\n\t\tconst state = controller.getPanelState({ \"name\": panelIds[i] });\n\t\t_updatePanelChildrenState(newStates, { \"name\": panelIds[i] }, state, controller);\n\t}\n\n\tcontroller.setControlStates(newStates.controls);\n\tcontroller.setPanelStates(newStates.panels);\n\tcontroller.setActionStates(newStates.actions);\n\n}\n\n/**\n* Update the stated of a property\n*\n* @param {object} a list of controls and panels states.  This will be modified to contain\n*                 the updated state. required.\n* @param {object} propertyId. required.\n* @param {string} proposed new state value. required.\n*/\nfunction updateState(refState, propertyId, value, controller) {\n\tlet propState = refState[propertyId.name];\n\tif (!propState) {\n\t\tpropState = {};\n\t}\n\tconst newPropState = Object.assign({}, propState);\n\tconst topLevelId = typeof propertyId.row === \"undefined\" && typeof propertyId.col === \"undefined\";\n\tif (topLevelId && newPropState.value === STATES.HIDDEN && (value === STATES.DISABLED || value === STATES.ENABLED)) {\n\t\tnewPropState.value = STATES.HIDDEN;\n\t} else {\n\t\tnewPropState.value = value;\n\t}\n\n\t// First allow for table level state, then column level state, and finally cell level state\n\tif (typeof propertyId.col !== \"undefined\") {\n\t\tconst colId = propertyId.col.toString();\n\t\tif (!propState[colId]) {\n\t\t\tpropState[colId] = {};\n\t\t}\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tconst rowId = propertyId.row.toString();\n\t\t\tif (!propState[colId][rowId]) {\n\t\t\t\tpropState[colId][rowId] = {};\n\t\t\t}\n\t\t\t// Table cell level\n\t\t\tpropState[colId][rowId].value = newPropState.value;\n\t\t} else {\n\t\t\t// Table column level\n\t\t\tpropState[colId].value = newPropState.value;\n\t\t\t// if all cells are \"hidden\", hide an entire column\n\t\t\tconst hideColumn = (value === \"hidden\");\n\t\t\tconst updateColumnVisibility = controller.getColumnVisibility(propertyId, propertyId.col) !== !hideColumn;\n\t\t\tif (typeof controller !== \"undefined\" && updateColumnVisibility) {\n\t\t\t\tcontroller.toggleColumnVisibility(propertyId, propertyId.col, !hideColumn);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Control level\n\t\tpropState.value = newPropState.value;\n\t}\n\trefState[propertyId.name] = propState;\n}\n\n/**\n* Update the state of a value in an enumeration property.\n*\n* @param {object} a list of controls and panels states.  This will be modified to contain\n*                 the updated state. required.\n* @param {object} propertyId. required.\n* @param {string} enumValue The enumeration value to operate upon. required.\n* @param {string} proposed new state value. required.\n*/\nfunction updateEnumerationState(refState, propertyId, enumValue, value) {\n\tlet propState = refState[propertyId.name];\n\tif (!propState) {\n\t\tpropState = {};\n\t}\n\tif (!propState.values) {\n\t\tpropState.values = {};\n\t}\n\tif (!propState.values[enumValue]) {\n\t\tpropState.values[enumValue] = {};\n\t}\n\tconst newPropState = Object.assign({}, propState);\n\tconst topLevelId = typeof propertyId.row === \"undefined\" && typeof propertyId.col === \"undefined\";\n\tif (topLevelId && newPropState.values[enumValue].value === STATES.HIDDEN && (value === STATES.DISABLED || value === STATES.ENABLED)) {\n\t\tnewPropState.values[enumValue].value = STATES.HIDDEN;\n\t} else {\n\t\tnewPropState.values[enumValue].value = value;\n\t}\n\n\t// First allow for table level state, then column level state, and finally cell level state\n\tif (typeof propertyId.col !== \"undefined\") {\n\t\tconst colId = propertyId.col.toString();\n\t\tif (!propState[colId]) {\n\t\t\tpropState[colId] = {};\n\t\t}\n\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\tconst rowId = propertyId.row.toString();\n\t\t\tif (!propState[colId][rowId]) {\n\t\t\t\tpropState[colId][rowId] = {};\n\t\t\t}\n\t\t\tif (!propState[colId][rowId].values) {\n\t\t\t\tpropState[colId][rowId].values = {};\n\t\t\t}\n\t\t\tif (!propState[colId][rowId].values[enumValue]) {\n\t\t\t\tpropState[colId][rowId].values[enumValue] = {};\n\t\t\t}\n\t\t\t// Table cell level\n\t\t\tpropState[colId][rowId].values[enumValue].value = newPropState.values[enumValue].value;\n\t\t} else {\n\t\t\t// Table column level\n\t\t\tif (!propState[colId].values) {\n\t\t\t\tpropState[colId].values = {};\n\t\t\t}\n\t\t\tif (!propState[colId].values[enumValue]) {\n\t\t\t\tpropState[colId].values[enumValue] = {};\n\t\t\t}\n\t\t\tpropState[colId].values[enumValue].value = newPropState.values[enumValue].value;\n\t\t}\n\t} else {\n\t\t// Control level\n\t\tpropState.values[enumValue] = newPropState.values[enumValue];\n\t}\n\trefState[propertyId.name] = propState;\n}\n\n/**\n* Generate a propertyId from a parameter_ref.  The new propertyId will include the row\n* value from the control propertyId. If the controlPropertyId is a member of an\n* unrolled structure, that propertyId will be returned.\n*\n* @param {string} parameter_ref value. required.\n* @param {object} control propertyId. optional.\n* @return {object} generated propertyId.\n*/\nfunction getParamRefPropertyId(paramRef, controlPropertyId) {\n\tconst baseParam = {\n\t\tname: paramRef\n\t};\n\tconst offset = paramRef.indexOf(\"[\");\n\tif (offset > -1) {\n\t\tbaseParam.name = paramRef.substring(0, offset);\n\t\tbaseParam.col = parseInt(paramRef.substring(offset + 1, paramRef.indexOf(\"]\")), 10);\n\t}\n\tif (controlPropertyId) {\n\t\tbaseParam.row = controlPropertyId.row;\n\t}\n\treturn baseParam;\n}\n\n/**\n* This function will inject validation definitions for controls with the following attributes.\n*    Required: validation definition to ensure that the required parameter is not is not empty.\n*    Date format: validation definition to ensure parameter has a proper date format.\n*    Time format: validation definition to ensure parameter has a propert time format.\n*\n* @param {object} a list of control objects. required.\n* @param {object} a list of validation definition objects. required.\n* @return {object} a modified validation defintion object with any injected definitions.\n*/\nfunction injectDefaultValidations(controls, validationDefinitions, requiredDefinitionsIds, intl) {\n\tfor (const keyName in controls) {\n\t\tif (!has(controls, keyName)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst control = controls[keyName];\n\t\t// for the validation id we need a repeatable random number to ensure uniqueness within the form.\n\t\tconst rng = seedrandom(keyName);\n\t\tconst controlValId = 1000 * rng();\n\n\t\tif (control.required === true) {\n\t\t\t_injectRequiredDefinition(control, validationDefinitions, requiredDefinitionsIds, keyName, controlValId, intl);\n\t\t}\n\t\tif (control.role === \"date\" || control.role === \"time\") {\n\t\t\t_injectDateTimeDefinition(control, validationDefinitions, keyName, controlValId, intl);\n\t\t}\n\t\tif (control.role === \"column\") {\n\t\t\t// used for selectcolumns control\n\t\t\tlet locKeyName = keyName;\n\t\t\tif (control.valueDef.isList) {\n\t\t\t\tlocKeyName += \"[0]\";\n\t\t\t}\n\t\t\t_injectInvalidFieldDefinition(control, validationDefinitions, locKeyName, controlValId, intl);\n\t\t}\n\n\t\tif (control.subControls) {\n\t\t\tconst subControls = {};\n\t\t\tfor (let idx = 0; idx < control.subControls.length; idx++) {\n\t\t\t\tconst subKeyName = keyName + \"[\" + idx + \"]\";\n\t\t\t\tsubControls[subKeyName] = control.subControls[idx];\n\t\t\t}\n\t\t\tinjectDefaultValidations(subControls, validationDefinitions, requiredDefinitionsIds, intl);\n\t\t}\n\t}\n}\n\n\n// ========= internal functions\n\n// This function will traverse the panel tree and propogate the state so that a higher order\n// panel state will be set for lower order panels.  The disableOnly flag will only propagate the\n// disable state.\nfunction \t_propagateParentPanelStates(panelTree, newStates, currentPanel, disabledOnly) {\n\tconst currentPanelState = newStates.panels[currentPanel];\n\tconst allowUpdate = (disabledOnly) ? (currentPanelState && (currentPanelState.value === STATES.DISABLED))\n\t\t: (currentPanelState && (currentPanelState.value === STATES.HIDDEN || currentPanelState.value === STATES.DISABLED));\n\t\t// only propagate if parent panel is hidden or disabled\n\tif (allowUpdate && panelTree[currentPanel]) {\n\t\t// propagate panel state to children controls\n\t\tif (panelTree[currentPanel].controls) {\n\t\t\tfor (const control of panelTree[currentPanel].controls) {\n\t\t\t\tif (disabledOnly) {\n\t\t\t\t\tif (newStates.controls[control].value !== STATES.HIDDEN) {\n\t\t\t\t\t\tupdateState(newStates.controls, { name: control }, currentPanelState.value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tupdateState(newStates.controls, { name: control }, currentPanelState.value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// propagate panel state to children actions\n\t\tif (panelTree[currentPanel].actions) {\n\t\t\tfor (const action of panelTree[currentPanel].actions) {\n\t\t\t\tif (disabledOnly) {\n\t\t\t\t\tif (newStates.actions[action].value !== STATES.HIDDEN) {\n\t\t\t\t\t\tupdateState(newStates.actions, { name: action }, currentPanelState.value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tupdateState(newStates.actions, { name: action }, currentPanelState.value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//  check all children panels\n\tif (panelTree[currentPanel] && panelTree[currentPanel].panels) {\n\t\tfor (const panel of panelTree[currentPanel].panels) {\n\t\t\tif (allowUpdate) {\n\t\t\t\tif (disabledOnly) {\n\t\t\t\t\tif (newStates.panels[panel].value !== STATES.HIDDEN) {\n\t\t\t\t\t\tupdateState(newStates.panels, { name: panel }, currentPanelState.value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tupdateState(newStates.panels, { name: panel }, currentPanelState.value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_propagateParentPanelStates(panelTree, newStates, panel, disabledOnly);\n\t\t}\n\t}\n}\n\n// This will validate a single propertyID value\nfunction _validateInput(propertyId, controller, control, showErrors) {\n\tlet errorSet = false;\n\tconst validations = controller.getDefinitions(propertyId, CONDITION_TYPE.VALIDATION, CONDITION_DEFINITION_INDEX.CONTROLS);\n\tif (validations.length > 0) {\n\t\tconst requiredDefinitionsIds = controller.getRequiredDefinitionIds();\n\t\ttry {\n\t\t\tlet output = false;\n\t\t\tfor (const validation of validations) {\n\t\t\t\tlet errorMessage = DEFAULT_VALIDATION_MESSAGE;\n\t\t\t\toutput = UiConditions.validateInput(validation.definition, propertyId, controller);\n\t\t\t\tlet isError = false;\n\t\t\t\tif (typeof output === \"object\") {\n\t\t\t\t\tisError = true;\n\t\t\t\t\terrorMessage = {\n\t\t\t\t\t\ttype: output.type,\n\t\t\t\t\t\ttext: output.text\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// msgPropertyId is where the message should be set\n\t\t\t\tlet msgPropertyId = cloneDeep(propertyId);\n\t\t\t\tif (validation.definition.validation &&\n\t\t\t\t\tvalidation.definition.validation.fail_message &&\n\t\t\t\t\tvalidation.definition.validation.fail_message.focus_parameter_ref) {\n\t\t\t\t\tmsgPropertyId = getParamRefPropertyId(validation.definition.validation.fail_message.focus_parameter_ref, msgPropertyId);\n\t\t\t\t}\n\t\t\t\t// don't set column if not a subcontrol\n\t\t\t\tif (typeof msgPropertyId.col !== \"undefined\" && typeof control.columnIndex === \"undefined\") {\n\t\t\t\t\tdelete msgPropertyId.col;\n\t\t\t\t}\n\t\t\t\terrorMessage.validation_id = msgPropertyId.name;\n\t\t\t\tif (validation.definition.validation &&\n\t\t\t\t\tvalidation.definition.validation.id) {\n\t\t\t\t\terrorMessage.validation_id = validation.definition.validation.id;\n\t\t\t\t}\n\n\t\t\t\tif (typeof msgPropertyId.row === \"undefined\") {\n\t\t\t\t\tdelete msgPropertyId.row;\n\t\t\t\t}\n\t\t\t\terrorMessage.propertyId = msgPropertyId;\n\n\t\t\t\t// Determine if this condition is for required parameters\n\t\t\t\terrorMessage.required = requiredDefinitionsIds.indexOf(validation.definition.validation.id) > -1;\n\t\t\t\t// Only show warning messages for \"colDoesExists\" condition\n\t\t\t\tif (!showErrors && !validation.alwaysShow) {\n\t\t\t\t\terrorMessage.displayError = false;\n\t\t\t\t}\n\n\t\t\t\t// if error message has not been set for this msgPropertyId/focus_parameter_ref, clear errorSet\n\t\t\t\tif (!controller.getErrorMessage(msgPropertyId, true, true, false)) {\n\t\t\t\t\terrorSet = false;\n\t\t\t\t}\n\t\t\t\tif (isError && !errorSet) {\n\t\t\t\t\tcontroller.updateErrorMessage(msgPropertyId, errorMessage);\n\t\t\t\t\tif (isError) {\n\t\t\t\t\t\terrorSet = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (!isError && !errorSet) {\n\t\t\t\t\tconst msg = controller.getErrorMessage(msgPropertyId, false, false, false);\n\t\t\t\t\tif (!isEmpty(msg) && (msg.validation_id === errorMessage.validation_id)) {\n\t\t\t\t\t\tcontroller.updateErrorMessage(msgPropertyId, DEFAULT_VALIDATION_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in validation: \" + error);\n\t\t}\n\t}\n}\n\n// This function allows a single interface to perform all conditions validation.\n// It enables common code for the various APIs by delaying the exapnsion of all three\n// conditions test until this point.\nfunction _validateConditionsByType(propertyId, newStates, controller) {\n\t_validateDefinitionsByType(propertyId, newStates, controller, CONDITION_TYPE.VISIBLE);\n\t_validateDefinitionsByType(propertyId, newStates, controller, CONDITION_TYPE.ENABLED);\n\t_validateDefinitionsByType(propertyId, newStates, controller, CONDITION_TYPE.FILTEREDENUM);\n}\n\n// This is a common routine that will get the appropriate definitions for the property id\n// by type and validate that set of definitions.\nfunction _validateDefinitionsByType(propertyId, newStates, controller, condType) {\n\tconst definitions = controller.getDefinitions(propertyId, condType, CONDITION_DEFINITION_INDEX.CONTROLS);\n\t_validateByType(definitions, propertyId, newStates, controller, condType);\n}\n\n// This function will validate a set of definitions for the propertyId.  This is needed because\n// it is invoked in various places in the code where we have a set of definitions that need to be validated.\nfunction _validateByType(definitions, propertyId, newStates, controller, condType) {\n\tif (definitions.length > 0) {\n\t\ttry {\n\t\t\tdefinitions.forEach((definition, idx) => {\n\t\t\t\tconst evalState = UiConditions.validateInput(definition.definition, propertyId, controller);\n\t\t\t\t// After the evalution, there is different processing of the result based on the condition type.\n\t\t\t\tswitch (condType) {\n\t\t\t\tcase CONDITION_TYPE.VISIBLE:\n\t\t\t\t\t_updateControlState(evalState, definition.definition.visible, propertyId, newStates, controller, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CONDITION_TYPE.ENABLED:\n\t\t\t\t\t_updateControlState(evalState, definition.definition.enabled, propertyId, newStates, controller, false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CONDITION_TYPE.FILTEREDENUM: {\n\t\t\t\t\tconst lastDefinition = _isLastDefintiionForParameter(definitions, idx);\n\t\t\t\t\t_updateFilteredState(definition.definition, propertyId, newStates, evalState, lastDefinition);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error thrown in validation: \" + error);\n\t\t}\n\t}\n}\n\n// Returns true if the defintion is the last definition for the target.parameter_ref from the list of 'definitions'\n// This is only used for 'enum_filter' conditions\nfunction _isLastDefintiionForParameter(definitions, index) {\n\tconst currentDefinition = definitions[index];\n\tconst currentParameter = currentDefinition.definition.enum_filter.target.parameter_ref;\n\n\tlet lastDefinition = true;\n\tdefinitions.forEach((definition, idx) => {\n\t\t// definitions are evaluated in order, so assume any defition before 'idx' are already evaluated\n\t\tif (idx > index && definition.definition.enum_filter.target.parameter_ref === currentParameter) {\n\t\t\tlastDefinition = false;\n\t\t}\n\t});\n\treturn lastDefinition;\n}\n\n// This function will update the control state of the control and all it children panels and controls.\nfunction _updateControlState(stateOn, definition, propertyId, newStates, controller, visibleControl) {\n\tif (definition.parameter_refs) {\n\t\t_updateRefsState(stateOn, definition, propertyId, newStates, controller, visibleControl, definition.parameter_refs, \"control\");\n\t}\n\tif (definition.action_refs) {\n\t\t_updateRefsState(stateOn, definition, propertyId, newStates, controller, visibleControl, definition.action_refs, \"action\");\n\t}\n\tif (definition.group_refs) {\n\t\t_updateGroupRefsControlState(stateOn, definition, propertyId, newStates, controller, visibleControl);\n\t}\n}\n\n// This function will update the control state of the refs in the condition and all it children panels and controls.\nfunction _updateGroupRefsControlState(stateOn, definition, propertyId, newStates, controller, visibleControl) {\n\tconst newOnState = (visibleControl) ? STATES.VISIBLE : STATES.ENABLED;\n\tconst newOffState = (visibleControl) ? STATES.HIDDEN : STATES.DISABLED;\n\tconst notAllowedState = (visibleControl) ? STATES.ENABLED : STATES.HIDDEN;\n\n\tfor (const groupRef of definition.group_refs) {\n\t\tconst groupReferenceId = getParamRefPropertyId(groupRef);\n\t\tconst currentState = _getState(newStates.panels, groupReferenceId);\n\t\t// check for visible or enabled so we aren't resetting the state all the time\n\t\tif (stateOn === true) { // control|panel should be visible || enabled\n\t\t\tif (groupReferenceId && currentState !== newOnState && currentState !== notAllowedState) {\n\t\t\t\tconst updated = _updateStateIfParent(newStates, groupReferenceId, newOnState, controller);\n\t\t\t\t// only update the children if parent's state changed or is set for the first time\n\t\t\t\tif (updated) {\n\t\t\t\t\t_updatePanelChildrenState(newStates, groupReferenceId, newOnState, controller);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (groupReferenceId && (visibleControl || (!visibleControl && currentState !== notAllowedState))) {\n\t\t\tconst updated = _updateStateIfParent(newStates, groupReferenceId, newOffState, controller);\n\t\t\t// only update the children if parent's state changed or is set for the first time\n\t\t\tif (updated) {\n\t\t\t\t_updatePanelChildrenState(newStates, groupReferenceId, newOffState, controller);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// This function will update the control state of the refs in the condition and all it children panels and controls.\nfunction _updateRefsState(stateOn, definition, propertyId, newStates, controller, visibleControl, refsList, refsType) {\n\tconst newOnState = (visibleControl) ? STATES.VISIBLE : STATES.ENABLED;\n\tconst newOffState = (visibleControl) ? STATES.HIDDEN : STATES.DISABLED;\n\tconst notAllowedState = (visibleControl) ? STATES.ENABLED : STATES.HIDDEN;\n\tconst refStates = (refsType === \"control\") ? newStates.controls : newStates.actions;\n\tfor (const ref of refsList) {\n\t\tconst referenceId = getParamRefPropertyId(ref, propertyId);\n\t\tconst currentState = _getState(refStates, referenceId);\n\t\t// check for visible or enabled so we aren't resetting the state all the time\n\t\tif (Array.isArray(definition.values)) {\n\t\t\t// Short-circuit for disabling individual enumeration items\n\t\t\tfor (const value of definition.values) {\n\t\t\t\tif (stateOn === true) { // control|panel should be visible || enabled\n\t\t\t\t\tupdateEnumerationState(refStates, referenceId, value, newOnState);\n\t\t\t\t} else { // control|panel should be hidden || disabled\n\t\t\t\t\tupdateEnumerationState(refStates, referenceId, value, newOffState);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (stateOn === true) { // control|panel should be visible || enabled\n\t\t\tif (referenceId && currentState !== newOnState && currentState !== notAllowedState) {\n\t\t\t\tupdateState(refStates, referenceId, newOnState, controller);\n\t\t\t}\n\t\t} else if (referenceId && (visibleControl || (!visibleControl && currentState !== notAllowedState))) {\n\t\t\t_updateStateIfPanel(newStates, referenceId, newOffState, refStates, controller);\n\t\t}\n\t}\n}\n\n// Filtered state is stored in objects rather than arrays\nfunction _updateFilteredState(definition, inPropertyId, newStates, filtered, lastDefinition) {\n\tif (definition.enum_filter.target && definition.enum_filter.target.parameter_ref) {\n\t\tconst refState = newStates.controls;\n\t\tconst propertyId = getParamRefPropertyId(definition.enum_filter.target.parameter_ref, inPropertyId);\n\t\tlet propState = refState[propertyId.name];\n\t\tif (!propState) {\n\t\t\tpropState = {};\n\t\t}\n\t\t// First allow for table level state, then column level state, and finally cell level state\n\t\tif (typeof propertyId.col !== \"undefined\") {\n\t\t\tconst colId = propertyId.col.toString();\n\t\t\tif (!propState[colId]) {\n\t\t\t\tpropState[colId] = {};\n\t\t\t}\n\t\t\tif (typeof propertyId.row !== \"undefined\") {\n\t\t\t\tconst rowId = propertyId.row.toString();\n\t\t\t\tif (!propState[colId][rowId]) {\n\t\t\t\t\tpropState[colId][rowId] = {};\n\t\t\t\t}\n\t\t\t\t// Cells\n\t\t\t\tconst enumFilters = _getFilteredEnumItems(definition, filtered, propState[colId][rowId].enumFilter, propState[colId][rowId].enumFilterApplied, lastDefinition);\n\t\t\t\tpropState[colId][rowId].enumFilter = enumFilters.values;\n\t\t\t\tpropState[colId][rowId].enumFilterApplied = enumFilters.filterApplied;\n\t\t\t} else {\n\t\t\t\t// Columns\n\t\t\t\tconst enumFilters = _getFilteredEnumItems(definition, filtered, propState[colId].enumFilter, propState[colId].enumFilterApplied, lastDefinition);\n\t\t\t\tpropState[colId].enumFilter = enumFilters.values;\n\t\t\t\tpropState[colId].enumFilterApplied = enumFilters.filterApplied;\n\t\t\t}\n\t\t} else {\n\t\t\t// Control-level state\n\t\t\tconst enumFilters = _getFilteredEnumItems(definition, filtered, propState.enumFilter, propState.enumFilterApplied, lastDefinition);\n\t\t\tpropState.enumFilter = enumFilters.values;\n\t\t\tpropState.enumFilterApplied = enumFilters.filterApplied;\n\t\t}\n\t\trefState[propertyId.name] = propState;\n\t}\n}\n\n// This function will updatethe state all the children of a panel when that parent panel state\n// has changed.  It will update the state of the child.  If the state is transitioning to\n// enabled or visible, then the child state may need to be set by other conditions or panels states.\nfunction _updatePanelChildrenState(newStates, referenceId, state, controller) {\n\tif (controller.panelTree[referenceId.name]) {\n\t\tconst panelTree = controller.panelTree[referenceId.name];\n\t\tfor (const panel of panelTree.panels) {\n\t\t\tconst panelPropertyId = { name: panel };\n\t\t\tupdateState(newStates.panels, panelPropertyId, state);\n\t\t\t// recurse to get the children of the panel\n\t\t\t_updatePanelChildrenState(newStates, panelPropertyId, state, controller);\n\t\t\t// after recursing down the panelTree, re-run defintions to ensure the panel is in the proper state.\n\t\t\tif (state === STATES.ENABLED) {\n\t\t\t\t_runRefsValidateDefinitions(panelPropertyId, controller, CONDITION_TYPE.ENABLED, newStates);\n\t\t\t} else if (state === STATES.VISIBLE) {\n\t\t\t\t// if the current panel is in disable state.\n\t\t\t\tif (newStates.panels[referenceId.name].disabled) {\n\t\t\t\t\t// propagate the state to all the children in the panel.\n\t\t\t\t\t_propagateParentPanelStates(controller.panelTree, newStates, referenceId.name, true);\n\t\t\t\t}\n\t\t\t\t_runRefsValidateDefinitions(panelPropertyId, controller, CONDITION_TYPE.ENABLED, newStates);\n\t\t\t\t_runRefsValidateDefinitions(panelPropertyId, controller, CONDITION_TYPE.VISIBLE, newStates);\n\t\t\t}\n\t\t}\n\t\tfor (const control of panelTree.controls) {\n\t\t\tconst ctrlPropertyId = { name: control };\n\t\t\t_updatePanelChildrenObjectState(newStates, referenceId, state, controller, ctrlPropertyId, newStates.controls);\n\t\t}\n\t\tfor (const action of panelTree.actions) {\n\t\t\tconst ctrlPropertyId = { name: action };\n\t\t\t_updatePanelChildrenObjectState(newStates, referenceId, state, controller, ctrlPropertyId, newStates.actions);\n\t\t}\n\n\t}\n}\n\n// In this context \"Object\" menas either a control or an action.\nfunction _updatePanelChildrenObjectState(newStates, referenceId, state, controller, objectId, objectStates) {\n\tupdateState(objectStates, objectId, state);\n\t// re-run ref conditions to see if they should override this new state.\n\tif (state === STATES.ENABLED) {\n\t\t_runRefsValidateDefinitions(objectId, controller, CONDITION_TYPE.ENABLED, newStates);\n\t\t_runRefsValidateDefinitions(objectId, controller, CONDITION_TYPE.VISIBLE, newStates);\n\t} else if (state === STATES.VISIBLE) {\n\t\t// need to run the controls visible conditions in case a higher level panel changed the state.\n\t\t_validateDefinitionsByType(objectId, newStates, controller, CONDITION_TYPE.VISIBLE);\n\t\t_runRefsValidateDefinitions(objectId, controller, CONDITION_TYPE.VISIBLE, newStates);\n\t\t// if parent panel is disable then set control to disabled.\n\t\tif (newStates.panels[referenceId.name].value === STATES.DISABLED) {\n\t\t\tupdateState(objectStates, objectId, STATES.DISABLED);\n\t\t} else {\n\t\t\t// otherwise run any enable definition that would set the control.\n\t\t\t_runRefsValidateDefinitions(objectId, controller, CONDITION_TYPE.ENABLED, newStates);\n\t\t}\n\t}\n}\n\n// validate all conditions of the type that set the propertyID state as a result of the condition.\nfunction _runRefsValidateDefinitions(propertyId, controller, dfnType, newStates) {\n\tconst refsDefinitions = controller.getDefinitions(propertyId, dfnType, CONDITION_DEFINITION_INDEX.REFS);\n\tif (refsDefinitions.length > 0) {\n\t\t_validateByType(refsDefinitions, propertyId, newStates, controller, dfnType);\n\t}\n\n}\n\n// Only parent panels can override state of its children\nfunction _updateStateIfParent(newStates, panel, state, controller, referenceId) {\n\tconst panelName = panel.name;\n\tif (newStates.panels[panelName]) {\n\t\tconst prevValue = newStates.panels[panelName].value;\n\t\t// if prevState is disabled, cannot set newState to visible. if prevState is hidden, cannot set newState to enabled\n\t\tif (((prevValue === STATES.ENABLED || prevValue === STATES.VISIBLE) && (state === STATES.DISABLED || state === STATES.HIDDEN)) ||\n\t\t\t\t(prevValue === STATES.DISABLED && state === STATES.ENABLED) ||\n\t\t\t\t(prevValue === STATES.HIDDEN && state === STATES.VISIBLE)) {\n\t\t\tupdateState(newStates.panels, panel, state);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tupdateState(newStates.panels, panel, state);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n// A control can only set a state to enabled if it was previously disabled. The same applies to hidden and visible\nfunction _updateStateIfPanel(newStates, referenceId, state, refStates, controller) {\n\tconst controlName = referenceId.name;\n\tif (refStates[controlName]) {\n\t\tlet prevValue = refStates[controlName].value;\n\t\tif (typeof referenceId.col !== \"undefined\") {\n\t\t\t// control is in a table\n\t\t\tif (refStates[controlName][referenceId.col]) {\n\t\t\t\tif (typeof referenceId.row !== \"undefined\" && refStates[controlName][referenceId.col][referenceId.row]) {\n\t\t\t\t\tprevValue = refStates[controlName][referenceId.col][referenceId.row].value;\n\t\t\t\t} else { // first time setting control state for each row in the column\n\t\t\t\t\tupdateState(refStates, referenceId, state, controller);\n\t\t\t\t}\n\t\t\t} else { // first time setting control state for the column\n\t\t\t\tupdateState(refStates, referenceId, state, controller);\n\t\t\t}\n\t\t}\n\t\t// Can only set a state to enabled if it was previously disabled. The same applies to hidden and visible\n\t\tif (((prevValue === STATES.ENABLED || prevValue === STATES.VISIBLE) && (state === STATES.DISABLED || state === STATES.HIDDEN)) ||\n\t\t\t\t(prevValue === STATES.DISABLED && state === STATES.ENABLED) ||\n\t\t\t\t(prevValue === STATES.DISABLED && state === STATES.HIDDEN) ||\n\t\t\t\t(prevValue === STATES.HIDDEN && state === STATES.VISIBLE)) {\n\t\t\tupdateState(refStates, referenceId, state, controller);\n\t\t}\n\t} else { // first time setting control state\n\t\tupdateState(refStates, referenceId, state, controller);\n\t}\n}\n\nfunction _getFilteredEnumItems(definition, filtered, previousValues, filterApplied, lastDefinition) {\n\tconst enumFilter = {\n\t\tvalues: previousValues,\n\t\tfilterApplied: lastDefinition ? false : filterApplied || true // default to true if null\n\t};\n\n\tlet filterValues = null; // original values\n\tif (filtered) {\n\t\tfilterValues = definition.enum_filter.target.values;\n\t}\n\n\t// values should be null if there are no other definitions that already modified this parameter\n\tif (filterValues || !filterApplied) {\n\t\tenumFilter.values = filterValues;\n\t\tenumFilter.filterApplied = true;\n\t}\n\n\t// reset the filters for the next validation cycle\n\tif (lastDefinition) {\n\t\tenumFilter.filterApplied = false;\n\t}\n\n\treturn enumFilter;\n}\n\n// state is stored in objects rather than arrays\nfunction _getState(refState, propertyId) {\n\tlet propState = refState[propertyId.name];\n\tif (typeof propertyId.col !== \"undefined\" && propState) {\n\t\tpropState = propState[propertyId.col.toString()];\n\t\tif (typeof propertyId.row !== \"undefined\" && propState) {\n\t\t\tpropState = propState[propertyId.row.toString()];\n\t\t}\n\t}\n\tif (propState) {\n\t\treturn propState.value;\n\t}\n\treturn null;\n}\n\nfunction _injectRequiredDefinition(control, valDefinitions, requiredDefinitionsIds, keyName, controlValId, intl) {\n\t// inject required validation definition\n\tconst label = (control.label && control.label.text) ? control.label.text : keyName;\n\tconst errorMsg = formatMessage(intl,\n\t\tMESSAGE_KEYS.REQUIRED_ERROR, { label: label });\n\tconst definitionId = \"required_\" + keyName + \"_\" + controlValId;\n\tconst injectedDefinition = {\n\t\tparams: keyName,\n\t\tdefinition: {\n\t\t\tvalidation: {\n\t\t\t\tid: definitionId,\n\t\t\t\tfail_message: {\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\tmessage: {\n\t\t\t\t\t\tdefault: errorMsg\n\t\t\t\t\t},\n\t\t\t\t\tfocus_parameter_ref: keyName\n\t\t\t\t},\n\t\t\t\tevaluate: {\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tparameter_ref: keyName,\n\t\t\t\t\t\top: \"isNotEmpty\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\t// add the new definition to the set of validation definitions for this control.\n\tif (valDefinitions.controls[keyName]) {\n\t\tvalDefinitions.controls[keyName].push(injectedDefinition);\n\t} else {\n\t\tvalDefinitions.controls[keyName] = [injectedDefinition];\n\t}\n\trequiredDefinitionsIds.push(definitionId); // Save to list of required definition IDs\n}\n\nfunction _injectDateTimeDefinition(control, valDefinitions, keyName, controlValId, intl) {\n\t// inject date format validation definition\n\tconst format = (control.dateFormat) ? control.dateFormat : control.timeFormat;\n\tconst defaultFormat = (control.dateFormat) ? DEFAULT_DATE_FORMAT : DEFAULT_TIME_FORMAT;\n\tconst dtFormat = (format) ? format : defaultFormat;\n\tconst errorMsg = formatMessage(intl,\n\t\tMESSAGE_KEYS.DATETIME_FORMAT_ERROR, { role: control.role, format: dtFormat });\n\tconst injectedDefinition = {\n\t\tparams: keyName,\n\t\tdefinition: {\n\t\t\tvalidation: {\n\t\t\t\tid: \"Format_\" + keyName + \"_\" + controlValId,\n\t\t\t\tfail_message: {\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\tmessage: {\n\t\t\t\t\t\tdefault: errorMsg\n\t\t\t\t\t},\n\t\t\t\t\tfocus_parameter_ref: keyName\n\t\t\t\t},\n\t\t\t\tevaluate: {\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tparameter_ref: keyName,\n\t\t\t\t\t\top: \"isDateTime\",\n\t\t\t\t\t\tvalue: control.role\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// add the new definition to the set of validation definitions for this control.\n\tif (valDefinitions.controls[keyName]) {\n\t\tvalDefinitions.controls[keyName].push(injectedDefinition);\n\t} else {\n\t\tvalDefinitions.controls[keyName] = [injectedDefinition];\n\t}\n}\n\nfunction _injectInvalidFieldDefinition(control, valDefinitions, keyName, controlValId, intl) {\n\t// inject invalid field validation definition\n\tconst label = (control.label && control.label.text) ? control.label.text : keyName;\n\tconst errorMsg = formatMessage(intl,\n\t\tMESSAGE_KEYS.INVALID_FIELD_ERROR, { label: label });\n\t// Note: Please don't update \"validField_\" in validation id. It is used as identifier in another condition.\n\tconst injectedDefinition = {\n\t\tparams: keyName,\n\t\tdefinition: {\n\t\t\tvalidation: {\n\t\t\t\tid: \"validField_\" + keyName + \"_\" + controlValId,\n\t\t\t\tfail_message: {\n\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\tmessage: {\n\t\t\t\t\t\tdefault: errorMsg\n\t\t\t\t\t},\n\t\t\t\t\tfocus_parameter_ref: keyName\n\t\t\t\t},\n\t\t\t\tevaluate: {\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tparameter_ref: keyName,\n\t\t\t\t\t\top: \"colDoesExists\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\talwaysShow: true\n\t};\n\t\t// add the new definition to the set of validation definitions for this control.\n\tif (valDefinitions.controls[keyName]) {\n\t\tvalDefinitions.controls[keyName].push(injectedDefinition);\n\t} else {\n\t\tvalDefinitions.controls[keyName] = [injectedDefinition];\n\t}\n}\n\n// key should be 'type', 'measure', or 'modeling_role'. Return the matching metadata given the paramInfo\nfunction getMetadataFieldMatch(paramInfo, metadata, key) {\n\tif (paramInfo.value) {\n\t\tif (typeof paramInfo.value === \"string\") {\n\t\t\tfor (let i = 0; i < metadata.length; i++) {\n\t\t\t\tvar field = metadata[i];\n\t\t\t\tif (field.name === paramInfo.value) {\n\t\t\t\t\tif (key === \"type\") {\n\t\t\t\t\t\treturn field.type;\n\t\t\t\t\t}\n\t\t\t\t\treturn field.metadata[key];\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof paramInfo.value === \"object\") {\n\t\t\tfor (var j = 0; j < metadata.length; j++) {\n\t\t\t\tvar field2 = metadata[j];\n\t\t\t\tif (field2.origName === paramInfo.value.field_name && field2.schema === paramInfo.value.link_ref) {\n\t\t\t\t\tif (key === \"type\") {\n\t\t\t\t\t\treturn field2.type;\n\t\t\t\t\t}\n\t\t\t\t\treturn field2.metadata[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\nexport {\n\tvalidatePropertiesValues,\n\tvalidateConditions,\n\tvalidatePropertiesConditions,\n\tvalidateInput,\n\tfilterConditions,\n\tallowConditions,\n\tsetConditionalDefaultValue,\n\tupdateState,\n\tgetParamRefPropertyId,\n\tinjectDefaultValidations,\n\tupdatePanelChildrenStatesForPanelIds,\n\tgetMetadataFieldMatch\n};\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"./../../../icons/icon.jsx\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport { v4 as uuid4 } from \"uuid\";\n\nexport default class ValidationMessage extends React.Component {\n\n\trender() {\n\t\t// some controls use carbon's error/warnings instead of this component\n\t\tif (!this.props.messageInfo || (this.props.tableOnly && !this.props.inTable)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst msgText = this.props.inTable ? null : <span>{this.props.messageInfo.text}</span>;\n\t\tconst icon = (<div className=\"icon\">\n\t\t\t{<Icon type={this.props.messageInfo.type} />}\n\t\t</div>);\n\t\tconst msgIcon = this.props.inTable\n\t\t\t? (<div className=\"properties-tooltips-container table-cell-msg-icon\">\n\t\t\t\t<Tooltip\n\t\t\t\t\tid={uuid4() + \"-table-cell-msg-icon\"}\n\t\t\t\t\ttip={this.props.messageInfo.text}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t>\n\t\t\t\t\t{icon}\n\t\t\t\t</Tooltip>\n\t\t\t</div>)\n\t\t\t: null;\n\t\tconst className = classNames(\"properties-validation-message\", this.props.messageInfo.type,\n\t\t\t{ \"hide\": this.props.state === STATES.HIDDEN || this.props.state === STATES.DISABLED, \"inTable\": this.props.inTable });\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t{msgIcon}\n\t\t\t\t{msgText}\n\t\t\t</div>);\n\t}\n}\n\nValidationMessage.propTypes = {\n\tmessageInfo: PropTypes.shape({\n\t\ttext: PropTypes.string,\n\t\ttype: PropTypes.string\n\t}),\n\tstate: PropTypes.string,\n\tinTable: PropTypes.bool,\n\ttableOnly: PropTypes.bool\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ValidationMessage from \"./validation-message.jsx\";\nexport default ValidationMessage;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { FormattedDate } from \"react-intl\";\nimport { isValid } from \"date-fns\";\nimport { isEqual, intersection } from \"lodash\";\nimport classNames from \"classnames\";\n\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport TruncatedContentTooltip from \"./../../components/truncated-content-tooltip\";\nimport { STATES, DATA_TYPE } from \"./../../constants/constants\";\nimport Icon from \"./../../../icons/icon\";\n\nimport { ControlType } from \"./../../constants/form-constants\";\nimport { stringifyFieldValue } from \"./../../util/property-utils\";\n\nclass ReadonlyControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput) {\n\t\t// update property value if value isn't in current enum value.  Don't filter custom control values.\n\t\tif (Array.isArray(this.props.value) && Array.isArray(this.props.controlOpts.values) && this.props.control.controlType !== ControlType.CUSTOM) {\n\t\t\tconst newValue = intersection(this.props.value, this.props.controlOpts.values);\n\t\t\tif (!isEqual(this.props.value, newValue)) {\n\t\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue, skipValidateInput);\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tlet controlValue = this.props.value;\n\n\t\t// Use label for controlValue if possible\n\t\tif (this.props.control.values && this.props.control.valueLabels) {\n\t\t\tconst controlIndex = this.props.control.values.indexOf(this.props.value);\n\t\t\tif (controlIndex > -1 && this.props.control.valueLabels[controlIndex]) {\n\t\t\t\tcontrolValue = this.props.control.valueLabels[controlIndex];\n\t\t\t}\n\t\t}\n\t\tif (typeof controlValue === \"undefined\" || controlValue === null) {\n\t\t\tcontrolValue = \"\";\n\t\t} else if (typeof controlValue === \"object\" && controlValue.link_ref) {\n\t\t\tcontrolValue = stringifyFieldValue(controlValue, this.props.control);\n\t\t} else if (Array.isArray(controlValue)) {\n\t\t\t// this is needed to comma separate an array of readonly strings.\n\t\t\tcontrolValue = controlValue.join(\", \");\n\t\t} else if (typeof controlValue === \"boolean\") {\n\t\t\tcontrolValue = controlValue.toString();\n\t\t}\n\n\t\tcontrolValue = ControlUtils.truncateDisplayValue(controlValue);\n\n\t\tif (this.props.control.controlType === ControlType.CUSTOM) {\n\t\t\tcontrolValue = this.props.controller.getCustomControl(this.props.propertyId, this.props.control, { table: true, editStyle: \"summary\" });\n\t\t} else if (this.props.control.controlType === ControlType.TIMESTAMP ||\n\t\t\t(this.props.control.valueDef && this.props.control.valueDef.propType === DATA_TYPE.TIMESTAMP)) {\n\t\t\tconst date = new Date(controlValue);\n\t\t\tif (isValid(date)) {\n\t\t\t\tif (this.props.tableControl) {\n\t\t\t\t\tcontrolValue = <FormattedDate value={date} day=\"numeric\" month=\"long\" year=\"numeric\" hour=\"numeric\" minute=\"numeric\" />;\n\t\t\t\t} else {\n\t\t\t\t\tcontrolValue = <FormattedDate value={date} day=\"numeric\" month=\"long\" year=\"numeric\" hour=\"numeric\" minute=\"numeric\" weekday=\"long\" />;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontrolValue = \"\"; // invalid timestamp\n\t\t\t}\n\t\t}\n\t\tconst readOnly = <span className=\"properties-field-type\" disabled={this.props.state === STATES.DISABLED}>{controlValue}</span>;\n\t\tlet display = readOnly;\n\t\tif (this.props.tableControl) {\n\t\t\tlet disabled = true;\n\t\t\tif (controlValue) {\n\t\t\t\tdisabled = false;\n\t\t\t}\n\t\t\tlet content = readOnly;\n\t\t\tif (this.props.control.icon) {\n\t\t\t\tcontent = (\n\t\t\t\t\t<div className={\"properties-field-readonly\"}>\n\t\t\t\t\t\t<div className={\"properties-field-type-icon\"}>\n\t\t\t\t\t\t\t<Icon type={this.props.control.icon} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{readOnly}\n\t\t\t\t\t</div>);\n\t\t\t}\n\t\t\tdisplay = (\n\t\t\t\t<TruncatedContentTooltip\n\t\t\t\t\tcontent={content}\n\t\t\t\t\ttooltipText={controlValue}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\"properties-readonly\", { \"hide\": this.props.state === STATES.HIDDEN })}\n\t\t\t\tdata-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t>\n\t\t\t\t{this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\t{display}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReadonlyControl.propTypes = {\n\ticon: PropTypes.string,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.any, // pass in by redux\n\tcontrolOpts: PropTypes.oneOfType([\n\t\tPropTypes.object,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst props = {\n\t\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\t\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\t\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n\t};\n\tprops.controlOpts = ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control);\n\treturn props;\n};\n\nexport default connect(mapStateToProps, null)(ReadonlyControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { TextInput } from \"carbon-components-react\";\nimport ReadonlyControl from \"./../readonly\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { CONDITION_MESSAGE_TYPE, MESSAGE_KEYS, TRUNCATE_LIMIT } from \"./../../constants/constants.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport classNames from \"classnames\";\nimport { v4 as uuid4 } from \"uuid\";\n\nconst arrayValueDelimiter = \", \";\n\nclass TextfieldControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.charLimit = ControlUtils.getCharLimit(props.control, props.controller.getMaxLengthForSingleLineControls());\n\t\tthis.id = ControlUtils.getControlId(props.propertyId);\n\t\tthis.isList = false;\n\t\tif (this.props.control.valueDef) {\n\t\t\tif (this.props.control.valueDef.isList) {\n\t\t\t\tthis.isList = true;\n\t\t\t}\n\t\t\tthis.defaultValue = this.props.control.valueDef.defaultValue;\n\t\t}\n\t}\n\n\thandleChange(evt) {\n\t\tlet value = evt.target.value;\n\t\tif (this.charLimit !== -1 && value) {\n\t\t\tvalue = value.substring(0, this.charLimit);\n\t\t}\n\t\tif (this.isList) {\n\t\t\tvalue = ControlUtils.splitNewlines(value, arrayValueDelimiter);\n\t\t}\n\t\tif (value.length === 0 && (typeof this.defaultValue === \"undefined\" || this.defaultValue === null)) {\n\t\t\tvalue = null;\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\trender() {\n\t\tlet value = this.props.value ? this.props.value : \"\";\n\t\tlet truncated = false;\n\t\tif (this.isList) {\n\t\t\tconst joined = ControlUtils.joinNewlines(value, arrayValueDelimiter);\n\t\t\tvalue = joined.value;\n\t\t\ttruncated = joined.truncated;\n\t\t} else {\n\t\t\tvalue = ControlUtils.truncateDisplayValue(value);\n\t\t\ttruncated = value.length !== 0 && value.length !== this.props.value.length;\n\t\t}\n\t\tconst className = classNames(\"properties-textfield\", \"properties-input-control\", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null);\n\n\t\tlet textInput = null;\n\t\tif (truncated) {\n\t\t\tconst errorMessage = {\n\t\t\t\ttext: formatMessage(this.reactIntl, MESSAGE_KEYS.TRUNCATE_LONG_STRING_ERROR, { truncate_limit: TRUNCATE_LIMIT }),\n\t\t\t\ttype: CONDITION_MESSAGE_TYPE.ERROR,\n\t\t\t\tvalidation_id: this.props.control.name\n\t\t\t};\n\t\t\ttextInput = (<div className=\"properties-textinput-readonly\">\n\t\t\t\t{this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\t<ReadonlyControl\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\ttableControl={this.props.tableControl}\n\t\t\t\t/>\n\t\t\t\t// TODO this could conflict with the below ValidationMessage.\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={\"\"} messageInfo={errorMessage} />\n\t\t\t</div>);\n\t\t} else {\n\t\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\t\ttextInput = (<TextInput\n\t\t\t\t{...validationProps}\n\t\t\t\tautoComplete={this.props.tableControl === true ? \"off\" : \"on\"}\n\t\t\t\tid={this.id}\n\t\t\t\tdisabled={ this.props.state === STATES.DISABLED}\n\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\tvalue={value}\n\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t/>);\n\t\t}\n\n\t\tlet display = textInput;\n\t\tif (this.props.tableControl) {\n\t\t\tconst tooltipId = uuid4() + \"-tooltip-column-\" + this.props.propertyId.toString();\n\t\t\tlet disabled = true;\n\t\t\tif (value && this.props.state !== STATES.DISABLED) {\n\t\t\t\tdisabled = false;\n\t\t\t}\n\t\t\tconst tooltip = (\n\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t{String(value)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdisplay = (<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tdirection=\"bottom\"\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tdisable={disabled}\n\t\t\t>\n\t\t\t\t{textInput}\n\t\t\t</Tooltip>);\n\t\t}\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t{display}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTextfieldControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.element\n\t]), // list control passes string\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(TextfieldControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport Isvg from \"react-inlinesvg\";\n\nclass ToggletextControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.valuesMap = {};\n\t\tthis.iconsMap = {};\n\t\tfor (let i = 0; i < props.control.values.length; ++i) {\n\t\t\tthis.valuesMap[props.control.values[i]] = props.control.valueLabels[i];\n\t\t\tif (typeof props.control.valueIcons !== \"undefined\") {\n\t\t\t\tthis.iconsMap[props.control.values[i]] = props.control.valueIcons[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tonClick(evt) {\n\t\tconst renderValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst newValue = (renderValue === this.props.control.values[0]) ? this.props.control.values[1] : this.props.control.values[0];\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue);\n\n\t}\n\n\trenderIcon() {\n\t\tlet icon = null;\n\t\tif (typeof this.iconsMap[this.props.value] !== \"undefined\") {\n\t\t\tconst imgSource = this.iconsMap[this.props.value];\n\t\t\tif (typeof imgSource === \"string\" && imgSource.slice(imgSource.length - 4) === \".svg\") {\n\t\t\t\t// svg image\n\t\t\t\ticon = <Isvg className=\"bx--btn__icon\" src={imgSource} />;\n\t\t\t} else {\n\t\t\t\ticon = (<img\n\t\t\t\t\tclassName=\"bx--btn__icon\"\n\t\t\t\t\tsrc={imgSource}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>);\n\t\t\t}\n\t\t}\n\t\treturn icon;\n\t}\n\n\trender() {\n\t\tlet rendered = this.valuesMap[this.props.value];\n\t\tif (typeof rendered === \"undefined\") {\n\t\t\trendered = this.props.value;\n\t\t}\n\t\tlet button = null;\n\t\tconst buttonType = this.props.tableControl ? \"ghost\" : \"tertiary\";\n\t\tif (typeof rendered !== \"undefined\") {\n\t\t\tbutton = (\n\t\t\t\t<Button\n\t\t\t\t\tkind={buttonType}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonClick={this.onClick.bind(this)}\n\t\t\t\t\trenderIcon={this.renderIcon.bind(this)}\n\t\t\t\t\ticonDescription={formatMessage(this.reactIntl, MESSAGE_KEYS.TOGGLETEXT_ICON_DESCRIPTION, { toggletext_label: this.props.value })}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t>\n\t\t\t\t\t{rendered}\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\n\t\tconst className = classNames(\"properties-toggletext\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\taria-label={(this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\"}\n\t\t\t\tclassName={className}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\tdata-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t>\n\t\t\t\t{this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\t{button}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nToggletextControl.propTypes = {\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrol: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ToggletextControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { TextArea } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { CONDITION_MESSAGE_TYPE, MESSAGE_KEYS, TRUNCATE_LIMIT } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { v4 as uuid4 } from \"uuid\";\n\nconst newLine = \"\\n\";\n\nclass TextareaControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.charLimit = ControlUtils.getCharLimit(props.control, props.controller.getMaxLengthForMultiLineControls());\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t}\n\n\thandleChange(evt) {\n\t\tlet value = evt.target.value;\n\t\tif (this.charLimit !== -1 && value) {\n\t\t\tvalue = value.substring(0, this.charLimit);\n\t\t}\n\t\tif (this.props.control.valueDef && this.props.control.valueDef.isList) { // array\n\t\t\tvalue = ControlUtils.splitNewlines(value, newLine);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\trender() {\n\t\tlet value = this.props.value ? this.props.value : \"\";\n\t\tconst joined = ControlUtils.joinNewlines(value, newLine);\n\t\tvalue = joined.value;\n\t\tconst truncated = joined.truncated;\n\n\t\tlet textArea = null;\n\t\tlet validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\tlet showValidationMessage = false;\n\t\t// carbon textarea doesn't support warn yet\n\t\tif (validationProps.warn) {\n\t\t\tshowValidationMessage = true;\n\t\t\tvalidationProps = {};\n\t\t}\n\t\tif (truncated) { // A value is too long to show for editing, display as readonly\n\t\t\tconst errorMessage = {\n\t\t\t\ttext: formatMessage(this.reactIntl, MESSAGE_KEYS.TRUNCATE_LONG_STRING_ERROR, { truncate_limit: TRUNCATE_LIMIT }),\n\t\t\t\ttype: CONDITION_MESSAGE_TYPE.ERROR,\n\t\t\t\tvalidation_id: this.props.control.name\n\t\t\t};\n\t\t\tvalidationProps = ControlUtils.getValidationProps(errorMessage, this.props.tableControl);\n\t\t\ttextArea = (<div>\n\t\t\t\t<TextArea\n\t\t\t\t\t{...validationProps}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tdisabled\n\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t/>\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly={!showValidationMessage} state={\"\"} messageInfo={errorMessage} />\n\t\t\t</div>);\n\t\t} else {\n\t\t\ttextArea = (<TextArea\n\t\t\t\t{...validationProps}\n\t\t\t\tid={this.id}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\tvalue={value}\n\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t/>);\n\t\t}\n\n\t\tlet display = textArea;\n\t\tif (this.props.tableControl) {\n\t\t\tconst tooltipId = uuid4() + \"-tooltip-column-\" + this.props.propertyId.toString();\n\t\t\tlet disabled = true;\n\t\t\tif (value && this.props.state !== STATES.DISABLED) {\n\t\t\t\tdisabled = false;\n\t\t\t}\n\t\t\tconst tooltip = (\n\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t{String(value)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdisplay = (<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tdirection=\"bottom\"\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tdisable={disabled}\n\t\t\t>\n\t\t\t\t{textArea}\n\t\t\t</Tooltip>);\n\t\t}\n\t\tconst className = classNames(\"properties-textarea\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t{display}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly={!showValidationMessage} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nTextareaControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(TextareaControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { NumberInput, Button } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport { ControlType } from \"./../../constants/form-constants\";\nimport { Shuffle16 } from \"@carbon/icons-react\";\nimport { has } from \"lodash\";\n\nclass NumberfieldControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.onDirection = this.onDirection.bind(this);\n\t\tthis.generateNumber = this.generateNumber.bind(this);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t}\n\n\tonDirection(direction) {\n\t\tlet originalValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tif (typeof originalValue === \"undefined\" || originalValue === null) {\n\t\t\toriginalValue = 0;\n\t\t}\n\t\tconst decimalsInOriginalValue = (originalValue.toString()).split(\".\")[1];\n\t\tthis.props.control.increment = this.props.control.increment ? this.props.control.increment : 1;\n\t\tconst decimalsInIncrement = (this.props.control.increment.toString()).split(\".\")[1];\n\t\tconst numValue = direction === \"up\" ? Number(originalValue) + this.props.control.increment : Number(originalValue) - this.props.control.increment;\n\t\tif (decimalsInIncrement) {\n\t\t\tlet decimalPrecision = decimalsInIncrement.length;\n\t\t\tif (decimalsInOriginalValue) {\n\t\t\t\tdecimalPrecision = decimalsInOriginalValue.length >= decimalsInIncrement.length ? decimalsInOriginalValue.length : decimalsInIncrement.length;\n\t\t\t}\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, Number(numValue.toFixed(decimalPrecision)));\n\t\t} else {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, numValue);\n\t\t}\n\t}\n\n\thandleChange(evt, direction) {\n\t\tif (typeof direction === \"string\") {\n\t\t\tthis.onDirection(direction);\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tevt.target.validity && evt.target.validity.badInput ||\n\t\t\t(!isFinite(evt.target.value))\n\t\t) {\n\t\t\t// Note - When user enters an invalid number, evt.target.value is set to \"\".\n\t\t\t// It is difficult to differentiate between empty value and invalid input because both return \"\".\n\t\t\t// It's not possible to add a seaparte condition for invalid input because we never get the actual invalid number entered by the user.\n\t\t\t// So, setting error message for invalid input here instead of using conditions.\n\t\t\tif (this.props.controller.getErrorMessage(this.props.propertyId) === null) {\n\t\t\t\tconst errorMessage = {\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\ttext: formatMessage(this.reactIntl, MESSAGE_KEYS.INVALID_NUMBER_ERROR),\n\t\t\t\t\tpropertyId: this.props.propertyId,\n\t\t\t\t\tvalidation_id: \"invalid_number\"\n\t\t\t\t};\n\t\t\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, errorMessage);\n\t\t\t}\n\t\t\t// Return without updating property value\n\t\t\treturn;\n\t\t}\n\t\t// Number is valid, clear invalid number error if it exists\n\t\tconst invalidNumberError = this.props.controller.getErrorMessage(this.props.propertyId) !== null &&\n\t\tthis.props.controller.getErrorMessage(this.props.propertyId).validation_id === \"invalid_number\";\n\t\tif (invalidNumberError) {\n\t\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, null);\n\t\t}\n\n\t\tconst actualValue = evt.target.value;\n\t\tif (typeof actualValue === \"undefined\" || actualValue === null || actualValue === \"\") {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, null);\n\t\t} else {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, Number(actualValue));\n\t\t}\n\t\t// TODO need to check for integer in validations\n\t}\n\n\tgenerateNumber() {\n\t\tconst generator = this.props.control.label.numberGenerator;\n\t\tconst min = generator.range && generator.range.min ? generator.range.min : 10000;\n\t\tconst max = generator.range && generator.range.max ? generator.range.max : 99999;\n\t\tconst newValue = Math.floor(Math.random() * (max - min + 1) + min);\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue);\n\t}\n\n\trender() {\n\t\tlet controlValue = \"\"; // Default to empty string to avoid '0' appearing when value is 'null'\n\t\tif (this.props.value !== null && typeof this.props.value !== \"undefined\") {\n\t\t\tcontrolValue = this.props.value;\n\t\t}\n\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\t\tconst hidden = this.props.state === STATES.HIDDEN;\n\t\tlet numberGenerator;\n\t\tif (has(this.props.control, \"label.numberGenerator\")) {\n\t\t\tnumberGenerator = (<Button\n\t\t\t\tclassName={classNames(\"properties-number-generator\", { \"hide\": hidden })}\n\t\t\t\tonClick={this.generateNumber}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tkind=\"tertiary\"\n\t\t\t\trenderIcon={Shuffle16}\n\t\t\t\ttooltipPosition=\"bottom\"\n\t\t\t\ttooltipAlignment=\"end\"\n\t\t\t\ticonDescription={this.props.control.label.numberGenerator.text}\n\t\t\t\thasIconOnly\n\t\t\t/>);\n\t\t}\n\t\tconst className = classNames(\n\t\t\t\"properties-numberfield\",\n\t\t\t{ \"numberfield-with-number-generator\": has(this.props.control, \"label.numberGenerator\") ? this.props.control.label.numberGenerator : null },\n\t\t\t{ \"hide\": hidden },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null\n\t\t);\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t<NumberInput\n\t\t\t\t\t{...validationProps}\n\t\t\t\t\tref= { (ref) => (this.numberInput = ref)}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tstep={this.props.control.increment}\n\t\t\t\t\tvalue={controlValue}\n\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\tlabel={this.props.controlItem}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\tallowEmpty\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t\thideSteppers={this.props.tableControl || (this.props.control.controlType === ControlType.NUMBERFIELD)}\n\t\t\t\t/>\n\t\t\t\t{numberGenerator}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nNumberfieldControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.element\n\t]), // list control passes string\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.number, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(NumberfieldControl);\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Base class for table controls\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Toolbar from \"../../../toolbar/toolbar\";\n\nimport { STATES } from \"./../../constants/constants\";\n\nclass TableButtons extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getCustomButtonEnabled = this.getCustomButtonEnabled.bind(this);\n\t\tthis.customButtonIconCallback = this.customButtonIconCallback.bind(this);\n\t\tthis.customButtonOnClick = this.customButtonOnClick.bind(this);\n\t\tthis.convertToolbarConfig = this.convertToolbarConfig.bind(this);\n\t}\n\n\tgetCustomButtonEnabled(tableState, buttonConfig) {\n\t\tconst tableDisabled = typeof tableState !== \"undefined\" && tableState === STATES.DISABLED;\n\t\tconst buttonEnabled = this.props.customButtonsState && typeof this.props.customButtonsState[buttonConfig.id] !== \"undefined\"\n\t\t\t? this.props.customButtonsState[buttonConfig.id] // set to true in redux if enabled, override the default from uihints\n\t\t\t: buttonConfig.enabled || false; // fallback to default value\n\t\treturn !tableDisabled && buttonEnabled;\n\t}\n\n\tcustomButtonIconCallback(buttonId, carbonIcon) {\n\t\tconst buttonIconHandler = this.props.controller.getHandlers().buttonIconHandler;\n\t\tlet icon;\n\t\tif (buttonIconHandler) {\n\t\t\tbuttonIconHandler({\n\t\t\t\ttype: \"customButtonIcon\",\n\t\t\t\tpropertyId: this.props.propertyId,\n\t\t\t\tbuttonId: buttonId,\n\t\t\t\tcarbonIcon: carbonIcon\n\t\t\t}, (appIcon) => {\n\t\t\t\ticon = appIcon;\n\t\t\t});\n\t\t}\n\t\treturn icon;\n\t}\n\n\tcustomButtonOnClick(buttonId) {\n\t\tconst buttonHandler = this.props.controller.getHandlers().buttonHandler;\n\t\tif (buttonHandler) {\n\t\t\tbuttonHandler({\n\t\t\t\ttype: \"custom_button\",\n\t\t\t\tpropertyId: this.props.propertyId,\n\t\t\t\tbuttonId: buttonId\n\t\t\t});\n\t\t}\n\t}\n\n\tconvertToolbarConfig(tableState, customButtons = []) {\n\t\tconst toolbarConfig = [];\n\t\tcustomButtons.forEach((buttonConfig) => {\n\t\t\tconst buttonEnabled = this.getCustomButtonEnabled(tableState, buttonConfig);\n\t\t\tconst buttonDef = {\n\t\t\t\taction: buttonConfig.id,\n\t\t\t\tenable: buttonEnabled\n\t\t\t};\n\n\t\t\tif (buttonConfig.icon) {\n\t\t\t\tbuttonDef.iconEnabled = buttonConfig.icon;\n\t\t\t} else if (buttonConfig.carbonIcon) {\n\t\t\t\tbuttonDef.iconEnabled = this.customButtonIconCallback(buttonConfig.id, buttonConfig.carbonIcon);\n\t\t\t}\n\n\t\t\tif (buttonConfig.label) {\n\t\t\t\tbuttonDef.label = buttonConfig.label.text;\n\t\t\t\tbuttonDef.incLabelWithIcon = \"before\";\n\t\t\t\tbuttonDef.kind = \"ghost\";\n\t\t\t}\n\n\t\t\tif (buttonConfig.description) {\n\t\t\t\tbuttonDef.tooltip = buttonConfig.description.text;\n\t\t\t}\n\n\t\t\tif (buttonConfig.divider && buttonConfig.divider === \"before\") {\n\t\t\t\ttoolbarConfig.push({ divider: true });\n\t\t\t}\n\t\t\ttoolbarConfig.push(buttonDef);\n\t\t\tif (buttonConfig.divider && buttonConfig.divider === \"after\") {\n\t\t\t\ttoolbarConfig.push({ divider: true });\n\t\t\t}\n\t\t});\n\t\treturn toolbarConfig;\n\t}\n\n\trender() {\n\t\tconst toolbarConfig = {\n\t\t\tleftBar: this.convertToolbarConfig(this.props.tableState, this.props.customButtons)\n\t\t};\n\t\treturn (<div className=\"properties-custom-table-buttons\">\n\t\t\t<Toolbar\n\t\t\t\tconfig={toolbarConfig}\n\t\t\t\tinstanceId={0}\n\t\t\t\tsize=\"sm\"\n\t\t\t\ttoolbarActionHandler={this.customButtonOnClick}\n\t\t\t/>\n\t\t</div>);\n\t}\n}\n\nTableButtons.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcustomButtons: PropTypes.array.isRequired,\n\ttableState: PropTypes.string,\n\tcustomButtonsState: PropTypes.object // set in by redux\n};\n\nexport default TableButtons;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"carbon-components-react\";\nimport { Settings16 } from \"@carbon/icons-react\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { cloneDeep } from \"lodash\";\n\nimport { MESSAGE_KEYS } from \"./../../constants/constants\";\n\n\nimport SubPanelInvoker from \"./invoker.jsx\";\n\nexport default class SubPanelCell extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.showSubPanel = this.showSubPanel.bind(this);\n\t\tthis.onSubPanelHidden = this.onSubPanelHidden.bind(this);\n\t}\n\n\tonSubPanelHidden(applyChanges) {\n\t\t// on cancel reset back to original value\n\t\tif (!applyChanges) {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, this.initialControlValue);\n\t\t\tthis.props.controller.setErrorMessages(this.initialMessages);\n\t\t\tthis.props.controller.setControlStates(this.initialStates);\n\t\t}\n\t}\n\n\tshowSubPanel() {\n\t\t// sets the current value for parameter.  Used on cancel\n\t\tthis.initialControlValue = cloneDeep(this.props.controller.getPropertyValue(this.props.propertyId));\n\t\tthis.initialMessages = this.props.controller.getAllErrorMessages();\n\t\tthis.initialStates = this.props.controller.getControlStates();\n\t\tthis.subPanelInvoker.showSubDialog(this.props.title, this.props.panel, this.onSubPanelHidden);\n\t}\n\n\trender() {\n\t\tconst tooltipId = \"tooltip-subpanel-cell\";\n\t\tconst disabled = typeof this.props.disabled !== \"undefined\" ? this.props.disabled : false;\n\t\tconst subPanelToolTip = formatMessage(this.props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.SUBPANEL_BUTTON_TOOLTIP);\n\t\tconst applyLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.APPLYBUTTON_LABEL);\n\t\tconst rejectLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.REJECTBUTTON_LABEL);\n\t\treturn (\n\n\t\t\t<SubPanelInvoker ref={ (ref) => (this.subPanelInvoker = ref) }\n\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t>\n\t\t\t\t<Tooltip\n\t\t\t\t\tid={uuid4() + \"-\" + tooltipId}\n\t\t\t\t\ttip={subPanelToolTip}\n\t\t\t\t\tdirection=\"left\"\n\t\t\t\t\tclassName=\"properties-tooltips icon-tooltip\"\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"properties-subpanel-button\"\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\trenderIcon={Settings16}\n\t\t\t\t\t\tonClick={this.showSubPanel}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\ticonDescription={subPanelToolTip}\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t</SubPanelInvoker>\n\t\t);\n\t}\n}\n\nSubPanelCell.propTypes = {\n\tlabel: PropTypes.string,\n\ttitle: PropTypes.string,\n\tpanel: PropTypes.object.isRequired,\n\tdisabled: PropTypes.bool,\n\tcontroller: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object,\n\trightFlyout: PropTypes.bool\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Base class for table controls\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Checkbox } from \"carbon-components-react\";\nimport FlexibleTable from \"./../components/flexible-table\";\nimport TableButtons from \"./../components/table-buttons\";\nimport SubPanelCell from \"./../panels/sub-panel/cell.jsx\";\nimport ReadonlyControl from \"./readonly\";\nimport * as PropertyUtils from \"./../util/property-utils\";\nimport classNames from \"classnames\";\nimport { Add16, TrashCan16, Edit16 } from \"@carbon/icons-react\";\nimport { ControlType, EditStyle } from \"./../constants/form-constants\";\n\nimport { MESSAGE_KEYS, STATES, TABLE_SUBPANEL_BUTTON_WIDTH, SORT_DIRECTION, ROW_SELECTION, UPDATE_TYPE } from \"./../constants/constants\";\n\nimport { isEqual, findIndex, sortBy, cloneDeep } from \"lodash\";\n\n/* eslint max-depth: [\"error\", 5] */\n\nexport default class AbstractTable extends React.Component {\n\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tconst enableRemoveIcon = (nextProps.selectedRows.length !== 0);\n\t\tif (prevState.enableRemoveIcon !== enableRemoveIcon) {\n\t\t\treturn ({ enableRemoveIcon: enableRemoveIcon });\n\t\t}\n\t\treturn ({});\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfilterText: null,\n\t\t\tenableRemoveIcon: false\n\t\t};\n\t\tthis.onPanelContainer = [];\n\t\t// used to determine if column controls can be inline or if field picker is used\n\t\tthis.allowColumnControls = false;\n\n\t\tthis.isReadonlyTable = this.isReadonlyTable.bind(this);\n\t\tthis.indexOfColumn = this.indexOfColumn.bind(this);\n\t\tthis.setCurrentControlValueSelected = this.setCurrentControlValueSelected.bind(this);\n\t\tthis.setReadOnlyColumnValue = this.setReadOnlyColumnValue.bind(this);\n\t\tthis.removeSelected = this.removeSelected.bind(this);\n\t\tthis.updateRowSelections = this.updateRowSelections.bind(this);\n\t\tthis.handleRowClick = this.handleRowClick.bind(this);\n\t\tthis.createTable = this.createTable.bind(this);\n\t\tthis.onFilter = this.onFilter.bind(this);\n\t\tthis.onSort = this.onSort.bind(this);\n\t\tthis.setScrollToRow = this.setScrollToRow.bind(this);\n\t\tthis.includeInFilter = this.includeInFilter.bind(this);\n\t\tthis.makeAddRemoveButtonPanel = this.makeAddRemoveButtonPanel.bind(this);\n\t\tthis.makeEditButtonPanel = this.makeEditButtonPanel.bind(this);\n\t\tthis.makeCustomButtonsPanel = this.makeCustomButtonsPanel.bind(this);\n\t\tthis.buildChildItem = this.buildChildItem.bind(this);\n\t\tthis.makeCells = this.makeCells.bind(this);\n\t\tthis.checkedAll = this.checkedAll.bind(this);\n\t\tthis.isLightTheme = this.isLightTheme.bind(this);\n\n\t\tif (props.selectedRows && props.selectedRows.length > 0) {\n\t\t\tthis.scrollToRow = props.selectedRows[props.selectedRows.length - 1];\n\t\t}\n\n\t\tthis.selectSummaryPropertyName = \"table-multi-select-edit-property-\" + props.control.name;\n\t\tprops.controller.saveControls([{ name: this.selectSummaryPropertyName }]);\n\t\tthis.setSelectedSummaryRowValue(props.selectedRows);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.control.subControls) {\n\t\t\tconst updatedControlValues = this.setReadOnlyColumnValue();\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, updatedControlValues, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.isSelectSummaryEdit(this.props.selectedRows)) {\n\t\t\tthis.updateSelectedRowsValues();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.controller.removePropertyValue({ name: this.selectSummaryPropertyName });\n\t}\n\n\tonFilter(filterString) {\n\t\tthis.setState({ filterText: filterString });\n\t}\n\n\tonSort(spec) {\n\t\tlet controlValue = this.props.value;\n\t\tlet col = -1;\n\t\tfor (var colIndex = 0; colIndex < this.props.control.subControls.length; colIndex++) {\n\t\t\tif (this.props.control.subControls[colIndex].name === spec.column) {\n\t\t\t\tcol = colIndex;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (col > -1) {\n\t\t\tcontrolValue = sortBy(controlValue, function(row) {\n\t\t\t\treturn row[col];\n\t\t\t});\n\t\t\tif (spec.direction === SORT_DIRECTION.DESC) {\n\t\t\t\tcontrolValue.reverse();\n\t\t\t}\n\t\t\tthis.setCurrentControlValueSelected(controlValue, []);\n\t\t}\n\t}\n\n\tgetOnPanelContainer(selectedRows) {\n\t\tif (this.onPanelContainer.length === 0 || selectedRows.length === 0 ||\n\t\t\tthis.isSelectSummaryEdit(selectedRows)) {\n\t\t\treturn (<div />);\n\t\t}\n\n\t\treturn (<div className=\"properties-onpanel-container\">{this.onPanelContainer[selectedRows[0]]}</div>);\n\t}\n\n\tgetDefaultRow() {\n\t\tconst row = [];\n\t\tif (this.props.control.defaultRow) {\n\t\t\tfor (const colValue of this.props.control.defaultRow) {\n\t\t\t\tif (typeof colValue !== \"undefined\" && colValue !== null && colValue.parameterRef) {\n\t\t\t\t\trow.push(this.props.controller.getPropertyValue({ name: colValue.parameterRef }));\n\t\t\t\t} else {\n\t\t\t\t\trow.push(colValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn row;\n\t}\n\n\tsetScrollToRow(row) {\n\t\tthis.scrollToRow = row;\n\t}\n\n\tsetCurrentControlValueSelected(controlValue, inSelectedRows) {\n\t\tlet updatedControlValues = controlValue;\n\t\tif (this.props.control.subControls) {\n\t\t\tupdatedControlValues = this.setReadOnlyColumnValue(controlValue);\n\t\t}\n\n\t\t// Here we convert any compound field strings into compound values for storage\n\t\tif (Array.isArray(updatedControlValues)) {\n\t\t\tfor (let idx = 0; idx < updatedControlValues.length; idx++) {\n\t\t\t\tconst value = updatedControlValues[idx];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (let idx2 = 0; idx2 < this.props.control.subControls.length; idx2++) {\n\t\t\t\t\t\tconst subControl = this.props.control.subControls[idx2];\n\t\t\t\t\t\tif (subControl.role === \"column\" && subControl.valueDef.propType === \"structure\") {\n\t\t\t\t\t\t\tupdatedControlValues[idx][idx2] = PropertyUtils.fieldStringToValue(\n\t\t\t\t\t\t\t\tvalue[idx2], subControl, this.props.controller);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (this.props.control.role === \"column\" && this.props.control.valueDef.propType === \"structure\") {\n\t\t\t\t\tupdatedControlValues[idx] = PropertyUtils.fieldStringToValue(\n\t\t\t\t\t\tvalue, this.props.control, this.props.controller);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update the property value\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, updatedControlValues);\n\t\tconst selectedRows = Array.isArray(inSelectedRows) ? inSelectedRows : [];\n\t\tthis.updateRowSelections(selectedRows);\n\t}\n\n\tsetReadOnlyColumnValue(controlValue) {\n\t\tconst controlValues = controlValue ? controlValue : this.props.value;\n\t\tif (!Array.isArray(controlValues)) {\n\t\t\treturn controlValues;\n\t\t}\n\t\tfor (var rowIndex = 0; rowIndex < controlValues.length; rowIndex++) {\n\t\t\tfor (var colIndex = 0; colIndex < this.props.control.subControls.length; colIndex++) {\n\t\t\t\tconst columnDef = this.props.control.subControls[colIndex];\n\t\t\t\tif (columnDef.controlType === ControlType.READONLY && columnDef.generatedValues && columnDef.generatedValues.operation === \"index\") {\n\t\t\t\t\tconst index = typeof columnDef.generatedValues.startValue !== \"undefined\" ? columnDef.generatedValues.startValue + rowIndex : rowIndex + 1;\n\t\t\t\t\tcontrolValues[rowIndex][colIndex] = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn controlValues;\n\t}\n\n\t// This will set the select summary row values either from the property value or the default values.\n\tsetSelectedSummaryRowValue(selection) {\n\t\tif (this.isSelectSummaryEdit(selection)) {\n\t\t\tconst summaryPropertyId = {\n\t\t\t\tname: this.selectSummaryPropertyName\n\t\t\t};\n\t\t\tlet value = this.props.controller.getPropertyValue(summaryPropertyId);\n\t\t\tif (!value) {\n\t\t\t\tvalue = [this.getDefaultRow()];\n\t\t\t\tthis.props.controller.updatePropertyValue(summaryPropertyId, value, true);\n\t\t\t}\n\t\t\tthis.selectedSummaryRowValue = cloneDeep(value);\n\t\t}\n\t}\n\n\tisSelectSummaryEdit(selectedRows) {\n\t\treturn (this.props.control.rowSelection === ROW_SELECTION.MULTIPLE && selectedRows.length > 1);\n\t}\n\n\tisReadonlyTable() {\n\t\treturn this.props.control.controlType === ControlType.READONLYTABLE;\n\t}\n\n\tindexOfColumn(controlId) {\n\t\treturn findIndex(this.props.control.subControls, function(columnControl) {\n\t\t\treturn columnControl.name === controlId;\n\t\t});\n\t}\n\n\thandleRowClick(rowIndex, evt) {\n\t\tlet selectedRows = this.props.selectedRows;\n\t\tif (this.props.control.rowSelection === ROW_SELECTION.SINGLE) {\n\t\t\tselectedRows = [rowIndex];\n\t\t} else if (evt.metaKey === true || evt.ctrlKey === true) {\n\t\t\t// If already selected then remove otherwise add\n\t\t\tconst index = selectedRows.indexOf(rowIndex);\n\t\t\tif (index >= 0) {\n\t\t\t\tselectedRows.splice(index, 1);\n\t\t\t} else {\n\t\t\t\tselectedRows = selectedRows.concat(rowIndex);\n\t\t\t}\n\t\t} else if (evt.shiftKey === true) {\n\t\t\tconst anchor = selectedRows.length > 0 ? selectedRows[0] : rowIndex;\n\t\t\tconst start = anchor > rowIndex ? rowIndex : anchor;\n\t\t\tconst end = (anchor > rowIndex ? anchor : rowIndex) + 1;\n\t\t\tconst newSelns = [];\n\t\t\tfor (let i = start; i < end; i++) {\n\t\t\t\tnewSelns.push(i);\n\t\t\t}\n\t\t\tselectedRows = newSelns;\n\t\t}\n\t\tthis.updateRowSelections(selectedRows);\n\t}\n\n\t// this will got through all selected rows and update any column value in the row with the\n\t// column value in the selected summary row that has changed.\n\tupdateSelectedRowsValues() {\n\t\tconst summaryPropertyId = {\n\t\t\tname: this.selectSummaryPropertyName\n\t\t};\n\t\tconst tableControl = this.props.controller.getControl({ name: this.props.control.name });\n\t\tconst newSelectedSummaryRow = this.props.controller.getPropertyValue(summaryPropertyId);\n\t\tif (newSelectedSummaryRow && Array.isArray(newSelectedSummaryRow)) {\n\t\t\tnewSelectedSummaryRow[0].forEach((cellValue, colIndex) => {\n\t\t\t\tif (cellValue !== null && !isEqual(cellValue, this.selectedSummaryRowValue[0][colIndex])) {\n\t\t\t\t\t// if a column does not have a value, the default value is null and the value returned\n\t\t\t\t\t// from getPropertyValue is undefined causing unneccessary updates and an infinite loop during intialization\n\t\t\t\t\tconst testCell = (typeof cellValue === \"undefined\") ? null : cellValue;\n\t\t\t\t\tthis.props.selectedRows.forEach((rowIndex) => {\n\t\t\t\t\t\tthis.props.controller.updatePropertyValue({ name: this.props.control.name, row: rowIndex, col: colIndex }, testCell, true);\n\t\t\t\t\t});\n\t\t\t\t\tif (tableControl.subControls[colIndex].controlType === ControlType.ONEOFSELECT) {\n\t\t\t\t\t\tthis.props.controller.updatePropertyValue({ name: this.selectSummaryPropertyName, row: 0, col: colIndex }, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.selectedSummaryRowValue = cloneDeep(newSelectedSummaryRow);\n\t\t}\n\t}\n\n\tupdateRowSelections(selection) {\n\t\tthis.props.controller.updateSelectedRows(this.props.propertyId, selection);\n\t\t// react throws warning when modal because the button does not exist at this moment\n\t\tif (this.props.rightFlyout) {\n\t\t\tthis.setState({ enableRemoveIcon: (selection.length !== 0) });\n\t\t}\n\t\tthis.setSelectedSummaryRowValue(selection);\n\t}\n\n\tremoveSelected() {\n\t\tconst rows = this.props.value;\n\t\t// Sort descending to ensure lower indices don\"t get\n\t\t// changed when values are deleted\n\t\tconst selected = this.props.selectedRows.sort(function(a, b) {\n\t\t\treturn b - a;\n\t\t});\n\t\tfor (let i = 0; i < selected.length; i++) {\n\t\t\trows.splice(selected[i], 1);\n\t\t\t// this will remove any error messages associate with row.\n\t\t\tthis.props.controller.removeErrorMessageRow({ name: this.props.propertyId.name, row: selected[i] });\n\t\t}\n\n\t\tthis.setCurrentControlValueSelected(rows);\n\t}\n\n\t// selectSummaryRow is true if creating the makeSelectedEditRow header row\n\t_makeCell(columnDef, controlValue, propertyName, rowIndex, colIndex, tableState, selectSummaryRow) {\n\t\tconst childPropertyId = {\n\t\t\tname: propertyName,\n\t\t\trow: rowIndex,\n\t\t\tcol: colIndex\n\t\t};\n\n\t\tconst parentPropertyId = cloneDeep(this.props.propertyId);\n\t\tlet propertyId = childPropertyId;\n\t\t// Do not use parentPropertyId if creating the makeSelectedEditRow\n\t\tif (!selectSummaryRow && parentPropertyId.name !== childPropertyId.name) {\n\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, childPropertyId);\n\t\t}\n\n\t\tconst tableInfo = { table: true, allowColumnControls: this.allowColumnControls };\n\t\tconst ControlFactory = this.props.controller.getControlFactory();\n\t\tlet cellContent;\n\t\tconst columnDefObj = Object.assign({}, columnDef); // clone columnDef\n\t\tconst cellClassName = columnDefObj.className ? columnDefObj.className : \"\";\n\t\tif (columnDef.dmImage) {\n\t\t\tconst fields = this.props.controller.getDatasetMetadataFields();\n\t\t\tconst stringValue = PropertyUtils.stringifyFieldValue(this.props.controller.getPropertyValue(propertyId), columnDef, true);\n\t\t\tcolumnDefObj.icon = PropertyUtils.getDMFieldIcon(fields,\n\t\t\t\tstringValue, columnDef.dmImage);\n\t\t}\n\t\tif (this.isReadonlyTable()) {\n\t\t\tcellContent = (<div className={classNames(\"properties-table-cell-control\", cellClassName)}>\n\t\t\t\t<ReadonlyControl\n\t\t\t\t\tcontrol={this.props.controller.getControl(propertyId)}\n\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\ttableControl\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t} else if (columnDef.editStyle === EditStyle.SUBPANEL || columnDef.editStyle === EditStyle.ON_PANEL) {\n\t\t\tif (selectSummaryRow) {\n\t\t\t\tcellContent = <div />;\n\t\t\t} else {\n\t\t\t\tcellContent = (<div className={classNames(\"properties-table-cell-control\", cellClassName)}>\n\t\t\t\t\t<ReadonlyControl\n\t\t\t\t\t\tcontrol={this.props.controller.getControl(propertyId)}\n\t\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\ttableControl\n\t\t\t\t\t/>\n\t\t\t\t</div>);\n\t\t\t\tif (columnDef.editStyle === EditStyle.ON_PANEL) {\n\t\t\t\t// save the cell content in an object\n\t\t\t\t\tthis.onPanelContainer[rowIndex].push(<div key={colIndex}><br />{ControlFactory.createControlItem(columnDef, propertyId)}</div>);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // defaults to inline control\n\t\t\ttableInfo.editStyle = EditStyle.INLINE;\n\t\t\tcellContent = (<div className={classNames(\"properties-table-cell-control\", cellClassName)}>\n\t\t\t\t{ControlFactory.createControl(columnDefObj, propertyId, tableInfo)}\n\t\t\t</div>);\n\n\t\t}\n\t\treturn {\n\t\t\tcolumn: columnDef.name,\n\t\t\twidth: columnDef.width,\n\t\t\tcontent: cellContent,\n\t\t\tclassName: cellClassName,\n\t\t\tvalue: this.props.controller.getPropertyValue(propertyId),\n\t\t\tresizable: columnDef.resizable\n\t\t};\n\t}\n\t_getCustomCtrlContent(propertyId, columnDef, defaultContent, tableInfo) {\n\t\tlet cellContent = defaultContent;\n\t\t// allow the custom control to set the cell content\n\t\tif (columnDef.controlType === ControlType.CUSTOM) {\n\t\t\ttableInfo.editStyle = \"summary\";\n\t\t\tcellContent = this.props.controller.getCustomControl(propertyId, columnDef, tableInfo);\n\t\t}\n\t\treturn cellContent;\n\t}\n\n\t_getDisabledStatus(cellPropertyId, tableState) {\n\t\tif (typeof tableState !== \"undefined\" && tableState === STATES.DISABLED) {\n\t\t\treturn true;\n\t\t}\n\t\tconst cellState = this.props.controller.getControlState(cellPropertyId);\n\t\treturn cellState === STATES.DISABLED;\n\t}\n\n\t/**\n\t * Returns true if the given row should be included\n\t * in the current filter output.\n\t */\n\tincludeInFilter(rowIndex) {\n\t\t// If no search text, include all\n\t\tif (!this.state.filterText || this.state.filterText.length === 0) {\n\t\t\treturn true;\n\t\t}\n\t\tconst controlValue = this.props.value;\n\t\tfor (let i = 0; i < this.filterFields.length; i++) {\n\t\t\tfor (var colIndex = 0; colIndex < this.props.control.subControls.length; colIndex++) {\n\t\t\t\tconst columnDef = this.props.control.subControls[colIndex];\n\t\t\t\tif (columnDef.name === this.filterFields[i]) {\n\t\t\t\t\tconst value = controlValue[rowIndex][colIndex];\n\t\t\t\t\tif (typeof value === \"string\" && value.toLowerCase().indexOf(this.state.filterText.toLowerCase()) > -1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\thasFilter() {\n\t\tlet hasFilter = false;\n\t\tif (this.props.control.subControls) {\n\t\t\tfor (const subControl of this.props.control.subControls) {\n\t\t\t\tif (subControl.filterable) {\n\t\t\t\t\thasFilter = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn hasFilter;\n\t}\n\n\taddOnClick(propertyId) {\n\t\tif (this.addOnClickCallback) {\n\t\t\tthis.addOnClickCallback(propertyId, this.onFieldPickerCloseCallback);\n\t\t}\n\t}\n\n\tisLightTheme() {\n\t\treturn this.props.controller.getLight() && this.props.control.light;\n\t}\n\n\tmakeSelectedEditRow(selectedRows) {\n\t\tif (selectedRows && Array.isArray(selectedRows) && selectedRows.length > 1) {\n\t\t\tconst rowsSelectedLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.MULTI_SELECTED_ROW_LABEL);\n\t\t\tconst rowsSelectedAction = PropertyUtils.formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.MULTI_SELECTED_ROW_ACTION);\n\t\t\tconst title = selectedRows.length + \" \" + rowsSelectedLabel + \" \" + rowsSelectedAction;\n\t\t\tconst rows = [];\n\t\t\tconst sortFields = [];\n\t\t\tconst filterFields = [];\n\t\t\tconst headers = (this.props.control.header === false) ? [] : this.makeHeader(sortFields, filterFields);\n\t\t\tconst showHeader = false;\n\t\t\tconst value = this.props.controller.getPropertyValue({ name: this.selectSummaryPropertyName });\n\t\t\tthis.makeCells(rows, value, null, this.selectSummaryPropertyName, true);\n\t\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\t\t\treturn (<div className=\"properties-at-selectedEditRows\" >\n\t\t\t\t<div className=\"properties-selectedEditRows-title\" >\n\t\t\t\t\t<span >{title}</span>\n\t\t\t\t</div>\n\t\t\t\t<FlexibleTable\n\t\t\t\t\tshowHeader={showHeader}\n\t\t\t\t\tcolumns={headers}\n\t\t\t\t\tdata={rows}\n\t\t\t\t\trows={0}\n\t\t\t\t\tscrollKey={this.selectSummaryPropertyName}\n\t\t\t\t\ttableLabel={tableLabel}\n\t\t\t\t\tsummaryTable\n\t\t\t\t\trowSelection={ROW_SELECTION.MULTIPLE}\n\t\t\t\t\tlight={this.isLightTheme()}\n\t\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t}\n\t\treturn null;\n\t}\n\n\tmakeAddRemoveButtonPanel(tableState, tableButtonConfig) {\n\t\tthis.onFieldPickerCloseCallback = (tableButtonConfig && tableButtonConfig.fieldPickerCloseFunction)\n\t\t\t? tableButtonConfig.fieldPickerCloseFunction.bind(this)\n\t\t\t: null;\n\n\t\tconst removeOnClick = (tableButtonConfig && tableButtonConfig.removeButtonFunction)\n\t\t\t? tableButtonConfig.removeButtonFunction\n\t\t\t: this.removeSelected;\n\t\tconst removeButtonLabel = (tableButtonConfig && tableButtonConfig.removeButtonLabel) ? tableButtonConfig.removeButtonLabel\n\t\t\t: PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.STRUCTURETABLE_REMOVEBUTTON_LABEL);\n\t\tconst removeDisabled = !this.state.enableRemoveIcon || tableState === STATES.DISABLED;\n\n\n\t\tlet addButtonDisabled = false;\n\t\tthis.addOnClickCallback = (tableButtonConfig && tableButtonConfig.addButtonFunction)\n\t\t\t? tableButtonConfig.addButtonFunction\n\t\t\t: this.props.openFieldPicker;\n\t\tconst addButtonLabel = (tableButtonConfig && tableButtonConfig.addButtonLabel) ? tableButtonConfig.addButtonLabel\n\t\t\t: PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.STRUCTURETABLE_ADDBUTTON_LABEL);\n\t\tif (tableState === STATES.DISABLED) {\n\t\t\taddButtonDisabled = true;\n\t\t\tthis.addOnClickCallback = null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"properties-at-buttons-container\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"properties-remove-fields-button\"\n\t\t\t\t\tdisabled={removeDisabled}\n\t\t\t\t\tonClick={removeOnClick}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={TrashCan16}\n\t\t\t\t>\n\t\t\t\t\t{removeButtonLabel}\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"properties-add-fields-button\"\n\t\t\t\t\tdisabled={addButtonDisabled}\n\t\t\t\t\tonClick={this.addOnClick.bind(this, this.props.propertyId)}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={Add16}\n\t\t\t\t>\n\t\t\t\t\t{addButtonLabel}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tmakeEditButtonPanel(tableState, tableButtonConfig) {\n\t\tlet editButton = null;\n\n\t\tif (tableButtonConfig && tableButtonConfig.editCallback) {\n\t\t\tthis.editOnClickCallback = tableButtonConfig.editCallback;\n\t\t\teditButton = (<div className=\"properties-at-buttons-container\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"properties-edit-button\"\n\t\t\t\t\tonClick={this.editOnClick.bind(this, this.props.propertyId)}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={Edit16}\n\t\t\t\t>\n\t\t\t\t\t{tableButtonConfig.label}\n\t\t\t\t</Button>\n\t\t\t</div>);\n\t\t}\n\n\t\treturn editButton;\n\t}\n\n\tmakeCustomButtonsPanel(tableState, customButtons) {\n\t\tlet customTableButtons = null;\n\t\tif (customButtons) {\n\t\t\tcustomTableButtons = (<div className=\"properties-at-buttons-container\">\n\t\t\t\t<TableButtons\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\ttableState={tableState}\n\t\t\t\t\tcustomButtons={customButtons}\n\t\t\t\t\tcustomButtonsState={this.props.tableButtons}\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t}\n\t\treturn customTableButtons;\n\t}\n\n\teditOnClick(propertyId) {\n\t\tif (this.editOnClickCallback) {\n\t\t\tthis.editOnClickCallback(propertyId);\n\t\t}\n\t}\n\n\tcheckedAllValue(colIndex, checked) {\n\t\tconst controlValue = this.props.value;\n\t\tif (Array.isArray(controlValue)) {\n\t\t\tfor (let i = 0; i < controlValue.length; i++) {\n\t\t\t\tconst propertyId = {\n\t\t\t\t\tname: this.props.control.name,\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: colIndex\n\t\t\t\t};\n\t\t\t\tif (this.props.controller.getControlState(propertyId) !== STATES.DISABLED) {\n\t\t\t\t\tthis.props.controller.updatePropertyValue(propertyId, checked);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.checkedAll[colIndex] = checked;\n\t\t}\n\t}\n\n\tcheckedAll(colIndex) {\n\t\tconst controlValue = this.props.value;\n\t\tif (Array.isArray(controlValue)) {\n\t\t\tif (controlValue.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0; i < controlValue.length; i++) {\n\t\t\t\tconst propertyId = {\n\t\t\t\t\tname: this.props.control.name,\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: colIndex\n\t\t\t\t};\n\t\t\t\tif (this.props.controller.getControlState(propertyId) !== STATES.DISABLED) {\n\t\t\t\t\tif (!controlValue[i][colIndex]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tdisabledAll(colIndex) {\n\t\tconst controlValue = this.props.value;\n\t\tif (Array.isArray(controlValue)) {\n\t\t\tif (controlValue.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (const rowValue of controlValue) {\n\t\t\t\tif (rowValue[colIndex] === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateTable(tableState, tableButtonConfig, customButtons) {\n\t\tconst rows = [];\n\t\tconst sortFields = [];\n\t\tconst filterFields = [];\n\t\tthis.filterFields = filterFields;\n\n\t\tconst headers = this.makeHeader(sortFields, filterFields);\n\t\tconst showHeader = this.props.control.header !== false;\n\n\t\tconst controlValue = this.props.value;\n\t\tthis.makeCells(rows, controlValue, tableState);\n\n\t\tconst selectedEditRow = this.props.control.rowSelection === ROW_SELECTION.MULTIPLE\n\t\t\t? this.makeSelectedEditRow(this.props.selectedRows)\n\t\t\t: null;\n\t\tlet topRightPanel = null;\n\t\tif (customButtons) {\n\t\t\ttopRightPanel = this.makeCustomButtonsPanel(tableState, customButtons);\n\t\t} else if (this.isReadonlyTable()) {\n\t\t\tif (!this.props.hideEditButton) {\n\t\t\t\ttopRightPanel = this.makeEditButtonPanel(tableState, tableButtonConfig);\n\t\t\t}\n\n\t\t} else if (this.props.addRemoveRows) {\n\t\t\ttopRightPanel = this.makeAddRemoveButtonPanel(tableState, tableButtonConfig);\n\t\t}\n\n\t\tlet rowToScrollTo;\n\t\tif (Number.isInteger(this.scrollToRow) && rows.length > this.scrollToRow) {\n\t\t\trowToScrollTo = this.scrollToRow;\n\t\t\tdelete this.scrollToRow;\n\t\t}\n\n\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\t\t// ReadonlyTable with single row selection is non-interactive. rowClickCallback should be undefined.\n\t\tlet rowClickCallback;\n\t\tconst singleRowSelectionReadonlyTable = this.isReadonlyTable() && this.props.control.rowSelection === ROW_SELECTION.SINGLE;\n\t\tif (!singleRowSelectionReadonlyTable) {\n\t\t\trowClickCallback = this.props.control.rowSelection === ROW_SELECTION.SINGLE ? this.handleRowClick : this.updateRowSelections;\n\t\t}\n\n\t\tconst table =\t(\n\t\t\t<FlexibleTable\n\t\t\t\tsortable={sortFields}\n\t\t\t\tfilterable={filterFields}\n\t\t\t\tcolumns={headers}\n\t\t\t\tdata={rows}\n\t\t\t\tshowHeader={showHeader}\n\t\t\t\tscrollToRow={rowToScrollTo}\n\t\t\t\tonFilter={this.onFilter}\n\t\t\t\tonSort={this.onSort}\n\t\t\t\ttopRightPanel={topRightPanel}\n\t\t\t\tselectedEditRow={selectedEditRow}\n\t\t\t\tscrollKey={this.props.control.name}\n\t\t\t\ttableState={tableState}\n\t\t\t\tmessageInfo={this.props.controller.getErrorMessage(this.props.propertyId)}\n\t\t\t\trows={this.props.control.rows}\n\t\t\t\ttableLabel={tableLabel}\n\t\t\t\tupdateRowSelections={rowClickCallback}\n\t\t\t\tselectedRows= {this.props.selectedRows}\n\t\t\t\trowSelection={this.props.control.rowSelection}\n\t\t\t\tlight={this.isLightTheme()}\n\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t/>);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{table}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tmakeHeader(sortFields, filterFields) {\n\t\tconst headers = [];\n\t\tfor (var j = 0; j < this.props.control.subControls.length; j++) {\n\t\t\tconst columnDef = this.props.control.subControls[j];\n\t\t\tconst checkboxName = this.props.control.name + j; // TODO might not be unique\n\t\t\t// See if the entire column is disabled\n\t\t\tconst colState = this.props.controller.getControlState({ name: this.props.control.name, col: j });\n\t\t\tconst disabled = colState === STATES.DISABLED || colState === STATES.HIDDEN;\n\t\t\tconst columnLabel = (columnDef.controlType === ControlType.CHECKBOX)\n\t\t\t\t? (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tid={checkboxName}\n\t\t\t\t\t\tchecked={this.checkedAll(j)}\n\t\t\t\t\t\tonChange={this.checkedAllValue.bind(this, j)}\n\t\t\t\t\t\tlabelText={columnDef.label.text}\n\t\t\t\t\t/>) : columnDef.label.text;\n\t\t\tif (columnDef.visible && columnDef.controlType !== ControlType.HIDDEN) {\n\t\t\t\tif (columnDef.sortable) {\n\t\t\t\t\tsortFields.push(columnDef.name);\n\t\t\t\t}\n\t\t\t\theaders.push({\n\t\t\t\t\t\"key\": columnDef.name,\n\t\t\t\t\t\"label\": columnLabel,\n\t\t\t\t\t\"width\": columnDef.width,\n\t\t\t\t\t\"description\": (columnDef.description ? columnDef.description.text : null),\n\t\t\t\t\t\"resizable\": columnDef.resizable ? columnDef.resizable : false,\n\t\t\t\t\t\"operation\": (columnDef.generatedValues && columnDef.generatedValues.operation ? columnDef.generatedValues.operation : null) });\n\t\t\t\tif (columnDef.filterable) {\n\t\t\t\t\tfilterFields.push(columnDef.name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// subpanel column will always be empty for ReadonlyTable control based on condition in makeCells()\n\t\tif (this.props.control.childItem && !this.isReadonlyTable()) {\n\t\t\t// set to specific size. Exclude this column from resizing.\n\t\t\theaders.push({ \"key\": \"subpanel\", \"label\": \"\", \"width\": TABLE_SUBPANEL_BUTTON_WIDTH, \"staticWidth\": true });\n\t\t}\n\t\treturn headers;\n\t}\n\n\tmakeCells(rows, controlValue, tableState, propName, selectSummaryRow) {\n\t\tif (!Array.isArray(controlValue)) {\n\t\t\treturn;\n\t\t}\n\t\tconst propertyName = propName ? propName : this.props.control.name;\n\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\tconst columns = [];\n\t\t\tthis.onPanelContainer[rowIndex] = [];\n\t\t\tif (this.includeInFilter(rowIndex) || selectSummaryRow) {\n\t\t\t\tfor (var colIndex = 0; colIndex < this.props.control.subControls.length; colIndex++) {\n\t\t\t\t\tconst columnDef = this.props.control.subControls[colIndex];\n\t\t\t\t\t// we need to build the on-panel container so that when the row is selected and a not visible column is on-panel\n\t\t\t\t\t// the on-panel container will be available for display.\n\t\t\t\t\tif (columnDef.visible || columnDef.editStyle === EditStyle.ON_PANEL) {\n\t\t\t\t\t\tconst content = this._makeCell(columnDef, controlValue, propertyName, rowIndex,\n\t\t\t\t\t\t\tcolIndex, tableState, selectSummaryRow);\n\t\t\t\t\t\t// only add content if column is visible\n\t\t\t\t\t\tif (columnDef.visible) {\n\t\t\t\t\t\t\tcolumns.push(content);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.props.control.childItem && !selectSummaryRow && !this.isReadonlyTable()) {\n\t\t\t\t\tconst cell = this.buildChildItem(propertyName, rowIndex, tableState);\n\t\t\t\t\tcolumns.push(cell);\n\t\t\t\t}\n\t\t\t\trows.push({\n\t\t\t\t\tcolumns: columns\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tbuildChildItem(propName, rowIndex, tableState) {\n\t\t// Assumes the child item is an \"ADDITIONAL_LINK\" object.\n\t\t// However, we will extract information from the and will create our own Cell-based invoker.\n\t\tconst childPropertyId = { name: propName, row: rowIndex };\n\t\tconst parentPropertyId = cloneDeep(this.props.propertyId);\n\n\t\tlet propertyId = childPropertyId;\n\t\t// If childPropertyId name does not match the parent, then this is a subControl\n\t\tif (parentPropertyId.name !== childPropertyId.name) {\n\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, childPropertyId);\n\t\t}\n\n\t\tconst subItemButton = this.props.buildUIItem(rowIndex, this.props.control.childItem, propertyId, this.indexOfColumn);\n\t\t// Hack to decompose the button into our own in-table link\n\t\tconst subCell = (\n\t\t\t<div className=\"properties-table-subcell\">\n\t\t\t\t<SubPanelCell\n\t\t\t\t\tlabel={subItemButton.props.label}\n\t\t\t\t\ttitle={subItemButton.props.title}\n\t\t\t\t\tpanel={subItemButton.props.panel}\n\t\t\t\t\tdisabled={tableState === STATES.DISABLED}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\trightFlyout={this.props.rightFlyout}\n\t\t\t\t/>\n\t\t\t</div>);\n\t\treturn {\n\t\t\tcolumn: \"subpanel\",\n\t\t\twidth: TABLE_SUBPANEL_BUTTON_WIDTH,\n\t\t\tcontent: subCell\n\t\t};\n\t}\n}\n\nAbstractTable.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\topenFieldPicker: PropTypes.func.isRequired,\n\trightFlyout: PropTypes.bool,\n\tvalue: PropTypes.array, // pass in by redux\n\tselectedRows: PropTypes.array, // set by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object, // set in by redux\n\thideEditButton: PropTypes.bool // set by redux\n};\n\nAbstractTable.defaultProps = {\n\taddRemoveRows: true,\n\thideEditButton: false,\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { MESSAGE_KEYS } from \"./../../constants/constants\";\nimport { ControlType } from \"./../../constants/form-constants\";\nimport { Add16, Edit16 } from \"@carbon/icons-react\";\nimport { Button } from \"carbon-components-react\";\n\nexport default class EmptyTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getEmptyTableText = this.getEmptyTableText.bind(this);\n\t\tthis.isReadonlyTable = this.isReadonlyTable.bind(this);\n\t}\n\n\tgetEmptyTableText() {\n\t\t// Empty table text can be customized\n\t\tconst overrideEmptyTableTextKey = `${this.props.control.name}.empty.table.text`;\n\t\tconst defaultEmptyTableText = formatMessage(\n\t\t\tthis.props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.PROPERTIES_EMPTY_TABLE_TEXT,\n\t\t\t{ button_label: this.props.emptyTableButtonLabel }\n\t\t);\n\t\treturn this.props.controller.getResource(overrideEmptyTableTextKey, defaultEmptyTableText);\n\t}\n\n\tisReadonlyTable() {\n\t\treturn this.props.control.controlType === ControlType.READONLYTABLE;\n\t}\n\n\trender() {\n\t\tconst emptyTableText = this.getEmptyTableText();\n\t\tconst emptyTableContent = (\n\t\t\t<div className=\"properties-empty-table\" disabled={this.props.disabled}>\n\t\t\t\t<span >{emptyTableText}</span>\n\t\t\t\t<br />\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"properties-empty-table-button\"\n\t\t\t\t\tkind=\"tertiary\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\trenderIcon={this.isReadonlyTable() ? Edit16 : Add16}\n\t\t\t\t\tonClick={this.props.emptyTableButtonClickHandler}\n\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t>\n\t\t\t\t\t{this.props.emptyTableButtonLabel}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t\treturn emptyTableContent;\n\t}\n}\n\nEmptyTable.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\temptyTableButtonLabel: PropTypes.string,\n\temptyTableButtonClickHandler: PropTypes.func,\n\tdisabled: PropTypes.bool,\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EmptyTable from \"./empty-table.jsx\";\nexport default EmptyTable;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"carbon-components-react\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { ArrowUp24, ArrowDown24, UpToTop24, DownToBottom24 } from \"@carbon/icons-react\";\nimport classNames from \"classnames\";\nimport EmptyTable from \"./../empty-table\";\nimport { MESSAGE_KEYS } from \"./../../constants/constants\";\n\nclass MoveableTableRows extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getTableRowMoveImages = this.getTableRowMoveImages.bind(this);\n\t\tthis.topMoveRow = this.topMoveRow.bind(this);\n\t\tthis.upMoveRow = this.upMoveRow.bind(this);\n\t\tthis.downMoveRow = this.downMoveRow.bind(this);\n\t\tthis.bottomMoveRow = this.bottomMoveRow.bind(this);\n\t\tthis.getMoveableTableRows = this.getMoveableTableRows.bind(this);\n\t\tthis.getLeastValue = this.getLeastValue.bind(this);\n\t\tthis.getMaxValue = this.getMaxValue.bind(this);\n\t}\n\n\tgetMoveableTableRows() {\n\t\tlet moveCol = null;\n\t\tif (typeof this.props.control.moveableRows !== \"undefined\" && this.props.control.moveableRows) {\n\t\t\tconst moveImages = this.getTableRowMoveImages();\n\t\t\tmoveCol = (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"properties-mr-button-container\"\n\t\t\t\t>\n\t\t\t\t\t{moveImages}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t// Added role presentation to fix a11y violation - no headers in the table\n\t\tconst content = (<table role=\"presentation\" className=\"properties-mr-table-container\">\n\t\t\t<tbody>\n\t\t\t\t<tr className={classNames(\"properties-mr-table-content\", { \"disabled\": this.props.disabled })}>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{this.props.tableContainer}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{moveCol}\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// enabled the move up and down arrows based on which row is selected\n\tgetTableRowMoveImages() {\n\t\tconst selected = this.props.controller.getSelectedRows(this.props.propertyId).sort();\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tlet topEnabled = (\n\t\t\t!this.props.disableRowMoveButtons &&\n\t\t\t(selected.length !== 0 && selected[0] !== 0) &&\n\t\t\t!this.props.disabled\n\t\t);\n\t\tlet bottomEnabled = (\n\t\t\t!this.props.disableRowMoveButtons &&\n\t\t\t(selected.length !== 0 && selected[selected.length - 1] !== controlValue.length - 1) &&\n\t\t\t!this.props.disabled\n\t\t);\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\tif (selected.length > 0 && staticRows.length > 0 && staticRows.includes(selected[0])) {\n\t\t\ttopEnabled = false;\n\t\t\tbottomEnabled = false;\n\t\t} else if (selected[0] === staticRows[staticRows.length - 1] + 1) {\n\t\t\ttopEnabled = false;\n\t\t\tbottomEnabled = (\n\t\t\t\t!this.props.disableRowMoveButtons &&\n\t\t\t\t(selected.length !== 0 && selected[selected.length - 1] !== controlValue.length - 1) &&\n\t\t\t\t!this.props.disabled\n\t\t\t);\n\t\t} else if (selected[0] === staticRows[0] - 1) {\n\t\t\tbottomEnabled = false;\n\t\t}\n\n\n\t\tconst topLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.MOVEABLE_TABLE_BUTTON_TOP_DESCRIPTION);\n\t\tconst upLabel = formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.MOVEABLE_TABLE_BUTTON_UP_DESCRIPTION);\n\t\tconst topImages = (\n\t\t\t<div key=\"topImages\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"table-row-move-button\"\n\t\t\t\t\tonClick={this.topMoveRow}\n\t\t\t\t\tdisabled={!topEnabled}\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={UpToTop24}\n\t\t\t\t\ticonDescription={topLabel}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"table-row-move-button\"\n\t\t\t\t\tonClick={this.upMoveRow}\n\t\t\t\t\tdisabled={!topEnabled}\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={ArrowUp24}\n\t\t\t\t\ticonDescription={upLabel}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t\tconst bottomLabel = formatMessage(this.props.controller.getReactIntl(),\tMESSAGE_KEYS.MOVEABLE_TABLE_BUTTON_DOWN_DESCRIPTION);\n\t\tconst downLabel = formatMessage(this.props.controller.getReactIntl(),\tMESSAGE_KEYS.MOVEABLE_TABLE_BUTTON_BOTTOM_DESCRIPTION);\n\t\tconst bottomImages = (\n\t\t\t<div key=\"bottomImages\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"table-row-move-button\"\n\t\t\t\t\tonClick={this.downMoveRow}\n\t\t\t\t\tdisabled={!bottomEnabled}\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={ArrowDown24}\n\t\t\t\t\ticonDescription={bottomLabel}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"table-row-move-button\"\n\t\t\t\t\tonClick={this.bottomMoveRow}\n\t\t\t\t\tdisabled={!bottomEnabled}\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\trenderIcon={DownToBottom24}\n\t\t\t\t\ticonDescription={downLabel}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t\treturn [topImages, bottomImages];\n\t}\n\n\tgetLeastValue() {\n\t\tlet leastValue = 0;\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\tif (staticRows && staticRows.length > 0 && staticRows.includes(0)) {\n\t\t\tleastValue = staticRows[staticRows.length - 1];\n\t\t}\n\t\treturn leastValue;\n\t}\n\n\tgetMaxValue() {\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tlet maxValue = controlValue.length - 1;\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\tif (staticRows && staticRows.length > 0 && staticRows.includes(controlValue.length - 1)) {\n\t\t\tmaxValue = staticRows[0] - 1;\n\t\t}\n\t\treturn maxValue;\n\t}\n\n\ttopMoveRow(evt) {\n\t\tvar selected = this.props.controller.getSelectedRows(this.props.propertyId).sort(function(a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst leastValue = this.getLeastValue();\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\tfor (var firstRow = selected[0]; firstRow > leastValue; firstRow--) {\n\t\t\tfor (var i = 0; i <= selected.length - 1; i++) {\n\t\t\t\tif ((staticRows.length > 0 && selected[0] > leastValue + 1) || staticRows.length === 0) {\n\t\t\t\t\tconst selectedRow = selected.shift();\n\t\t\t\t\tconst tmpRow = controlValue[selectedRow - 1];\n\t\t\t\t\tcontrolValue[selectedRow - 1] = controlValue[selectedRow];\n\t\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\t\tselected.push(selectedRow - 1);\n\t\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (selected.length > 0) {\n\t\t\tthis.props.setScrollToRow(selected[0]);\n\t\t}\n\t\tthis.props.setCurrentControlValueSelected(controlValue, selected);\n\t}\n\n\tupMoveRow(evt) {\n\t\tconst selected = this.props.controller.getSelectedRows(this.props.propertyId).sort(function(a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tconst leastValue = this.getLeastValue();\n\t\tconst staticRows = this.props.controller.getStaticRows(this.props.propertyId).sort();\n\t\t// only move up if not already at the top especially for multiple selected\n\t\t// Move up only till the static rows index\n\t\tif (selected.length !== 0 && selected[0] > leastValue) {\n\t\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\t\tfor (var i = 0; i <= selected.length - 1; i++) {\n\t\t\t\tif (staticRows.length > 0 && selected[0] > leastValue + 1) {\n\t\t\t\t\tconst selectedRow = selected.shift();\n\t\t\t\t\tconst tmpRow = controlValue[selectedRow - 1];\n\t\t\t\t\tcontrolValue[selectedRow - 1] = controlValue[selectedRow];\n\t\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\t\tselected.push(selectedRow - 1);\n\t\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow - 1);\n\t\t\t\t} else if (staticRows.length === 0) {\n\t\t\t\t\tconst selectedRow = selected.shift();\n\t\t\t\t\tif (selectedRow !== 0) {\n\t\t\t\t\t\tconst tmpRow = controlValue[selectedRow - 1];\n\t\t\t\t\t\tcontrolValue[selectedRow - 1] = controlValue[selectedRow];\n\t\t\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\t\t\tselected.push(selectedRow - 1);\n\t\t\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.props.setScrollToRow(selected[0]);\n\t\t\tthis.props.setCurrentControlValueSelected(controlValue, selected);\n\t\t}\n\t}\n\n\tdownMoveRow(evt) {\n\t\tconst selected = this.props.controller.getSelectedRows(this.props.propertyId).sort(function(a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst maxValue = this.getMaxValue();\n\t\t// only move down if not already at the end especially for multiple selected\n\t\tif (selected.length !== 0 && selected[selected.length - 1] !== controlValue.length - 1) {\n\t\t\tfor (var i = selected.length - 1; i >= 0; i--) {\n\t\t\t\tconst selectedRow = selected.pop();\n\t\t\t\tif (selectedRow !== maxValue) {\n\t\t\t\t\tconst tmpRow = controlValue[selectedRow + 1];\n\t\t\t\t\tcontrolValue[selectedRow + 1] = controlValue[selectedRow];\n\t\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\t\tselected.unshift(selectedRow + 1);\n\t\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (selected.length > 1) {\n\t\t\t\tthis.props.setScrollToRow(selected[selected.length - 1]);\n\t\t\t} else {\n\t\t\t\tthis.props.setScrollToRow(selected[0]);\n\t\t\t}\n\t\t\tthis.props.setCurrentControlValueSelected(controlValue, selected);\n\t\t}\n\t}\n\n\tbottomMoveRow(evt) {\n\t\tvar selected = this.props.controller.getSelectedRows(this.props.propertyId).sort(function(a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tconst controlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst maxValue = this.getMaxValue();\n\t\tfor (var lastRow = selected[selected.length - 1]; lastRow < maxValue; lastRow++) {\n\t\t\tfor (var i = selected.length - 1; i >= 0; i--) {\n\t\t\t\tconst selectedRow = selected.pop();\n\t\t\t\tconst tmpRow = controlValue[selectedRow + 1];\n\t\t\t\tcontrolValue[selectedRow + 1] = controlValue[selectedRow];\n\t\t\t\tcontrolValue[selectedRow] = tmpRow;\n\t\t\t\tselected.unshift(selectedRow + 1);\n\t\t\t\tthis.props.controller.moveErrorMessageRows(this.props.propertyId.name, selectedRow, selectedRow + 1);\n\t\t\t}\n\t\t}\n\t\tif (selected.length > 0) {\n\t\t\tthis.props.setScrollToRow(selected[selected.length - 1]);\n\t\t}\n\t\tthis.props.setCurrentControlValueSelected(controlValue, selected);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\tthis.props.isEmptyTable && this.props.addRemoveRows\n\t\t\t\t? <EmptyTable\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\temptyTableButtonLabel={this.props.emptyTableButtonLabel}\n\t\t\t\t\temptyTableButtonClickHandler={this.props.emptyTableButtonClickHandler}\n\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t/>\n\t\t\t\t: this.getMoveableTableRows()\n\t\t);\n\t}\n}\n\nMoveableTableRows.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tsetCurrentControlValueSelected: PropTypes.func.isRequired,\n\tsetScrollToRow: PropTypes.func.isRequired,\n\ttableContainer: PropTypes.object.isRequired,\n\tdisabled: PropTypes.bool,\n\tisEmptyTable: PropTypes.bool.isRequired,\n\temptyTableButtonLabel: PropTypes.string,\n\temptyTableButtonClickHandler: PropTypes.func,\n\tdisableRowMoveButtons: PropTypes.bool, // set by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\nMoveableTableRows.defaultProps = {\n\taddRemoveRows: true\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\t// check if row move buttons should be disabled for given propertyId\n\tdisableRowMoveButtons: ownProps.controller.isDisableRowMoveButtons(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps)(MoveableTableRows);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport NumberfieldControl from \"./../numberfield\";\nimport TextfieldControl from \"./../textfield\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport FlexibleTable from \"./../../components/flexible-table\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { getDataId } from \"./../../util/control-utils\";\nimport { MESSAGE_KEYS, STATES } from \"./../../constants/constants.js\";\nimport { Type } from \"./../../constants/form-constants.js\";\nimport { isEmpty } from \"lodash\";\n\nconst NUMBER_TYPES = [Type.INTEGER, Type.DOUBLE, Type.LONG];\nclass ListControl extends AbstractTable {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.addRow = this.addRow.bind(this);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t}\n\n\taddRow() {\n\t\tconst controlPropType = this.props.controller.getControlPropType(this.props.propertyId);\n\t\tconst newRow = NUMBER_TYPES.indexOf(controlPropType) > -1 ? null : \"\";\n\n\t\t// Handle case where no currentValue or default is defined.\n\t\tlet currentValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tif (typeof currentValue === \"undefined\") {\n\t\t\tcurrentValue = [];\n\t\t}\n\n\t\tconst rows = currentValue.concat([newRow]);\n\t\tthis.setCurrentControlValueSelected(rows);\n\t}\n\n\tmakeCell(control, propertyId, controlPropType, listHeader) {\n\t\tif (NUMBER_TYPES.indexOf(controlPropType) > -1) {\n\t\t\treturn (<div className=\"properties-table-cell-control\">\n\t\t\t\t<NumberfieldControl\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tcontrolItem={listHeader}\n\t\t\t\t\ttableControl\n\t\t\t\t/>\n\t\t\t</div>);\n\t\t}\n\t\treturn (<div className=\"properties-table-cell-control\">\n\t\t\t<TextfieldControl\n\t\t\t\tcontrol={control}\n\t\t\t\tpropertyId={propertyId}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\tcontrolItem={listHeader}\n\t\t\t\ttableControl\n\t\t\t/>\n\t\t</div>);\n\t}\n\n\tmakeRows(controlValue, tableState, tableHeaders) {\n\t\tconst rows = [];\n\t\tif (controlValue) {\n\t\t\tfor (var rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\tconst columns = [];\n\n\t\t\t\tlet propertyId = { name: this.props.control.name, row: rowIndex };\n\t\t\t\t// If props propertyId name is different, then this list is in a structure\n\t\t\t\tif (this.props.propertyId.name !== propertyId.name) {\n\t\t\t\t\tconst parentPropertyId = Object.assign({}, this.props.propertyId);\n\t\t\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, { name: this.props.control.name, row: rowIndex });\n\t\t\t\t}\n\n\t\t\t\tconst controlPropType = this.props.controller.getControlPropType(propertyId);\n\t\t\t\tconst control = {};\n\t\t\t\t// Assuming list control has only 2 columns\n\t\t\t\tconst listHeader = (typeof tableHeaders === \"undefined\" || tableHeaders.length === 0) ? \"\" : tableHeaders[0].label;\n\t\t\t\tconst cellContent = this.makeCell(control, propertyId, controlPropType, listHeader);\n\t\t\t\tcolumns.push({\n\t\t\t\t\tkey: rowIndex + \"-0-value\",\n\t\t\t\t\tcolumn: \"value\",\n\t\t\t\t\tcontent: cellContent\n\t\t\t\t});\n\t\t\t\trows.push({\n\t\t\t\t\tkey: rowIndex,\n\t\t\t\t\tonClickCallback: this.handleRowClick.bind(this, rowIndex, false),\n\t\t\t\t\tcolumns: columns,\n\t\t\t\t\tclassName: \"list-table-row\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn rows;\n\t}\n\n\tmakeHeader() {\n\t\tconst headers = [];\n\t\theaders.push({\n\t\t\t\"key\": \"value\",\n\t\t\t\"label\": formatMessage(this.reactIntl, MESSAGE_KEYS.LIST_TABLE_LABEL),\n\t\t\t\"description\": (null) });\n\t\treturn headers;\n\t}\n\n\trender() {\n\t\tconst headers = this.makeHeader();\n\n\t\tconst tableButtonConfig = {\n\t\t\taddButtonLabel: formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.STRUCTURELISTEDITOR_ADDBUTTON_LABEL),\n\t\t\tremoveButtonLabel: formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.STRUCTURELISTEDITOR_REMOVEBUTTON_LABEL),\n\t\t\taddButtonFunction: this.addRow\n\t\t};\n\n\t\tconst rows = this.makeRows(this.props.value, this.props.state, headers);\n\t\tconst topRightPanel = this.makeAddRemoveButtonPanel(this.props.state, tableButtonConfig);\n\t\tlet rowToScrollTo;\n\t\tif (Number.isInteger(this.scrollToRow) && rows.length > this.scrollToRow) {\n\t\t\trowToScrollTo = this.scrollToRow;\n\t\t\tdelete this.scrollToRow;\n\t\t}\n\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\t\tconst table =\t(\n\t\t\t<FlexibleTable\n\t\t\t\tcolumns={headers}\n\t\t\t\tdata={rows}\n\t\t\t\tscrollToRow={rowToScrollTo}\n\t\t\t\ttopRightPanel={topRightPanel}\n\t\t\t\tscrollKey={this.props.control.name}\n\t\t\t\ttableState={this.props.state}\n\t\t\t\tmessageInfo={this.props.messageInfo}\n\t\t\t\trows={this.props.control.rows}\n\t\t\t\ttableLabel={tableLabel}\n\t\t\t\tselectedRows={this.props.selectedRows}\n\t\t\t\trowSelection={this.props.control.rowSelection}\n\t\t\t\tupdateRowSelections={this.updateRowSelections}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t/>);\n\n\t\tconst tableContainer = (<div>\n\t\t\t<div className=\"properties-list-table\">\n\t\t\t\t{table}\n\t\t\t</div>\n\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t</div>);\n\n\t\treturn (\n\t\t\t<div data-id={getDataId(this.props.propertyId)} className=\"properties-list-control\" >\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t<MoveableTableRows\n\t\t\t\t\ttableContainer={tableContainer}\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\temptyTableButtonLabel={tableButtonConfig.addButtonLabel}\n\t\t\t\t\temptyTableButtonClickHandler={this.addRow}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps)(ListControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, ContentSwitcher, Dropdown } from \"carbon-components-react\";\nimport FlexibleTable from \"./../../../components/flexible-table/flexible-table\";\nimport TruncatedContentTooltip from \"./../../../components/truncated-content-tooltip\";\nimport { MESSAGE_KEYS, EXPRESSION_TABLE_ROWS, SORT_DIRECTION, ROW_SELECTION } from \"./../../../constants/constants\";\nimport { formatMessage } from \"./../../../util/property-utils\";\nimport { sortBy, get } from \"lodash\";\nimport { v4 as uuid4 } from \"uuid\";\n\nconst FIELDS_SPECIAL_CHARACTERS_REGEX = new RegExp(\"[0-9- _$]\", \"g\");\n\nexport default class ExpressionSelectFieldOrFunction extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.valueColumn = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_VALUE_COLUMN);\n\t\tthis.valueColumnDesc = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_VALUE_COLUMN_DESCRIPTION);\n\t\tthis.recentUseCat = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_RECENTLY_USED);\n\t\tthis.recentUseCatInfo = {\n\t\t\tid: this.recentUseCat,\n\t\t\tlocLabel: this.recentUseCat,\n\t\t\tfield_columns: {\n\t\t\t\tfield_column_info: {\n\t\t\t\t\tlocLabel: formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_RECENTLY_USED_COLUMN)\n\t\t\t\t},\n\t\t\t\tvalue_column_info: {\n\t\t\t\t\tlocLabel: this.valueColumn,\n\t\t\t\t\tdescLabel: this.valueColumnDesc\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.inCategories = Object.keys(props.functionList);\n\t\tthis.fields = this._makeDatasetFields(props.controller.getDatasetMetadataFields(), props.controller.getExpressionInfo().fields);\n\t\tthis.resources = get(props.controller.getExpressionInfo(), \"resources\", {});\n\t\tthis.state = {\n\t\t\tfieldSelected: 0,\n\t\t\tvalueSelected: 0,\n\t\t\tfunctionSelected: 0,\n\t\t\tfieldTableSortSpec: null,\n\t\t\tvaluesTableSortSpec: null,\n\t\t\tfunctionTableSortSpec: null,\n\t\t\tfunctionCategory: this.inCategories[0], // set the initial function category to the first one in the list.\n\t\t\tselectedIndex: 0,\n\t\t\tfieldCategory: \"fields\",\n\t\t\tcurrentFieldDataset: this.fields.field_table_info[0].field_value_groups\n\t\t};\n\t\tthis.controller = props.controller;\n\t\tthis.onFunctionCatChange = this.onFunctionCatChange.bind(this);\n\t\tthis.onFieldCatChange = this.onFieldCatChange.bind(this);\n\t\tthis.onFieldFilter = this.onFieldFilter.bind(this);\n\t\tthis.onValueFilter = this.onValueFilter.bind(this);\n\t\tthis.onFunctionFilter = this.onFunctionFilter.bind(this);\n\t\tthis.language = props.language;\n\n\t\tthis.onFieldTableClick = this.onFieldTableClick.bind(this);\n\t\tthis.onFieldTableDblClick = this.onFieldTableDblClick.bind(this);\n\t\tthis.onFunctionTableClick = this.onFunctionTableClick.bind(this);\n\t\tthis.onFunctionTableDblClick = this.onFunctionTableDblClick.bind(this);\n\t\tthis.onValueTableClick = this.onValueTableClick.bind(this);\n\t\tthis.onValueTableDblClick = this.onValueTableDblClick.bind(this);\n\n\t\tthis.sortTableRows = this.sortTableRows.bind(this);\n\t\tthis.shouldQuoteField = this.shouldQuoteField.bind(this);\n\t}\n\n\tonSwitch(switchName, evt) {\n\t\tthis.setState({\n\t\t\tselectedIndex: switchName.index\n\t\t});\n\t}\n\n\tonFunctionCatChange(evt) {\n\t\tthis.setState({\n\t\t\tfunctionCategory: evt.selectedItem.value,\n\t\t\tfunctionSelected: 0\n\t\t});\n\t}\n\n\tonFieldCatChange(evt) {\n\t\tlet currentData = [];\n\t\tif (evt.selectedItem.value === this.recentUseCat) {\n\t\t\tcurrentData = this.props.controller.getExpressionFieldsRecentlyUsed();\n\t\t} else {\n\t\t\tfor (let index = 0; index < this.fields.field_table_info.length; index++) {\n\t\t\t\tif (evt.selectedItem.value === this.fields.field_table_info[index].id) {\n\t\t\t\t\tcurrentData = this.fields.field_table_info[index].field_value_groups;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tfieldCategory: evt.selectedItem.value,\n\t\t\tfieldSelected: 0,\n\t\t\tcurrentFieldDataset: currentData\n\t\t});\n\t}\n\n\tonFieldTableClick(row, evt, rowKey) {\n\t\tthis.setState({\n\t\t\tfieldSelected: rowKey,\n\t\t\tvalueSelected: 0\n\t\t});\n\n\t}\n\n\tonFieldTableDblClick(evt, rowKey, index) {\n\t\tconst field = this.state.currentFieldDataset[rowKey];\n\t\tlet value = field.id;\n\t\tif (this.state.fieldCategory !== this.recentUseCat) {\n\t\t\tthis.props.controller.updateExpressionFieldsRecentlyUsed(field);\n\t\t}\n\t\tif (this.props.onChange) {\n\t\t\tconst quote = (this.language === \"CLEM\" && this.state.fieldCategory !== \"globals\") ? \"'\" : \"\";\n\t\t\tif (this.shouldQuoteField(field.id)) {\n\t\t\t\tvalue = quote + field.id + quote;\n\t\t\t}\n\t\t\tthis.props.onChange(value);\n\t\t}\n\t}\n\n\tonFieldFilter(filterString) {\n\t\tthis.setState({ fieldFilterText: filterString });\n\t}\n\n\tonValueTableClick(row, evt, rowKey) {\n\t\tthis.setState({\n\t\t\tvalueSelected: rowKey\n\t\t});\n\t}\n\n\tonValueTableDblClick(evt, rowKey, index) {\n\t\tif (this.props.onChange) {\n\t\t\tconst field = this.state.currentFieldDataset[this.state.fieldSelected];\n\t\t\tconst quote = \"\\\"\";\n\t\t\tif (field.values) {\n\t\t\t\tconst value = field.values[rowKey].value;\n\t\t\t\tconst fieldValue = (typeof value === \"string\") ? quote + value + quote : value;\n\t\t\t\tthis.props.onChange(fieldValue);\n\t\t\t} else if (field.range) {\n\t\t\t\tconst minValue = (typeof field.range.min.value === \"string\") ? (quote + field.range.min.value + quote) : field.range.min.value;\n\t\t\t\tconst maxValue = (typeof field.range.max.value === \"string\") ? (quote + field.range.max.value + quote) : field.range.max.value;\n\t\t\t\tthis.props.onChange(rowKey === 0 ? minValue : maxValue);\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tvalueSelected: rowKey\n\t\t});\n\t}\n\n\tonValueFilter(filterString) {\n\t\tthis.setState({ valueFilterText: filterString });\n\t}\n\n\tonFunctionTableClick(row, evt, rowKey) {\n\t\tthis.setState({\n\t\t\tfunctionSelected: rowKey\n\t\t});\n\t}\n\n\tonFunctionTableDblClick(evt, rowKey, index) {\n\t\tlet field;\n\t\tif (this.state.functionCategory === this.recentUseCat) {\n\t\t\tfield = this.props.controller.getExpressionRecentlyUsed()[rowKey];\n\t\t} else {\n\t\t\tfield = this.props.functionList[this.state.functionCategory].functionList[rowKey];\n\t\t\tthis.props.controller.updateExpressionRecentlyUsed(field);\n\t\t}\n\t\tconst value = field.value;\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(value);\n\t\t}\n\t}\n\n\tonFunctionFilter(filterString) {\n\t\tthis.setState({ functionFilterText: filterString });\n\t}\n\n\tsetSortColumn(table, spec) {\n\t\tswitch (table) {\n\t\tcase \"fieldTable\": {\n\t\t\t// const sortedData = this.sortTableRows(this.state.currentFieldDataset, spec);\n\t\t\tthis.setState({ fieldTableSortSpec: spec }); // , currentFieldDataset: sortedData });\n\t\t\tbreak;\n\t\t}\n\t\tcase \"valuesTable\": {\n\t\t\tthis.setState({ valuesTableSortSpec: spec });\n\t\t\tbreak;\n\t\t}\n\t\tcase \"functionTable\": {\n\t\t\tthis.setState({ functionTableSortSpec: spec });\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t}\n\t}\n\n\tsortTableRows(data, spec) {\n\t\tlet colIdx = 0;\n\n\t\tif (data.length > 0) {\n\t\t\tconst tableColumns = data[0].columns;\n\t\t\tfor (let idx = 0; idx < tableColumns.length; idx++) {\n\t\t\t\tif (tableColumns[idx].column === spec.column) {\n\t\t\t\t\tcolIdx = idx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sortedData = sortBy(data, function(row) {\n\t\t\t\treturn row.columns[colIdx].value;\n\t\t\t});\n\t\t\tif (spec.direction === SORT_DIRECTION.DESC) {\n\t\t\t\tsortedData.reverse();\n\t\t\t}\n\t\t\treturn sortedData;\n\t\t}\n\t\treturn data;\n\t}\n\n\t// Determine if field should be quoted - quote if the field name contains special characters\n\tshouldQuoteField(field) {\n\t\treturn field.match(FIELDS_SPECIAL_CHARACTERS_REGEX) !== null;\n\t}\n\n\tcreateContentObject(label) {\n\t\tlet disabled = true;\n\t\tif (label) {\n\t\t\tdisabled = false;\n\t\t}\n\t\tconst expressionTableCellContent = (\n\t\t\t<span className=\"properties-expr-table-cell\">\n\t\t\t\t{label}\n\t\t\t</span>\n\t\t);\n\t\tconst expressionTableCellContentWithTooltip = (\n\t\t\t<TruncatedContentTooltip\n\t\t\t\tcontent={expressionTableCellContent}\n\t\t\t\ttooltipText={label}\n\t\t\t\tdisabled={disabled}\n\t\t\t/>\n\t\t);\n\t\tconst contentObject = (\n\t\t\t<div className=\"properties-table-cell-control\">\n\t\t\t\t{expressionTableCellContentWithTooltip}\n\t\t\t</div>\n\t\t);\n\n\t\treturn contentObject;\n\t}\n\n\t_makeDatasetFields(dataset, fieldDataset) {\n\t\tconst fieldColumn = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELD_COLUMN);\n\t\tconst fieldColumnDesc = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELD_COLUMN_DESCRIPTION);\n\t\tconst storageColumn = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_STORAGE_COLUMN);\n\t\tconst dropdownLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELDS_DROPDOWN_TITLE);\n\t\tconst fieldsCatInfo = {\n\t\t\tid: \"fields\",\n\t\t\tlocLabel: dropdownLabel,\n\t\t\tfield_columns: {\n\t\t\t\tfield_column_info: {\n\t\t\t\t\tlocLabel: fieldColumn,\n\t\t\t\t\tdescLabel: fieldColumnDesc\n\t\t\t\t},\n\t\t\t\tvalue_column_info: {\n\t\t\t\t\tlocLabel: this.valueColumn,\n\t\t\t\t\tdescLabel: this.valueColumnDesc\n\t\t\t\t},\n\t\t\t\tadditional_column_info: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"storage\",\n\t\t\t\t\t\tlocLabel: storageColumn\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t};\n\n\t\tconst fieldsTableInfo = {\n\t\t\tid: \"fields\",\n\t\t\tfield_value_groups: []\n\t\t};\n\t\tdataset.forEach((field) => {\n\t\t\tvar entry = {\n\t\t\t\tid: field.name,\n\t\t\t\tadditional_column_entries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"storage\",\n\t\t\t\t\t\tvalue: field.type\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t\tif (field.metadata.values) {\n\t\t\t\tentry.values = [];\n\t\t\t\tfield.metadata.values.forEach((val) => {\n\t\t\t\t\tentry.values.push({ value: val });\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (field.metadata.range) {\n\t\t\t\tentry.range = {};\n\t\t\t\tif (field.metadata.range.min) {\n\t\t\t\t\tentry.range.min = { value: field.metadata.range.min };\n\t\t\t\t}\n\t\t\t\tif (field.metadata.range.max) {\n\t\t\t\t\tentry.range.max = { value: field.metadata.range.max };\n\t\t\t\t}\n\t\t\t}\n\t\t\tfieldsTableInfo.field_value_groups.push(entry);\n\t\t});\n\t\t// if fields already exists in metadata, update it instead of adding it to the front\n\t\tlet catIndex;\n\t\tlet infoIndex;\n\t\tfor (let index = 0; index < fieldDataset.field_categories.length; index++) {\n\t\t\tif (fieldDataset.field_categories[index].id === \"fields\") {\n\t\t\t\tcatIndex = index;\n\t\t\t}\n\t\t}\n\t\tfor (let index = 0; index < fieldDataset.field_table_info.length; index++) {\n\t\t\tif (fieldDataset.field_table_info[index].id === \"fields\") {\n\t\t\t\tinfoIndex = index;\n\t\t\t}\n\t\t}\n\t\tif (typeof catIndex !== \"undefined\") {\n\t\t\tfieldDataset.field_categories[catIndex] = fieldsCatInfo;\n\t\t} else {\n\t\t\tfieldDataset.field_categories.unshift(fieldsCatInfo);\n\t\t}\n\t\tif (typeof infoIndex !== \"undefined\") {\n\t\t\tfieldDataset.field_table_info[infoIndex] = fieldsTableInfo;\n\t\t} else {\n\t\t\tfieldDataset.field_table_info.unshift(fieldsTableInfo);\n\t\t}\n\t\treturn fieldDataset;\n\t}\n\n\n\t_makeFieldAndValuesContent() {\n\t\t// Make field and value tables headers.\n\t\tconst fieldCategory = this._makeFieldDropdown();\n\t\tconst fieldHeaders = [];\n\t\tconst valueHeader = [];\n\t\tconst sortable = [\"fieldName\"];\n\n\t\tlet categoryInfo = null;\n\t\tlet tableContents = null;\n\t\tif (this.state.fieldCategory === this.recentUseCat) {\n\t\t\t// get recently used category info and table contents\n\t\t\tcategoryInfo = this.recentUseCatInfo;\n\t\t\ttableContents = { id: this.recentUseCat, field_value_groups: this.props.controller.getExpressionFieldsRecentlyUsed() };\n\t\t} else {\n\t\t\t// get category info and table contents\n\t\t\tfor (let index = 0; index < this.fields.field_categories.length; index++) {\n\t\t\t\tif (this.state.fieldCategory === this.fields.field_categories[index].id) {\n\t\t\t\t\tcategoryInfo = this.fields.field_categories[index];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let index = 0; index < this.fields.field_table_info.length; index++) {\n\t\t\t\tif (this.state.fieldCategory === this.fields.field_table_info[index].id) {\n\t\t\t\t\ttableContents = this.fields.field_table_info[index];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (categoryInfo) {\n\t\t\tfieldHeaders.push({\n\t\t\t\tkey: \"fieldName\",\n\t\t\t\tlabel: categoryInfo.field_columns.field_column_info.locLabel,\n\t\t\t\tdescription: categoryInfo.field_columns.field_column_info.descLabel,\n\t\t\t\tresizable: true\n\t\t\t});\n\t\t\tvalueHeader.push({\n\t\t\t\tkey: \"values\",\n\t\t\t\tlabel: categoryInfo.field_columns.value_column_info.locLabel,\n\t\t\t\tdescription: categoryInfo.field_columns.value_column_info.descLabel\n\t\t\t});\n\t\t\tif (categoryInfo.field_columns.additional_column_info) {\n\t\t\t\tfor (let i = 0; i < categoryInfo.field_columns.additional_column_info.length; i++) {\n\t\t\t\t\tsortable.push(categoryInfo.field_columns.additional_column_info[i].id);\n\t\t\t\t\tfieldHeaders.push({ key: categoryInfo.field_columns.additional_column_info[i].id, label: categoryInfo.field_columns.additional_column_info[i].locLabel });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tlet tableData = [];\n\t\tlet valuesTableData = [];\n\t\tif (tableContents && tableContents.field_value_groups) {\n\t\t\tfor (let index = 0; index < tableContents.field_value_groups.length; index++) {\n\t\t\t\tconst field = tableContents.field_value_groups[index];\n\t\t\t\tconst fieldColumns = [];\n\t\t\t\tif (!this.state.fieldFilterText || this.state.fieldFilterText.length === 0 ||\n\t\t\t\t\t\t\t\t(field.id.toLowerCase().indexOf(this.state.fieldFilterText.toLowerCase()) > -1)) {\n\t\t\t\t\tfieldColumns.push({ column: \"fieldName\", content: this.createContentObject(field.id), value: field.id });\n\t\t\t\t\tif (field.additional_column_entries) {\n\t\t\t\t\t\tthis._makeAdditionalColumnsContent(field, fieldColumns);\n\t\t\t\t\t}\n\t\t\t\t\ttableData.push({ columns: fieldColumns, rowKey: index });\n\t\t\t\t\tif (index === this.state.fieldSelected) {\n\t\t\t\t\t\tvaluesTableData = this._makeValuesContent(field, valuesTableData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// set the selected row and adjust if the table is sorted.\n\t\tlet selectedField = this.state.fieldSelected;\n\t\tif (this.state.fieldTableSortSpec !== null) {\n\t\t\ttableData = this.sortTableRows(tableData, this.state.fieldTableSortSpec);\n\t\t\tselectedField = tableData.findIndex((row) => row.rowKey === this.state.fieldSelected);\n\t\t}\n\n\t\t// set the selected row and adjust if the table is sorted.\n\t\tlet selectedValue = this.state.valueSelected;\n\t\tif (this.state.valuesTableSortSpec !== null) {\n\t\t\tvaluesTableData = this.sortTableRows(valuesTableData, this.state.valuesTableSortSpec);\n\t\t\tselectedValue = valuesTableData.findIndex((row) => row.rowKey === this.state.valueSelected);\n\t\t}\n\n\t\tconst fieldsTableLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELDS_TABLE_LABEL);\n\t\tconst valuesTableLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_VALUES_TABLE_LABEL);\n\t\tconst emptyFieldsLabel = get(this.resources, MESSAGE_KEYS.EXPRESSION_FIELDS_EMPTY_TABLE_LABEL,\n\t\t\tformatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FIELDS_EMPTY_TABLE_LABEL));\n\t\tconst emptyValuesLabel = get(this.resources, MESSAGE_KEYS.EXPRESSION_VALUES_EMPTY_TABLE_LABEL,\n\t\t\tformatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_VALUES_EMPTY_TABLE_LABEL));\n\n\t\treturn (\n\t\t\t<div className=\"properties-field-and-values-table-container\" >\n\t\t\t\t{fieldCategory}\n\t\t\t\t<div className=\"properties-field-table-container\" >\n\t\t\t\t\t<FlexibleTable\n\t\t\t\t\t\tcolumns={fieldHeaders}\n\t\t\t\t\t\tdata={tableData}\n\t\t\t\t\t\tsortable={sortable}\n\t\t\t\t\t\tfilterable={[\"fieldName\"]}\n\t\t\t\t\t\tonFilter={this.onFieldFilter}\n\t\t\t\t\t\trows={EXPRESSION_TABLE_ROWS}\n\t\t\t\t\t\ttableLabel={fieldsTableLabel}\n\t\t\t\t\t\trowSelection={ROW_SELECTION.SINGLE}\n\t\t\t\t\t\tupdateRowSelections={this.onFieldTableClick}\n\t\t\t\t\t\tselectedRows={[selectedField]}\n\t\t\t\t\t\tonRowDoubleClick={this.onFieldTableDblClick}\n\t\t\t\t\t\tonSort={this.setSortColumn.bind(this, \"fieldTable\")}\n\t\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\t\temptyTablePlaceholder={emptyFieldsLabel}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"properties-value-table-container\" >\n\t\t\t\t\t<FlexibleTable\n\t\t\t\t\t\tcolumns={valueHeader}\n\t\t\t\t\t\tdata={valuesTableData}\n\t\t\t\t\t\tsortable={[\"values\"]}\n\t\t\t\t\t\tfilterable={[\"values\"]}\n\t\t\t\t\t\tonFilter={this.onValueFilter}\n\t\t\t\t\t\trows={EXPRESSION_TABLE_ROWS}\n\t\t\t\t\t\ttableLabel={valuesTableLabel}\n\t\t\t\t\t\trowSelection={ROW_SELECTION.SINGLE}\n\t\t\t\t\t\tupdateRowSelections={this.onValueTableClick}\n\t\t\t\t\t\tselectedRows={[selectedValue]}\n\t\t\t\t\t\tonRowDoubleClick={this.onValueTableDblClick}\n\t\t\t\t\t\tonSort={this.setSortColumn.bind(this, \"valuesTable\")}\n\t\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\t\temptyTablePlaceholder={emptyValuesLabel}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n\n\t_makeValuesContent(field, valuesTableData) {\n\t\tconst minLabel = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_MIN_LABEL);\n\t\tconst maxLabel = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_MAX_LABEL);\n\t\tif (field.values) {\n\t\t\tfor (let idx = 0; idx < field.values.length; idx++) {\n\t\t\t\tthis._addValueRow(field.values[idx].value, idx, valuesTableData);\n\t\t\t}\n\t\t} else if (field.range) {\n\t\t\tif (field.range.min) {\n\t\t\t\tthis._addValueRow(minLabel + \": \" + field.range.min.value, 0, valuesTableData);\n\t\t\t}\n\t\t\tif (field.range.max) {\n\t\t\t\tthis._addValueRow(maxLabel + \": \" + field.range.max.value, 1, valuesTableData);\n\t\t\t}\n\t\t}\n\t\treturn valuesTableData;\n\t}\n\n\t_addValueRow(content, index, valuesTableData) {\n\t\tif (!this.state.valueFilterText || this.state.valueFilterText.length === 0 ||\n\t\t\t\t\t(String(content).toLowerCase()\n\t\t\t\t\t\t.indexOf(this.state.valueFilterText.toLowerCase()) > -1)) {\n\t\t\tconst valueColumns = [{ column: \"values\", content: this.createContentObject(content), value: content }];\n\t\t\tvaluesTableData.push({ columns: valueColumns, rowKey: index });\n\t\t}\n\t}\n\n\t_makeFunctionsContent() {\n\t\tif (this.props.functionList) {\n\t\t\tconst categories = Object.keys(this.props.functionList);\n\t\t\tconst selectCategory = this._makeFunctionDropdown(categories);\n\t\t\tconst functionsTable = this._makeFunctionsTable(categories);\n\t\t\treturn (\n\t\t\t\t<div className=\"properties-expression-function-table-container\" >\n\t\t\t\t\t{selectCategory}\n\t\t\t\t\t{functionsTable}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (<span>formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_NO_FUNCTIONS);</span>);\n\t}\n\n\t_makeAdditionalColumnsContent(field, fieldColumns) {\n\t\tfor (let i = 0; i < field.additional_column_entries.length; i++) {\n\t\t\tfieldColumns.push({ column: field.additional_column_entries[i].id,\n\t\t\t\tcontent: this.createContentObject(field.additional_column_entries[i].value), value: field.additional_column_entries[i].value });\n\t\t}\n\t}\n\n\t_makeFunctionDropdown(categories) {\n\t\tlet items = categories.map((val, index) => ({ value: val, label: this.props.functionList[val].locLabel }));\n\t\t// Add \"Recently Used\" category as second category\n\t\tconst first = items.slice(0, 1);\n\t\tconst last = items.slice(1);\n\t\titems = first.concat({ value: this.recentUseCat, label: this.recentUseCat }, last);\n\t\tconst label = (this.state.functionCategory === this.recentUseCat) ? this.recentUseCat : this.props.functionList[this.state.functionCategory].locLabel;\n\t\tconst header = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.TABLE_SEARCH_HEADER);\n\t\tconst listBoxMenuIconTranslationIds = {\n\t\t\t\"close.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLOSEMENU),\n\t\t\t\"open.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_OPENMENU)\n\t\t};\n\t\treturn (\n\t\t\t<div className=\"properties-expression-function-select\">\n\t\t\t\t<Dropdown\n\t\t\t\t\tid={\"properties-expression-function-select-dropdown-\" + uuid4()}\n\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\titems={items}\n\t\t\t\t\tonChange={this.onFunctionCatChange}\n\t\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\t\ttitleText={header}\n\t\t\t\t/>\n\t\t\t</div>);\n\t}\n\n\t_makeFieldDropdown() {\n\t\tconst items = [];\n\t\tfor (let i = 0; i < this.fields.field_categories.length; i++) {\n\t\t\titems.push({ value: this.fields.field_categories[i].id, label: this.fields.field_categories[i].locLabel });\n\t\t}\n\t\tconst first = items.slice(0, 1);\n\t\tconst last = items.slice(1);\n\t\tconst newItems = first.concat({ value: this.recentUseCat, label: this.recentUseCat }, last);\n\t\tconst label = (this.state.fieldCategory === this.recentUseCat) ? this.recentUseCat : items[0].label;\n\t\tconst header = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.TABLE_SEARCH_HEADER);\n\t\tconst listBoxMenuIconTranslationIds = {\n\t\t\t\"close.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLOSEMENU),\n\t\t\t\"open.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_OPENMENU)\n\t\t};\n\t\treturn (\n\t\t\t<div className=\"properties-expression-field-select\">\n\t\t\t\t<Dropdown\n\t\t\t\t\tid={\"properties-expression-field-select-dropdown-\" + uuid4()}\n\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\titems={newItems}\n\t\t\t\t\tonChange={this.onFieldCatChange}\n\t\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\t\ttitleText={header}\n\t\t\t\t/>\n\t\t\t</div>);\n\t}\n\n\n\t_makeFunctionsTable(categories) {\n\t\tconst headers = [];\n\t\tconst functionColumn = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_FUNCTION_COLUMN);\n\t\tconst returnColumn = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_RETURN_COLUMN);\n\n\n\t\theaders.push({ key: \"function\", label: functionColumn, width: 73, resizable: true });\n\t\theaders.push({ key: \"return\", label: returnColumn, width: 27 });\n\t\tconst table = this._buildFunctionTable(this.state.functionCategory);\n\n\t\tlet data = table.rows;\n\t\tlet selectedFunction = this.state.functionSelected;\n\t\tif (this.state.functionTableSortSpec !== null) {\n\t\t\tdata = this.sortTableRows(data, this.state.functionTableSortSpec);\n\t\t\tselectedFunction = data.findIndex((row) => row.rowKey === this.state.functionSelected);\n\t\t}\n\t\tconst functionsTableLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_FUNCTIONS_TABLE_LABEL);\n\t\tconst functionsEmptyLabel = get(this.resources, MESSAGE_KEYS.EXPRESSION_NO_FUNCTIONS,\n\t\t\tformatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_NO_FUNCTIONS));\n\n\t\treturn (\n\t\t\t<div className=\"properties-functions-table-container\" >\n\t\t\t\t<div className=\"properties-functions-table\" >\n\t\t\t\t\t<FlexibleTable\n\t\t\t\t\t\tcolumns={headers}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tsortable={[\"function\", \"return\"]}\n\t\t\t\t\t\tfilterable={[\"function\"]}\n\t\t\t\t\t\tonFilter={this.onFunctionFilter}\n\t\t\t\t\t\trows={EXPRESSION_TABLE_ROWS}\n\t\t\t\t\t\ttableLabel={functionsTableLabel}\n\t\t\t\t\t\trowSelection={ROW_SELECTION.SINGLE}\n\t\t\t\t\t\tupdateRowSelections={this.onFunctionTableClick}\n\t\t\t\t\t\tselectedRows={[selectedFunction]}\n\t\t\t\t\t\tonRowDoubleClick={this.onFunctionTableDblClick}\n\t\t\t\t\t\tonSort={this.setSortColumn.bind(this, \"functionTable\")}\n\t\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\t\temptyTablePlaceholder={functionsEmptyLabel}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"properties-help-table-container\" >\n\t\t\t\t\t{table.helpContainer}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_buildFunctionTable(category) {\n\t\tconst table = { rows: [], helpContainer: (<div />) };\n\t\tconst categoryFunctions = (category === this.recentUseCat) ? this.props.controller.getExpressionRecentlyUsed() : this.props.functionList[category].functionList;\n\t\tif (categoryFunctions) {\n\t\t\tfor (let index = 0; index < categoryFunctions.length; index++) {\n\t\t\t\tconst catFunction = categoryFunctions[index];\n\t\t\t\tconst columns = [];\n\t\t\t\tif (!this.state.functionFilterText || this.state.functionFilterText.length === 0 ||\n\t\t\t\t\t(catFunction.locLabel.toLowerCase().indexOf(this.state.functionFilterText.toLowerCase()) > -1)) {\n\t\t\t\t\tconst returnType = catFunction.locReturnType ? catFunction.locReturnType : catFunction.return_type;\n\t\t\t\t\tcolumns.push({ column: \"function\", content: this.createContentObject(catFunction.locLabel), value: catFunction.locLabel });\n\t\t\t\t\tcolumns.push({ column: \"return\", content: this.createContentObject(returnType), value: returnType });\n\t\t\t\t\ttable.rows.push({ columns: columns, rowKey: index });\n\t\t\t\t\tif (index === this.state.functionSelected) {\n\t\t\t\t\t\ttable.helpContainer = (\n\t\t\t\t\t\t\t<div className=\"properties-function-help-text\" >\n\t\t\t\t\t\t\t\t<span className=\"properties-function-help-command\">{catFunction.locLabel}:</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>{catFunction.help}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn table;\n\t}\n\n\trender() {\n\t\tconst fieldAndValueTable = this._makeFieldAndValuesContent();\n\t\tconst functionsTable = this._makeFunctionsContent();\n\t\tconst fieldsTab = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_FIELD_TAB);\n\t\tconst functionsTab = formatMessage(this.reactIntl,\n\t\t\tMESSAGE_KEYS.EXPRESSION_FUNCTIONS_TAB);\n\t\tlet content = null;\n\n\t\tif (this.state.selectedIndex === 0) {\n\t\t\tcontent = fieldAndValueTable;\n\t\t} else if (this.state.selectedIndex === 1) {\n\t\t\tcontent = functionsTable;\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div className=\"properties-expression-selection-fieldOrFunction\" >\n\t\t\t\t<div className=\"properties-expression-selection-content-switcher\" >\n\t\t\t\t\t<ContentSwitcher onChange={this.onSwitch.bind(this)} selectedIndex={this.state.selectedIndex}>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tkey={0}\n\t\t\t\t\t\t\tname={\"expresson-builder-fields-tab\"}\n\t\t\t\t\t\t\tclassName={\"expresson-builder-fields-tab\"}\n\t\t\t\t\t\t\ttext={fieldsTab}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tkey={1}\n\t\t\t\t\t\t\tname={\"expresson-builder-function-tab\"}\n\t\t\t\t\t\t\tclassName={\"expresson-builder-function-tab\"}\n\t\t\t\t\t\t\ttext={functionsTab}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ContentSwitcher>\n\t\t\t\t</div>\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionSelectFieldOrFunction.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tonChange: PropTypes.func,\n\tfunctionList: PropTypes.array,\n\tlanguage: PropTypes.string\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"carbon-components-react\";\n\nimport Tooltip from \"./../../../../tooltip/tooltip\";\nimport { v4 as uuid4 } from \"uuid\";\nimport classNames from \"classnames\";\n\n\nexport default class ExpressionSelectOperator extends React.Component {\n\n\tonOperatorClick(value, evt) {\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(value);\n\t\t}\n\t}\n\n\t_makeOperatorContent() {\n\t\tif (this.props.operatorList) {\n\t\t\tconst operatorButtons = [];\n\t\t\tthis.props.operatorList.forEach((operator, index) => {\n\t\t\t\tconst tooltipId = uuid4() + \"-tooltip-expression-operator\";\n\t\t\t\tconst tooltip = (\n\t\t\t\t\t<div className=\"properties-tooltips\">\n\t\t\t\t\t\t{operator.help}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\toperatorButtons.push(\n\t\t\t\t\t<div className=\"properties-operator-tooltip-container\" key={\"expression-operator-\" + index}>\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tid={tooltipId}\n\t\t\t\t\t\t\ttip={tooltip}\n\t\t\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classNames(\"properties-operator-button\", { \"first\": (index % 2 === 0),\n\t\t\t\t\t\t\t\t\t\"second\": !(index % 2 === 0) })}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tkind=\"tertiary\"\n\t\t\t\t\t\t\t\tonClick={this.onOperatorClick.bind(this, operator.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"properties-operator-button-label\">\n\t\t\t\t\t\t\t\t\t{operator.locLabel}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn (\n\t\t\t\t<div className=\"properties-operator-container\" >\n\t\t\t\t\t{operatorButtons}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (<div />);\n\t}\n\trender() {\n\t\tconst operatorDiv = this._makeOperatorContent();\n\t\treturn (\n\t\t\t<div className=\"properties-expression-selection-operator\" >\n\t\t\t\t{operatorDiv}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionSelectOperator.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tonChange: PropTypes.func,\n\toperatorList: PropTypes.array\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ExpressionSelectFieldOrFunction from \"./expression-select-field-function.jsx\";\n\nimport ExpressionSelectOperator from \"./expression-select-operator.jsx\";\n\nexport default class ExpressionSelectionPanel extends React.Component {\n\trender() {\n\t\tconst fieldsOrFunction = (\n\t\t\t<ExpressionSelectFieldOrFunction\n\t\t\t\tcontroller= {this.props.controller}\n\t\t\t\tonChange={this.props.onChange}\n\t\t\t\tfunctionList={this.props.functionList}\n\t\t\t\tlanguage={this.props.language}\n\t\t\t/>\n\t\t);\n\t\tconst operators = (\n\t\t\t<ExpressionSelectOperator\n\t\t\t\tcontroller= {this.props.controller}\n\t\t\t\tonChange={this.props.onChange}\n\t\t\t\toperatorList={this.props.operatorList}\n\t\t\t/>\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"properties-expression-selection-container\" >\n\t\t\t\t{operators}\n\t\t\t\t{fieldsOrFunction}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionSelectionPanel.propTypes = {\n\tcontroller: PropTypes.object.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\tfunctionList: PropTypes.array.isRequired,\n\toperatorList: PropTypes.array.isRequired,\n\tlanguage: PropTypes.string\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ExpressionControl from \"./../expression\";\nimport ExpressionSelectionPanel from \"./expression-selection-panel\";\nimport { MESSAGE_KEYS } from \"./../../../constants/constants\";\nimport { formatMessage } from \"./../../../util/property-utils\";\nimport { isEqual } from \"lodash\";\n\nexport default class ExpressionBuilder extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selection = [];\n\t\tthis.expressionInfo = props.controller.getExpressionInfo();\n\t\tthis.editorDidMount = this.editorDidMount.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\tthis.onSelectionChange = this.onSelectionChange.bind(this);\n\t\tthis.lastCursorPos = null;\n\n\t}\n\n\tonChange(newValue) {\n\t\tconst value = (typeof newValue === \"string\") ? newValue : newValue.toString();\n\t\tlet cursor = this.editor.getCursor();\n\t\tlet selectionOffset = 1;\n\t\tif (this.editor.somethingSelected()) {\n\t\t\tselectionOffset = 0;\n\t\t\tthis.editor.replaceSelection(value);\n\t\t} else {\n\t\t\tlet buffer = \" \";\n\t\t\tif (this.lastCursorPos) {\n\t\t\t\tthis.editor.setCursor(this.lastCursorPos);\n\t\t\t\tcursor = this.lastCursorPos;\n\t\t\t}\n\t\t\t// if adding to a parenth/bracket/brace expression, no need for space\n\t\t\tconst charBefore = this.editor.getLine(cursor.line)[cursor.ch - 1];\n\t\t\t// edge case of cursor being at line 0, char 0 is still handled here\n\t\t\tif ([\"(\", \"[\", \"{\"].indexOf(charBefore) !== -1) {\n\t\t\t\tbuffer = \"\";\n\t\t\t}\n\t\t\tthis.editor.replaceSelection(buffer + value);\n\t\t}\n\t\tthis._setSelection(value, cursor, selectionOffset);\n\t\t// This is needed to generate a render so that the selection will appear.\n\t\tconst exprValue = this.editor.getValue();\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, exprValue, true);\n\t\tthis.lastCursorPos = this.editor.getCursor();\n\t}\n\n\tonSelectionChange(selection) {\n\t\tthis.selection = selection;\n\t}\n\n\tonBlur(editor, evt) {\n\t\tthis.lastCursorPos = editor.getCursor();\n\t\tconst currentValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst newValue = this.editor.getValue();\n\t\tconst skipValidate = this.expressionSelectionPanel && evt && this.expressionSelectionPanel.contains(evt.relatedTarget);\n\t\t// update property value when value is updated OR value is to be validated\n\t\tif (!isEqual(currentValue, newValue) || !skipValidate) {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue, skipValidate);\n\t\t}\n\t}\n\n\teditorDidMount(editor, next) {\n\t\tthis.editor = editor;\n\t}\n\n\n\t_setSelection(value, cursor, selectionOffset) {\n\t\t// first set the selection to the first param holder of new value\n\t\tif (typeof value === \"string\") {\n\t\t\tconst firstParam = value.indexOf(\"?\");\n\t\t\tif (firstParam !== -1) {\n\t\t\t\tconst selection = { anchor: { line: cursor.line, ch: cursor.ch + firstParam + selectionOffset + 1 },\n\t\t\t\t\thead: { line: cursor.line, ch: cursor.ch + firstParam + selectionOffset } };\n\t\t\t\tthis.onSelectionChange([selection]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// if the newValue doesn't have a param holder\n\t\t// set it to the first param holder found in the expression\n\t\tconst lineCount = this.editor.lineCount();\n\t\tfor (let index = 0; index < lineCount; index++) {\n\t\t\tconst line = this.editor.getLine(index);\n\t\t\tconst paramOffset = line.indexOf(\"?\");\n\t\t\tif (paramOffset !== -1) {\n\t\t\t\tconst selection = { anchor: { line: index, ch: paramOffset + 1 },\n\t\t\t\t\thead: { line: index, ch: paramOffset } };\n\t\t\t\tthis.onSelectionChange([selection]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// if no parameter holders found then set it to end of insert string\n\t\tconst insertSelection = { anchor: { line: cursor.line, ch: cursor.ch + value.length + selectionOffset },\n\t\t\thead: { line: cursor.line, ch: cursor.ch + value.length + selectionOffset } };\n\t\tthis.onSelectionChange([insertSelection]);\n\t\treturn;\n\t}\n\n\trender() {\n\t\tconst expressionLabel = formatMessage(this.props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.EXPRESSION_BUILDER_LABEL);\n\n\t\treturn (\n\t\t\t<div className=\"properties-expression-builder\">\n\t\t\t\t<ExpressionControl\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tbuilder={false}\n\t\t\t\t\teditorDidMount={this.editorDidMount}\n\t\t\t\t\tselectionRange={this.selection}\n\t\t\t\t\tonSelectionChange={this.onSelectionChange}\n\t\t\t\t\tonBlur={this.onBlur}\n\t\t\t\t\theight={96}\n\t\t\t\t\texpressionLabel={expressionLabel}\n\t\t\t\t/>\n\t\t\t\t<div ref={ (ref) => (this.expressionSelectionPanel = ref) }>\n\t\t\t\t\t<ExpressionSelectionPanel\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\tfunctionList={this.expressionInfo.functionCategories}\n\t\t\t\t\t\toperatorList={this.expressionInfo.operators}\n\t\t\t\t\t\tlanguage={this.props.control.language}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionBuilder.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired\n};\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Base class for table controls\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { injectIntl } from \"react-intl\";\nimport { Button } from \"carbon-components-react\";\nimport { Maximize16, Minimize16 } from \"@carbon/icons-react\";\nimport { formatMessage } from \"../../../util/property-utils\";\nimport { MESSAGE_KEYS } from \"../../../constants/constants\";\n\nclass ExpressionToggle extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.buttonHandler = props.controller.getHandlers().buttonHandler || (() => null);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"properties-expression-toggle\">\n\t\t\t\t<div className=\"properties-expression-toggle-absolute\">\n\t\t\t\t\t{this.props.enableMaximize ? (<Button\n\t\t\t\t\t\tclassName=\"maximize\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\trenderIcon={Maximize16}\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t\ticonDescription={formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_MAXIMIZE_LABEL)}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst handlerStatus = this.buttonHandler({\n\t\t\t\t\t\t\t\ttype: \"maximize_tearsheet\",\n\t\t\t\t\t\t\t\tpropertyId: this.props.control.data || {}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (!handlerStatus && this.props.control.data && this.props.control.data.tearsheet_ref) {\n\t\t\t\t\t\t\t\tthis.props.controller.setActiveTearsheet(this.props.control.data.tearsheet_ref);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>) : (<Button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"minimize\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t\trenderIcon={Minimize16}\n\t\t\t\t\t\ticonDescription={formatMessage(this.reactIntl, MESSAGE_KEYS.EXPRESSION_MINIMIZE_LABEL)}\n\t\t\t\t\t\tonClick={() => this.props.controller.clearActiveTearsheet()}\n\t\t\t\t\t/>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>);\n\t}\n}\nExpressionToggle.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tenableMaximize: PropTypes.bool\n};\nexport default injectIntl(ExpressionToggle);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet CodeMirror;\nfunction register(cm) {\n\tCodeMirror = cm;\n\tCodeMirror.registerHelper(\"hint\", \"python\", pythonHint);\n}\n\n\nfunction forEach(arr, f) {\n\tfor (var e = arr.length, i = 0; i < e; ++i) {\n\t\tf(arr[i]);\n\t}\n}\n\nfunction arrayContains(arr, item) {\n\tif (!Array.prototype.indexOf) {\n\t\tvar i = arr.length;\n\t\twhile (i--) {\n\t\t\tif (arr[i] === item) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn arr.indexOf(item) !== -1;\n}\n\nfunction scriptHint(editor, _keywords, getToken) {\n\tvar cur = editor.getCursor();\n\tvar token = getToken(editor, cur);\n\tvar tprop = token;\n\tvar context;\n\t// ignore irregular word tokens\n\tif (!(/^[\\w$_]*$/).test(token.string)) {\n\t\ttoken = tprop = { start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n\t\t\tclassName: token.string === \":\" ? \"python-type\" : null };\n\t}\n\tif (!context) {\n\t\tcontext = [];\n\t}\n\tcontext.push(tprop);\n\n\tvar completionList = getCompletions(token, context);\n\tcompletionList.sort();\n\n\treturn { list: completionList,\n\t\tfrom: CodeMirror.Pos(cur.line, token.start),\n\t\tto: CodeMirror.Pos(cur.line, token.end) };\n}\n\nfunction pythonHint(editor) {\n\treturn scriptHint(editor, pythonKeywordsL, function(e, cur) {\n\t\treturn e.getTokenAt(cur);\n\t});\n}\n\n\nvar pythonKeywords = \"and del from not while as elif global or with assert else if pass yield\" +\n\"break except import print class exec in raise continue finally is return def for lambda try\";\nvar pythonKeywordsL = pythonKeywords.split(\" \");\n\nvar pythonBuiltins = \"abs divmod input open staticmethod all enumerate int ord str \" +\n\"any eval isinstance pow sum basestring execfile issubclass print super\" +\n\"bin file iter property tuple bool filter len range type\" +\n\"bytearray float list raw_input unichr callable format locals reduce unicode\" +\n\"chr frozenset long reload vars classmethod getattr map repr xrange\" +\n\"cmp globals max reversed zip compile hasattr memoryview round __import__\" +\n\"complex hash min set apply delattr help next setattr buffer\" +\n\"dict hex object slice coerce dir id oct sorted intern \";\nvar pythonBuiltinsL = pythonBuiltins.split(\" \").join(\"() \")\n\t.split(\" \");\n\nfunction getCompletions(token, context) {\n\tvar found = [];\n\tvar start = token.string;\n\tfunction maybeAdd(str) {\n\t\tif (str.lastIndexOf(start, 0) === 0 && !arrayContains(found, str)) {\n\t\t\tfound.push(str);\n\t\t}\n\t}\n\n\tfunction gatherCompletions(_obj) {\n\t\tforEach(pythonBuiltinsL, maybeAdd);\n\t\tforEach(pythonKeywordsL, maybeAdd);\n\t}\n\n\tif (context) {\n\t\tvar obj = context.pop();\n\t\tvar base = \"\";\n\n\t\tif (obj.type === \"variable\") {\n\t\t\tbase = obj.string;\n\t\t}\telse if (obj.type === \"variable-3\") {\n\t\t\tbase = \":\" + obj.string;\n\t\t}\n\t\twhile (base !== null && context.length) {\n\t\t\tbase = base[context.pop().string];\n\t\t}\n\t\tif (base !== null) {\n\t\t\tgatherCompletions(base);\n\t\t}\n\t}\n\treturn found;\n}\n\nexport {\n\tregister\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet CodeMirror;\nfunction register(cm) {\n\tCodeMirror = cm;\n\tCodeMirror.registerHelper(\"hint\", \"r\", rHint);\n}\n\nfunction forEach(arr, f) {\n\tfor (var e = arr.length, i = 0; i < e; ++i) {\n\t\tf(arr[i]);\n\t}\n}\n\nfunction arrayContains(arr, item) {\n\tif (!Array.prototype.indexOf) {\n\t\tvar i = arr.length;\n\t\twhile (i--) {\n\t\t\tif (arr[i] === item) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn arr.indexOf(item) !== -1;\n}\n\nfunction scriptHint(editor, _keywords, getToken) {\n\tvar cur = editor.getCursor();\n\tvar token = getToken(editor, cur);\n\tvar tprop = token;\n\tvar context;\n\t// ignore irregular word tokens\n\tif (!(/^[\\w$_]*$/).test(token.string)) {\n\t\ttoken = tprop = { start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n\t\t\tclassName: token.string === \":\" ? \"r-type\" : null };\n\t}\n\tif (!context) {\n\t\tcontext = [];\n\t}\n\tcontext.push(tprop);\n\n\tvar completionList = getCompletions(token, context);\n\tcompletionList.sort();\n\n\treturn { list: completionList,\n\t\tfrom: CodeMirror.Pos(cur.line, token.start),\n\t\tto: CodeMirror.Pos(cur.line, token.end) };\n}\n\nfunction rHint(editor) {\n\treturn scriptHint(editor, rKeywordsL, function(e, cur) {\n\t\treturn e.getTokenAt(cur);\n\t});\n}\n\nvar rKeywords = \"function|if|in|break|next|repeat|else|for\" +\n\t\"|return|switch|while|try|tryCatch|stop|warning|require|library\" +\n\t\"|attach|detach|source|setMethod|setGeneric|setGroupGeneric|setClass\";\nvar rKeywordsL = rKeywords.split(\"|\");\n\nvar rBuiltIns = \"zapsmall xzfile xtfrm xor writeLines writeChar writeBin write withVisible withRestarts within\" +\n\t\"withCallingHandlers withAutoprint with while which weekdays warnings warning version Vectorize vector vapply\" +\n\t\"validUTF8 validEnc utf8ToInt UseMethod url unz untracemem untrace unsplit unserialize unname unlockBinding unloadNamespace\" +\n\t\"unlist unlink unique union undebug unclass typeof tryCatch try truncate trunc trimws trigamma\" +\n\t\"transform tracingState tracemem traceback trace toupper toString topenv tolower textConnectionValue textConnection\" +\n\t\"testPlatformEquivalence tempfile tempdir tcrossprod taskCallbackManager tapply tanpi tanh tan tabulate table T t system2 system\" +\n\t\"switch sweep svd suspendInterrupts suppressWarnings suppressPackageStartupMessages suppressMessages summary sum\" +\n\t\"substring substr substitute subset sub strwrap structure strtrim strtoi strsplit strrep strptime strftime\" +\n\t\"stopifnot stop stdout stdin stderr startsWith standardGeneric srcref srcfilecopy srcfilealias srcfile sQuote sqrt sprintf split\" +\n\t\"source sort solve socketSelect socketConnection sinpi sink sinh single sin simplify2array simpleWarning simpleMessage simpleError\" +\n\t\"simpleCondition signif signalCondition sign shQuote showConnections setwd setTimeLimit setSessionTimeLimit setNamespaceInfo setHook\" +\n\t\"setequal setdiff serialize sequence seq_len seq_along seq seek searchpaths search scan scale saveRDS save sapply sample rowSums\" +\n\t\"rowsum rownames rowMeans row round RNGversion length lchoose lbeta lazyLoadDBfetch lazyLoadDBexec\" +\n\t\"RNGkind rm rle rev returnValue return retracemem restartFormals restartDescription requireNamespace require replicate replace repeat\" +\n\t\"rep_len rep removeTaskCallback remove regmatches registerS3methods registerS3method regexpr regexec Reduce Recall\" +\n\t\"readRenviron readRDS readLines readline readChar readBin Re rcond rbind rawToChar rawToBits rawShift rawConnectionValue rawConnection\" +\n\t\"raw rapply rank range R_system_version quote quit quarters qr q pushBackLength pushBack psigamma provideDimnames prod prmatrix print\" +\n\t\"prettyNum pretty Position polyroot pmin pmax pmatch pipe pi pcre_config paste0 paste parseNamespaceFile parse\" +\n\t\"packBits packageStartupMessage packageHasNamespace packageEvent package_version outer ordered order options open OlsonNames\" +\n\t\"oldClass objects nzchar numeric_version numeric NROW nrow normalizePath norm noquote nlevels ngettext NextMethod next Negate NCOL ncol\" +\n\t\"nchar nargs namespaceImportMethods namespaceImportFrom namespaceImportClasses namespaceImport namespaceExport\" +\n\t\"months mode Mod missing min mget message merge memDecompress memCompress mean max matrix match mapply Map\" +\n\t\"makeActiveBinding ls logical logb log2 log1p log10 log lockEnvironment lockBinding local loadNamespace loadingNamespaceInfo loadedNamespaces\" +\n\t\"load list2env list license licence library libcurlVersion lgamma lfactorial levels LETTERS letters lengths\" +\n\t\"lazyLoad lapply labels La_version La_library l10n_info kronecker kappa julian jitter isTRUE isSymmetric isSeekable isS4 isRestart isOpen\" +\n\t\"ISOdatetime ISOdate isNamespaceLoaded isNamespace isIncomplete isFALSE isdebugged isBaseNamespace isatty\" +\n\t\"invokeRestartInteractively invokeRestart invisible intToUtf8 intToBits intersect  acosh acos abs abbreviate\" +\n\t\"interactive interaction integer inherits importIntoEnv Im ifelse if identity identical icuSetCollate icuGetCollate iconvlist iconv I\" +\n\t\"gzfile gzcon gsub grouping grepRaw grepl grep gregexpr globalenv gl getwd gettextf gettext getTaskCallbackNames getSrcLines getRversion\" +\n\t\"getOption getNativeSymbolInfo getNamespaceVersion getNamespaceUsers getNamespaceName getNamespaceInfo getNamespaceImports getNamespaceExports\" +\n\t\"getNamespace getLoadedDLLs getHook getExportedValue geterrmessage getElement getDLLRegisteredRoutines getConnection getCallingDLLe\" +\n\t\"getCallingDLL getAllConnections get0 get gctorture2 gctorture gcinfo gc gamma function forwardsolve formatDL formatC format\" +\n\t\"formals forceAndCall force for flush floor findRestart findPackageEnv findInterval Find Filter file fifo factorial factor F extSoftVersion\" +\n\t\"expression expm1 exp exists evalq eval environmentName environmentIsLocked environment enquote endsWith Encoding\" +\n\t\"encodeString enc2utf8 enc2native emptyenv eigen eapply dynGet duplicated dump droplevels drop dQuote dput double dontCheck dirname dir\" +\n\t\"digamma difftime diff dget determinant detach det deparse delayedAssign asNamespace asinh asin\" +\n\t\"debugonce debuggingState debug date cut curlGetHeaders cumsum cumprod cummin cummax Cstack_info crossprod cospi cosh cos contributors Conj\" +\n\t\"conflicts conditionMessage conditionCall computeRestarts complex comment commandArgs colSums colnames colMeans col\" +\n\t\"closeAllConnections close clearPushBack class choose chol2inv chol chkDots check_tzones chartr charToRaw charmatch character ceiling\" +\n\t\"cbind cat casefold capabilities callCC call c bzfile by builtins browserText browserSetDebug browserCondition browser break bquote body\" +\n\t\"bitwXor bitwShiftR bitwShiftL bitwOr bitwNot bitwAnd bindtextdomain bindingIsLocked bindingIsActive beta besselY besselK besselJ besselI\" +\n\t\"basename baseenv backsolve autoloader autoload attributes attr attachNamespace attach atanh atan2 atan assign asS4 asS3\" +\n\t\"arrayInd array args Arg apply append aperm anyNA anyDuplicated any allowInterrupts all alist agrepl agrep addTaskCallback addNA\";\nvar rBuiltInsL = rBuiltIns.split(\" \");\n\nfunction getCompletions(token, context) {\n\tvar found = [];\n\tvar start = token.string;\n\tfunction maybeAdd(str) {\n\t\tif (str.lastIndexOf(start, 0) === 0 && !arrayContains(found, str)) {\n\t\t\tfound.push(str);\n\t\t}\n\t}\n\n\tfunction gatherCompletions(_obj) {\n\t\tforEach(rBuiltInsL, maybeAdd);\n\t\tforEach(rKeywordsL, maybeAdd);\n\t}\n\n\tif (context) {\n\t\tvar obj = context.pop();\n\t\tvar base = \"\";\n\n\t\tif (obj.type === \"variable\") {\n\t\t\tbase = obj.string;\n\t\t}\telse if (obj.type === \"variable-3\") {\n\t\t\tbase = \":\" + obj.string;\n\t\t}\n\t\twhile (base !== null && context.length) {\n\t\t\tbase = base[context.pop().string];\n\t\t}\n\t\tif (base !== null) {\n\t\t\tgatherCompletions(base);\n\t\t}\n\t}\n\treturn found;\n}\n\nexport {\n\tregister\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-useless-escape: \"off\" */\n\nlet CodeMirror;\nfunction register(cm) {\n\tCodeMirror = cm;\n\tCodeMirror.registerHelper(\"hint\", \"CLEM\", CLEMHint);\n\tCodeMirror.defineMode(\"CLEM\", defineMode);\n\tCodeMirror.defineMIME(\"text/x-CLEM\", \"CLEM\");\n}\n\nconst CLEMKeywords = (\"@BLANK @DIFF1 @DIFF2 @FIELD @FIELDS_BETWEEN @FIELDS_MATCHING \" +\n\"@GLOBAL_MAX @GLOBAL_MEAN @GLOBAL_MIN @GLOBAL_SDEV @GLOBAL_SUM @INDEX @LAST_NON_BLANK \" +\n\"@MAX @MEAN @MIN @MULTI_RESPONSE_SET @NULL @OFFSET @PARTITION_FIELD @PREDICTED \" +\n\"@SDEV @SINCE @SINCE0 @SUM @TARGET @TESTING_PARTITION @THIS @TODAY @TRAINING_PARTITION \" +\n\"@VALIDATION_PARTITION abs allbutfirst allbutlast alphabefore and arccos arccosh arcsin \" +\n\"arcsinh arctan arctan2 arctanh area cdf_chisq cdf_f cdf_normal cdf_t close_to COND1 \" +\n\"and COND2 COND1 or COND2 cos cosh count_equal count_greater_than count_less_than \" +\n\"count_non_nulls count_not_equal count_nulls count_substring crosses date_before \" +\n\"date_days_difference date_from_ywd date_in_days date_in_months date_in_weeks date_in_years \" +\n\"date_iso_day date_iso_week date_iso_year date_months_difference date_weeks_difference \" +\n\"date_years_difference datetime_date datetime_day datetime_day_name datetime_day_short_name \" +\n\"datetime_hour datetime_in_seconds datetime_minute datetime_month datetime_month_name \" +\n\"datetime_month_short_name datetime_now datetime_second datetime_time datetime_timestamp \" +\n\"datetime_weekday datetime_year distance div endstring exp first_index first_non_null \" +\n\"first_non_null_index fracof hasendstring hasmidstring hasstartstring hassubstring hassubstring \" +\n\"if then else elseif endif integer_bitcount integer_leastbit integer_length intof is_date \" +\n\"is_datetime is_integer is_number is_real is_string is_time is_timestamp isalphacode \" +\n\"isendstring islowercode ismidstring isnumbercode isstartstring issubstring issubstring \" +\n\"issubstring_count issubstring_lim isuppercode last last_index last_non_null last_non_null_index \" +\n\"length locchar locchar_back log log10 lowertoupper max max_index max_n MEAN mean_n member \" +\n\"min min_index min_n negate not num_points oneof or overlap pi random random0 rem replace \" +\n\"replicate round sdev_n sign sin sinh skipchar skipchar_back soundex soundex_difference sqrt \" +\n\"startstring stb_centroid_latitude stb_centroid_longitude stripchar strmember subscrs substring \" +\n\"substring_between sum_n tan tanh testbit time_before time_hours_difference time_in_hours \" +\n\"time_in_mins time_in_secs time_mins_difference\").split(\" \");\n\nfunction CLEMHint(editor, options) {\n\treturn scriptHint(editor, CLEMKeywords,\n\t\tfunction(e, cur) {\n\t\t\treturn e.getTokenAt(cur);\n\t\t},\n\t\toptions);\n}\n\nfunction scriptHint(editor, keywords, getToken, options) {\n\t// Find the token at the cursor\n\tvar cur = editor.getCursor();\n\tvar token = getToken(editor, cur);\n\tif ((/\\b(?:string|comment)\\b/).test(token.type)) {\n\t\treturn null;\n\t}\n\ttoken.state = CodeMirror.innerMode(editor.getMode(), token.state).state;\n\n\t// If it's not a 'word-style' token, ignore the token.\n\tif (!((/^[\\w$_@]*$/).test(token.string))) {\n\t\ttoken = { start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n\t\t\ttype: token.string === \".\" ? \"property\" : null };\n\t} else if (token.end > cur.ch) {\n\t\ttoken.end = cur.ch;\n\t\ttoken.string = token.string.slice(0, cur.ch - token.start);\n\t}\n\n\treturn { list: getAutoCompletions(token, keywords, options),\n\t\tfrom: CodeMirror.Pos(cur.line, token.start),\n\t\tto: CodeMirror.Pos(cur.line, token.end) };\n}\n\nfunction getAutoCompletions(token, keywords, options) {\n\tvar found = [];\n\tvar start = token.string;\n\n\tfor (var indx = 0; indx < keywords.length; indx++) {\n\t\tif (keywords[indx].lastIndexOf(start, 0) === 0 && (found.indexOf(keywords[indx]) === -1)) {\n\t\t\tfound.push(keywords[indx]);\n\t\t}\n\t}\n\n\treturn found;\n}\n\n\nfunction defineMode() {\n\n\tvar keywords = (\"@BLANK @DIFF1 @DIFF2 @FIELD @FIELDS_BETWEEN @FIELDS_MATCHING \" +\n\t\"@GLOBAL_MAX @GLOBAL_MEAN @GLOBAL_MIN @GLOBAL_SDEV @GLOBAL_SUM @INDEX @LAST_NON_BLANK \" +\n\t\"@MAX @MEAN @MIN @MULTI_RESPONSE_SET @NULL @OFFSET @PARTITION_FIELD @PREDICTED \" +\n\t\"@SDEV @SINCE @SINCE0 @SUM @TARGET @TESTING_PARTITION @THIS @TODAY @TRAINING_PARTITION \" +\n\t\"@VALIDATION_PARTITION abs allbutfirst allbutlast alphabefore and arccos arccosh arcsin \" +\n\t\"arcsinh arctan arctan2 arctanh area cdf_chisq cdf_f cdf_normal cdf_t close_to COND1 \" +\n\t\"and COND2 COND1 or COND2 cos cosh count_equal count_greater_than count_less_than \" +\n\t\"count_non_nulls count_not_equal count_nulls count_substring crosses date_before \" +\n\t\"date_days_difference date_from_ywd date_in_days date_in_months date_in_weeks date_in_years \" +\n\t\"date_iso_day date_iso_week date_iso_year date_months_difference date_weeks_difference \" +\n\t\"date_years_difference datetime_date datetime_day datetime_day_name datetime_day_short_name \" +\n\t\"datetime_hour datetime_in_seconds datetime_minute datetime_month datetime_month_name \" +\n\t\"datetime_month_short_name datetime_now datetime_second datetime_time datetime_timestamp \" +\n\t\"datetime_weekday datetime_year distance div endstring exp first_index first_non_null \" +\n\t\"first_non_null_index fracof hasendstring hasmidstring hasstartstring hassubstring hassubstring \" +\n\t\"if then else elseif endif integer_bitcount integer_leastbit integer_length intof is_date \" +\n\t\"is_datetime is_integer is_number is_real is_string is_time is_timestamp isalphacode \" +\n\t\"isendstring islowercode ismidstring isnumbercode isstartstring issubstring issubstring \" +\n\t\"issubstring_count issubstring_lim isuppercode last last_index last_non_null last_non_null_index \" +\n\t\"length locchar locchar_back log log10 lowertoupper max max_index max_n MEAN mean_n member \" +\n\t\"min min_index min_n negate not num_points oneof or overlap pi random random0 rem replace \" +\n\t\"replicate round sdev_n sign sin sinh skipchar skipchar_back soundex soundex_difference sqrt \" +\n\t\"startstring stb_centroid_latitude stb_centroid_longitude stripchar strmember subscrs substring \" +\n\t\"substring_between sum_n tan tanh testbit time_before time_hours_difference time_in_hours \" +\n\t\"time_in_mins time_in_secs time_mins_difference\").split(\" \");\n\n\tvar isSpecialChar = /[\\[\\]{}\\(\\),;\\:\\.]/;\n\tvar isDigit = /\\d/;\n\tvar isNumberChar = /[\\w\\.]/;\n\tvar isWordChar = /[\\w\\$_]/;\n\n\tvar isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\n\tfunction tokenResolve(stream, state) {\n\t\tvar ch = stream.next();\n\t\tif (ch === \"#\" && state.startOfLine) {\n\t\t\tstream.skipToEnd();\n\t\t\treturn \"meta\";\n\t\t}\n\n\t\tif (ch === \"\\\"\") {\n\t\t\ttokenString(ch, stream, state);\n\t\t\treturn \"string\";\n\t\t}\n\n\t\tif (ch === \"'\") {\n\t\t\ttokenVariable(ch, stream, state);\n\t\t\treturn \"variable\";\n\t\t}\n\n\t\tif (isSpecialChar.test(ch)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (isDigit.test(ch)) {\n\t\t\tstream.eatWhile(isNumberChar);\n\t\t\treturn \"number\";\n\t\t}\n\t\tif (isOperatorChar.test(ch)) {\n\t\t\tstream.eatWhile(isOperatorChar);\n\t\t\treturn \"operator\";\n\t\t}\n\n\t\tstream.eatWhile(isWordChar);\n\t\tvar cur = stream.current();\n\t\tif (keywords.indexOf(cur) !== -1) {\n\t\t\treturn \"keyword\";\n\t\t}\n\t\treturn \"variable\";\n\t}\n\n\tfunction tokenString(quote, stream, state) {\n\t\tvar next;\n\t\tvar end = false;\n\t\twhile (typeof (next = stream.next()) !== \"undefined\") {\n\t\t\tif (next === quote) {\n\t\t\t\tend = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (end) {\n\t\t\tstate.tokenize = null;\n\t\t}\n\t\treturn \"string\";\n\t}\n\n\tfunction tokenVariable(quote, stream, state) {\n\t\tvar next;\n\t\tvar end = false;\n\t\twhile (typeof (next = stream.next()) !== \"undefined\") {\n\t\t\tif (next === quote) {\n\t\t\t\tend = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (end) {\n\t\t\tstate.tokenize = null;\n\t\t}\n\t\treturn \"variable\";\n\t}\n\n\t// Required implementation\n\n\treturn {\n\t\tstartState: function() {\n\t\t\treturn { tokenize: null };\n\t\t},\n\n\t\ttoken: function(stream, state) {\n\t\t\tif (stream.eatSpace()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar style = (state.tokenize || tokenResolve)(stream, state);\n\t\t\treturn style;\n\t\t},\n\n\t\telectricChars: \"{}\"\n\t};\n}\n\nexport {\n\tregister\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint global-require: 0 */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport Icon from \"./../../../icons/icon.jsx\";\nimport { Button } from \"carbon-components-react\";\nimport classNames from \"classnames\";\nimport { isEqual } from \"lodash\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport WideFlyout from \"./../../components/wide-flyout\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport ExpressionBuilder from \"./expression-builder/expression-builder\";\nimport { MESSAGE_KEYS, CONDITION_MESSAGE_TYPE, DEFAULT_VALIDATION_MESSAGE } from \"./../../constants/constants\";\nimport { Calculator24 } from \"@carbon/icons-react\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES } from \"./../../constants/constants\";\nimport { get } from \"lodash\";\nimport ExpressionToggle from \"./expression-toggle/expression-toggle\";\n\nimport { register as registerPython } from \"./languages/python-hint\";\nimport { register as registerR } from \"./languages/r-hint\";\nimport { register as registerClem } from \"./languages/CLEM-hint\";\n\n// required for server side rendering.\nlet cm = null;\nif (typeof window !== \"undefined\" && typeof window.navigator !== \"undefined\") {\n\tcm = require(\"codemirror\");\n\trequire(\"codemirror/addon/hint/show-hint\");\n\trequire(\"codemirror/addon/display/placeholder\");\n\trequire(\"codemirror/addon/display/autorefresh\");\n\trequire(\"codemirror/mode/javascript/javascript\");\n\trequire(\"codemirror/addon/hint/javascript-hint\");\n\trequire(\"codemirror/addon/hint/sql-hint\");\n\trequire(\"codemirror/mode/sql/sql\");\n\trequire(\"codemirror/mode/python/python\");\n\trequire(\"codemirror/mode/r/r\");\n\tregisterPython(cm);\n\tregisterR(cm);\n\tregisterClem(cm);\n}\n\n\nconst pxPerChar = 8.5;\nconst pxPerLine = 26;\nconst defaultCharPerLine = 30;\nconst maxLineHeight = 15 * pxPerLine; // 20 lines\nconst minLineHeight = 4 * pxPerLine; // 4 lines\n\nclass ExpressionControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowExpressionBuilder: false,\n\t\t\tvalidationInProgress: false\n\t\t};\n\n\t\tthis.origHint = \"\";\n\t\tthis.expressionInfo = this.props.controller.getExpressionInfo();\n\t\tthis.handleValidate = this.handleValidate.bind(this);\n\t\tthis.hasValidate = this.hasValidate.bind(this);\n\t\tthis.cancelExpressionBuilder = this.cancelExpressionBuilder.bind(this);\n\t\tthis.hideExpressionBuilder = this.hideExpressionBuilder.bind(this);\n\t\tthis.showExpressionBuilder = this.showExpressionBuilder.bind(this);\n\t\tthis.editorDidMount = this.editorDidMount.bind(this);\n\t\tthis.addonHints = this.addonHints.bind(this);\n\t\tthis.getDatasetFields = this.getDatasetFields.bind(this);\n\t\tthis.handleBlur = this.handleBlur.bind(this);\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\n\n\t\tthis.handleChange = (editor, data, newValue) => {\n\t\t\t// this is needed when characters are added into the expression builder because\n\t\t\t// entering chars does not go through onChange() in expression builder.\n\t\t\t// This is needed to adjust the selection position in code mirror.\n\t\t\tif (Array.isArray(data.text) && data.text.length === 1 && data.text[0].length === 1 && this.props.onSelectionChange) {\n\t\t\t\t// if a string was replaced, need to calc newPos from the 'data.from' otherwise use 'data.to'\n\t\t\t\tconst newPos = (data.removed[0].length > 0) ? { line: data.from.line, ch: data.from.ch + 1 } : { line: data.to.line, ch: data.to.ch + 1 };\n\t\t\t\tthis.props.onSelectionChange([{ anchor: newPos, head: newPos }]);\n\t\t\t}\n\t\t\tif (this.state.validateIcon) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalidateIcon: null\n\t\t\t\t});\n\t\t\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, DEFAULT_VALIDATION_MESSAGE);\n\t\t\t}\n\t\t};\n\t}\n\n\t// this is needed to ensure expression builder selection works.\n\tcomponentDidUpdate(prevProps) {\n\t\tif (\n\t\t\tthis.props.selectionRange &&\n\t\t\tthis.props.selectionRange.length > 0 &&\n\t\t\t!isEqual(prevProps.selectionRange, this.props.selectionRange) &&\n\t\t\tthis.editor\n\t\t) {\n\t\t\tthis.props.selectionRange.forEach((selected) => {\n\t\t\t\tthis.editor.setSelection(selected.anchor, selected.head);\n\t\t\t});\n\t\t\tthis.editor.focus();\n\t\t}\n\t}\n\n\t// reset to the original autocomplete handler\n\tcomponentWillUnmount() {\n\t\tif (this.origHint && cm) {\n\t\t\tcm.registerHelper(\"hint\", this.props.control.language, this.origHint);\n\t\t}\n\t}\n\n\t// get the set of dataset field names\n\tgetDatasetFields() {\n\t\tconst results = [];\n\t\tconst fields = this.props.controller.getDatasetMetadataFields();\n\t\tfor (const field of fields) {\n\t\t\tresults.push(field.name);\n\t\t}\n\t\treturn results;\n\t}\n\n\t// Add the dataset field names to the autocomplete list\n\taddonHints(editor, options) {\n\t\tvar results = {};\n\t\tvar cur = editor.getCursor();\n\t\tvar token = editor.getTokenAt(cur);\n\t\tif (this.origHint) {\n\t\t\t// get the list of autocomplete names from the language autocomplete handler\n\t\t\tresults = this.origHint(editor, options);\n\n\t\t\t// add to the start of the autocomplete list the set of dataset field names that complete the\n\t\t\t// string that has been entered.\n\t\t\tvar parameters = this.getDatasetFields();\n\t\t\tfor (var i = 0; i < parameters.length; ++i) {\n\t\t\t\tconst parameter = parameters[i];\n\t\t\t\tif (parameter.lastIndexOf(token.string, 0) === 0 && results.list.indexOf(parameter) === -1) {\n\t\t\t\t\tresults.list.unshift(parameter);\n\t\t\t\t} else if (token.string === \" \" && token.type === null) {\n\t\t\t\t\tresults.list.unshift(parameter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t// Save original autocomplete handler and then register our custom handler\n\t// that will add data set filed names to autocomplete list.\n\teditorDidMount(editor, next) {\n\t\tthis.editor = editor;\n\t\t// set the default height, should be between 4 and 20 lines\n\t\tconst controlWidth = (this.expressionEditorDiv) ? this.expressionEditorDiv.clientWidth : 0;\n\t\tconst charPerLine = (controlWidth > 0) ? controlWidth / pxPerChar : defaultCharPerLine;\n\t\t// charlimit in the control sets the height within a min and max\n\t\tlet height = (this.props.control.charLimit)\n\t\t\t? Math.min((this.props.control.charLimit / charPerLine) * pxPerLine, maxLineHeight) : minLineHeight;\n\t\t// let an explicit prop override the calculated height\n\t\theight = this.props.control.rows ? pxPerLine * this.props.control.rows : height;\n\t\theight = this.props.height ? this.props.height : height;\n\t\tthis.editor.setSize(null, Math.max(Math.floor(height), minLineHeight));\n\n\t\tthis.origHint = editor.getHelper({ line: 0, ch: 0 }, \"hint\");\n\t\t// this next line is a hack to overcome a Codemirror problem.  To support SparkSQL, a subset of SQL,\n\t\t// we need to register with Codemirror the language as the value of \"text/x-hive\". When Codemirror\n\t\t// registers the autocomplete addon it registers is as \"sql\" not the subset \"text/x-hive\"\n\t\t// This hack allows use to capture the \"sql\" autocomplete handler and subsitute our custom handler\n\t\t// Same has been done for Python and R\n\t\tlet language = this.props.control.language;\n\t\tswitch (this.props.control.language) {\n\t\tcase \"text/x-hive\":\n\t\t\tlanguage = \"sql\";\n\t\t\tbreak;\n\t\tcase \"text/x-python\":\n\t\t\tlanguage = \"python\";\n\t\t\tbreak;\n\t\tcase \"text/x-rsrc\":\n\t\t\tlanguage = \"r\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t}\n\t\tif (cm) {\n\t\t\tcm.registerHelper(\"hint\", language, this.addonHints);\n\t\t}\n\n\t\tif (this.props.editorDidMount) {\n\t\t\tthis.props.editorDidMount(editor, next);\n\t\t}\n\t}\n\n\tshowExpressionBuilder() {\n\t\t// save the state from the expression builder so if enter and cancel again it will revert\n\t\tthis.initialControlValue = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tthis.initialMessage = this.props.controller.getErrorMessage(this.props.propertyId);\n\t\tthis.initialState = this.props.controller.getControlState(this.props.propertyId);\n\t\tthis.setState({ showExpressionBuilder: true });\n\t}\n\thideExpressionBuilder() {\n\t\tthis.setState({ showExpressionBuilder: false });\n\t}\n\tcancelExpressionBuilder() {\n\t\t// on cancel reset back to original value\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, this.initialControlValue);\n\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, this.initialMessage);\n\t\tthis.props.controller.updateControlState(this.props.propertyId, this.initialState);\n\t\tthis.hideExpressionBuilder();\n\t}\n\n\thandleValidate() {\n\t\tthis.setState({\n\t\t\tvalidateIcon: null,\n\t\t\tvalidationInProgress: true\n\t\t});\n\t\tconst appData = this.props.controller.getAppData();\n\t\tthis.props.controller.getHandlers().validationHandler(this.props.controller, this.props.propertyId, this.props.value, appData, (response) => {\n\t\t\tthis.props.controller.updateErrorMessage(this.props.propertyId, response); // expects \"text\" and \"type\" in response\n\t\t\tthis.setState({\n\t\t\t\tvalidateIcon: response.type,\n\t\t\t\tvalidationInProgress: false\n\t\t\t});\n\t\t\tthis.editor.display.input.blur();\n\t\t});\n\t}\n\n\thasValidate() {\n\t\treturn typeof this.props.controller.getHandlers().validationHandler === \"function\";\n\t}\n\n\thandleKeyDown(editor, evt) {\n\t\t// this is needed to move the cursor to the new line if selection is being used in the expression builder.\n\t\tif (evt.code === \"Enter\") {\n\t\t\tif (this.props.selectionRange && this.props.selectionRange.length > 0 && this.props.onSelectionChange) {\n\t\t\t\tconst newPos = { line: this.props.selectionRange[0].anchor.line + 1, ch: 0 };\n\t\t\t\tthis.props.onSelectionChange([{ anchor: newPos, head: newPos }]);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleBlur(editor, evt) {\n\t\tif (this.props.onBlur) {\n\t\t\t// this will ensure the expression builder can save values onBlur\n\t\t\tthis.props.onBlur(editor, evt);\n\t\t} else {\n\t\t\tconst newValue = this.editor.getValue();\n\t\t\t// don't validate when opening the expression builder\n\t\t\tconst skipValidate = evt && evt.relatedTarget && evt.relatedTarget.classList.contains(\"properties-expression-button\");\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue, skipValidate);\n\t\t}\n\t}\n\n\t_showBuilderButton() {\n\t\t// only show the button if there are function lists available and\n\t\t// not explicitly told not to by the this.props.builder\n\t\t// TODO: Design: how to display builder outside of right flyout?\n\t\treturn this.props.builder && this.props.rightFlyout && this.expressionInfo.functionCategories && Object.keys(this.expressionInfo.functionCategories).length > 0;\n\t}\n\n\trender() {\n\t\tlet messageInfo = this.props.messageInfo;\n\t\tconst messageType = (messageInfo) ? messageInfo.type : CONDITION_MESSAGE_TYPE.INFO;\n\t\tif (messageType === CONDITION_MESSAGE_TYPE.SUCCESS) {\n\t\t\tmessageInfo = null;\n\t\t}\n\n\t\tconst theme = (this.props.state === STATES.DISABLED) ? \"disabled\" : messageType;\n\t\tconst reactIntl = this.props.controller.getReactIntl();\n\n\t\tconst button = this._showBuilderButton() ? (\n\t\t\t<Button kind=\"ghost\" size=\"small\"\n\t\t\t\tclassName=\"properties-expression-button\"\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\tonClick={this.showExpressionBuilder}\n\t\t\t\trenderIcon={Calculator24}\n\t\t\t\ticonDescription={formatMessage(reactIntl, MESSAGE_KEYS.EXPRESSION_BUILDER_ICON_DESCRIPTION)}\n\t\t\t\ttooltipPosition=\"right\"\n\t\t\t\thasIconOnly\n\t\t\t/>)\n\t\t\t: null;\n\n\t\tlet validateIcon = null;\n\t\tif (this.state.validateIcon) {\n\t\t\tvalidateIcon = (\n\t\t\t\t<div className=\"icon validateIcon\">\n\t\t\t\t\t<Icon type={this.state.validateIcon} className={`properties-validation-icon-${this.state.validateIcon}`} />\n\t\t\t\t</div>);\n\t\t}\n\n\t\tconst validateLabel = this.state.validationInProgress ? formatMessage(reactIntl, MESSAGE_KEYS.EXPRESSION_VALIDATING_LABEL)\n\t\t\t: formatMessage(reactIntl, MESSAGE_KEYS.EXPRESSION_VALIDATE_LABEL);\n\t\tconst validateLink = this.hasValidate() && this.props.validateLink ? (\n\t\t\t<div className=\"properties-expression-validate\" disabled={this.props.state === STATES.DISABLED}>\n\t\t\t\t<Button className=\"validateLink\" kind=\"ghost\" onClick={this.handleValidate} disabled={this.props.state === STATES.DISABLED || this.state.validationInProgress}>\n\t\t\t\t\t{validateLabel}\n\t\t\t\t</Button>\n\t\t\t\t{validateIcon}\n\t\t\t</div>)\n\t\t\t: null;\n\t\tconst mirrorOptions = {\n\t\t\tmode: this.props.control.language,\n\t\t\tplaceholder: this.props.control.additionalText,\n\t\t\ttheme: theme + \" custom\",\n\t\t\treadOnly: (this.props.state === STATES.DISABLED) ? \"nocursor\" : false,\n\t\t\textraKeys: { \"Ctrl-Space\": \"autocomplete\" },\n\t\t\tautoRefresh: true,\n\t\t\tlineNumbers: true\n\t\t};\n\t\tconst applyLabel = formatMessage(reactIntl, MESSAGE_KEYS.APPLYBUTTON_LABEL);\n\t\tconst rejectLabel = formatMessage(reactIntl, MESSAGE_KEYS.REJECTBUTTON_LABEL);\n\t\tconst expressonTitle = formatMessage(reactIntl, MESSAGE_KEYS.EXPRESSION_BUILDER_TITLE);\n\n\t\tconst flyout = this.state.showExpressionBuilder ? (<WideFlyout\n\t\t\tcancelHandler={this.cancelExpressionBuilder}\n\t\t\tokHandler={this.hideExpressionBuilder}\n\t\t\tshow={this.state.showExpressionBuilder}\n\t\t\tapplyLabel={applyLabel}\n\t\t\trejectLabel={rejectLabel}\n\t\t\ttitle={expressonTitle}\n\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t>\n\t\t\t<div>\n\t\t\t\t<ExpressionBuilder\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</WideFlyout>) : null;\n\n\t\tconst className = classNames(`properties-expression-editor ${messageType}`,\n\t\t\t{ \"properties-light-disabled\": !this.props.control.light || !this.props.controller.getLight() });\n\n\t\tconst expressionLink = (<div className=\"properties-expression-link-container\" >\n\t\t\t{button}\n\t\t\t{validateLink}\n\t\t</div>);\n\n\t\tlet header = expressionLink;\n\n\t\tif (this.props.expressionLabel) {\n\t\t\theader = (<div className=\"properties-expression-header\">\n\t\t\t\t<div className=\"properties-expression-title\">{this.props.expressionLabel}</div>\n\t\t\t\t{expressionLink}\n\t\t\t</div>);\n\t\t}\n\n\t\tlet toggleMaxMin = null;\n\t\tif (this.props.control.enableMaximize) {\n\t\t\tconst isTearsheetOpen = this.props.controller.getActiveTearsheet() === get(this, \"props.control.data.tearsheet_ref\");\n\t\t\ttoggleMaxMin = (<ExpressionToggle\n\t\t\t\tcontrol={this.props.control}\n\t\t\t\tcontroller={this.props.controller}\n\t\t\t\tenableMaximize={!isTearsheetOpen}\n\t\t\t/>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"properties-expression-editor-wrapper\" >\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t{flyout}\n\t\t\t\t<div className=\"properties-editor-container\">\n\t\t\t\t\t{header}\n\t\t\t\t\t{toggleMaxMin}\n\t\t\t\t\t<div ref={ (ref) => (this.expressionEditorDiv = ref) } data-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CodeMirror\n\t\t\t\t\t\t\tref= { (ref) => (this.codeMirror = ref)}\n\t\t\t\t\t\t\toptions={mirrorOptions}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\tonBlur={this.handleBlur}\n\t\t\t\t\t\t\teditorDidMount={this.editorDidMount}\n\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={messageInfo} inTable={this.props.tableControl} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpressionControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\teditorDidMount: PropTypes.func,\n\tbuilder: PropTypes.bool,\n\tvalidateLink: PropTypes.bool,\n\trightFlyout: PropTypes.bool,\n\tselectionRange: PropTypes.array,\n\tonSelectionChange: PropTypes.func,\n\tonBlur: PropTypes.func,\n\texpressionLabel: PropTypes.oneOfType([\n\t\tPropTypes.object,\n\t\tPropTypes.string\n\t]),\n\theight: PropTypes.number, // height in px\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nExpressionControl.defaultProps = {\n\tbuilder: true,\n\tvalidateLink: true\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ExpressionControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { PasswordInput, Form } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport { formatMessage } from \"./../../util/property-utils\";\n\nclass PasswordControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t}\n\n\thandleChange(evt) {\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, evt.target.value);\n\t}\n\n\trender() {\n\t\tconst overrideShowPasswordLabel = `${this.props.control.name}.passwordShow.tooltip`;\n\t\tconst overrideHidePasswordLabel = `${this.props.control.name}.passwordHide.tooltip`;\n\n\t\tconst defaultShowPasswordLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.SHOW_PASSWORD_TOOLTIP);\n\t\tconst defaultHidePasswordLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.HIDE_PASSWORD_TOOLTIP);\n\n\t\tconst showPasswordLabel = this.props.controller.getResource(overrideShowPasswordLabel, defaultShowPasswordLabel);\n\t\tconst hidePasswordLabel = this.props.controller.getResource(overrideHidePasswordLabel, defaultHidePasswordLabel);\n\t\tconst value = this.props.value ? this.props.value : \"\";\n\t\tconst className = classNames(\"properties-pwdfield\", \"properties-input-control\", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null);\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t<Form>\n\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t{...validationProps}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t\t\ttooltipAlignment=\"end\"\n\t\t\t\t\t\tshowPasswordLabel={showPasswordLabel}\n\t\t\t\t\t\thidePasswordLabel={hidePasswordLabel}\n\t\t\t\t\t/>\n\t\t\t\t</Form>\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>);\n\t}\n}\n\nPasswordControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(PasswordControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { TextInput } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { parse, format, isValid } from \"date-fns\";\nimport { DEFAULT_DATE_FORMAT, STATES } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\n\nclass DatefieldControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t\tthis.getDateFormat = this.getDateFormat.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\n\t\tthis.value = props.value;\n\t\tif (!this.value) {\n\t\t\tthis.value = \"\";\n\t\t} else {\n\t\t\tconst date = parse(this.value, DEFAULT_DATE_FORMAT, new Date());\n\t\t\tif (isValid(date)) {\n\t\t\t\tthis.value = format(date, this.getDateFormat());\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t* date-fns date format\n\t*/\n\tgetDateFormat() {\n\t\tlet dateFormat = this.props.control.dateFormat || DEFAULT_DATE_FORMAT;\n\t\tdateFormat = dateFormat.replace(/Y/g, \"y\").replace(/D/g, \"d\");\n\t\treturn dateFormat;\n\t}\n\n\thandleChange(evt) {\n\t\tlet formattedValue = null;\n\t\tthis.value = \"\";\n\n\t\tif (evt.target.value) {\n\t\t\tthis.value = evt.target.value;\n\t\t\tconst date = parse(evt.target.value, this.getDateFormat(), new Date());\n\t\t\tif (isValid(date)) {\n\t\t\t\tformattedValue = format(date, DEFAULT_DATE_FORMAT); // save as ISO format\n\t\t\t} else {\n\t\t\t\tformattedValue = evt.target.value; // Otherwise just save as invalid entered string\n\t\t\t}\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, formattedValue);\n\t}\n\n\trender() {\n\t\tconst className = classNames(\"properties-datefield\", \"properties-input-control\", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null);\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t<TextInput\n\t\t\t\t\t{...validationProps}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\tvalue={this.value}\n\t\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t/>\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDatefieldControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(DatefieldControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { TextInput } from \"carbon-components-react\";\nimport { parse, format, isValid } from \"date-fns\";\nimport classNames from \"classnames\";\n\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { DEFAULT_TIME_FORMAT, STATES } from \"./../../constants/constants\";\n\nclass TimefieldControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(props.propertyId);\n\n\t\tthis.value = props.value;\n\t\tif (!this.value) {\n\t\t\tthis.value = \"\";\n\t\t} else {\n\t\t\tconst date = parse(this.value, \"HH:mm:ss:xxx\", new Date());\n\t\t\tif (isValid(date)) {\n\t\t\t\tthis.value = format(date, this.getTimeFormat());\n\t\t\t}\n\t\t}\n\n\t\tthis.getTimeFormat = this.getTimeFormat.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\tgetTimeFormat() {\n\t\tconst timeFormat = this.props.control.timeFormat || DEFAULT_TIME_FORMAT;\n\t\treturn timeFormat;\n\t}\n\n\thandleChange(evt) {\n\t\tlet formattedValue = null;\n\t\tthis.value = \"\";\n\n\t\tif (evt.target.value) {\n\t\t\tthis.value = evt.target.value;\n\t\t\tconst time = parse(evt.target.value, this.getTimeFormat(), new Date());\n\t\t\tif (isValid(time)) {\n\t\t\t\tformattedValue = format(time, \"HH:mm:ss:xxx\"); // If moment is valid save as ISO format\n\t\t\t} else {\n\t\t\t\tformattedValue = evt.target.value; // Otherwise just save as invalid entered string\n\t\t\t}\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, formattedValue);\n\t}\n\n\trender() {\n\t\tconst className = classNames(\"properties-timefield\", \"properties-input-control\", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null);\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t<TextInput\n\t\t\t\t\t{...validationProps}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tplaceholder={this.props.control.additionalText}\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\tvalue={this.value}\n\t\t\t\t\tlabelText={this.props.controlItem}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t/>\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} tableOnly state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTimefieldControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.string, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(TimefieldControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport { Checkbox } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES, CARBON_ICONS } from \"./../../constants/constants.js\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { v4 as uuid4 } from \"uuid\";\nimport classNames from \"classnames\";\nimport Icon from \"./../../../icons/icon\";\n\nclass CheckboxControl extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t}\n\n\thandleChange(value) {\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\trender() {\n\t\tconst label = this.props.control.label ? this.props.control.label.text : \"\";\n\t\tconst tooltipId = uuid4() + \"-tooltip-\" + this.props.control.name;\n\t\tlet tooltip = \"\";\n\t\tif (this.props.control.description && !(this.props.state === STATES.DISABLED || this.props.state === STATES.HIDDEN) && !this.props.tableControl) {\n\t\t\ttooltip = (\n\t\t\t\t<span >{this.props.control.description.text}</span>\n\t\t\t);\n\t\t\t// If tooltip has a link, add propertyId in the link object\n\t\t\tif (this.props.control.description.link) {\n\t\t\t\tthis.props.control.description.link.propertyId = this.props.propertyId;\n\t\t\t}\n\t\t}\n\t\tconst tooltipIcon = isEmpty(tooltip) ? \"\" : (\n\t\t\t<Tooltip\n\t\t\t\tid={tooltipId}\n\t\t\t\ttip={tooltip}\n\t\t\t\tlink={this.props.control.description.link ? this.props.control.description.link : null}\n\t\t\t\ttooltipLinkHandler={this.props.controller.getHandlers().tooltipLinkHandler}\n\t\t\t\tdirection=\"bottom\"\n\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\tshowToolTipOnClick\n\t\t\t>\n\t\t\t\t<Icon type={CARBON_ICONS.INFORMATION} className=\"properties-control-description-icon-info\" />\n\t\t\t</Tooltip>\n\t\t);\n\t\tconst checkboxLabel = (\n\t\t\t<span className=\"properties-checkbox-label\">\n\t\t\t\t{label}\n\t\t\t</span>\n\t\t);\n\t\treturn (\n\t\t\t<div className={classNames(\"properties-checkbox\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t\tdata-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t>\n\t\t\t\t<Checkbox\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tlabelText={checkboxLabel}\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\tchecked={Boolean(this.props.value)}\n\t\t\t\t\thideLabel={this.props.tableControl}\n\t\t\t\t/>\n\t\t\t\t{tooltipIcon}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.controller.getErrorMessage(this.props.propertyId)} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCheckboxControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.bool, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(CheckboxControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Toggle } from \"carbon-components-react\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport classNames from \"classnames\";\nimport { formatMessage } from \"./../../util/property-utils\";\n\n\nclass ToggleControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t}\n\n\n\thandleChange(value) {\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\trender() {\n\t\tconst overrideLabelKeyOn = `${this.props.control.name}.toggle.on.label`;\n\t\tconst overrideLabelKeyOff = `${this.props.control.name}.toggle.off.label`;\n\n\t\tconst defaultOnEditLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.TOGGLE_ON_LABEL);\n\t\tconst defaultOffEditLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.TOGGLE_OFF_LABEL);\n\n\t\tconst labelOn = this.props.controller.getResource(overrideLabelKeyOn, defaultOnEditLabel);\n\t\tconst labelOff = this.props.controller.getResource(overrideLabelKeyOff, defaultOffEditLabel);\n\t\tconst size = this.props.tableControl ? \"sm\" : \"md\";\n\t\tconst toggleControl = (<Toggle\n\t\t\tid={this.id}\n\t\t\tsize={size}\n\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\ttoggled={Boolean(this.props.value)}\n\t\t\tlabelB={labelOn}\n\t\t\tlabelA={labelOff}\n\t\t\tonToggle={this.handleChange.bind(this)}\n\t\t\tlabelText={this.props.tableControl ? null : this.props.controlItem}\n\t\t/>);\n\t\tconst className = classNames(\"properties-toggle\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null);\n\t\treturn (\n\t\t\t<div className={className} data-id={ControlUtils.getDataId(this.props.propertyId)}>\n\t\t\t\t{toggleControl}\n\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nToggleControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.bool, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ToggleControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Checkbox } from \"carbon-components-react\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport classNames from \"classnames\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { intersection, isEqual } from \"lodash\";\nimport { Information16 } from \"@carbon/icons-react\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { isEmpty } from \"lodash\";\n\n\nclass CheckboxsetControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.uuid = uuid4();\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput) {\n\t\t// update property value if value isn't in current enum value.\n\t\tif (Array.isArray(this.props.value)) {\n\t\t\tconst newValue = intersection(this.props.value, this.props.controlOpts.values);\n\t\t\tif (!isEqual(this.props.value, newValue)) {\n\t\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValue, skipValidateInput);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange(val, checked) {\n\t\tlet values = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tif (typeof values === \"undefined\" || values === null) {\n\t\t\tvalues = [];\n\t\t}\n\t\tconst index = values.indexOf(val);\n\t\tif (checked && index < 0) {\n\t\t\t// Add to values\n\t\t\tvalues = values.concat([val]);\n\t\t}\n\t\tif (!(checked) && index >= 0) {\n\t\t\t// Remove from values\n\t\t\tvalues.splice(index, 1);\n\t\t}\n\t\tconst newValues = values.concat();\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValues);\n\t}\n\n\trender() {\n\n\t\tconst hidden = this.props.state === STATES.HIDDEN;\n\t\tlet controlValue = this.props.value;\n\t\tif (typeof controlValue === \"undefined\" || controlValue === null) {\n\t\t\tcontrolValue = [];\n\t\t}\n\t\tconst checkboxes = [];\n\t\tfor (var i = 0; i < this.props.control.values.length; i++) {\n\t\t\tconst val = this.props.control.values[i];\n\t\t\tconst disabled = this.props.state === STATES.DISABLED || !this.props.controlOpts.values.includes(val);\n\t\t\tlet tooltipIcon = null;\n\t\t\tif (Array.isArray(this.props.control.valueDescs) && !isEmpty(this.props.control.valueDescs[i]) && !this.props.tableControl) {\n\t\t\t\tconst tooltip = (\n\t\t\t\t\t<span >{this.props.control.valueDescs[i]}</span>\n\t\t\t\t);\n\t\t\t\ttooltipIcon = (<Tooltip\n\t\t\t\t\tid={`tooltip-${this.uuid}-${i}`}\n\t\t\t\t\ttip={tooltip}\n\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t>\n\t\t\t\t\t<Information16 disabled={disabled} className=\"properties-control-description-icon-info\" />\n\t\t\t\t</Tooltip>);\n\t\t\t}\n\t\t\tconst id = {\n\t\t\t\tname: this.props.propertyId.name,\n\t\t\t\trow: i\n\t\t\t};\n\t\t\tconst checked = (controlValue.indexOf(val) >= 0);\n\t\t\tcheckboxes.push(<div className=\"properties-checkbox-tooltip-container\" key={ControlUtils.getControlId(id, this.uuid)}>\n\t\t\t\t<Checkbox\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tid={ControlUtils.getControlId(id, this.uuid)}\n\t\t\t\t\tkey={val + i}\n\t\t\t\t\tlabelText={this.props.control.valueLabels[i]}\n\t\t\t\t\tonChange={this.handleChange.bind(this, val)}\n\t\t\t\t\tchecked={checked}\n\t\t\t\t/>\n\t\t\t\t{tooltipIcon}\n\t\t\t</div>);\n\t\t}\n\t\treturn (\n\t\t\t<fieldset>\n\t\t\t\t<legend>\n\t\t\t\t\t{this.props.controlItem}\n\t\t\t\t</legend>\n\t\t\t\t<div className={classNames(\"properties-checkboxset\", { \"hide\": this.props.state === STATES.HIDDEN })} data-id={ControlUtils.getDataId(this.props.propertyId)} >\n\t\t\t\t\t<div className={classNames(\"properties-checkboxset-container\", this.props.messageInfo ? this.props.messageInfo.type : null)}>\n\t\t\t\t\t\t{checkboxes}\n\t\t\t\t\t</div>\n\t\t\t\t\t<ValidationMessage inTable={this.props.tableControl} state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t);\n\t}\n}\n\nCheckboxsetControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tcontrolOpts: PropTypes.oneOfType([\n\t\tPropTypes.object,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst props = {\n\t\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\t\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\t\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n\t};\n\tprops.controlOpts = ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control);\n\treturn props;\n};\n\nexport default connect(mapStateToProps, null)(CheckboxsetControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { isEqual } from \"lodash\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport * as ConditionsUtils from \"./../../ui-conditions/conditions-utils.js\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { RadioButton } from \"carbon-components-react\";\nimport classNames from \"classnames\";\nimport { STATES, UPDATE_TYPE } from \"./../../constants/constants.js\";\nimport { ORIENTATIONS } from \"./../../constants/form-constants.js\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { Information16 } from \"@carbon/icons-react\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { isEmpty } from \"lodash\";\n\nclass RadiosetControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.uuid = uuid4();\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true, UPDATE_TYPE.INITIAL_LOAD);\n\t\tconst val = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tthis.setEnabledStateOfOptionalPanels(val);\n\t\tif (typeof this.props.value !== \"undefined\" && this.props.value !== null) {\n\t\t\tthis.handleCheckedDisabled(this.props.value, this.isRadioButtonDisabled(String(this.props.value)));\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t\tif (typeof this.props.value !== \"undefined\" && this.props.value !== null) {\n\t\t\tthis.handleCheckedDisabled(this.props.value, this.isRadioButtonDisabled(String(this.props.value)));\n\t\t}\n\t}\n\n\t/*\n\t* Sets the enabled and disabled states of the optional panels so the\n\t* selected button's panel is enabled and the others are disabled. This\n\t* will only do anything if there are some optional panels to insert\n\t* after each radio button provided by a SelectorPanel with its insert_panels\n\t* field set to true.\n\t*/\n\tsetEnabledStateOfOptionalPanels(targetValue) {\n\t\tif (this.props.control.optionalPanels) {\n\t\t\tconst valueSet = this.props.controlOpts;\n\t\t\tconst refState = this.props.controller.getPanelStates();\n\n\t\t\t// This populates the control.panelTree with the panels passed in and\n\t\t\t// associates them with any children they have.\n\t\t\tthis.props.controller.parsePanelTree();\n\n\t\t\tfor (let i = 0; i < valueSet.values.length; i++) {\n\t\t\t\tconst val = valueSet.values[i];\n\t\t\t\tconst state = valueSet.values[i] === targetValue ? STATES.ENABLED : STATES.DISABLED;\n\t\t\t\tConditionsUtils.updateState(refState, { \"name\": val }, state, val);\n\t\t\t}\n\n\t\t\tthis.props.controller.setPanelStates(refState);\n\n\t\t\t// Pass values as panel Ids to updatePanelChildrenStatesForPanelIds()\n\t\t\t// becuase each radio button value must be the same as the ID of its inserted panel.\n\t\t\tConditionsUtils.updatePanelChildrenStatesForPanelIds(valueSet.values, this.props.controller);\n\t\t}\n\t}\n\n\tgetOptionalPanel(val) {\n\t\treturn this.props.control.optionalPanels ? this.props.control.optionalPanels[val] : null;\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput, updateType) {\n\t\tif (this.props.value !== null && typeof this.props.value !== \"undefined\" &&\n\t\t\t!this.props.controlOpts.values.includes(this.props.value)) {\n\t\t\tlet defaultValue = null;\n\t\t\t// set to default value if default value is in filtered enum list\n\t\t\tif (this.props.control.valueDef && this.props.control.valueDef.defaultValue && this.props.controlOpts.values.includes(this.props.control.valueDef.defaultValue)) {\n\t\t\t\tdefaultValue = this.props.control.valueDef.defaultValue;\n\t\t\t}\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, defaultValue, skipValidateInput, updateType);\n\t\t}\n\t}\n\n\tconvertTargetValue(targetValue) {\n\t\tif (this.props.control.valueDef.propType === \"boolean\") {\n\t\t\treturn (targetValue === \"true\");\n\t\t} else if (this.props.control.valueDef.propType === \"integer\" ||\n\t\t\t\t\t\t\t\tthis.props.control.valueDef.propType === \"long\"\t||\n\t\t\t\t\t\t\t\tthis.props.control.valueDef.propType === \"double\") {\n\t\t\treturn Number(targetValue);\n\t\t}\n\t\treturn targetValue;\n\t}\n\n\thandleChange(evt) {\n\t\tconst oldVal = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst newVal = this.convertTargetValue(evt);\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newVal);\n\n\t\tif (oldVal !== newVal) {\n\t\t\tthis.setEnabledStateOfOptionalPanels(newVal);\n\t\t}\n\t}\n\n\tisRadioButtonDisabled(radioValue) {\n\t\tconst propState = this.props.valueStates;\n\t\tif (propState && propState[radioValue] && propState[radioValue].value) {\n\t\t\treturn propState[radioValue].value === STATES.DISABLED;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handles those cases where a radio button is both checked and disabled -\n\t * Will attempt to select another enabled radio button if possible.\n\t *\n\t * @param val A radio button enumeration value that is selected\n\t * @param itemDisabled True if the radio button is disabled\n\t */\n\thandleCheckedDisabled(val, itemDisabled) {\n\t\tif (typeof val !== \"undefined\" && val !== null && itemDisabled && this.props.state !== STATES.DISABLED) {\n\t\t\tconst control = this.props.controller.getControl(this.props.propertyId);\n\t\t\tlet newRadioSelection;\n\t\t\tconst defaultValue = this.props.control.valueDef.defaultValue;\n\t\t\tif (defaultValue && !this.isRadioButtonDisabled(defaultValue)) {\n\t\t\t\tnewRadioSelection = defaultValue;\n\t\t\t} else {\n\t\t\t\tfor (const radioValue of control.values) {\n\t\t\t\t\tif (radioValue !== val && !this.isRadioButtonDisabled(radioValue)) {\n\t\t\t\t\t\tnewRadioSelection = radioValue;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newRadioSelection) {\n\t\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newRadioSelection);\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\t\tconst hidden = this.props.state === STATES.HIDDEN;\n\t\tif (!this.props.control.values && this.props.control.controlType === \"radioset\") {\n\t\t\tthis.props.control.values = [true, false];\n\t\t\tthis.props.control.valueLabels = [\"true\", \"false\"];\n\t\t}\n\t\tconst buttons = [];\n\t\tlet wasChecked = false;\n\t\tconst valueSet = this.props.controlOpts;\n\t\tfor (var i = 0; i < valueSet.values.length; i++) {\n\t\t\tlet tooltipIcon = null;\n\t\t\tif (Array.isArray(this.props.control.valueDescs) && !isEmpty(this.props.control.valueDescs[i]) && !this.props.tableControl) {\n\t\t\t\tconst tooltip = (\n\t\t\t\t\t<span>{this.props.control.valueDescs[i]}</span>\n\t\t\t\t);\n\t\t\t\ttooltipIcon = (\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\tid={`tooltip-${this.uuid}-${i}`}\n\t\t\t\t\t\ttip={tooltip}\n\t\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\t\tclassName=\"properties-tooltips\"\n\t\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Information16 disabled={disabled} className=\"properties-control-description-icon-info\" />\n\t\t\t\t\t</Tooltip>\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst checked = valueSet.values[i] === this.props.value;\n\t\t\t// RadioButton only accepts values of type string || number\n\t\t\tconst val = (this.props.control.valueDef.propType === \"boolean\") ? String(valueSet.values[i]) : valueSet.values[i];\n\t\t\twasChecked = wasChecked || checked;\n\t\t\tconst itemDisabled = this.isRadioButtonDisabled(val);\n\t\t\tconst optionalPanel = this.getOptionalPanel(val);\n\t\t\tconst id = {\n\t\t\t\tname: this.props.propertyId.name,\n\t\t\t\trow: i\n\t\t\t};\n\t\t\tbuttons.push(\n\t\t\t\t<div key={i} className=\"properties-radioset-panel\">\n\t\t\t\t\t<div className=\"properties-radioset-tooltip\">\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tid={ControlUtils.getControlId(id, this.uuid)}\n\t\t\t\t\t\t\tdisabled={disabled || itemDisabled}\n\t\t\t\t\t\t\tlabelText={valueSet.valueLabels[i]}\n\t\t\t\t\t\t\tvalue={val}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tchecked={checked}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{tooltipIcon}\n\t\t\t\t\t</div>\n\t\t\t\t\t{optionalPanel}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-radioset \", { \"hide\": this.props.state === STATES.HIDDEN })}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\"properties-radio-button-group\", this.props.messageInfo ? this.props.messageInfo.type : null,\n\t\t\t\t\t\t{ \"horizontal\": this.props.control.orientation !== ORIENTATIONS.VERTICAL })} disabled={this.props.state === STATES.DISABLED}\n\t\t\t\t>\n\t\t\t\t\t{buttons}\n\t\t\t\t</div>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} inTable={this.props.tableControl} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRadiosetControl.propTypes = {\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrol: PropTypes.object.isRequired,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalueStates: PropTypes.object, // pass in by redux\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t\tPropTypes.bool\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\tcontrolOpts: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tvalueStates: ownProps.controller.getControlValueStates(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tcontrolOpts: ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control)\n});\n\nexport default connect(mapStateToProps, null)(RadiosetControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { SelectItem, Select, Dropdown, ComboBox } from \"carbon-components-react\";\nimport { isEqual, isEmpty } from \"lodash\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport classNames from \"classnames\";\nimport * as PropertyUtils from \"./../../util/property-utils.js\";\nimport { ControlType } from \"./../../constants/form-constants\";\nimport { MESSAGE_KEYS, STATES, UPDATE_TYPE } from \"./../../constants/constants.js\";\nimport { formatMessage } from \"./../../util/property-utils\";\n\nclass DropDown extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.emptyLabel = \"...\";\n\t\tthis.disableEmptyListDropdown = false;\n\t\tif (isEmpty(props.controlOpts)) {\n\t\t\t// For empty dropdown, get placeholder text from resources\n\t\t\tconst overrideEmptyListPlaceholder = `${this.props.control.name}.emptyList.placeholder`;\n\t\t\tconst defaultEmptyListPlaceholder = formatMessage(this.reactIntl, MESSAGE_KEYS.EMPTY_LIST_PLACEHOLDER);\n\t\t\tthis.emptyLabel = props.controller.getResource(overrideEmptyListPlaceholder, defaultEmptyListPlaceholder);\n\t\t\t// Disable empty dropdown when [property_id].emptyList.placeholder is set in resources\n\t\t\tif (this.emptyLabel !== defaultEmptyListPlaceholder) {\n\t\t\t\tthis.disableEmptyListDropdown = true;\n\t\t\t}\n\t\t} else if (props.control.additionalText) {\n\t\t\t// For non-empty dropdown, get placeholder text from place_holder_text in parameter_info\n\t\t\tthis.emptyLabel = props.control.additionalText;\n\t\t}\n\t\tthis.id = ControlUtils.getControlId(this.props.propertyId);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleComboOnChange = this.handleComboOnChange.bind(this);\n\t\tthis.handleOnInputChange = this.handleOnInputChange.bind(this);\n\t\tthis.genSchemaSelectOptions = this.genSchemaSelectOptions.bind(this);\n\t\tthis.genSelectOptions = this.genSelectOptions.bind(this);\n\t\tthis.genFieldSelectOptions = this.genFieldSelectOptions.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true, UPDATE_TYPE.INITIAL_LOAD);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t}\n\n\tgetSelectedOption(options, selectedValue) {\n\t\tconst value = PropertyUtils.stringifyFieldValue(selectedValue, this.props.control);\n\t\tlet selectedOption = options.find(function(option) {\n\t\t\treturn option.value === value;\n\t\t});\n\t\tselectedOption = typeof selectedOption === \"undefined\" ? null : selectedOption;\n\n\t\t// Show the existing value but with a warning instead of filtering it out.\n\t\tconst showExistingValue = (selectedOption === null && value);\n\t\t// user defined value\n\t\tif (showExistingValue || this.props.control.customValueAllowed) {\n\t\t\tselectedOption = {\n\t\t\t\tvalue: value,\n\t\t\t\tlabel: value\n\t\t\t};\n\t\t}\n\n\t\treturn selectedOption;\n\t}\n\n\tgenSchemaSelectOptions(selectedValue) {\n\t\tconst options = [];\n\t\t// allow for user to not select a schema\n\t\toptions.push({\n\t\t\tvalue: \"\",\n\t\t\tlabel: this.emptyLabel\n\t\t});\n\t\tif (Array.isArray(this.props.controlOpts)) {\n\t\t\tfor (const schemaName of this.props.controlOpts) {\n\t\t\t\toptions.push({\n\t\t\t\t\tvalue: schemaName,\n\t\t\t\t\tlabel: schemaName\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst selectedOption = this.getSelectedOption(options, selectedValue);\n\t\treturn {\n\t\t\toptions: options,\n\t\t\tselectedOption: selectedOption\n\t\t};\n\t}\n\n\tgenFieldSelectOptions(selectedValue) {\n\t\tconst options = [];\n\t\t// allow for user to not select a field\n\t\toptions.push({\n\t\t\tvalue: \"\",\n\t\t\tlabel: this.emptyLabel\n\t\t});\n\t\tfor (const field of this.props.controlOpts) {\n\t\t\toptions.push({\n\t\t\t\tvalue: field.name,\n\t\t\t\tlabel: field.name\n\t\t\t});\n\t\t}\n\t\tconst selectedOption = this.getSelectedOption(options, selectedValue);\n\t\treturn {\n\t\t\toptions: options,\n\t\t\tselectedOption: selectedOption\n\t\t};\n\t}\n\n\tgenSelectOptions(selectedValue) {\n\t\tconst options = [];\n\t\t// Allow for enumeration replacement\n\t\tfor (let j = 0; j < this.props.controlOpts.values.length; j++) {\n\t\t\toptions.push({\n\t\t\t\tvalue: this.props.controlOpts.values[j],\n\t\t\t\tlabel: this.props.controlOpts.valueLabels[j]\n\t\t\t});\n\t\t}\n\t\tconst selectedOption = this.getSelectedOption(options, selectedValue);\n\t\treturn {\n\t\t\toptions: options,\n\t\t\tselectedOption: selectedOption\n\t\t};\n\t}\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput, updateType) {\n\t\t// update property value if value isn't in current enum value.  Should only be used for oneofselect\n\t\tif (this.props.control.controlType === ControlType.ONEOFSELECT && this.props.value !== null && typeof this.props.value !== \"undefined\" &&\n\t\t\t!this.props.controlOpts.values.includes(this.props.value)) {\n\t\t\tlet defaultValue = null;\n\t\t\t// set to default value if default value is in filtered enum list\n\t\t\tif (this.props.control.valueDef && this.props.control.valueDef.defaultValue && this.props.controlOpts.values.includes(this.props.control.valueDef.defaultValue)) {\n\t\t\t\tdefaultValue = this.props.control.valueDef.defaultValue;\n\t\t\t} else if (this.props.control.customValueAllowed && this.props.value) {\n\t\t\t\tdefaultValue = this.props.value;\n\t\t\t}\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, defaultValue, skipValidateInput, updateType);\n\t\t}\n\t}\n\n\thandleChange(evt) {\n\t\tlet value = this.props.tableControl ? evt.target.value : evt.selectedItem.value;\n\t\tif (this.props.control.controlType === ControlType.SELECTCOLUMN) {\n\t\t\tvalue = PropertyUtils.fieldStringToValue(value, this.props.control, this.props.controller);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\thandleComboOnChange(evt) {\n\t\tlet value = evt.selectedItem && evt.selectedItem.value ? evt.selectedItem.value : \"\";\n\t\tif (this.props.control.controlType === ControlType.SELECTCOLUMN) {\n\t\t\tvalue = PropertyUtils.fieldStringToValue(value, this.props.control, this.props.controller);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t}\n\n\t// evt is null when onBlur, empty string when clicking the 'x' to clear input\n\thandleOnInputChange(evt) {\n\t\tif (evt !== null) {\n\t\t\tconst value = evt;\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, value);\n\t\t}\n\t}\n\n\trender() {\n\t\tlet dropDown;\n\t\tif (this.props.control.controlType === ControlType.SELECTSCHEMA) {\n\t\t\tdropDown = this.genSchemaSelectOptions(this.props.value);\n\t\t} else if (this.props.control.controlType === ControlType.SELECTCOLUMN) {\n\t\t\tdropDown = this.genFieldSelectOptions(this.props.value);\n\t\t} else {\n\t\t\tdropDown = this.genSelectOptions(this.props.value);\n\t\t}\n\n\t\tconst listBoxMenuIconTranslationIds = {\n\t\t\t\"close.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLOSEMENU),\n\t\t\t\"open.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_OPENMENU)\n\t\t};\n\n\t\tlet dropdownComponent = null;\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\t\tif (this.props.tableControl) {\n\t\t\tconst options = [];\n\t\t\tconst selection = dropDown.selectedOption && dropDown.selectedOption.value ? dropDown.selectedOption.value : \"\";\n\t\t\tif (!dropDown.selectedOption) {\n\t\t\t\t// need to add null option when no value set.  Shouldn't be an option for the user to select otherwise\n\t\t\t\toptions.push(<SelectItem text={this.emptyLabel} key={this.id} value=\"\" />);\n\t\t\t}\n\t\t\tfor (const option of dropDown.options) {\n\t\t\t\toptions.push(<SelectItem text={option.label} key={this.id + \"-\" + option.value} value={option.value} />);\n\t\t\t}\n\t\t\tdropdownComponent = (<Select\n\t\t\t\tid={this.id}\n\t\t\t\thideLabel\n\t\t\t\tinline\n\t\t\t\tlabelText={this.props.control.label ? this.props.control.label.text : \"\"}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED || this.disableEmptyListDropdown}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tvalue={selection}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t>\n\t\t\t\t{ options }\n\t\t\t</Select>);\n\t\t} else if (this.props.control.customValueAllowed) { // combobox dropdown not allowed in tables\n\t\t\tdropdownComponent = (<ComboBox\n\t\t\t\t{...validationProps}\n\t\t\t\tariaLabel={this.props.control.label ? this.props.control.label.text : \"\"}\n\t\t\t\tid={`${ControlUtils.getDataId(this.props.propertyId)}-dropdown`}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED || this.disableEmptyListDropdown}\n\t\t\t\tplaceholder={dropDown.selectedOption.label}\n\t\t\t\tselectedItem={dropDown.selectedOption.label}\n\t\t\t\titems={dropDown.options}\n\t\t\t\tonChange={this.handleComboOnChange}\n\t\t\t\tonInputChange={this.handleOnInputChange}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\ttitleText={this.props.controlItem}\n\t\t\t/>);\n\t\t} else {\n\t\t\tdropdownComponent = (<Dropdown\n\t\t\t\t{...validationProps}\n\t\t\t\tid={`${ControlUtils.getDataId(this.props.propertyId)}-dropdown`}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED || this.disableEmptyListDropdown}\n\t\t\t\ttype=\"default\"\n\t\t\t\titems={dropDown.options}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tselectedItem={dropDown.selectedOption}\n\t\t\t\tlabel={this.emptyLabel}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\ttitleText={this.props.controlItem}\n\t\t\t/>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-dropdown\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t>\n\t\t\t\t{dropdownComponent}\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} inTable={this.props.tableControl} tableOnly />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDropDown.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tcontrolOpts: PropTypes.oneOfType([\n\t\tPropTypes.object,\n\t\tPropTypes.array\n\t]), // pass in by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.object\n\t]), // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst props = {\n\t\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\t\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\t\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\t};\n\tif (ownProps.control.controlType === ControlType.SELECTSCHEMA) {\n\t\tprops.controlOpts = ownProps.controller.getDatasetMetadataSchemas();\n\t} else if (ownProps.control.controlType === ControlType.SELECTCOLUMN) {\n\t\tprops.controlOpts = ownProps.controller.getFilteredDatasetMetadata(ownProps.propertyId);\n\t} else {\n\t\tprops.controlOpts = ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control);\n\t}\n\treturn props;\n};\n\nexport default connect(mapStateToProps, null)(DropDown);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { MultiSelect, FilterableMultiSelect } from \"carbon-components-react\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport classNames from \"classnames\";\nimport * as PropertyUtils from \"./../../util/property-utils.js\";\nimport { MESSAGE_KEYS, STATES } from \"./../../constants/constants.js\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { isEqual, intersection, isEmpty } from \"lodash\";\n\nclass MultiSelectControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.getSelectedOption = this.getSelectedOption.bind(this);\n\t\tthis.genSelectOptions = this.genSelectOptions.bind(this);\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t\tthis.setShouldRender = this.setShouldRender.bind(this);\n\t\tthis.state = {\n\t\t\tshouldRender: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t\tthis.setShouldRender(prevProps);\n\t}\n\n\t/*\n\t* workaround for https://github.com/elyra-ai/canvas/issues/510\n\t*/\n\tsetShouldRender(prevProps) {\n\t\tif (!isEqual(this.props.controlOpts.values, prevProps.controlOpts.values) && this.state.shouldRender) {\n\t\t\tthis.setState({\n\t\t\t\tshouldRender: false\n\t\t\t});\n\t\t} else if (!this.state.shouldRender) {\n\t\t\tthis.setState({\n\t\t\t\tshouldRender: true\n\t\t\t});\n\t\t}\n\t}\n\n\tgetSelectedOption(options, selectedValues) {\n\t\tconst values = PropertyUtils.stringifyFieldValue(selectedValues, this.props.control);\n\t\tconst selectedOptions = [];\n\t\tif (values) {\n\t\t\tvalues.forEach((value) => selectedOptions.push(options.find(function(option) {\n\t\t\t\treturn option.id === value;\n\t\t\t})));\n\t\t}\n\t\treturn selectedOptions;\n\t}\n\n\tgenSelectOptions(selectedValues) {\n\t\tconst options = [];\n\t\tfor (let j = 0; j < this.props.controlOpts.values.length; j++) {\n\t\t\toptions.push({\n\t\t\t\tid: this.props.controlOpts.values[j],\n\t\t\t\tlabel: this.props.controlOpts.valueLabels[j]\n\t\t\t});\n\t\t}\n\t\tconst selectedOptions = this.getSelectedOption(options, selectedValues);\n\t\treturn {\n\t\t\toptions: options,\n\t\t\tselectedOptions: selectedOptions\n\t\t};\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput) {\n\t\tlet newValues = intersection(this.props.value, this.props.controlOpts.values);\n\t\tif (!isEqual(newValues, this.props.value)) {\n\t\t\t// set back to default values if default values is in filtered enum list\n\t\t\tif (isEmpty(newValues)) {\n\t\t\t\tif (this.props.control.valueDef && this.props.control.valueDef.defaultValue) {\n\t\t\t\t\tnewValues = intersection(this.props.control.valueDef.defaultValue, this.props.controlOpts.values);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValues, skipValidateInput);\n\t\t}\n\t}\n\n\thandleOnChange(evt) {\n\t\tconst controlValues = [];\n\t\tfor (let i = 0; i < evt.selectedItems.length; i++) {\n\t\t\tcontrolValues.push(evt.selectedItems[i].id);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, controlValues);\n\t}\n\n\trender() {\n\t\tconst multiSelectDropdown = this.genSelectOptions(this.props.value);\n\t\t// workaround to recreate react component on filter_enum\n\t\tif (!this.state.shouldRender) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst listBoxMenuIconTranslationIds = {\n\t\t\t\"close.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLOSEMENU),\n\t\t\t\"open.menu\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_OPENMENU),\n\t\t\t\"clear.all\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLEARALL),\n\t\t\t\"clear.selection\": formatMessage(this.reactIntl, MESSAGE_KEYS.DROPDOWN_TOOLTIP_CLEARSELECTION)\n\t\t};\n\n\t\tconst overrideEmptyLabelKey = `${this.props.control.name}.multiselect.dropdown.empty.label`;\n\t\tconst defaultEmptyLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.MULTISELECT_DROPDOWN_EMPTY_LABEL);\n\t\tconst overrideOptionsSelectedLabelKey = `${this.props.control.name}.multiselect.dropdown.options.selected.label`;\n\t\tconst defaultOptionsSelectedLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.MULTISELECT_DROPDOWN_OPTIONS_SELECTED_LABEL);\n\n\t\tlet label = \"\";\n\t\tif (multiSelectDropdown.selectedOptions.length === 0) { // Display message for no options selected\n\t\t\tlabel = this.props.controller.getResource(overrideEmptyLabelKey, defaultEmptyLabel);\n\t\t} else { // Display message for multiple options selected\n\t\t\tlabel = this.props.controller.getResource(overrideOptionsSelectedLabelKey, defaultOptionsSelectedLabel);\n\t\t}\n\t\tconst validationProps = ControlUtils.getValidationProps(this.props.messageInfo, this.props.tableControl);\n\n\t\tlet dropdownComponent = null;\n\t\tif (this.props.control.filterable) {\n\t\t\tdropdownComponent = (<FilterableMultiSelect\n\t\t\t\t{...validationProps}\n\t\t\t\tid={`${ControlUtils.getDataId(this.props.propertyId)}-multiselect-filterable`}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\titems={multiSelectDropdown.options}\n\t\t\t\tinitialSelectedItems={multiSelectDropdown.selectedOptions}\n\t\t\t\tonChange={this.handleOnChange}\n\t\t\t\tplaceholder={label}\n\t\t\t\ttitleText={this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t/>);\n\t\t} else {\n\t\t\tdropdownComponent = (<MultiSelect\n\t\t\t\t{...validationProps}\n\t\t\t\tid={`${ControlUtils.getDataId(this.props.propertyId)}-multiselect`}\n\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\ttranslateWithId={(id) => listBoxMenuIconTranslationIds[id]}\n\t\t\t\titems={multiSelectDropdown.options}\n\t\t\t\tselectedItems={multiSelectDropdown.selectedOptions}\n\t\t\t\tonChange={this.handleOnChange}\n\t\t\t\tlabel={label}\n\t\t\t\ttitleText={this.props.tableControl ? null : this.props.controlItem}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t/>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-dropdown\", { \"hide\": this.props.state === STATES.HIDDEN }, this.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t>\n\t\t\t\t{dropdownComponent}\n\t\t\t\t<ValidationMessage state={this.props.state} tableOnly messageInfo={this.props.messageInfo} inTable={this.props.tableControl} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nMultiSelectControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tcontrolOpts: PropTypes.object, // pass in by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst props = {\n\t\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\t\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\t\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\t\tcontrolOpts: ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control)\n\t};\n\treturn props;\n};\n\nexport default connect(mapStateToProps, null)(MultiSelectControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport FlexibleTable from \"../../components/flexible-table\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport classNames from \"classnames\";\nimport { isEqual, intersection } from \"lodash\";\n\nimport { STATES, UPDATE_TYPE } from \"../../constants/constants\";\n\nclass SomeofselectControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.genSelectOptions = this.genSelectOptions.bind(this);\n\t\tthis.updateValueFromFilterEnum = this.updateValueFromFilterEnum.bind(this);\n\t\tthis.updateSelections = this.updateSelections.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateValueFromFilterEnum(true, UPDATE_TYPE.INITIAL_LOAD);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// only update if filter options have changed. Fixes issue where filter options are updated after value in setProperties\n\t\tif (!isEqual(this.props.controlOpts, prevProps.controlOpts)) {\n\t\t\tthis.updateValueFromFilterEnum();\n\t\t}\n\t}\n\n\t// this is needed in order to reset the property value when a value is filtered out.\n\tupdateValueFromFilterEnum(skipValidateInput, updateType) {\n\t\tconst newValues = intersection(this.props.value, this.props.controlOpts.values);\n\t\tif (!isEqual(newValues, this.props.value)) {\n\t\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, newValues, skipValidateInput, updateType);\n\t\t}\n\t}\n\n\tupdateSelections(selected) {\n\t\tconst controlValues = [];\n\t\tfor (let i = 0; i < selected.length; i++) {\n\t\t\tconst value = this.props.controlOpts.values[selected[i]];\n\t\t\tcontrolValues.push(value);\n\t\t}\n\t\tthis.props.controller.updatePropertyValue(this.props.propertyId, controlValues);\n\t}\n\n\tgenSelectOptions(selectedValues) {\n\t\tconst tableOptions = {\n\t\t\toptions: [],\n\t\t\tselected: []\n\t\t};\n\t\t// Allow for enumeration replacement\n\t\tfor (let i = 0; i < this.props.controlOpts.values.length; i++) {\n\t\t\tconst checked = selectedValues.indexOf(this.props.controlOpts.values[i]) !== -1;\n\t\t\tif (checked) {\n\t\t\t\ttableOptions.selected.push(i);\n\t\t\t}\n\t\t\tconst columns = [];\n\t\t\tcolumns.push({\n\t\t\t\tcolumn: \"someofselect\",\n\t\t\t\tstate: this.props.state,\n\t\t\t\tcontent: this.props.controlOpts.valueLabels[i],\n\t\t\t}\n\t\t\t);\n\t\t\ttableOptions.options.push({ className: \"table-row\", columns: columns, disabled: this.props.state === STATES.DISABLED }); // add state in obj\n\t\t}\n\t\treturn tableOptions;\n\t}\n\n\trender() {\n\t\tlet controlValue = this.props.value;\n\t\tif (typeof controlValue === \"undefined\" || controlValue === null) {\n\t\t\tcontrolValue = [];\n\t\t}\n\t\tconst tableOptions = this.genSelectOptions(controlValue);\n\t\tconst rows = this.props.control.rows ? this.props.control.rows : 5.5;\n\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-someofselect \", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t>\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t<FlexibleTable\n\t\t\t\t\tcolumns={[{ \"key\": \"someofselect\", \"label\": \"\" }]}\n\t\t\t\t\trows={rows}\n\t\t\t\t\tdata={tableOptions.options}\n\t\t\t\t\tscrollKey={this.props.control.name}\n\t\t\t\t\ttableLabel={tableLabel}\n\t\t\t\t\tselectedRows={tableOptions.selected}\n\t\t\t\t\tupdateRowSelections={this.updateSelections}\n\t\t\t\t\tselectable\n\t\t\t\t\tshowHeader={false}\n\t\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t\t/>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} inTable={this.props.tableControl} />\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nSomeofselectControl.propTypes = {\n\tcontrol: PropTypes.object,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\tcontrolOpts: PropTypes.object // pass in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tcontrolOpts: ownProps.controller.getFilteredEnumItems(ownProps.propertyId, ownProps.control)\n});\n\nexport default connect(mapStateToProps, null)(SomeofselectControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport FlexibleTable from \"./../../components/flexible-table\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport * as PropertyUtils from \"./../../util/property-utils\";\nimport { isEmpty } from \"lodash\";\n\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants\";\n\nimport ReadonlyControl from \"./../readonly\";\n\n/* eslint max-depth: [\"error\", 6] */\n\nclass SelectColumnsControl extends AbstractTable {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.emptyTableButtonClickHandler = this.addOnClick.bind(this, this.props.propertyId);\n\t\tthis.emptyTableButtonLabel = PropertyUtils.formatMessage(this.reactIntl, MESSAGE_KEYS.STRUCTURETABLE_ADDBUTTON_LABEL);\n\t}\n\n\tmakeRows(controlValue, tableState) {\n\t\tconst rows = [];\n\t\tif (controlValue) {\n\t\t\tfor (let rowIndex = 0; rowIndex < controlValue.length; rowIndex++) {\n\t\t\t\tconst columns = [];\n\t\t\t\t// If the propertyId contains 'row' then this selectcolumns control is part of a table.\n\t\t\t\t// Need to add an additional 'index' to retrieve the correct value from the control within a table.\n\t\t\t\tconst row = typeof this.props.propertyId.row !== \"undefined\"\n\t\t\t\t\t? { row: this.props.propertyId.row, index: rowIndex }\n\t\t\t\t\t: { row: rowIndex };\n\t\t\t\tconst propertyId = Object.assign({}, this.props.propertyId, row);\n\t\t\t\tconst control = Object.assign({}, this.props.control);\n\t\t\t\tif (control.dmImage) {\n\t\t\t\t\tconst fields = this.props.controller.getDatasetMetadataFields();\n\t\t\t\t\tconst value = PropertyUtils.stringifyFieldValue(this.props.controller.getPropertyValue(propertyId), control, true);\n\t\t\t\t\tconst icon = PropertyUtils.getDMFieldIcon(fields,\n\t\t\t\t\t\tvalue, control.dmImage);\n\t\t\t\t\tcontrol.icon = icon;\n\t\t\t\t}\n\t\t\t\tconst cellContent = (\n\t\t\t\t\t<div className=\"properties-table-cell-control\">\n\t\t\t\t\t\t<ReadonlyControl\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\t\ttableControl\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\tcolumns.push({\n\t\t\t\t\tkey: rowIndex + \"-0-field\",\n\t\t\t\t\tcolumn: \"field\",\n\t\t\t\t\tcontent: cellContent\n\t\t\t\t});\n\t\t\t\trows.push({\n\t\t\t\t\tkey: rowIndex,\n\t\t\t\t\tonClickCallback: this.handleRowClick.bind(this, rowIndex, false),\n\t\t\t\t\tcolumns: columns,\n\t\t\t\t\tclassName: \"column-select-table-row\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn rows;\n\t}\n\n\t/**\n\t* Callback function invoked when closing field picker\n\t* @param allSelectedFields all fields selected, includes newSelections\n\t* @param newSelections the newly selected rows\n\t*/\n\tonFieldPickerClose(allSelectedFields, newSelections) {\n\t\tif (allSelectedFields && newSelections) {\n\t\t\tthis.setCurrentControlValueSelected(allSelectedFields, newSelections);\n\t\t\tconst scrollToRow = newSelections[newSelections.length - 1];\n\t\t\tthis.setScrollToRow(scrollToRow);\n\t\t}\n\t}\n\n\tmakeHeader() {\n\t\tconst headers = [];\n\t\theaders.push({\n\t\t\t\"key\": \"field\",\n\t\t\t\"label\": PropertyUtils.formatMessage(this.reactIntl,\n\t\t\t\tMESSAGE_KEYS.FIELDPICKER_FIELDCOLUMN_LABEL),\n\t\t\t\"description\": (null) });\n\t\treturn headers;\n\t}\n\n\trender() {\n\t\tconst headers = this.makeHeader();\n\n\t\tconst tableButtonConfig = {\n\t\t\tfieldPickerCloseFunction: this.onFieldPickerClose\n\t\t};\n\n\t\tconst rows = this.makeRows(this.props.value, this.props.state);\n\t\tconst topRightPanel = this.makeAddRemoveButtonPanel(this.props.state, tableButtonConfig);\n\t\tlet rowToScrollTo;\n\t\tif (Number.isInteger(this.scrollToRow) && rows.length > this.scrollToRow) {\n\t\t\trowToScrollTo = this.scrollToRow;\n\t\t\tdelete this.scrollToRow;\n\t\t}\n\t\tconst tableLabel = (this.props.control.label && this.props.control.label.text) ? this.props.control.label.text : \"\";\n\t\tconst table =\t(\n\t\t\t<FlexibleTable\n\t\t\t\tcolumns={headers}\n\t\t\t\tdata={rows}\n\t\t\t\tscrollToRow={rowToScrollTo}\n\t\t\t\ttopRightPanel={topRightPanel}\n\t\t\t\tscrollKey={this.props.control.name}\n\t\t\t\ttableState={this.props.state}\n\t\t\t\tmessageInfo={this.props.messageInfo}\n\t\t\t\trows={this.props.control.rows}\n\t\t\t\ttableLabel={tableLabel}\n\t\t\t\tselectedRows={this.props.selectedRows}\n\t\t\t\trowSelection={this.props.control.rowSelection}\n\t\t\t\tupdateRowSelections={this.updateRowSelections}\n\t\t\t\tlight={this.props.controller.getLight() && this.props.control.light}\n\t\t\t\temptyTablePlaceholder={this.props.control.additionalText}\n\t\t\t/>);\n\n\t\tconst content = (\n\t\t\t<div>\n\t\t\t\t<div className=\"properties-column-select-table\">\n\t\t\t\t\t{table}\n\t\t\t\t</div>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.propertyId)} className=\"properties-column-select\" >\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t<MoveableTableRows\n\t\t\t\t\ttableContainer={content}\n\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\temptyTableButtonLabel={this.emptyTableButtonLabel}\n\t\t\t\t\temptyTableButtonClickHandler={this.emptyTableButtonClickHandler}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSelectColumnsControl.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\topenFieldPicker: PropTypes.func.isRequired,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(SelectColumnsControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ControlFactory from \"../control-factory\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport classNames from \"classnames\";\nimport { STATES } from \"./../../constants/constants.js\";\nimport { cloneDeep } from \"lodash\";\n\n\nclass StructureEditorControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.controlFactory = new ControlFactory(this.props.controller);\n\t\tthis.controlFactory.setFunctions(this.props.openFieldPicker, this.props.buildUIItem);\n\t}\n\n\t/**\n\t * Retrieves a sub-control definition by name.\n\t *\n\t * @param subCtrlName Name of the sub-control def to retrieve\n\t * @param a SubControl structure for the given item\n\t */\n\t_getSubControlDef(subCtrlName) {\n\t\tfor (let i = 0; i < this.props.control.subControls.length; i++) {\n\t\t\tif (this.props.control.subControls[i].name === subCtrlName) {\n\t\t\t\treturn this.props.control.subControls[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieves a sub-control index in it's parent structure.\n\t *\n\t * @param subCtrlName Name of the sub-control index to retrieve\n\t * @param The parent index for the given item\n\t */\n\t_getColumnIndex(subCtrlName) {\n\t\tfor (let i = 0; i < this.props.control.subControls.length; i++) {\n\t\t\tif (this.props.control.subControls[i].name === subCtrlName) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Creates a layout row of controls.\n\t *\n\t * @param rowCtrlNames String array of sub-control names\n\t * @return An array of controls for rendering\n\t */\n\t_makeRow(rowCtrlNames) {\n\t\tconst row = [];\n\t\tfor (let y = 0; y < rowCtrlNames.length; y++) {\n\t\t\tconst control = this._getSubControlDef(rowCtrlNames[y]);\n\t\t\tif (control && control.visible) {\n\t\t\t\tconst childPropertyId = {\n\t\t\t\t\tname: this.props.control.name,\n\t\t\t\t\tcol: this._getColumnIndex(rowCtrlNames[y])\n\t\t\t\t};\n\t\t\t\tconst parentPropertyId = cloneDeep(this.props.propertyId);\n\n\t\t\t\tlet propertyId = childPropertyId;\n\t\t\t\tif (parentPropertyId.name !== childPropertyId.name) {\n\t\t\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, childPropertyId);\n\t\t\t\t}\n\t\t\t\trow.push(this.controlFactory.createControlItem(control, propertyId));\n\t\t\t}\n\t\t}\n\t\treturn row;\n\t}\n\n\t/**\n\t * Creates the sub-controls for rendering.\n\t *\n\t * @return An array of arrays, each of which contains a row of controls\n\t */\n\t_makeControls() {\n\t\tconst controls = [];\n\t\t// If there is a layout, use that to determine control ordering\n\t\tif (Array.isArray(this.props.control.layout)) {\n\t\t\tconst layout = this.props.control.layout;\n\t\t\tfor (let i = 0; i < layout.length; i++) {\n\t\t\t\tif (Array.isArray(layout[i])) {\n\t\t\t\t\tcontrols.push(this._makeRow(layout[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// If there is no layout, just arrange the controls in a single ordered column\n\t\t\tfor (let i = 0; i < this.props.control.subControls.length; i++) {\n\t\t\t\tif (this.props.control.subControls[i].visible) {\n\t\t\t\t\tconst childPropertyId = {\n\t\t\t\t\t\tname: this.props.control.name,\n\t\t\t\t\t\tcol: this._getColumnIndex(this.props.control.subControls[i].name)\n\t\t\t\t\t};\n\t\t\t\t\tconst parentPropertyId = cloneDeep(this.props.propertyId);\n\n\t\t\t\t\tlet propertyId = childPropertyId;\n\t\t\t\t\tif (parentPropertyId.name !== childPropertyId.name) {\n\t\t\t\t\t\tpropertyId = this.props.controller.setChildPropertyId(parentPropertyId, childPropertyId);\n\t\t\t\t\t}\n\t\t\t\t\tcontrols.push([this.controlFactory.createControlItem(this.props.control.subControls[i], propertyId)]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn controls;\n\t}\n\n\t_makeControlTable(controls) {\n\t\tconst rows = [];\n\t\tfor (let i = 0; i < controls.length; i++) {\n\t\t\tconst row = [];\n\t\t\tfor (let j = 0; j < controls[i].length; j++) {\n\t\t\t\trow.push(<td key={(1 + i) * j} className=\"properties-structureeditor-cell\"><div>{controls[i][j]}</div></td>);\n\t\t\t}\n\t\t\trows.push(<tr key={1 + i}>{row}</tr>);\n\t\t}\n\t\t// Added role presentation to fix a11y violation - no headers in the table\n\t\treturn (<table role=\"presentation\"><tbody>{rows}</tbody></table>);\n\t}\n\n\trender() {\n\t\tconst controls = this._makeControlTable(this._makeControls());\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName={classNames(\"properties-structureeditor \", { \"hide\": this.props.state === STATES.HIDDEN },\n\t\t\t\t\tthis.props.messageInfo ? this.props.messageInfo.type : null)}\n\t\t\t>\n\t\t\t\t{controls}\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} inTable={false} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nStructureEditorControl.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\topenFieldPicker: PropTypes.func,\n\trightFlyout: PropTypes.bool,\n\tstate: PropTypes.string, // passed in by redux\n\tvalue: PropTypes.array, // passed in by redux\n\tmessageInfo: PropTypes.object // passed in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(StructureEditorControl);\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray'),\n    negate = require('./negate');\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nmodule.exports = reject;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// CONTROL structuretable\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport * as PropertyUtils from \"./../../util/property-utils\";\nimport { Type, ParamRole } from \"./../../constants/form-constants\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants\";\n\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { reject, findIndex, cloneDeep, isEmpty } from \"lodash\";\nimport * as ControlUtils from \"./../../util/control-utils\";\n\nclass StructureTableControl extends AbstractTable {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.addColumns = this.addColumns.bind(this);\n\t\tthis.removeColumns = this.removeColumns.bind(this);\n\t\tthis.getDefaultRow = this.getDefaultRow.bind(this);\n\t\tthis.indexOfRow = this.indexOfRow.bind(this);\n\t\tthis.emptyTableButtonClickHandler = this.addOnClick.bind(this, this.props.propertyId);\n\t\tthis.emptyTableButtonLabel = PropertyUtils.formatMessage(this.reactIntl, MESSAGE_KEYS.STRUCTURETABLE_ADDBUTTON_LABEL);\n\t}\n\n\tindexOfRow(columnName) {\n\t\tconst keyIndex = this.props.control.keyIndex;\n\t\treturn findIndex(this.props.controller.getPropertyValue(this.props.propertyId), function(row) {\n\t\t\treturn row[keyIndex] === columnName;\n\t\t});\n\t}\n\n\taddColumns(columnNames, callback) {\n\t\tconst newRows = [];\n\t\tconst isMap = this.props.control.valueDef.isMap;\n\t\tfor (var i = 0; i < columnNames.length; i++) {\n\t\t\tconst columnName = columnNames[i];\n\n\t\t\t// Sometimes the source list selection hasn\"t changed so do an\n\t\t\t// explicit check for whether an entry for this column exists\n\t\t\tif (this.indexOfRow(columnName) < 0) {\n\t\t\t\tconst newRow = cloneDeep(this.props.control.defaultRow);\n\n\t\t\t\t// Set the column name.\n\t\t\t\tif (isMap) {\n\t\t\t\t\t// For maps, this means adding the column name to the start of the cloned list.\n\t\t\t\t\tnewRow.unshift(columnName);\n\t\t\t\t} else {\n\t\t\t\t\t// For lists, this means assigning the column name to the correct location in the cloned list.\n\t\t\t\t\tnewRow[this.props.control.keyIndex] = columnName;\n\t\t\t\t}\n\t\t\t\tnewRows.push(newRow);\n\t\t\t}\n\t\t}\n\n\t\tconst rows = this.props.controller.getPropertyValue(this.props.propertyId).concat(newRows);\n\t\tthis.setCurrentControlValueSelected(rows);\n\t}\n\n\tremoveColumns(columnNames, callback) {\n\n\t\tconst rows = this.props.controller.getPropertyValue(this.props.propertyId);\n\t\tconst keyIndex = this.props.control.keyIndex;\n\n\t\tconst newRows = reject(rows, function(val) {\n\t\t\treturn columnNames.indexOf(val[keyIndex]) >= 0;\n\t\t});\n\t\tthis.setCurrentControlValueSelected(newRows);\n\t}\n\n\t/**\n\t* returns the default row for the control\n\t* @param field optional field to construct the defaultRow for where the parameter has role===COLUMN\n\t*/\n\tgetDefaultRow(field) {\n\t\tconst row = [];\n\t\t// if value is already in propertyValues, return that row\n\t\tif (this.props.value && field) {\n\t\t\tconst dataColumnIndex = PropertyUtils.getTableFieldIndex(this.props.control);\n\t\t\tfor (let i = 0; i < this.props.value.length; i++) {\n\t\t\t\tconst fieldValue = this.props.value[i][dataColumnIndex];\n\t\t\t\tif (fieldValue === field || this.props.value[i] === field) {\n\t\t\t\t\treturn this.props.value[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let idx = 0; idx < this.props.control.subControls.length; idx++) {\n\t\t\tconst subControl = this.props.control.subControls[idx];\n\t\t\tif (subControl.role === ParamRole.COLUMN) {\n\t\t\t\trow.push(field);\n\t\t\t} else if (subControl.role === ParamRole.NEW_COLUMN) {\n\t\t\t\trow.push(PropertyUtils.stringifyFieldValue(field, subControl).replace(\".\", \"_\"));\n\t\t\t} else if (typeof subControl.dmDefault !== \"undefined\") {\n\t\t\t\trow.push(PropertyUtils.getDMDefault(subControl, field, this.props.controller.getDatasetMetadataFields()));\n\t\t\t} else if (typeof this.props.control.defaultRow !== \"undefined\") {\n\t\t\t\tlet defaultRowIndex = idx;\n\t\t\t\t// defaultRow does not contain the first column field, ex: aggregate.json\n\t\t\t\tif (this.props.control.subControls.length !== this.props.control.defaultRow.length) {\n\t\t\t\t\tdefaultRowIndex -= 1;\n\t\t\t\t}\n\t\t\t\tconst defaultRowValue = this.props.control.defaultRow[defaultRowIndex];\n\t\t\t\tif (this.props.control.subControls[defaultRowIndex].valueDef.propType === Type.STRUCTURE) {\n\t\t\t\t\trow.push([]); // nested structure will default to an empty array\n\t\t\t\t} else if (defaultRowValue && defaultRowValue.parameterRef) {\n\t\t\t\t\t// if the defaultRow value is a parameterRef, get the property value\n\t\t\t\t\trow.push(this.props.controller.getPropertyValue({ name: defaultRowValue.parameterRef }));\n\t\t\t\t} else {\n\t\t\t\t\trow.push(defaultRowValue);\n\t\t\t\t}\n\t\t\t} else if (subControl.valueDef && subControl.valueDef.defaultValue) {\n\t\t\t\t// get the defaultValue from the parameter\n\t\t\t\tif (subControl.valueDef.defaultValue.parameterRef) {\n\t\t\t\t\trow.push(this.props.controller.getPropertyValue({ name: subControl.valueDef.defaultValue.parameterRef }));\n\t\t\t\t} else {\n\t\t\t\t\trow.push(subControl.valueDef.defaultValue);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trow.push(null);\n\t\t\t}\n\t\t}\n\t\treturn row;\n\t}\n\n\t/**\n\t* Callback function invoked when closing field picker for structures\n\t* @param allSelectedFields all fields selected, includes newSelections\n\t* @param newSelections the newly selected rows\n\t*/\n\tonFieldPickerClose(allSelectedFields, newSelections) {\n\t\tif (allSelectedFields && newSelections) {\n\t\t\tconst newControlValues = [];\n\t\t\tfor (const field of allSelectedFields) {\n\t\t\t\tnewControlValues.push(this.getDefaultRow(field));\n\t\t\t}\n\t\t\tthis.setCurrentControlValueSelected(newControlValues, newSelections);\n\t\t\tconst scrollToRow = newSelections[newSelections.length - 1];\n\t\t\tthis.setScrollToRow(scrollToRow);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst tableButtonConfig = {\n\t\t\tfieldPickerCloseFunction: this.onFieldPickerClose\n\t\t};\n\n\t\tconst customButtons = this.props.control && this.props.control.buttons;\n\t\tconst table = this.createTable(this.props.state, tableButtonConfig, customButtons);\n\t\tconst content = (\n\t\t\t<div>\n\t\t\t\t<div className=\"properties-st properties-st-buttons\">\n\t\t\t\t\t{table}\n\t\t\t\t</div>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>);\n\n\t\tconst onPanelContainer = this.getOnPanelContainer(this.props.selectedRows);\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName=\"properties-column-structure-wrapper\"\n\t\t\t>\n\t\t\t\t<div className=\"properties-column-structure\">\n\t\t\t\t\t<MoveableTableRows\n\t\t\t\t\t\ttableContainer={content}\n\t\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\t\temptyTableButtonLabel={this.emptyTableButtonLabel}\n\t\t\t\t\t\temptyTableButtonClickHandler={this.emptyTableButtonClickHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{onPanelContainer}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nStructureTableControl.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\topenFieldPicker: PropTypes.func.isRequired,\n\trightFlyout: PropTypes.bool,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(StructureTableControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport ValidationMessage from \"./../../components/validation-message\";\nimport { MESSAGE_KEYS, STATES } from \"./../../constants/constants\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { isEmpty } from \"lodash\";\n\nclass StructurelisteditorControl extends AbstractTable {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.addRow = this.addRow.bind(this);\n\t\tthis.allowColumnControls = true;\n\t}\n\n\taddRow() {\n\t\tconst newRow = this.getDefaultRow();\n\t\tconst rows = this.props.controller.getPropertyValue(this.props.propertyId).concat([newRow]);\n\t\tthis.setCurrentControlValueSelected(rows);\n\t}\n\n\trender() {\n\t\tconst tableButtonConfig = {\n\t\t\taddButtonLabel: formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.STRUCTURELISTEDITOR_ADDBUTTON_LABEL),\n\t\t\tremoveButtonLabel: formatMessage(this.props.controller.getReactIntl(),\n\t\t\t\tMESSAGE_KEYS.STRUCTURELISTEDITOR_REMOVEBUTTON_LABEL),\n\t\t\taddButtonFunction: this.addRow\n\t\t};\n\n\t\tconst customButtons = this.props.control && this.props.control.buttons;\n\t\tconst table = this.createTable(this.props.state, tableButtonConfig, customButtons);\n\n\t\tconst tableContainer = (<div>\n\t\t\t<div className=\"properties-sle properties-sle-buttons\">\n\t\t\t\t{table}\n\t\t\t</div>\n\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t</div>);\n\n\t\tconst onPanelContainer = this.getOnPanelContainer(this.props.selectedRows);\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName=\"properties-sle-wrapper\"\n\t\t\t>\n\t\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\t\tclassName=\"properties-sle-container\"\n\t\t\t\t>\n\t\t\t\t\t<MoveableTableRows\n\t\t\t\t\t\ttableContainer={tableContainer}\n\t\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\t\temptyTableButtonLabel={tableButtonConfig.addButtonLabel}\n\t\t\t\t\t\temptyTableButtonClickHandler={this.addRow}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{onPanelContainer}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nStructurelisteditorControl.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\trightFlyout: PropTypes.bool,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object // set in by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(StructurelisteditorControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// CONTROL readonlytable\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport AbstractTable from \"./../abstract-table.jsx\";\nimport MoveableTableRows from \"./../../components/moveable-table-rows\";\nimport { formatMessage } from \"./../../util/property-utils\";\nimport { STATES, MESSAGE_KEYS } from \"./../../constants/constants\";\n\nimport ValidationMessage from \"./../../components/validation-message\";\nimport * as ControlUtils from \"./../../util/control-utils\";\nimport { isEmpty } from \"lodash\";\n\nclass ReadonlyTableControl extends AbstractTable {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.reactIntl = props.controller.getReactIntl();\n\t\tthis.editCallback = this.editCallback.bind(this);\n\t\tthis.buttonHandler = this.props.controller.getHandlers().buttonHandler;\n\t}\n\n\teditCallback() {\n\t\tif (this.buttonHandler) {\n\t\t\tthis.buttonHandler({\n\t\t\t\ttype: \"edit\",\n\t\t\t\tpropertyId: this.props.propertyId\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst overrideLabelKey = `${this.props.control.name}.edit.button.label`;\n\t\tconst defaultEditLabel = formatMessage(this.reactIntl, MESSAGE_KEYS.READONLYTABLE_EDIT_BUTTON_LABEL);\n\t\tconst buttonLabel = this.props.controller.getResource(overrideLabelKey, defaultEditLabel);\n\n\t\tconst tableButtonConfig = this.buttonHandler ? {\n\t\t\teditCallback: this.editCallback,\n\t\t\tlabel: buttonLabel\n\t\t} : null;\n\n\t\tconst customButtons = this.props.control && this.props.control.buttons;\n\t\tconst table = this.createTable(this.props.state, tableButtonConfig, customButtons);\n\t\tconst content = (\n\t\t\t<div>\n\t\t\t\t<div className=\"properties-rt properties-rt-buttons\">\n\t\t\t\t\t{table}\n\t\t\t\t</div>\n\t\t\t\t<ValidationMessage state={this.props.state} messageInfo={this.props.messageInfo} />\n\t\t\t</div>);\n\n\t\treturn (\n\t\t\t<div data-id={ControlUtils.getDataId(this.props.control, this.props.propertyId)}\n\t\t\t\tclassName=\"properties-readonly-table-wrapper\"\n\t\t\t>\n\t\t\t\t{this.props.controlItem}\n\t\t\t\t<div className=\"properties-readonly-table\">\n\t\t\t\t\t<MoveableTableRows\n\t\t\t\t\t\ttableContainer={content}\n\t\t\t\t\t\tcontrol={this.props.control}\n\t\t\t\t\t\tcontroller={this.props.controller}\n\t\t\t\t\t\tpropertyId={this.props.propertyId}\n\t\t\t\t\t\tsetScrollToRow={this.setScrollToRow}\n\t\t\t\t\t\tsetCurrentControlValueSelected={this.setCurrentControlValueSelected}\n\t\t\t\t\t\tdisabled={this.props.state === STATES.DISABLED}\n\t\t\t\t\t\tisEmptyTable={isEmpty(this.props.value)}\n\t\t\t\t\t\temptyTableButtonLabel={buttonLabel}\n\t\t\t\t\t\temptyTableButtonClickHandler={this.editCallback}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReadonlyTableControl.propTypes = {\n\tbuildUIItem: PropTypes.func,\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolItem: PropTypes.element,\n\trightFlyout: PropTypes.bool,\n\tselectedRows: PropTypes.array, // set by redux\n\tstate: PropTypes.string, // pass in by redux\n\tvalue: PropTypes.array, // pass in by redux\n\tmessageInfo: PropTypes.object, // pass in by redux\n\taddRemoveRows: PropTypes.bool, // set by redux\n\ttableButtons: PropTypes.object, // set in by redux\n\thideEditButton: PropTypes.bool // set by redux\n};\n\n\nconst mapStateToProps = (state, ownProps) => ({\n\tvalue: ownProps.controller.getPropertyValue(ownProps.propertyId),\n\tstate: ownProps.controller.getControlState(ownProps.propertyId),\n\tmessageInfo: ownProps.controller.getErrorMessage(ownProps.propertyId),\n\tselectedRows: ownProps.controller.getSelectedRows(ownProps.propertyId),\n\taddRemoveRows: ownProps.controller.getAddRemoveRows(ownProps.propertyId),\n\ttableButtons: ownProps.controller.getTableButtons(ownProps.propertyId),\n\thideEditButton: ownProps.controller.getHideEditButton(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ReadonlyTableControl);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { STATES, CARBON_ICONS, MESSAGE_KEYS } from \"./../../constants/constants.js\";\nimport { ControlType } from \"./../../constants/form-constants\";\nimport Tooltip from \"./../../../tooltip/tooltip.jsx\";\nimport { isEmpty } from \"lodash\";\nimport { v4 as uuid4 } from \"uuid\";\nimport Icon from \"./../../../icons/icon.jsx\";\nimport ActionFactory from \"./../../actions/action-factory.js\";\nimport { formatMessage } from \"./../../util/property-utils\";\n\nclass ControlItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.actionFactory = new ActionFactory(this.props.controller);\n\t\tthis.uuid = uuid4();\n\t}\n\n\trender() {\n\t\tif (this.props.control.controlType === ControlType.HIDDEN) {\n\t\t\treturn null;\n\t\t}\n\t\tconst hidden = this.props.state === STATES.HIDDEN;\n\t\tconst disabled = this.props.state === STATES.DISABLED;\n\n\t\tlet label;\n\t\tlet description;\n\t\tif (this.props.control.label && this.props.control.labelVisible !== false) {\n\t\t\tlet tooltip;\n\t\t\tif (this.props.control.description && !isEmpty(this.props.control.description.text)) {\n\t\t\t\tif (this.props.control.description.placement === \"on_panel\") {\n\t\t\t\t\tdescription = <div className=\"properties-control-description\">{this.props.control.description.text}</div>;\n\t\t\t\t// only show tooltip when control enabled and visible\n\t\t\t\t} else {\n\t\t\t\t\t// If tooltip has a link, add propertyId in the link object\n\t\t\t\t\tif (this.props.control.description.link) {\n\t\t\t\t\t\tthis.props.control.description.link.propertyId = this.props.propertyId;\n\t\t\t\t\t}\n\t\t\t\t\ttooltip = (<Tooltip\n\t\t\t\t\t\tid={`${this.uuid}-tooltip-label-${this.props.control.name}`}\n\t\t\t\t\t\ttip={this.props.control.description.text}\n\t\t\t\t\t\tlink={this.props.control.description.link ? this.props.control.description.link : null}\n\t\t\t\t\t\ttooltipLinkHandler={this.props.controller.getHandlers().tooltipLinkHandler}\n\t\t\t\t\t\tdirection=\"bottom\"\n\t\t\t\t\t\tdisable={hidden || disabled}\n\t\t\t\t\t\tshowToolTipOnClick\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon type={CARBON_ICONS.INFORMATION} className=\"properties-control-description-icon-info\" />\n\t\t\t\t\t</Tooltip>);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet indicator;\n\t\t\tif (this.props.control.showRequiredLabel && this.props.control.required) {\n\t\t\t\tindicator = (\n\t\t\t\t\t<span className=\"properties-indicator\">\n\t\t\t\t\t\t{formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.LABEL_INDICATOR_REQUIRED)}\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t} else if (!this.props.control.showRequiredLabel && !(\"required\" in this.props.control)) {\n\t\t\t\tindicator = (\n\t\t\t\t\t<span className=\"properties-indicator\">\n\t\t\t\t\t\t{formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.LABEL_INDICATOR_OPTIONAL)}\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t}\n\t\t\tlabel = (\n\t\t\t\t<div className={classNames(\"properties-label-container\", { \"table-control\": this.props.tableControl === true })}>\n\t\t\t\t\t<label className=\"properties-control-label\">{this.props.control.label.text}</label>\n\t\t\t\t\t{indicator}\n\t\t\t\t\t{tooltip}\n\t\t\t\t</div>);\n\t\t}\n\n\t\tconst action = this.actionFactory.generateAction(0, this.props.control.action);\n\n\t\tconst className = classNames(\"properties-control-item\", { \"hide\": hidden });\n\n\t\t/*\n\t\t* <ControlItem /> should be called from every control.\n\t\t* Adding this temporary condition so that we can change one control at a time.\n\t\t* After all controls are updated, remove if condition and delete return statement after if condition\n\t\t*/\n\t\tif (this.props.accessibleControls.includes(this.props.control.controlType)) {\n\t\t\treturn (\n\t\t\t\t<div data-id={\"properties-ci-\" + this.props.control.name}\n\t\t\t\t\tclassName={className} disabled={disabled}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t\t{description}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div data-id={\"properties-ci-\" + this.props.control.name}\n\t\t\t\tclassName={className} disabled={disabled}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t\t{description}\n\t\t\t\t{this.props.controlObj}\n\t\t\t\t{action}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nControlItem.propTypes = {\n\tcontrol: PropTypes.object.isRequired,\n\tpropertyId: PropTypes.object.isRequired,\n\tcontroller: PropTypes.object.isRequired,\n\tcontrolObj: PropTypes.object,\n\taccessibleControls: PropTypes.array, // TODO: Remove this after all controls are accessible\n\ttableControl: PropTypes.bool,\n\tstate: PropTypes.string // passed by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\tstate: ownProps.controller.getControlState(ownProps.propertyId)\n});\n\nexport default connect(mapStateToProps, null)(ControlItem);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\n\nimport { Type, ControlType } from \"./../constants/form-constants\";\nimport { STATES, CONTAINER_TYPE } from \"./../constants/constants\";\nimport classNames from \"classnames\";\nimport { PropertyDef } from \"./../form/PropertyDef\";\nimport { makeControl } from \"./../form/EditorForm\";\nimport { L10nProvider } from \"./../util/L10nProvider\";\nimport * as ControlUtils from \"./../util/control-utils\";\n\nimport TextfieldControl from \"./textfield\";\nimport ReadonlyControl from \"./readonly\";\nimport ToggletextControl from \"./toggletext\";\nimport TextareaControl from \"./textarea\";\nimport ListControl from \"./list\";\nimport ExpressionControl from \"./expression\";\nimport PasswordControl from \"./passwordfield\";\nimport NumberfieldControl from \"./numberfield\";\nimport DatefieldControl from \"./datefield\";\nimport TimefieldControl from \"./timefield\";\nimport CheckboxControl from \"./checkbox\";\nimport ToggleControl from \"./toggle\";\nimport CheckboxsetControl from \"./checkboxset\";\nimport RadiosetControl from \"./radioset\";\nimport Dropdown from \"./dropdown\";\nimport MultiSelectControl from \"./multiselect\";\nimport SomeofselectControl from \"./someofselect\";\nimport SelectColumnsControl from \"./selectcolumns\";\nimport StructureEditorControl from \"./structureeditor\";\nimport StructureTableControl from \"./structuretable\";\nimport StructurelisteditorControl from \"./structurelisteditor\";\nimport ReadonlyTableControl from \"./readonlytable\";\n\nimport ControlItem from \"./../components/control-item\";\nimport ActionFactory from \"./../actions/action-factory.js\";\nimport { has, get } from \"lodash\";\n\n/*\n* <ControlItem /> should be called from every control.\n* After all controls are updated, delete accessibleControls array.\n*/\nconst accessibleControls = [\n\tControlType.CHECKBOXSET,\n\tControlType.HIDDEN,\n\tControlType.DATEFIELD,\n\tControlType.NUMBERFIELD,\n\tControlType.SPINNER,\n\tControlType.PASSWORDFIELD,\n\tControlType.TEXTAREA,\n\tControlType.TEXTFIELD,\n\tControlType.TIMEFIELD,\n\tControlType.TOGGLETEXT,\n\tControlType.LIST,\n\tControlType.TOGGLE,\n\tControlType.SOMEOFSELECT,\n\tControlType.SELECTCOLUMNS,\n\tControlType.READONLY,\n\tControlType.READONLYTABLE,\n\tControlType.TIMESTAMP,\n\tControlType.EXPRESSION,\n\tControlType.CODE,\n\tControlType.ONEOFSELECT,\n\tControlType.MULTISELECT,\n\tControlType.SELECTSCHEMA,\n\tControlType.SELECTCOLUMN\n];\n\nconst tableControls = [\n\tControlType.LIST,\n\tControlType.READONLYTABLE,\n\tControlType.SOMEOFSELECT,\n\tControlType.SELECTCOLUMNS,\n\tControlType.STRUCTURETABLE,\n\tControlType.STRUCTURELISTEDITOR\n];\n\nexport default class ControlFactory {\n\n\tconstructor(controller) {\n\t\tthis.rightFlyout = controller ? get(controller.getPropertiesConfig(), \"rightFlyout\", false) : false;\n\t\tthis.controller = controller;\n\t\tthis.actionFactory = new ActionFactory(this.controller);\n\t}\n\n\tsetFunctions(openFieldPicker, genUIItem) {\n\t\tthis.genUIItem = genUIItem;\n\t\tthis.openFieldPicker = openFieldPicker;\n\t}\n\n\tsetRightFlyout(rightFlyout) {\n\t\tthis.rightFlyout = rightFlyout;\n\t}\n\n\t/*\n\t* @param control\n\t* @param propertyId\n\t* @param tableInfo\n\t*/\n\tcreateControlItem(control, propertyId, tableInfo) {\n\t\tconst hidden = this.controller.getControlState(propertyId) === STATES.HIDDEN;\n\t\tif (hidden) {\n\t\t\treturn null; // Do not render hidden controls\n\t\t}\n\n\t\tconst controlObj = this.createControl(control, propertyId, tableInfo);\n\t\tconst className = control.className ? control.className : \"\";\n\n\t\t/*\n\t\t* <ControlItem /> should be called from every control.\n\t\t* Adding this temporary condition so that we can change one control at a time.\n\t\t* After all controls are updated, remove if condition and delete return statement after if condition\n\t\t*/\n\t\tif (accessibleControls.includes(control.controlType)) {\n\t\t\treturn controlObj;\n\t\t}\n\t\t// When control-item displays other controls, add padding on control-item\n\t\treturn (\n\t\t\t<div key={\"properties-ctrl-\" + control.name} data-id={\"properties-ctrl-\" + control.name}\n\t\t\t\tclassName={classNames(\"properties-ctrl-wrapper\", className)}\n\t\t\t>\n\t\t\t\t<ControlItem\n\t\t\t\t\tkey={\"ctrl-item-\" + control.name}\n\t\t\t\t\tcontroller={this.controller}\n\t\t\t\t\tpropertyId={propertyId}\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tcontrolObj={controlObj}\n\t\t\t\t\taccessibleControls={accessibleControls}\n\t\t\t\t\ttableControl = {tableControls.includes(control.controlType)}\n\t\t\t\t/>\n\t\t\t</div>);\n\t}\n\n\t// Creates all controls that can be standalone or in tables\n\tcreateControl(control, propertyId, tableInfo) {\n\t\tif (!control || !propertyId) {\n\t\t\treturn null;\n\t\t}\n\t\t// setup common properties used by all controls\n\t\tconst controlKey = ControlUtils.getDataId(propertyId);\n\t\tconst hidden = this.controller.getControlState(propertyId) === STATES.HIDDEN;\n\t\tconst action = this.actionFactory.generateAction(0, control.action);\n\t\tconst props = {};\n\t\tprops.key = controlKey;\n\t\tprops.control = control;\n\t\tprops.controller = this.controller;\n\t\tprops.propertyId = propertyId;\n\t\tprops.controlItem = (\n\t\t\t<ControlItem\n\t\t\t\tkey={\"ctrl-item-\" + control.name}\n\t\t\t\tcontroller={this.controller}\n\t\t\t\tpropertyId={propertyId}\n\t\t\t\tcontrol={control}\n\t\t\t\taccessibleControls={accessibleControls}\n\t\t\t\ttableControl = {tableControls.includes(control.controlType)}\n\t\t\t/>\n\t\t);\n\t\tif (tableInfo) {\n\t\t\tprops.tableControl = tableInfo.table;\n\t\t}\n\t\tlet createdControl;\n\t\tswitch (control.controlType) {\n\t\tcase (ControlType.HIDDEN):\n\t\t\treturn null;\n\t\tcase (ControlType.TEXTFIELD):\n\t\t\tcreatedControl = (<TextfieldControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.READONLY):\n\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.TIMESTAMP):\n\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.TEXTAREA):\n\t\t\tcreatedControl = (<TextareaControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.TOGGLE):\n\t\t\tcreatedControl = (<ToggleControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.LIST):\n\t\t\tcreatedControl = (<ListControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.EXPRESSION):\n\t\t\tcreatedControl = (<ExpressionControl\n\t\t\t\t{...props}\n\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tcase (ControlType.CODE):\n\t\t\tcreatedControl = (<ExpressionControl\n\t\t\t\t{...props}\n\t\t\t\tbuilder={false}\n\t\t\t\tvalidateLink={false}\n\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tcase (ControlType.TOGGLETEXT):\n\t\t\tcreatedControl = (<ToggletextControl\n\t\t\t\t{...props}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tcase (ControlType.PASSWORDFIELD):\n\t\t\tcreatedControl = (<PasswordControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.NUMBERFIELD):\n\t\tcase (ControlType.SPINNER):\n\t\t\tcreatedControl = (<NumberfieldControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.DATEFIELD):\n\t\t\tcreatedControl = (<DatefieldControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.TIMEFIELD):\n\t\t\tcreatedControl = (<TimefieldControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.CHECKBOX):\n\t\t\tcreatedControl = (<CheckboxControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.CHECKBOXSET):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<CheckboxsetControl {...props} />);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.RADIOSET):\n\t\t\tcreatedControl = (<RadiosetControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.ONEOFSELECT):\n\t\tcase (ControlType.SELECTSCHEMA):\n\t\t\tcreatedControl = (<Dropdown\n\t\t\t\t{...props}\n\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tcase (ControlType.MULTISELECT):\n\t\t\tcreatedControl = (<MultiSelectControl {...props} />);\n\t\t\tbreak;\n\t\tcase (ControlType.SELECTCOLUMN):\n\t\t\tif (!tableInfo || (tableInfo && tableInfo.allowColumnControls)) {\n\t\t\t\tcreatedControl = (<Dropdown\n\t\t\t\t\t{...props}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.SOMEOFSELECT):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<SomeofselectControl {...props} />);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.SELECTCOLUMNS):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<SelectColumnsControl\n\t\t\t\t\t{...props}\n\t\t\t\t\topenFieldPicker={this.openFieldPicker}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.STRUCTURETABLE):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<StructureTableControl\n\t\t\t\t\t{...props}\n\t\t\t\t\tbuildUIItem={this.genUIItem}\n\t\t\t\t\topenFieldPicker={this.openFieldPicker}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.STRUCTURELISTEDITOR):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<StructurelisteditorControl\n\t\t\t\t\t{...props}\n\t\t\t\t\tbuildUIItem={this.genUIItem}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.READONLYTABLE):\n\t\t\tif (!tableInfo) {\n\t\t\t\tcreatedControl = (<ReadonlyTableControl\n\t\t\t\t\t{...props}\n\t\t\t\t\tbuildUIItem={this.genUIItem}\n\t\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t\t/>);\n\t\t\t} else {\n\t\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase (ControlType.CUSTOM):\n\t\t\tcreatedControl = (\n\t\t\t\t<div className=\"properties-custom-ctrl\" key={controlKey}>\n\t\t\t\t\t{this.controller.getCustomControl(propertyId, control, tableInfo)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase (ControlType.STRUCTUREEDITOR):\n\t\t\tcreatedControl = (<StructureEditorControl\n\t\t\t\t{...props}\n\t\t\t\tbuildUIItem={this.genUIItem}\n\t\t\t\topenFieldPicker={this.openFieldPicker}\n\t\t\t\trightFlyout={this.rightFlyout}\n\t\t\t/>);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcreatedControl = (<ReadonlyControl {...props} />);\n\t\t}\n\n\t\t/*\n\t\t* <ControlItem /> should be called from every control.\n\t\t* Adding this temporary condition so that we can change one control at a time.\n\t\t* After all controls are updated, remove if condition and delete return statement after if condition\n\t\t*/\n\t\t// When other controls display control-item for a11y, add padding on controls\n\t\tif (accessibleControls.includes(control.controlType)) {\n\t\t\tif (tableInfo) {\n\t\t\t\t// Don't add padding when controls are displayed in a table\n\t\t\t\treturn createdControl;\n\t\t\t}\n\t\t\tconst className = control.className ? control.className : \"\";\n\t\t\treturn (\n\t\t\t\t<div key={\"properties-ctrl-\" + control.name} data-id={\"properties-ctrl-\" + control.name}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\"properties-ctrl-wrapper\",\n\t\t\t\t\t\t{ \"hide\": hidden, \"action\": has(control, \"action.image.placement\") },\n\t\t\t\t\t\tclassName\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{createdControl}\n\t\t\t\t\t{action}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn createdControl;\n\t}\n\n\t/**\n\t* Used to create a control from a passed in paramDef.\n\t* Allows users to user a standard control in a custom control/panel\n\t* @param paramDef - see parameter-def schema\n\t* @param parameter - name of the parameter to pull from paramDef\n\t* @param light - if this control is light themed\n\t* @param containerType - the type of container common properties is rendering in\n\t* @return control object (form schema) used to create standard react controls\n\t*/\n\tcreateFormControl(paramDef, parameter, light = true, containerType = CONTAINER_TYPE.CUSTOM) {\n\t\tif (!paramDef) {\n\t\t\treturn null;\n\t\t}\n\t\tconst propDef = PropertyDef.makePropertyDef(null, paramDef.parameters, paramDef.complex_types, paramDef.uihints);\n\t\tif (propDef && propDef.parameterMetadata) {\n\t\t\tconst l10nProvider = new L10nProvider(paramDef.resources);\n\t\t\tconst prop = propDef.parameterMetadata.getParameter(parameter);\n\t\t\tlet structureDef;\n\t\t\tif (prop.propType() === Type.STRUCTURE && propDef.structureMetadata) {\n\t\t\t\tstructureDef = propDef.structureMetadata.getStructure(prop.baseType());\n\t\t\t}\n\t\t\tconst additionalInfo = {\n\t\t\t\tlight: light,\n\t\t\t\tcontainerType: containerType\n\t\t\t};\n\t\t\tconst control = makeControl(propDef.parameterMetadata, parameter, null, structureDef, l10nProvider, null, null, null, additionalInfo);\n\t\t\treturn control;\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { toType } from \"./../../util/property-utils.js\";\n\nfunction op() {\n\treturn \"cellNotEmpty\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst supportedControls = [\"structuretable\", \"structureeditor\", \"structurelisteditor\"];\n\tif (supportedControls.indexOf(paramInfo.control.controlType) >= 0) {\n\t\tconst type = toType(paramInfo.value);\n\t\treturn type !== \"undefined\" && type !== \"null\" && String(paramInfo.value).length > 0;\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'cellNotEmpty' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { fieldValueMatchesProto } from \"./../../util/property-utils\";\nimport { isEqual } from \"lodash\";\nimport { ParamRole } from \"./../../constants/form-constants\";\n\nfunction op() {\n\treturn \"colNotExists\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst supportedControls = [\"textfield\"];\n\tif (supportedControls.indexOf(paramInfo.control.controlType) >= 0) {\n\t\tconst dataModelFields = controller.getDatasetMetadataFields();\n\t\tif (!dataModelFields) {\n\t\t\treturn true;\n\t\t}\n\t\tlet columnExists = true;\n\t\t// check if there are any matching values in dataModel\n\t\tfor (const field of dataModelFields) {\n\t\t\tif (fieldValueMatchesProto(paramInfo.value, field)) {\n\t\t\t\tcolumnExists = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// check other columns in row and allow value to be same as `paramInfo` value.  Allows consumers to rename a field without showing an error.\n\t\tif (!columnExists) {\n\t\t\tconst fieldColumnValues = _findFieldColumnValues(paramInfo, controller);\n\t\t\tfor (const columnValue of fieldColumnValues) {\n\t\t\t\tif (isEqual(paramInfo.value, columnValue)) {\n\t\t\t\t\tcolumnExists = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn columnExists;\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'colNotExists' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n/*\n* Finds all values in the same row as paramInfo and returns any with the role=column.\n* An empty array is returned if not a table control.\n*/\nfunction _findFieldColumnValues(paramInfo, controller) {\n\tconst fieldColumnValues = [];\n\t// If a cell value, check to see if any other columns have role=column\n\tif (typeof paramInfo.control.columnIndex !== \"undefined\") {\n\t\tconst rowValue = controller.getPropertyValue({ name: paramInfo.id.name, row: paramInfo.id.row });\n\t\tif (Array.isArray(rowValue)) {\n\t\t\trowValue.forEach((value, idx) => {\n\t\t\t\tif (idx !== paramInfo.control.columnIndex) { // skip paramInfo value\n\t\t\t\t\tconst colControl = controller.getControl({ name: paramInfo.id.name, col: idx });\n\t\t\t\t\tif (colControl.role === ParamRole.COLUMN) {\n\t\t\t\t\t\tfieldColumnValues.push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn fieldColumnValues;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { fieldValueMatchesProto } from \"./../../util/property-utils.js\";\nimport { isEmpty } from \"lodash\";\n\nfunction op() {\n\treturn \"colDoesExists\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataModelFields = controller.getDatasetMetadataFields();\n\tif (!dataModelFields) {\n\t\treturn false;\n\t}\n\n\tconst controlType = paramInfo.control.controlType;\n\tswitch (controlType) {\n\tcase \"selectcolumns\":\n\tcase \"selectcolumn\": {\n\t\tif (Array.isArray(paramInfo.value) && typeof paramInfo.control.editStyle !== \"undefined\") { // Control is inside a table.\n\t\t\tif (paramInfo.value.length > 0) {\n\t\t\t\tlet allValid = true;\n\t\t\t\tparamInfo.value.forEach((paramValue) => {\n\t\t\t\t\tallValid = allValid && typeof valueInDataset(dataModelFields, paramValue) !== \"undefined\";\n\t\t\t\t});\n\t\t\t\treturn allValid;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn typeof valueInDataset(dataModelFields, paramInfo.value) !== \"undefined\";\n\t}\n\tdefault:\n\t\tlogger.warn(\"Ignoring unsupported condition operation 'colDoesExists' for control type \" + controlType);\n\t\treturn true;\n\t}\n}\n\n// Return the field if found in dataset, else undefined\nfunction valueInDataset(dataset, field) {\n\t// Don't validate empty, null or undefined value\n\treturn (\n\t\t(typeof field === \"undefined\" || field === null || isEmpty(field))\n\t\t\t? true\n\t\t\t: dataset.find(function(dataModelField) {\n\t\t\t\treturn fieldValueMatchesProto(field, dataModelField);\n\t\t\t})\n\t);\n}\n\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { includes } from \"lodash\";\n\nfunction op() {\n\treturn \"contains\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst unsupportedControls = [\"checkbox\", \"numberfield\", \"passwordfield\"];\n\tif (unsupportedControls.indexOf(paramInfo.control.controlType) < 0) {\n\t\tconst dataType = typeof paramInfo.value;\n\t\tif (typeof param2Info !== \"undefined\") {\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn false;\n\t\t\tcase \"string\":\n\t\t\tcase \"object\":\n\t\t\t\treturn includes(paramInfo.value, param2Info.value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'contains' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn false;\n\t\t\tcase \"string\":\n\t\t\tcase \"object\":\n\t\t\t\treturn includes(paramInfo.value, value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'contains' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation contains\");\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'contains' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"equals\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.controlType !== \"passwordfield\") {\n\t\tconst dataType = typeof paramInfo.value;\n\t\tif (param2Info) {\n\t\t\tif (paramInfo.value === null || param2Info.value === null) {\n\t\t\t\treturn paramInfo.value === param2Info.value;\n\t\t\t}\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\t\treturn paramInfo.value === param2Info.value;\n\t\t\tcase \"string\":\n\t\t\t\treturn paramInfo.value.trim() === param2Info.value.trim();\n\t\t\tcase \"object\":\n\t\t\t\treturn JSON.stringify(paramInfo.value) === JSON.stringify(param2Info.value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'equals' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tif (paramInfo.value === null || value === null) {\n\t\t\t\treturn paramInfo.value === value;\n\t\t\t}\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\t\treturn paramInfo.value === value;\n\t\t\tcase \"string\":\n\t\t\t\treturn paramInfo.value.trim() === value.toString().trim();\n\t\t\tcase \"object\":\n\t\t\t\treturn JSON.stringify(paramInfo.value) === JSON.stringify(value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'equals' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation equals\");\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'equals' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"greaterThan\";\n}\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataType = typeof paramInfo.value;\n\tswitch (dataType) {\n\tcase \"undefined\":\n\tcase \"number\":\n\t\tif (typeof param2Info !== \"undefined\") {\n\t\t\tif (typeof param2Info.value !== \"number\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn paramInfo.value > param2Info.value;\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tif (value === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn paramInfo.value > value;\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation 'greaterThan'\");\n\tcase \"object\":\n\t\tif (paramInfo.value === null || param2Info.value === null || value === null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\tdefault:\n\t\tlogger.warn(\"Ignoring condition operation 'greaterThan' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\treturn true;\n\t}\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"isEmpty\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst propertiesConfig = controller.getPropertiesConfig();\n\tconst dataType = typeof paramInfo.value;\n\tswitch (dataType) {\n\tcase \"undefined\":\n\t\treturn true;\n\tcase \"boolean\":\n\t\treturn false;\n\tcase \"string\":\n\t\treturn propertiesConfig.trimSpaces ? paramInfo.value.trim().length === 0 : paramInfo.value.length === 0;\n\tcase \"number\":\n\t\treturn paramInfo.value === null;\n\tcase \"object\":\n\t\treturn paramInfo.value === null ? true : paramInfo.value.length === 0;\n\tdefault:\n\t\tlogger.warn(\"Ignoring condition operation 'isEmpty' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\treturn true;\n\t}\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"isNotEmpty\";\n}\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst propertiesConfig = controller.getPropertiesConfig();\n\tconst dataType = typeof paramInfo.value;\n\tswitch (dataType) {\n\tcase \"undefined\":\n\t\treturn false;\n\tcase \"boolean\":\n\t\treturn true;\n\tcase \"string\":\n\t\treturn propertiesConfig.trimSpaces ? paramInfo.value.trim().length !== 0 : paramInfo.value.length !== 0;\n\tcase \"number\":\n\t\treturn paramInfo.value !== null;\n\tcase \"object\":\n\t\treturn paramInfo.value === null ? false : paramInfo.value.length !== 0;\n\tdefault:\n\t\tlogger.warn(\"Ignoring condition operation 'isNotEmpty' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\treturn true;\n\t}\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"lessThan\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataType = typeof paramInfo.value;\n\tswitch (dataType) {\n\tcase \"undefined\":\n\tcase \"number\":\n\t\tif (typeof param2Info !== \"undefined\") {\n\t\t\tif (typeof param2Info.value !== \"number\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn paramInfo.value < param2Info.value;\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tif (value === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn paramInfo.value < value;\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation 'lessThan'\");\n\tcase \"object\":\n\t\tif (paramInfo.value === null || param2Info.value === null || value === null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\tdefault:\n\t\tlogger.warn(\"Ignoring condition operation 'lessThan' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\treturn true;\n\t}\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"matches\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataType = typeof paramInfo.value;\n\tvar regExp = \"\";\n\tif (typeof param2Info !== \"undefined\" && param2Info !== null) {\n\t\tregExp = param2Info.value;\n\t} else if (typeof value !== \"undefined\" && value !== null) {\n\t\tregExp = value;\n\t} else {\n\t\tlogger.warn(\"Ignoring condition operation 'matches' for parameter_ref \" + paramInfo.param + \" no regular expression specified in condition.\");\n\t\treturn true;\n\t}\n\tif (dataType === \"string\" || dataType === \"undefined\") {\n\t\t// the added regexp before and after the value strips out whitespace or positions at the start and end of the string.\n\t\tconst regex = new RegExp(regExp);\n\t\treturn regex.test(paramInfo.value);\n\t}\n\tlogger.warn(\"Ignoring condition operation 'matches' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { includes } from \"lodash\";\n\nfunction op() {\n\treturn \"notContains\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst unsupportedControls = [\"checkbox\", \"numberfield\", \"passwordfield\"];\n\tif (unsupportedControls.indexOf(paramInfo.control.controlType) < 0) {\n\t\tconst dataType = typeof paramInfo.value;\n\t\tif (typeof param2Info !== \"undefined\") {\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn true;\n\t\t\tcase \"string\":\n\t\t\tcase \"object\":\n\t\t\t\treturn !includes(paramInfo.value, param2Info.value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'notContains' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn true;\n\t\t\tcase \"string\":\n\t\t\tcase \"object\":\n\t\t\t\treturn !includes(paramInfo.value, value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'notContains' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation notContains\");\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'notContains' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"notEquals\";\n}\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.controlType !== \"passwordfield\") {\n\t\tconst dataType = typeof paramInfo.value;\n\t\tif (param2Info) {\n\t\t\tif (paramInfo.value === null || param2Info.value === null) {\n\t\t\t\treturn paramInfo.value !== param2Info.value;\n\t\t\t}\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\t\treturn paramInfo.value !== param2Info.value;\n\t\t\tcase \"string\":\n\t\t\t\treturn paramInfo.value.trim() !== param2Info.value.trim();\n\t\t\tcase \"object\":\n\t\t\t\treturn JSON.stringify(paramInfo.value) !== JSON.stringify(param2Info.value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'notEquals' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (typeof value !== \"undefined\") {\n\t\t\tif (paramInfo.value === null || value === null) {\n\t\t\t\treturn paramInfo.value !== value;\n\t\t\t}\n\t\t\tswitch (dataType) {\n\t\t\tcase \"undefined\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\t\treturn paramInfo.value !== value;\n\t\t\tcase \"string\":\n\t\t\t\treturn paramInfo.value.trim() !== value.trim();\n\t\t\tcase \"object\":\n\t\t\t\treturn JSON.stringify(paramInfo.value) !== JSON.stringify(value);\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\"Ignoring condition operation 'notEquals' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Insufficient parameter for condition operation notEquals\");\n\t}\n\tlogger.warn(\"Ignoring unsupported condition operation 'notEquals' for control type \" + paramInfo.control.controlType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"notMatches\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tconst dataType = typeof paramInfo.value;\n\tvar regExp = \"\";\n\tif (typeof param2Info !== \"undefined\" && param2Info !== null) {\n\t\tregExp = param2Info.value;\n\t} else if (typeof value !== \"undefined\" && value !== null) {\n\t\tregExp = value;\n\t} else {\n\t\tlogger.warn(\"Ignoring condition operation 'notMatches' for parameter_ref \" + paramInfo.param + \" no regular expression specified in condition.\");\n\t\treturn true;\n\t}\n\tif (dataType === \"string\" || dataType === \"undefined\") {\n\t\t// the added regexp before and after the value strips out whitespace or positions at the start and end of the string.\n\t\tconst regex = new RegExp(regExp);\n\t\treturn !regex.test(paramInfo.value);\n\t}\n\tlogger.warn(\"Ignoring condition operation 'notMatches' for parameter_ref \" + paramInfo.param + \" with input data type \" + dataType);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isValid, parse } from \"date-fns\";\nimport { DEFAULT_DATE_FORMAT } from \"../../constants/constants\";\n\n\nfunction op() {\n\treturn \"isDateTime\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.value) { // only check if there is a value.\n\t\t// always use iso format for time\n\t\tconst timeDateFormat = (value === \"time\") ? \"HH:mm:ss:xxx\" : DEFAULT_DATE_FORMAT;\n\t\tconst date = parse(paramInfo.value, timeDateFormat, new Date());\n\t\treturn isValid(date);\n\t}\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\nfunction op() {\n\treturn \"dmTypeEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data type\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data type. Use value instead if possible.\n * @param {Object} value the target data type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmTypeEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"type\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldType = getMetadataFieldMatch(paramInfo, metadata, \"type\");\n\t\treturn fieldType === target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmTypeEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmTypeNotEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data type\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data type. Use value instead if possible.\n * @param {Object} value the target data type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmTypeNotEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"type\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldType = getMetadataFieldMatch(paramInfo, metadata, \"type\");\n\t\treturn fieldType !== target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmTypeNotEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmMeasurementEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data measurement\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data measurement. Use value instead if possible.\n * @param {Object} value the target measurement type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmMeasurementEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"measure\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldRole = getMetadataFieldMatch(paramInfo, metadata, \"measure\");\n\t\treturn fieldRole === target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmMeasurementEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmMeasurementNotEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data type\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data type. Use value instead if possible.\n * @param {Object} value the target data type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmMeasurementNotEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"measure\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldRole = getMetadataFieldMatch(paramInfo, metadata, \"measure\");\n\t\treturn fieldRole !== target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmMeasurementNotEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmRoleEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data role\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data role. Use value instead if possible.\n * @param {Object} value the target role type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmRoleEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"modeling_role\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldRole = getMetadataFieldMatch(paramInfo, metadata, \"modeling_role\");\n\t\treturn fieldRole === target;\n\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmRoleEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\nimport { getMetadataFieldMatch } from \"./../conditions-utils.js\";\n\nfunction op() {\n\treturn \"dmRoleNotEquals\";\n}\n\n\n/**\n * Find the metadata for the given field and return if it matches the given data role\n * @param {Object} paramInfo first entry in the globals row, and the name of the desired field is a string attribute\n * @param {Object} paramInfo2 alternate parameter for the target data role. Use value instead if possible.\n * @param {Object} value the target role type we are comparing the field to\n * @param {Object} controller properties controller\n */\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tif (paramInfo.control.role !== \"column\") {\n\t\tlogger.warn(\"Condition Operator dmRoleEquals only intended for use on columns\");\n\t}\n\tconst metadata = controller.getDatasetMetadataFields();\n\tvar target = null;\n\tif (param2Info !== null && typeof param2Info !== \"undefined\" && param2Info.value !== null) {\n\t\tif (param2Info.control.role === \"column\") {\n\t\t\ttarget = getMetadataFieldMatch(param2Info, metadata, \"modeling_role\");\n\t\t}\n\t\tif (target === null) {\n\t\t\ttarget = param2Info.value;\n\t\t}\n\t} else if (value !== null && typeof value !== \"undefined\") {\n\t\ttarget = value;\n\t} else {\n\t\treturn false;\n\t}\n\tif (!metadata) {\n\t\treturn false;\n\t}\n\tif (typeof paramInfo.value === \"string\" || typeof paramInfo.value === \"object\") {\n\t\tvar fieldRole = getMetadataFieldMatch(paramInfo, metadata, \"modeling_role\");\n\t\treturn fieldRole !== target;\n\t} else if (typeof paramInfo.value !== \"undefined\") {\n\t\tlogger.warn(\"dmRoleEquals cannot handle the given type: \" + typeof paramInfo.value);\n\t}\n\treturn false;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"lengthEquals\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tlet compareValue = value;\n\tlet valueLength;\n\tif (param2Info) {\n\t\tcompareValue = param2Info.value;\n\t}\n\tif (typeof paramInfo.value === \"string\" || Array.isArray(paramInfo.value)) {\n\t\tvalueLength = paramInfo.value.length;\n\t} else if (typeof paramInfo.value === \"undefined\" || paramInfo.value === null) {\n\t\tvalueLength = 0;\n\t}\n\tif (typeof compareValue === \"number\" && typeof valueLength === \"number\") {\n\t\treturn valueLength === compareValue;\n\t}\n\tlogger.warn(\"Ignoring condition operation 'lengthEquals' for parameter_ref \" + paramInfo.param);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"lengthLessThan\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tlet compareValue = value;\n\tlet valueLength;\n\tif (param2Info) {\n\t\tcompareValue = param2Info.value;\n\t}\n\tif (typeof paramInfo.value === \"string\" || Array.isArray(paramInfo.value)) {\n\t\tvalueLength = paramInfo.value.length;\n\t} else if (typeof paramInfo.value === \"undefined\" || paramInfo.value === null) {\n\t\tvalueLength = 0;\n\t}\n\tif (typeof compareValue === \"number\" && typeof valueLength === \"number\") {\n\t\treturn valueLength < compareValue;\n\t}\n\tlogger.warn(\"Ignoring condition operation 'lengthLessThan' for parameter_ref \" + paramInfo.param);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logger from \"./../../../../utils/logger\";\n\nfunction op() {\n\treturn \"lengthGreaterThan\";\n}\n\nfunction evaluate(paramInfo, param2Info, value, controller) {\n\tlet compareValue = value;\n\tlet valueLength;\n\tif (param2Info) {\n\t\tcompareValue = param2Info.value;\n\t}\n\tif (typeof paramInfo.value === \"string\" || Array.isArray(paramInfo.value)) {\n\t\tvalueLength = paramInfo.value.length;\n\t} else if (typeof paramInfo.value === \"undefined\" || paramInfo.value === null) {\n\t\tvalueLength = 0;\n\t}\n\tif (typeof compareValue === \"number\" && typeof valueLength === \"number\") {\n\t\treturn valueLength > compareValue;\n\t}\n\tlogger.warn(\"Ignoring condition operation 'lengthGreaterThan' for parameter_ref \" + paramInfo.param);\n\treturn true;\n}\n\n// Public Methods ------------------------------------------------------------->\n\nexport { op, evaluate };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport logger from \"./../../../../utils/logger\";\n\nimport * as cellNotEmpty from \"./cellNotEmpty\";\nimport * as colNotExists from \"./colNotExists\";\nimport * as colDoesExists from \"./colDoesExists\";\nimport * as contains from \"./contains\";\nimport * as equals from \"./equals\";\nimport * as greaterThan from \"./greaterThan\";\nimport * as isEmpty from \"./isEmpty\";\nimport * as isNotEmpty from \"./isNotEmpty\";\nimport * as lessThan from \"./lessThan\";\nimport * as matches from \"./matches\";\nimport * as notContains from \"./notContains\";\nimport * as notEquals from \"./notEquals\";\nimport * as notMatches from \"./notMatches\";\nimport * as isDateTime from \"./isDateTime\";\nimport * as dmTypeEquals from \"./dmTypeEquals\";\nimport * as dmTypeNotEquals from \"./dmTypeNotEquals\";\nimport * as dmMeasurementEquals from \"./dmMeasurementEquals\";\nimport * as dmMeasurementNotEquals from \"./dmMeasurementNotEquals\";\nimport * as dmRoleEquals from \"./dmRoleEquals\";\nimport * as dmRoleNotEquals from \"./dmRoleNotEquals\";\nimport * as lengthEquals from \"./lengthEquals\";\nimport * as lengthLessThan from \"./lengthLessThan\";\nimport * as lengthGreaterThan from \"./lengthGreaterThan\";\n\n\n/**\n* @param customOps - Array of custom operators to be added to standard operators\n*/\nfunction getConditionOps(customOps) {\n\tconst ops = {};\n\tops[cellNotEmpty.op()] = cellNotEmpty.evaluate;\n\tops[colNotExists.op()] = colNotExists.evaluate;\n\tops[colDoesExists.op()] = colDoesExists.evaluate;\n\tops[contains.op()] = contains.evaluate;\n\tops[equals.op()] = equals.evaluate;\n\tops[greaterThan.op()] = greaterThan.evaluate;\n\tops[isEmpty.op()] = isEmpty.evaluate;\n\tops[isNotEmpty.op()] = isNotEmpty.evaluate;\n\tops[lessThan.op()] = lessThan.evaluate;\n\tops[matches.op()] = matches.evaluate;\n\tops[notContains.op()] = notContains.evaluate;\n\tops[notEquals.op()] = notEquals.evaluate;\n\tops[notMatches.op()] = notMatches.evaluate;\n\tops[isDateTime.op()] = isDateTime.evaluate;\n\tops[dmTypeEquals.op()] = dmTypeEquals.evaluate;\n\tops[dmTypeNotEquals.op()] = dmTypeNotEquals.evaluate;\n\tops[dmMeasurementEquals.op()] = dmMeasurementEquals.evaluate;\n\tops[dmMeasurementNotEquals.op()] = dmMeasurementNotEquals.evaluate;\n\tops[dmRoleEquals.op()] = dmRoleEquals.evaluate;\n\tops[dmRoleNotEquals.op()] = dmRoleNotEquals.evaluate;\n\tops[lengthEquals.op()] = lengthEquals.evaluate;\n\tops[lengthLessThan.op()] = lengthLessThan.evaluate;\n\tops[lengthGreaterThan.op()] = lengthGreaterThan.evaluate;\n\n\n\tif (Array.isArray(customOps)) {\n\t\tfor (const custOp of customOps) {\n\t\t\tif (custOp && typeof custOp.op === \"function\" && typeof custOp.evaluate === \"function\") {\n\t\t\t\tops[custOp.op()] = custOp.evaluate;\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Custom operator missing require function of `op` or `evaluate`\");\n\t\t\t}\n\t\t}\n\t}\n\treturn ops;\n}\n\nexport { getConditionOps };\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint max-depth: [\"error\", 7]*/\n\nimport PropertiesStore from \"./properties-store.js\";\nimport logger from \"../../utils/logger\";\nimport * as UiConditionsParser from \"./ui-conditions/ui-conditions-parser.js\";\nimport setExpressionInfo from \"./controls/expression/expressionInfo-parser.js\";\n\nimport { parseUiContent } from \"./ui-conditions/ui-groups-parser.js\";\nimport * as conditionsUtil from \"./ui-conditions/conditions-utils\";\nimport * as PropertyUtils from \"./util/property-utils.js\";\n\nimport { STATES, ACTIONS, CONDITION_TYPE, PANEL_TREE_ROOT, CONDITION_MESSAGE_TYPE, UPDATE_TYPE } from \"./constants/constants.js\";\nimport CommandStack from \"../command-stack/command-stack.js\";\nimport ControlFactory from \"./controls/control-factory\";\nimport { Type, ParamRole, ControlType } from \"./constants/form-constants\";\nimport { has, cloneDeep, assign, isEmpty, isEqual, isUndefined, get } from \"lodash\";\nimport Form from \"./form/Form\";\nimport { getConditionOps } from \"./ui-conditions/condition-ops/condition-ops\";\nimport { ItemType } from \"./constants/form-constants\";\nexport default class PropertiesController {\n\n\tconstructor() {\n\t\tthis.propertiesStore = new PropertiesStore();\n\t\tthis.handlers = {\n\t\t\tpropertyListener: null,\n\t\t\tcontrollerHandler: null,\n\t\t\tactionHandler: null,\n\t\t\tbuttonHandler: null,\n\t\t\tbuttonIconHandler: null,\n\t\t\ttitleChangeHandler: null,\n\t\t\ttooltipLinkHandler: null\n\t\t};\n\t\tthis.propertiesConfig = {};\n\t\tthis.visibleDefinitions = {};\n\t\tthis.enabledDefinitions = {};\n\t\tthis.validationDefinitions = {};\n\t\tthis.requiredDefinitionsIds = [];\n\t\tthis.filterDefinitions = {};\n\t\tthis.filteredEnumDefinitions = {};\n\t\tthis.allowChangeDefinitions = {};\n\t\tthis.conditionalDefaultDefinitions = {};\n\t\tthis.panelTree = {};\n\t\tthis.controls = {};\n\t\tthis.actions = {};\n\t\tthis.customControls = [];\n\t\tthis.summaryPanelControls = {};\n\t\tthis.controllerHandlerCalled = false;\n\t\tthis.commandStack = new CommandStack();\n\t\tthis.custPropSumPanelValues = {};\n\t\tthis.controlFactory = new ControlFactory(this);\n\t\tthis.sharedCtrlInfo = [];\n\t\tthis.isSummaryPanel = false;\n\t\tthis.visibleSubPanelCounter = 0;\n\t\tthis.conditionOps = getConditionOps();\n\t\tthis.expressionFunctionInfo = {};\n\t\tthis.expressionRecentlyUsed = [];\n\t\tthis.expressionFieldsRecentlyUsed = [];\n\t\tthis.selectionListeners = {};\n\t}\n\n\tgetStore() {\n\t\treturn this.propertiesStore.getStore();\n\t}\n\n\tsubscribe(callback) {\n\t\tthis.propertiesStore.subscribe(callback);\n\t}\n\n\tgetHandlers() {\n\t\treturn this.handlers;\n\t}\n\n\tsetHandlers(inHandlers) {\n\t\tthis.handlers = Object.assign(this.handlers, inHandlers);\n\t\tif (this.handlers.controllerHandler && !this.controllerHandlerCalled) {\n\t\t\tthis.handlers.controllerHandler(this); // one time call to return controller\n\t\t\t// probably isn't needed but seems like it can cause infinite loops\n\t\t\tthis.controllerHandlerCalled = true;\n\t\t}\n\t}\n\n\tsetCommandStack(commandStack) {\n\t\tthis.commandStack = commandStack;\n\t}\n\n\tgetCommandStack() {\n\t\treturn this.commandStack;\n\t}\n\n\tsetEditorSize(editorSize) {\n\t\tthis.editorSize = editorSize;\n\t}\n\n\tgetEditorSize() {\n\t\treturn this.editorSize;\n\t}\n\n\tsetLight(light) {\n\t\tthis.light = light;\n\t}\n\n\tgetLight() {\n\t\treturn this.light;\n\t}\n\n\tsetPropertiesConfig(config) {\n\t\tthis.propertiesConfig = config;\n\t}\n\n\tgetPropertiesConfig() {\n\t\treturn this.propertiesConfig;\n\t}\n\n\tisTearsheetContainer() {\n\t\treturn this.propertiesConfig.containerType === \"Tearsheet\";\n\t}\n\n\tsetParamDef(paramDef) {\n\t\tconst containerType = get(this.getPropertiesConfig(), \"containerType\");\n\t\tconst convertTypes = get(this.getPropertiesConfig(), \"convertTypes\");\n\t\tconst formData = Form.makeForm(paramDef, containerType, convertTypes);\n\t\tthis.setForm(formData);\n\t}\n\n\t//\n\t// Form and parsing Methods\n\t//\n\tsetForm(form, intl) {\n\t\tthis.form = form;\n\t\t// console.log(JSON.stringify(form, null, 2));\n\t\tthis.reactIntl = intl;\n\t\t// set initial property values\n\t\tif (this.form) {\n\t\t\tthis.controls = {};\n\t\t\tthis.setControlStates({}); // clear state\n\t\t\tthis.setErrorMessages({}); // clear messages\n\t\t\tthis.isSummaryPanel = false; // when new form is set, summary panel is gone\n\t\t\tthis.visibleSubPanelCounter = 0;\n\t\t\tthis._parseUiConditions();\n\t\t\t// should be done before running any validations\n\t\t\tconst controls = [];\n\t\t\tUiConditionsParser.parseControls(controls, this.actions, this.form);\n\t\t\tthis.saveControls(controls); // saves controls without the subcontrols\n\t\t\tthis._parseSummaryControls(controls);\n\t\t\tthis.parsePanelTree();\n\t\t\tconditionsUtil.injectDefaultValidations(this.controls, this.validationDefinitions, this.requiredDefinitionsIds, intl);\n\t\t\tlet datasetMetadata;\n\t\t\tlet propertyValues = {};\n\t\t\tif (this.form.data) {\n\t\t\t\tdatasetMetadata = this.form.data.datasetMetadata;\n\t\t\t\tpropertyValues = this.form.data.uiCurrentParameters ? assign({}, this.form.data.currentParameters, this.form.data.uiCurrentParameters)\n\t\t\t\t\t: this.form.data.currentParameters;\n\t\t\t}\n\t\t\t// Set the opening dataset(s), during which multiples are flattened and compound names generated if necessary\n\t\t\tthis.setDatasetMetadata(datasetMetadata);\n\t\t\tthis.setPropertyValues(propertyValues, true); // needs to be after setDatasetMetadata to run conditions\n\t\t\t// for control.type of structuretable that do not use FieldPicker, we need to add to\n\t\t\t// the controlValue any missing data model fields.  We need to do it here so that\n\t\t\t// validate can run against the added fields\n\t\t\tthis._addToControlValues();\n\t\t\t// we need to take another pass through to resolve any default values that are parameterRefs.\n\t\t\t// we need to do it here because the parameter that is referenced in the parameterRef may need to have a\n\t\t\t// default value set in the above loop.\n\t\t\tthis._addToControlValues(true);\n\n\t\t\t// set initial values for addRemoveRows, tableButtons in redux\n\t\t\tthis.setInitialAddRemoveRows();\n\t\t\tthis.setInitialTableButtonState();\n\n\t\t\tthis.uiItems = this.form.uiItems; // set last so properties dialog doesn't render too early\n\t\t\t// set initial tab to first tab\n\t\t\tif (!isEmpty(this.uiItems) && !isEmpty(this.uiItems[0].tabs)) {\n\t\t\t\t// active tab is the first non-tearsheet\n\t\t\t\tconst filteredTearsheets = this.uiItems[0].tabs.filter((tab) => tab.content.itemType !== ItemType.TEARSHEET);\n\t\t\t\tif (filteredTearsheets.length) {\n\t\t\t\t\tthis.propertiesStore.setActiveTab(filteredTearsheets[0].group);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// set title\n\t\t\tthis.setTitle(this.form.label);\n\t\t}\n\t}\n\n\tgetForm() {\n\t\treturn this.form;\n\t}\n\n\tgetResource(key, defaultValue) {\n\t\tif (this.form && this.form.resources) {\n\t\t\treturn this.form.resources[key] ? this.form.resources[key] : defaultValue;\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\tsetAppData(appData) {\n\t\tthis.appData = appData;\n\t}\n\n\tgetAppData() {\n\t\treturn this.appData;\n\t}\n\n\t_parseUiConditions() {\n\t\tthis.visibleDefinitions = { controls: {}, refs: {} };\n\t\tthis.enabledDefinitions = { controls: {}, refs: {} };\n\t\tthis.validationDefinitions = { controls: {}, refs: {} };\n\t\tthis.filterDefinitions = { controls: {}, refs: {} };\n\t\tthis.filteredEnumDefinitions = { controls: {}, refs: {} };\n\t\tthis.allowChangeDefinitions = { controls: {}, refs: {} };\n\t\tthis.conditionalDefaultDefinitions = { controls: {}, refs: {} };\n\n\t\tif (this.form.conditions) {\n\t\t\tfor (const condition of this.form.conditions) {\n\t\t\t\tif (condition.visible) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.visibleDefinitions, condition, CONDITION_TYPE.VISIBLE);\n\t\t\t\t} else if (condition.enabled) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.enabledDefinitions, condition, CONDITION_TYPE.ENABLED);\n\t\t\t\t} else if (condition.validation) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.validationDefinitions, condition, CONDITION_TYPE.VALIDATION);\n\t\t\t\t} else if (condition.filter) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.filterDefinitions, condition, CONDITION_TYPE.FILTER);\n\t\t\t\t} else if (condition.enum_filter) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.filteredEnumDefinitions, condition, CONDITION_TYPE.FILTEREDENUM);\n\t\t\t\t} else if (condition.allow_change) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.allowChangeDefinitions, condition, CONDITION_TYPE.ALLOWCHANGE);\n\t\t\t\t} else if (condition.default_value) {\n\t\t\t\t\tUiConditionsParser.parseConditions(this.conditionalDefaultDefinitions, condition, CONDITION_TYPE.CONDITIONALDEFAULT);\n\t\t\t\t} else { // invalid\n\t\t\t\t\tlogger.info(\"Invalid definition: \" + JSON.stringify(condition));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t* This function will get all definitions of the input definition type (visible, enabled,\n\t* filteredEnum and validation) and the definition index (controls, refs) that are\n\t* referenced by the propertyId.  The definition types visible and enabled have two indices.\n\t* Controls indices are all definitions that have the propertyId as an operand in the evaluate.\n\t* Refs are all definitions that have the propertyId as something that is set as a result of the evaluate.\n\t*/\n\tgetDefinitions(propertyId, dfnType, dfnIndex) {\n\t\tlet conditionDefinitions;\n\t\tswitch (dfnType) {\n\t\tcase CONDITION_TYPE.VISIBLE:\n\t\t\tconditionDefinitions = this.visibleDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.ENABLED:\n\t\t\tconditionDefinitions = this.enabledDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.FILTEREDENUM:\n\t\t\tconditionDefinitions = this.filteredEnumDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.ALLOWCHANGE:\n\t\t\tconditionDefinitions = this.allowChangeDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.CONDITIONALDEFAULT:\n\t\t\tconditionDefinitions = this.conditionalDefaultDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tcase CONDITION_TYPE.VALIDATION:\n\t\t\tconditionDefinitions = this.validationDefinitions[dfnIndex];\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\t// only return definitions that reference the propertyId\n\t\tlet retCond = [];\n\t\tfor (const conditionKey in conditionDefinitions) {\n\t\t\tif (!has(conditionDefinitions, conditionKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// the definition may have a column indicator, build a propertyID\n\t\t\t// with the the name and col set from the definition ref.\n\t\t\tconst baseId = conditionsUtil.getParamRefPropertyId(conditionKey);\n\t\t\t// baseId.col and propertyId.col can be undefined\n\t\t\tif (baseId.name === propertyId.name && baseId.col === propertyId.col) {\n\t\t\t\tretCond = retCond.concat(conditionDefinitions[conditionKey]);\n\t\t\t}\n\t\t}\n\t\treturn retCond;\n\t}\n\n\tgetRequiredDefinitionIds() {\n\t\treturn this.requiredDefinitionsIds;\n\t}\n\n\t/*\n\t* Used to convert a propertyId to a propertyId that always has a row.\n\t* Used in complex types that aren't tables and don't have rows.  Returns original\n\t* propertyId or a propertyId where col is converted to row.  Used in messages and property values since they\n\t* are stored name -> row -> col\n\t* @param propertyId\n\t* @return propertyId\n\t*/\n\tconvertPropertyId(propertyId) {\n\t\t// used for backward compatibility when a controlName is passed in\n\t\tif (typeof propertyId === \"string\") {\n\t\t\treturn {\n\t\t\t\tname: propertyId\n\t\t\t};\n\t\t}\n\t\t// used for complex types that aren't tables\n\t\treturn this.convertNestedPropertyId(propertyId);\n\t}\n\n\tconvertNestedPropertyId(propertyId) {\n\t\tif (propertyId && typeof propertyId.col !== \"undefined\" && typeof propertyId.row === \"undefined\") {\n\n\t\t\tlet childPropertyId;\n\t\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\t\tchildPropertyId = this.convertNestedPropertyId(propertyId.propertyId);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tname: propertyId.name,\n\t\t\t\trow: propertyId.col,\n\t\t\t\tpropertyId: childPropertyId\n\t\t\t};\n\t\t} else if (propertyId &&\n\t\t\ttypeof propertyId.col !== \"undefined\" &&\n\t\t\ttypeof propertyId.row !== \"undefined\" &&\n\t\t\ttypeof propertyId.propertyId !== \"undefined\") { // handle nested complex types that aren't tables\n\t\t\treturn {\n\t\t\t\tname: propertyId.name,\n\t\t\t\trow: propertyId.row,\n\t\t\t\tcol: propertyId.col,\n\t\t\t\tpropertyId: this.convertNestedPropertyId(propertyId.propertyId)\n\t\t\t};\n\t\t}\n\t\treturn propertyId;\n\t}\n\n\t// Given the parent's \"propertyId\", find the \"propertyId\" of the last child\n\t//  and update the \"row\" and \"col\" properties defined in \"childProperties\"\n\tupdateLastChildPropertyId(propertyId, childProperties) {\n\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\treturn this.updateLastChildPropertyId(propertyId.propertyId, childProperties);\n\t\t}\n\t\tif (typeof childProperties.row !== \"undefined\") {\n\t\t\tpropertyId.row = childProperties.row;\n\t\t}\n\t\tif (typeof childProperties.col !== \"undefined\") {\n\t\t\tpropertyId.col = childProperties.col;\n\t\t}\n\t\treturn propertyId;\n\t}\n\n\t// Given the parent's \"propertyId\", set the \"childPropertyId\" as the last child of \"propertyId\"\n\t// The \"childPropertyId\" is a control of a nested structure\n\tsetChildPropertyId(propertyId, childPropertyId) {\n\t\tif (typeof propertyId.propertyId !== \"undefined\") {\n\t\t\treturn this.setChildPropertyId(propertyId.propertyId, childPropertyId);\n\t\t}\n\t\tpropertyId.propertyId = childPropertyId;\n\t\treturn propertyId;\n\t}\n\n\t// This function will traverse the form and build a tree representation of panels.\n\t// Each panel entry will have an array of children controls and children panels.\n\tparsePanelTree() {\n\t\tthis.panelTree = {};\n\t\tthis.panelTree[PANEL_TREE_ROOT] = { controls: [], panels: [], actions: [] };\n\t\tparseUiContent(this.panelTree, this.form, PANEL_TREE_ROOT);\n\t}\n\n\t_addToControlValues(resolveParameterRefs) {\n\t\tfor (const keyName in this.controls) {\n\t\t\tif (!has(this.controls, keyName)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst control = this.controls[keyName];\n\t\t\tconst propertyId = { name: control.name };\n\t\t\tlet controlValue = this.getPropertyValue(propertyId);\n\n\t\t\tif (resolveParameterRefs) {\n\t\t\t\tif (typeof controlValue !== \"undefined\" && controlValue !== null && typeof controlValue.parameterRef !== \"undefined\") {\n\t\t\t\t\tcontrolValue = this.getPropertyValue({ name: controlValue.parameterRef });\n\t\t\t\t\tthis.updatePropertyValue(propertyId, controlValue, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t\t\t}\n\t\t\t} else if (control.controlType === \"structuretable\" && control.addRemoveRows === false && control.includeAllFields === true) {\n\t\t\t\tcontrolValue = this._populateFieldData(controlValue, control);\n\t\t\t\tthis.updatePropertyValue(propertyId, controlValue, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t\t} else if (typeof control.valueDef !== \"undefined\" && typeof control.valueDef.defaultValue !== \"undefined\" &&\n\t\t\t\t(typeof controlValue === \"undefined\")) {\n\t\t\t\tcontrolValue = control.valueDef.defaultValue;\n\n\t\t\t\t// convert values of type:object to the internal format array values\n\t\t\t\tif (PropertyUtils.isSubControlStructureObjectType(control)) {\n\t\t\t\t\tcontrolValue = PropertyUtils.convertObjectStructureToArray(control.valueDef.isList, control.subControls, controlValue);\n\t\t\t\t}\n\n\t\t\t\tthis.updatePropertyValue(propertyId, controlValue, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t\t} else if (control.controlType === \"structureeditor\") {\n\t\t\t\tif (!controlValue || (Array.isArray(controlValue) && controlValue.length === 0)) {\n\t\t\t\t\tif (Array.isArray(control.defaultRow)) {\n\t\t\t\t\t\tthis.updatePropertyValue(propertyId, control.defaultRow, true, UPDATE_TYPE.INITIAL_LOAD);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_populateFieldData(controlValue, control) {\n\t\tconst fields = this.getDatasetMetadataFields();\n\t\tconst multiSchema = this._isMultiSchemaControl(control);\n\t\t// Start with the values stored in current_parameters\n\t\tconst rowData = [].concat(controlValue);\n\t\t// Add in any rows containing fields not present in the current parameters\n\t\tfor (let i = 0; i < fields.length; i++) {\n\t\t\tconst row = [];\n\t\t\tconst fieldIndex = this._indexOfField(fields[i].name, controlValue);\n\t\t\tif (fieldIndex === -1) {\n\t\t\t\tfor (let k = 0; k < control.subControls.length; k++) {\n\t\t\t\t\tif (k === control.keyIndex) {\n\t\t\t\t\t\tconst fieldValue = multiSchema ? { link_ref: fields[i].schema, field_name: fields[i].origName } : fields[i].name;\n\t\t\t\t\t\trow.push(fieldValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.push(this._getDefaultSubControlValue(k, fields[i].name, fields, control));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trowData.push(row);\n\t\t\t}\n\t\t}\n\t\treturn rowData;\n\t}\n\n\t/**\n\t * Determines if the given control supports multiple input schemas.\n\t *\n\t * @param control A control structure\n\t * @return True if the control supports multiple input schemas\n\t */\n\t_isMultiSchemaControl(control) {\n\t\tif (control.role === ParamRole.COLUMN && control.valueDef.propType === Type.STRUCTURE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (PropertyUtils.toType(control.subControls) === \"array\") {\n\t\t\tfor (const keyName in control.subControls) {\n\t\t\t\tif (has(control.subControls, keyName)) {\n\t\t\t\t\tconst subControl = control.subControls[keyName];\n\t\t\t\t\tif (subControl.role === ParamRole.COLUMN && subControl.valueDef.propType === Type.STRUCTURE) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines if the current form can accept multiple input schemas.\n\t *\n\t * @return True if multiple input datasets are supported in this node\n\t */\n\t_canHaveMultipleSchemas() {\n\t\tfor (const keyName in this.controls) {\n\t\t\tif (has(this.controls, keyName)) {\n\t\t\t\tconst control = this.controls[keyName];\n\t\t\t\tif (this._isMultiSchemaControl(control)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t_getDefaultSubControlValue(col, fieldName, fields, control) {\n\t\tlet val;\n\t\tconst subControl = control.subControls[col];\n\t\tif (PropertyUtils.toType(subControl.dmDefault) !== \"undefined\") {\n\t\t\tval = PropertyUtils.getDMDefault(subControl, fieldName, fields);\n\t\t} else if (PropertyUtils.toType(subControl.valueDef.defaultValue) !== \"undefined\") {\n\t\t\tval = subControl.valueDef.defaultValue;\n\t\t\tif (val.parameterRef) {\n\t\t\t\tval = this.getPropertyValue({ name: val.parameterRef });\n\t\t\t}\n\t\t} else if (subControl.values) {\n\t\t\tval = subControl.values[0];\n\t\t} else if (subControl.valueDef.propType === \"string\") {\n\t\t\tval = \"\";\n\t\t} else if (subControl.valueDef.propType === \"boolean\") {\n\t\t\tval = false;\n\t\t} else if (subControl.valueDef.propType === \"enum\") {\n\t\t\tval = subControl.values[0];\n\t\t} else if (subControl.valueDef.propType === \"integer\" ||\n\t\t\t\t\t\t\t\tsubControl.valueDef.propType === \"long\" ||\n\t\t\t\t\t\t\t\tsubControl.valueDef.propType === \"double\") {\n\t\t\tval = 0;\n\t\t} else if (subControl.valueDef.propType === \"structure\") {\n\t\t\tval = {};\n\t\t} else {\n\t\t\tval = null;\n\t\t}\n\t\treturn val;\n\t}\n\n\t_indexOfField(fieldName, controlValue) {\n\t\tfor (let i = 0; i < controlValue.length; i++) {\n\t\t\tif (controlValue[i][0] === fieldName) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tgetUiItems() {\n\t\treturn this.uiItems;\n\t}\n\n\tgetReactIntl() {\n\t\treturn this.reactIntl;\n\t}\n\n\taddSharedControls(id, controlsNames) {\n\t\tthis.sharedCtrlInfo.push({ \"id\": id, \"controlNames\": controlsNames });\n\t}\n\n\tgetSharedCtrlInfo() {\n\t\treturn this.sharedCtrlInfo;\n\t}\n\n\tisSummaryPanelShowing() {\n\t\treturn this.isSummaryPanel;\n\t}\n\n\tsetIsSummaryPanelShowing(isSummaryPanelShowing) {\n\t\tthis.isSummaryPanel = isSummaryPanelShowing;\n\t}\n\n\tincreaseVisibleSubPanelCounter() {\n\t\tthis.visibleSubPanelCounter++;\n\t}\n\n\tdecreaseVisibleSubPanelCounter() {\n\t\tthis.visibleSubPanelCounter--;\n\t}\n\n\tisSubPanelsShowing() {\n\t\treturn this.visibleSubPanelCounter > 0;\n\t}\n\n\t/**\n\t* Returns title\n\t*\t@return string\n\t*/\n\tgetTitle() {\n\t\treturn this.propertiesStore.getTitle();\n\t}\n\n\t/**\n\t* Sets title for common-properties\n\t*\t@param title string\n\t*/\n\tsetTitle(title) {\n\t\treturn this.propertiesStore.setTitle(title);\n\t}\n\n\t/**\n\t* Sets all ops supported in common-properties.  Both standard and custom\n\t*\t@param custOps object\n\t*/\n\tsetConditionOps(custOps) {\n\t\tthis.conditionOps = getConditionOps(custOps);\n\t}\n\n\t/**\n\t* Returns the op to run.\n\t*\t@param op string\n\t* @return op method to run\n\t*/\n\tgetConditionOp(op) {\n\t\tif (this.conditionOps) {\n\t\t\treturn this.conditionOps[op];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t*\t@return a map of condition ops\n\t*/\n\tgetConditionOps() {\n\t\treturn this.conditionOps;\n\t}\n\n\t/**\n\t* Returns datasetMetadata passed into common-properties.\n\t*\t@return passed in value\n\t*/\n\tgetDatasetMetadata() {\n\t\treturn this.propertiesStore.getDatasetMetadata().schemas;\n\t}\n\n\t/**\n\t* Returns a list field objects.  Based on datasetMetadata passed into common-properties.\n\t*\t@return array[field]\n\t*/\n\tgetDatasetMetadataFields() {\n\t\treturn this.propertiesStore.getDatasetMetadata().fields;\n\t}\n\n\t/**\n\t* Returns a list of schema names.\n\t*\t@return array[string]\n\t*/\n\tgetDatasetMetadataSchemas() {\n\t\treturn this.propertiesStore.getDatasetMetadata().schemaNames;\n\t}\n\n\t/**\n\t* Returns a list field objects filtered. These are filterd by conditions and\n\t* by shared controls\n\t* @param propertyId Propertied id of the control requesting the fields\n\t* @return array[field]\n\t*/\n\tgetFilteredDatasetMetadata(propertyId) {\n\t\tlet fields = this.getDatasetMetadataFields();\n\t\tif (propertyId) {\n\t\t\tfields = this._filterSharedDataset(propertyId, fields);\n\t\t\tfields = conditionsUtil.filterConditions(propertyId, this.filterDefinitions.controls, this, fields);\n\t\t}\n\t\treturn fields;\n\t}\n\n\t/**\n\t * Retrieves a filtered data model in which all fields that are already\n\t * in use by other controls are already filtered out.\n\t *\n\t * @param propertyId Name of control to skip when checking field controls\n\t * @param fields array of available fields to be filtered\n\t * @return Filtered fields with fields in use removed\n\t */\n\t_filterSharedDataset(propertyId, fields) {\n\t\tif (!this.sharedCtrlInfo || !propertyId) {\n\t\t\treturn fields;\n\t\t}\n\t\tconst skipControlName = propertyId.name;\n\t\t// gets all the controls that are shared with this property\n\t\tlet sharedCtrlNames = [];\n\t\tfor (const sharedCtrlList of this.sharedCtrlInfo) {\n\t\t\tfor (const sharedCtrl of sharedCtrlList.controlNames) {\n\t\t\t\tif (skipControlName === sharedCtrl.controlName) {\n\t\t\t\t\tsharedCtrlNames = sharedCtrlList.controlNames;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// get all the fields that are used by other controls\n\t\tconst propNames = sharedCtrlNames.map(function(item) {\n\t\t\treturn item.controlName;\n\t\t});\n\t\treturn this.filterFieldsFromSharedProps(fields, propNames, skipControlName);\n\t}\n\n\t/**\n\t * Filters field names that are already in use from the given list.\n\t *\n\t * @param fieldNames - Array of field names to filter\n\t * @param propNames - Array of property names that share a single source field list\n\t * @param skipName - Name of a property to skip from the list\n\t * @return An array of filtered field names that are not in use\n\t */\n\tfilterFieldsFromSharedProps(fieldNames, propNames, skipName) {\n\t\ttry {\n\t\t\tconst usedFields = [];\n\t\t\tfor (const sharedProp of propNames) {\n\t\t\t\tif (sharedProp !== skipName) {\n\t\t\t\t\tconst control = this.getControl({ name: sharedProp });\n\t\t\t\t\t// only remove from the main list the values that are in other controls\n\t\t\t\t\tconst propValue = this.getPropertyValue({ name: sharedProp });\n\t\t\t\t\tif (Array.isArray(propValue)) {\n\t\t\t\t\t\tfor (const arrayValue of propValue) {\n\t\t\t\t\t\t\tif (Array.isArray(arrayValue)) {\n\t\t\t\t\t\t\t\t// Two dimensional arrays\n\t\t\t\t\t\t\t\tconst fieldIdx = PropertyUtils.getTableFieldIndex(control);\n\t\t\t\t\t\t\t\tif (fieldIdx >= 0 && fieldIdx < arrayValue.length) {\n\t\t\t\t\t\t\t\t\tusedFields.push(PropertyUtils.stringifyFieldValue(arrayValue[fieldIdx], control));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Single dimensional arrays\n\t\t\t\t\t\t\t\tusedFields.push(PropertyUtils.stringifyFieldValue(arrayValue, control));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Plain properties\n\t\t\t\t\t\tusedFields.push(PropertyUtils.stringifyFieldValue(propValue, control));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst usedFieldsList = Array.from(new Set(usedFields)); // make all values unique\n\t\t\tconst filteredFields = fieldNames.filter(function(field) {\n\t\t\t\treturn usedFieldsList.indexOf(field.name) === -1;\n\t\t\t});\n\t\t\treturn filteredFields;\n\t\t} catch (error) {\n\t\t\tlogger.warn(\"Error filtering shared controls \" + error);\n\t\t}\n\t\treturn fieldNames;\n\t}\n\n\t/**\n\t * This method parses the inDatasetMetadata into fields and schemaNames to be\n\t * used throughout common-properties.\n\t *\n\t * @param inDatasetMetadata Array of datasetMetadata schemata\n\t */\n\tsetDatasetMetadata(inDatasetMetadata) {\n\t\tconst schemaNames = [];\n\t\tconst fields = [];\n\t\tif (inDatasetMetadata) {\n\t\t\tlet schemas = cloneDeep(inDatasetMetadata);\n\t\t\t// in the 2.0 schema only arrays are support but we want to support both for now.  Internally everything should be an array\n\t\t\tif (!Array.isArray(schemas)) {\n\t\t\t\tschemas = [schemas];\n\t\t\t}\n\t\t\t// make sure all schemas have a name\n\t\t\tfor (let j = 0; j < schemas.length; j++) {\n\t\t\t\tif (!schemas[j].name) {\n\t\t\t\t\tschemas[j].name = j.toString();\n\t\t\t\t}\n\t\t\t\tschemas[j].idx = j; // used to set dup names\n\t\t\t}\n\t\t\t// make sure all schemas have a unique names\n\t\t\tfor (const schema of schemas) {\n\t\t\t\tconst dupNamedSchemas = schemas.filter(function(filterSchema) {\n\t\t\t\t\treturn filterSchema.name === schema.name;\n\t\t\t\t});\n\t\t\t\tif (dupNamedSchemas && dupNamedSchemas.length > 1) {\n\t\t\t\t\tfor (let j = 0; j < dupNamedSchemas.length; j++) {\n\t\t\t\t\t\tdupNamedSchemas[j].name = dupNamedSchemas[j].name + \"_\" + dupNamedSchemas[j].idx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// process all fields into single array\n\t\t\tfor (const schema of schemas) {\n\t\t\t\tschemaNames.push(schema.name);\n\t\t\t\tif (schema.fields) {\n\t\t\t\t\tfor (const field of schema.fields) {\n\t\t\t\t\t\tfield.schema = schema.name;\n\t\t\t\t\t\tfield.origName = field.name; // original name\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Adjust field names for multi-schema scenarios in which setForm is not called\n\t\tif (typeof this.multipleSchemas === \"undefined\") {\n\t\t\t// Determine from the current control set whether or not there can be multiple input datasets\n\t\t\tthis.multipleSchemas = this._canHaveMultipleSchemas();\n\t\t}\n\t\tif (this.multipleSchemas) {\n\t\t\tfor (const field of fields) {\n\t\t\t\tfield.name = field.schema + \".\" + field.origName;\n\t\t\t}\n\t\t}\n\n\t\t// store values in redux\n\t\tthis.propertiesStore.setDatasetMetadata({ schemas: inDatasetMetadata, fields: fields, schemaNames: schemaNames });\n\t}\n\n\t/**\n\t* This public API will validate a single property input value.\n\t*\n\t* @param {object} propertyId. required.\n\t* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n\t*    Defaults to true to always display errors\n\t*/\n\tvalidateInput(propertyId, showErrors = true) {\n\t\tconditionsUtil.validateInput(propertyId, this, showErrors);\n\t}\n\n\t/**\n\t* This public API will validate all properties input values.\n\t* @param {boolean} showErrors. optional. Set to false to run conditions without displaying errors in the UI\n\t*    Defaults to true to always display errors\n\t*/\n\tvalidatePropertiesValues(showErrors = true) {\n\t\tconditionsUtil.validatePropertiesValues(this, showErrors);\n\t}\n\n\t//\n\t// Table row selections\n\t//\n\tgetSelectedRows(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\treturn this.propertiesStore.getSelectedRows(propertyId);\n\t}\n\n\tupdateSelectedRows(inPropertyId, selection) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.updateSelectedRows(propertyId, selection);\n\t\tthis._notifySelectionListener(propertyId, selection);\n\t}\n\n\tclearSelectedRows(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.clearSelectedRows(propertyId);\n\t}\n\n\t/**\n\t * Disable table row move buttons for all propertyIds in given array\n\t * @param propertyIds Array of propertyIds\n\t *\n\t */\n\tsetDisableRowMoveButtons(propertyIds) {\n\t\t// Verify that input is an array of objects\n\t\tif (Array.isArray(propertyIds)) {\n\t\t\tthis.propertiesStore.setDisableRowMoveButtons(propertyIds);\n\t\t}\n\t}\n\n\t/**\n\t* Returns array of propertyIds for which row move buttons will be disabled\n\t*\t@return Array of propertyIds\n\t*/\n\tgetDisableRowMoveButtons() {\n\t\treturn this.propertiesStore.getDisableRowMoveButtons();\n\t}\n\n\t/**\n\t * Check if row move buttons should be disabled for given propertyId\n\t * @param propertyId  The unique property identifier\n\t * @return boolean\n\t */\n\tisDisableRowMoveButtons(propertyId) {\n\t\tconst propertyIds = this.getDisableRowMoveButtons();\n\t\treturn (\n\t\t\tArray.isArray(propertyIds)\n\t\t\t\t? propertyIds.some((el) => isEqual(el, propertyId))\n\t\t\t\t: false\n\t\t);\n\t}\n\n\t//\n\t// Table row selection listeners\n\t//\n\n\t/**\n\t * Adds a row selection listener for a table or list.\n\t *\n\t * @param inPropertyId Property id for a table or list control\n\t * @param listener A callback function that contains a parameter that is\n\t *\tan array of row selection indices. The callback is fired whenever\n\t *\trow selections change for the given (row-based) control.\n\t */\n\taddRowSelectionListener(inPropertyId, listener) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst controlName = propertyId.name;\n\t\tif (!this.selectionListeners[controlName]) {\n\t\t\tthis.selectionListeners[controlName] = {};\n\t\t}\n\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\tthrow new Error(\"Listening for row selection changes on controls within table cells is not currently supported\");\n\n\t\t\t// TODO: Add this back if we ever get a request for listening to row changes on embedded tables.\n\n\t\t\t/*\n\t\t\tconst row = String(propertyId.row);\n\t\t\tif (!this.selectionListeners[propertyId.name][row]) {\n\t\t\t\tthis.selectionListeners[propertyId.name][row] = {};\n\t\t\t}\n\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\tconst col = String(propertyId.col);\n\t\t\t\tif (!this.selectionListeners[propertyId.name][row][col]) {\n\t\t\t\t\tthis.selectionListeners[propertyId.name][row][col] = {};\n\t\t\t\t}\n\t\t\t\tthis.selectionListeners[controlName][row][col] = listener;\n\t\t\t} else {\n\t\t\t\tthis.selectionListeners[controlName][row] = listener;\n\t\t\t}\n\t\t\t*/\n\t\t} else {\n\t\t\tthis.selectionListeners[controlName].listener = listener;\n\t\t}\n\t}\n\n\t/**\n\t * Removes the row selection listener from a control.\n\t *\n\t * @param inPropertyId Property id for a table or list control\n\t */\n\tremoveRowSelectionListener(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst controlName = propertyId.name;\n\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\tthrow new Error(\"Listening for row selection changes on controls within table cells is not currently supported\");\n\n\t\t\t// TODO: Add this back if we ever get a request for listening to row changes on embedded tables.\n\n\t\t\t/*\n\t\t\tconst row = propertyId.row;\n\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\tconst col = propertyId.col;\n\t\t\t\tif (this.selectionListeners[controlName][row][col]) {\n\t\t\t\t\tdelete this.selectionListeners[controlName][row][col];\n\t\t\t\t}\n\t\t\t} else if (this.selectionListeners[controlName][row]) {\n\t\t\t\tdelete this.selectionListeners[controlName][row];\n\t\t\t}\n\t\t\t*/\n\t\t} else if (this.selectionListeners[controlName]) {\n\t\t\tdelete this.selectionListeners[controlName];\n\t\t}\n\t}\n\n\t_notifySelectionListener(inPropertyId, selections) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst controlName = propertyId.name;\n\t\tif (this.selectionListeners[controlName]) {\n\n\t\t\t// TODO: Add this back if we ever get a request for listening to row changes on embedded tables.\n\n\t\t\t/*\n\t\t\tconst row = propertyId.row;\n\t\t\tif (Number.isInteger(propertyId.row)) {\n\t\t\t\tconst col = propertyId.col;\n\t\t\t\tif (Number.isInteger(propertyId.col)) {\n\t\t\t\t\tif (this.selectionListeners[controlName][row][col].listener) {\n\t\t\t\t\t\tthis.selectionListeners[controlName][row][col].listener(selections);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.selectionListeners[controlName][row].listener) {\n\t\t\t\t\tthis.selectionListeners[controlName][row].listener(selections);\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t\tthis.selectionListeners[controlName].listener(selections);\n\t\t}\n\t}\n\n\t//\n\t// A set of APIs for Expression Builder\n\t//\n\n\tsetExpressionInfo(expressionInfo) {\n\t\tthis.expressionFunctionInfo = setExpressionInfo(expressionInfo);\n\t}\n\n\tgetExpressionInfo() {\n\t\treturn this.expressionFunctionInfo;\n\t}\n\n\t// recently used of all categories under functions tab\n\tgetExpressionRecentlyUsed() {\n\t\treturn this.expressionRecentlyUsed;\n\t}\n\n\tupdateExpressionRecentlyUsed(functionInfo) {\n\t\tconst index = this.expressionRecentlyUsed.indexOf(functionInfo);\n\t\tif (index === -1) {\n\t\t\tthis.expressionRecentlyUsed.splice(0, 0, functionInfo);\n\t\t} else {\n\t\t\t// if already in the list, move it to the front\n\t\t\tthis.expressionRecentlyUsed.splice(index, 1);\n\t\t\tthis.expressionRecentlyUsed.unshift(functionInfo);\n\t\t}\n\t}\n\n\t// recently used of all categories under fields/values tab\n\tclearExpressionRecentlyUsed() {\n\t\tthis.expressionRecentlyUsed = [];\n\t}\n\n\tgetExpressionFieldsRecentlyUsed() {\n\t\treturn this.expressionFieldsRecentlyUsed;\n\t}\n\n\tupdateExpressionFieldsRecentlyUsed(fieldInfo) {\n\t\tconst index = this.expressionFieldsRecentlyUsed.indexOf(fieldInfo);\n\t\tif (index === -1) {\n\t\t\tthis.expressionFieldsRecentlyUsed.splice(0, 0, fieldInfo);\n\t\t} else {\n\t\t\t// if already in the list, move it to the front\n\t\t\tthis.expressionFieldsRecentlyUsed.splice(index, 1);\n\t\t\tthis.expressionFieldsRecentlyUsed.unshift(fieldInfo);\n\t\t}\n\t}\n\n\tclearExpressionFieldsRecentlyUsed() {\n\t\tthis.expressionFieldsRecentlyUsed = [];\n\t}\n\n\t/**\n\t* Retrieve filtered enumeration items.\n\t*\n\t* @param propertyId The unique property identifier\n\t* @param enumSet An object containing equal sized values and valueLabels arrays\n\t* @return Either the input object or a new object containing filtered items\n\t*/\n\tgetFilteredEnumItems(propertyId, enumSet) {\n\t\tconst replacementItems = this.propertiesStore.getFilteredEnumItems(propertyId);\n\t\tif (Array.isArray(replacementItems)) {\n\t\t\tconst newControl = {};\n\t\t\tnewControl.values = [];\n\t\t\tnewControl.valueLabels = [];\n\t\t\tfor (let idx = 0; idx < replacementItems.length; idx++) {\n\t\t\t\tnewControl.values.push(replacementItems[idx]);\n\t\t\t\tlet label = replacementItems[idx];\n\t\t\t\tconst index = enumSet.values.findIndex(function(value) {\n\t\t\t\t\treturn value === replacementItems[idx];\n\t\t\t\t});\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tlabel = enumSet.valueLabels[index];\n\t\t\t\t}\n\t\t\t\tnewControl.valueLabels.push(label);\n\t\t\t}\n\t\t\treturn newControl;\n\t\t}\n\t\treturn enumSet;\n\t}\n\n\t/*\n\t* Property Values Methods\n\t*/\n\tupdatePropertyValue(inPropertyId, value, skipValidateInput, type) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst initialValue = this.getPropertyValue(propertyId);\n\t\tif (typeof value === \"undefined\") {\n\t\t\tthis.removePropertyValue(propertyId);\n\t\t} else {\n\t\t\tthis.propertiesStore.updatePropertyValue(propertyId, value);\n\t\t}\n\t\tif (!conditionsUtil.allowConditions(inPropertyId, this)) {\n\t\t\tthis.propertiesStore.updatePropertyValue(propertyId, initialValue);\n\t\t\treturn;\n\t\t}\n\t\tconditionsUtil.validateConditions(inPropertyId, this);\n\t\tif (!skipValidateInput) {\n\t\t\tconditionsUtil.validateInput(inPropertyId, this, true);\n\t\t}\n\n\t\tif (this.handlers.propertyListener) {\n\t\t\tconst convertedValue = this._convertObjectStructure(propertyId, value);\n\t\t\tconst data = {\n\t\t\t\taction: ACTIONS.UPDATE_PROPERTY,\n\t\t\t\tproperty: propertyId,\n\t\t\t\tvalue: convertedValue\n\t\t\t};\n\t\t\tif (typeof type !== \"undefined\") {\n\t\t\t\tdata.type = type;\n\t\t\t}\n\t\t\tthis.handlers.propertyListener(data);\n\t\t}\n\t}\n\n\t/*\n\t* return the property value for the given 'inPropertyId'\n\t* options - optional object of config options where\n\t*   filterHiddenDisabled: true - filter out values from controls having state \"hidden\" or \"disabled\"\n\t*   applyProperties: true - this function is called from PropertiesMain.applyPropertiesEditing()\n\t*   filterHidden: true - filter out values from controls having state \"hidden\"\n\t*   filterDisabled: true - filter out values from controls having state \"disabled\"\n\t*   filterHiddenControls: true - filter out values from controls having type \"hidden\"\n\t*/\n\tgetPropertyValue(inPropertyId, options, defaultValue) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst propertyValue = this.propertiesStore.getPropertyValue(propertyId);\n\t\tlet filteredValue = defaultValue;\n\n\t\t// don't return hidden/disabled values\n\t\tconst filterHidden = options && (options.filterHiddenDisabled || options.filterHidden);\n\t\tconst filterDisabled = options && (options.filterHiddenDisabled || options.filterDisabled);\n\t\tconst filterHiddenControls = options && options.filterHiddenControls;\n\t\tif (filterHidden || filterDisabled || filterHiddenControls) {\n\t\t\t// top level value\n\t\t\tconst controlState = this.getControlState(propertyId);\n\t\t\tconst controlType = this.getControlType(propertyId);\n\t\t\tif (\n\t\t\t\t(controlState === STATES.DISABLED && filterDisabled) ||\n\t\t\t\t(controlState === STATES.HIDDEN && filterHidden) ||\n\t\t\t\t(controlType === ControlType.HIDDEN && filterHiddenControls)\n\t\t\t) {\n\t\t\t\treturn filteredValue;\n\t\t\t}\n\t\t\t// copy array to modify it and clear out disabled/hidden values\n\t\t\tfilteredValue = PropertyUtils.copy(propertyValue);\n\t\t\tif (Array.isArray(filteredValue)) {\n\t\t\t\tfor (let rowIdx = 0; rowIdx < filteredValue.length; rowIdx++) {\n\t\t\t\t\tconst rowValue = filteredValue[rowIdx];\n\t\t\t\t\tif (Array.isArray(rowValue)) {\n\t\t\t\t\t\tfor (let colIdx = 0; colIdx < rowValue.length; colIdx++) {\n\t\t\t\t\t\t\tconst colPropertyId = {\n\t\t\t\t\t\t\t\tname: propertyId.name,\n\t\t\t\t\t\t\t\trow: rowIdx,\n\t\t\t\t\t\t\t\tcol: colIdx\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst valueState = this.getControlState(colPropertyId);\n\t\t\t\t\t\t\tconst valueType = this.getControlType(colPropertyId);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(valueState === STATES.DISABLED && filterDisabled) ||\n\t\t\t\t\t\t\t\t(valueState === STATES.HIDDEN && filterHidden) ||\n\t\t\t\t\t\t\t\t(valueType === ControlType.HIDDEN && filterHiddenControls)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tfilteredValue[rowIdx][colIdx] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options && options.applyProperties === true) {\n\t\t\t\treturn this._convertObjectStructure(propertyId, filteredValue);\n\t\t\t}\n\t\t\treturn filteredValue;\n\t\t}\n\n\t\tif (options && options.applyProperties === true) {\n\t\t\treturn this._convertObjectStructure(propertyId, propertyValue);\n\t\t}\n\t\treturn propertyValue;\n\t}\n\n\tremovePropertyValue(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.removePropertyValue(propertyId);\n\t}\n\n\t// convert currentParameters of structureType:object to object values\n\t_convertObjectStructure(propertyId, propertyValue) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (PropertyUtils.isSubControlStructureObjectType(control)) {\n\t\t\tconst convert = control.structureType && control.structureType === \"object\";\n\t\t\tconst convertedValues = PropertyUtils.convertArrayStructureToObject(control.valueDef.isList, control.subControls, propertyValue, convert);\n\t\t\treturn convertedValues;\n\t\t}\n\t\treturn propertyValue;\n\t}\n\n\t/*\n\t* return the property values for all controls\n\t* options - optional object of config options where\n\t*   filterHiddenDisabled: true - filter out values from controls having state \"hidden\" or \"disabled\"\n\t*   applyProperties: true - this function is called from PropertiesMain.applyPropertiesEditing()\n\t*   filterHidden: true - filter out values from controls having state \"hidden\"\n\t*   filterDisabled: true - filter out values from controls having state \"disabled\"\n\t*   filterHiddenControls: true - filter out values from controls having type \"hidden\"\n\t*/\n\tgetPropertyValues(options) {\n\t\tconst propertyValues = this.propertiesStore.getPropertyValues();\n\t\tlet returnValues = propertyValues;\n\t\tif (options && (options.filterHiddenDisabled || options.filterHidden || options.filterDisabled || options.filterHiddenControls)) {\n\t\t\tconst filteredValues = {};\n\t\t\tfor (const propKey in propertyValues) {\n\t\t\t\tif (!has(propertyValues, propKey)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst filteredValue = this.getPropertyValue({ name: propKey }, options);\n\t\t\t\t// only set parameters with values\n\t\t\t\tif (typeof filteredValue !== \"undefined\") {\n\t\t\t\t\tfilteredValues[propKey] = filteredValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturnValues = filteredValues;\n\t\t}\n\n\t\t// convert currentParameters of structureType:object to object values\n\t\tif (options && options.applyProperties === true) {\n\t\t\tfor (const controlId in returnValues) {\n\t\t\t\tif (!has(returnValues, controlId)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst propertyId = this.convertPropertyId(controlId);\n\t\t\t\tconst propertyValue = this.propertiesStore.getPropertyValue(propertyId);\n\t\t\t\treturnValues[controlId] = this._convertObjectStructure(propertyId, propertyValue);\n\t\t\t}\n\t\t}\n\n\t\treturn returnValues;\n\t}\n\n\tsetPropertyValues(values, isInitProps) {\n\t\tconst inValues = cloneDeep(values);\n\n\t\t// convert currentParameters of type:object to array values\n\t\tif (values) {\n\t\t\tconst controls = this.getControls();\n\t\t\tObject.keys(inValues).forEach((propertyName) => {\n\t\t\t\tif (PropertyUtils.isSubControlStructureObjectType(controls[propertyName])) {\n\t\t\t\t\tconst currentValues = values[propertyName];\n\t\t\t\t\tconst control = controls[propertyName];\n\t\t\t\t\tconst convertedValues = PropertyUtils.convertObjectStructureToArray(control.valueDef.isList, control.subControls, currentValues);\n\t\t\t\t\tinValues[propertyName] = convertedValues;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.propertiesStore.setPropertyValues(inValues);\n\n\t\tif (isInitProps) {\n\t\t\t// Evaluate conditional defaults based on current_parameters upon loading of view\n\t\t\t// For a given parameter_ref, if multiple conditions evaluate to true only the first one is used.\n\t\t\tconst conditionalDefaultValues = {};\n\t\t\tif (!isEmpty(inValues)) {\n\t\t\t\tObject.keys(inValues).forEach((propertyName) => {\n\t\t\t\t\tconst propertyId = { name: propertyName };\n\t\t\t\t\t// Update conditionalDefaultValues object using pass-by-reference\n\t\t\t\t\tconditionsUtil.setConditionalDefaultValue(propertyId, this, conditionalDefaultValues);\n\t\t\t\t});\n\t\t\t\tif (!isEmpty(conditionalDefaultValues)) {\n\t\t\t\t\tObject.keys(conditionalDefaultValues).forEach((parameterRef) => {\n\t\t\t\t\t\tif (!(parameterRef in inValues)) {\n\t\t\t\t\t\t\t// convert values of type:object to the internal format array values\n\t\t\t\t\t\t\tconst control = this.getControl({ name: parameterRef });\n\t\t\t\t\t\t\tif (PropertyUtils.isSubControlStructureObjectType(control)) {\n\t\t\t\t\t\t\t\tconditionalDefaultValues[parameterRef] =\n\t\t\t\t\t\t\t\tPropertyUtils.convertObjectStructureToArray(control.valueDef.isList, control.subControls, conditionalDefaultValues[parameterRef]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.propertiesStore.updatePropertyValue({ name: parameterRef }, conditionalDefaultValues[parameterRef]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Validate other conditions after evaluating conditional defaults (default_value conditions)\n\t\tconditionsUtil.validatePropertiesConditions(this);\n\t\tif (this.handlers.propertyListener) {\n\t\t\tthis.handlers.propertyListener(\n\t\t\t\t{\n\t\t\t\t\taction: ACTIONS.SET_PROPERTIES\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Control States Methods\n\t * Sets the control state. Supported states are:\n\t * \"disabled\", \"enabled\", \"hidden\", \"visible\".\n\t */\n\tsetControlStates(states) {\n\t\tthis.propertiesStore.setControlStates(states);\n\t}\n\n\t/**\n\t* Updates the enabled/visible state of a control.\n\t*\n\t* @param inPropertyId Id of the property for the control to operate upon\n\t* @param state string (\"disabled\", \"enabled\", \"hidden\", \"visible\")\n\t*/\n\tupdateControlState(inPropertyId, state) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.updateControlState(propertyId, state);\n\t}\n\tgetControlState(propertyId) {\n\t\tconst state = this.propertiesStore.getControlState(propertyId);\n\t\treturn state ? state.value : \"\";\n\t}\n\tgetControlStates() {\n\t\treturn this.propertiesStore.getControlStates();\n\t}\n\n\t/**\n\t * Retrieves the enumeration value states for the given propertyId.\n\t *\n\t * @param propertyId The of an enumeration property\n\t * @return An object containing state settings for those enumeration values\n\t * that have previously been set\n\t */\n\tgetControlValueStates(propertyId) {\n\t\tconst state = this.propertiesStore.getControlState(propertyId);\n\t\treturn state ? state.values : {};\n\t}\n\n\t/**\n\t * Retrieves the enumeration value states for the given propertyId.\n\t *\n\t * @param propertyId The of an enumeration property\n\t * @return An object containing state enumFilter\n\t */\n\tgetControlEnumFilterStates(propertyId) {\n\t\tconst state = this.propertiesStore.getControlState(propertyId);\n\t\treturn state ? state.enumFilter : {};\n\t}\n\n\t/**\n\t\t * Panel States Methods\n\t\t * Sets the panel state. Supported states are:\n\t\t * \"disabled\", \"enabled\", \"hidden\", \"visible\".\n\t\t */\n\tsetPanelStates(states) {\n\t\tthis.propertiesStore.setPanelStates(states);\n\t}\n\n\t/**\n\t\t* @param panelId {name: panel.id}\n\t  * @param state string (\"disabled\", \"enabled\", \"hidden\", \"visible\")\n\t\t*/\n\tupdatePanelState(panelId, state) {\n\t\tthis.propertiesStore.updatePanelState(panelId, state);\n\t}\n\tgetPanelState(panelId) {\n\t\treturn this.propertiesStore.getPanelState(panelId);\n\t}\n\tgetPanelStates() {\n\t\treturn this.propertiesStore.getPanelStates();\n\t}\n\tclearActiveTearsheet() {\n\t\tthis.propertiesStore.setActiveTearsheetId(null);\n\t}\n\tsetActiveTearsheet(tearsheetId) {\n\t\tthis.propertiesStore.setActiveTearsheetId(tearsheetId);\n\t}\n\tgetActiveTearsheet() {\n\t\treturn this.propertiesStore.getActiveTearsheetId() || null;\n\t}\n\n\n\t/**\n\t * Action States Methods\n\t * Sets the panel state. Supported states are:\n\t * \"disabled\", \"enabled\", \"hidden\", \"visible\".\n\t */\n\tsetActionStates(states) {\n\t\tthis.propertiesStore.setActionStates(states);\n\t}\n\n\t/**\n\t* @param actionId {name: action.id}\n  * @param state string (\"disabled\", \"enabled\", \"hidden\", \"visible\")\n\t*/\n\tupdateActionState(actionId, state) {\n\t\tthis.propertiesStore.updateActionState(actionId, state);\n\t}\n\n\t/**\n\t* @param actionId {name: action.id}\n\t*/\n\tgetActionState(actionId) {\n\t\treturn this.propertiesStore.getActionState(actionId);\n\t}\n\n\tgetActionStates() {\n\t\treturn this.propertiesStore.getActionStates();\n\t}\n\n\t/**\n\t* @param actionId {name: action.id}\n\t*/\n\tgetAction(actionId) {\n\t\treturn this.actions[actionId.name];\n\t}\n\n\t/**\n\t* Error Messages Methods\n\t* @param messages object with keys being property name\n\t*/\n\tsetErrorMessages(messages) {\n\t\tthis.propertiesStore.setErrorMessages(messages);\n\t}\n\n\t/**\n\t* Returns a single error message for a propertyId.\n\t*\n\t* @param inPropertyId Target propertyId\n\t* @param filterHiddenDisable True to leave out hidden and disabled properties\n\t* @param filterSuccess If true, leave out success messages\n\t* @param filterDisplayError If true, leave out messages that are not displayed in the UI\n\t* @return error message object\n\t*/\n\tgetErrorMessage(inPropertyId, filterHiddenDisable = false, filterSuccess = false, filterDisplayError = true) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\t// don't return hidden message\n\t\tif (filterHiddenDisable) {\n\t\t\tconst controlState = this.getControlState(propertyId);\n\t\t\tconst controlType = this.getControlType(propertyId);\n\t\t\tif (controlState === STATES.DISABLED || controlState === STATES.HIDDEN || controlType === ControlType.HIDDEN) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tconst message = this.propertiesStore.getErrorMessage(propertyId, this.reactIntl);\n\t\tif (filterSuccess) {\n\t\t\tif (message && message.type === CONDITION_MESSAGE_TYPE.SUCCESS) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (filterDisplayError) {\n\t\t\tif (message && !isUndefined(message.displayError) && !message.displayError) { // This is only set if false\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\n\t/**\n\t*\tUsed to return all error messages.  Will either return internally stored messages\n\t* or formatted list to store in pipeline-flow\n\t* @param filteredPipeline boolean\n\t* @param filterHiddenDisable True to leave out hidden and disabled properties\n\t* @param filterSuccess If true, leave out success messages\n\t* @param filterDisplayError If true, leave out messages that are not displayed in the UI\n\t* @return object when filteredPipeline=false or array when filteredPipeline=true\n\t*/\n\tgetErrorMessages(filteredPipeline, filterHiddenDisable, filterSuccess, filterDisplayError = true) {\n\t\tlet messages = this.propertiesStore.getErrorMessages();\n\n\t\tif (filterDisplayError) {\n\t\t\tmessages = this._filterDisplayErrors(messages);\n\t\t}\n\t\tif (filteredPipeline || filterHiddenDisable) {\n\t\t\tmessages = this._filterMessages(messages, filteredPipeline, filterHiddenDisable, filterSuccess);\n\t\t}\n\t\treturn messages;\n\t}\n\n\tgetAllErrorMessages() {\n\t\treturn this.getErrorMessages(false, false, false, false);\n\t}\n\n\tgetRequiredErrorMessages() {\n\t\tconst messages = this.propertiesStore.getErrorMessages();\n\t\tconst requiredMessages = this._filterNonRequiredErrors(messages);\n\t\tconst filtered = this._filterHiddenDisabledErrors(requiredMessages); // Exclude errors for controls that are hidden or disabled\n\t\treturn filtered;\n\t}\n\n\t_filterMessages(messages, filteredPipeline, filterHiddenDisable, filterSuccess) {\n\t\tconst filteredMessages = {};\n\t\tconst pipelineMessages = [];\n\t\tfor (const paramKey in messages) {\n\t\t\tif (!has(messages, paramKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// This returns top-level message for tables\n\t\t\tconst paramMessage = this.getErrorMessage({ name: paramKey }, filterHiddenDisable, filterSuccess);\n\t\t\tif (paramMessage && paramMessage.text) {\n\t\t\t\tif (filteredPipeline) {\n\t\t\t\t\tpipelineMessages.push({\n\t\t\t\t\t\tid_ref: paramKey,\n\t\t\t\t\t\tvalidation_id: paramMessage.validation_id,\n\t\t\t\t\t\ttype: paramMessage.type,\n\t\t\t\t\t\ttext: paramMessage.text\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfilteredMessages[paramKey] = paramMessage;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (filteredPipeline) {\n\t\t\treturn pipelineMessages;\n\t\t}\n\t\treturn filteredMessages;\n\t}\n\n\t// Remove error messages that will not be displayed in the UI\n\t_filterDisplayErrors(messages) {\n\t\tconst filterCondition = (testMessage) => (isUndefined(testMessage.displayError) || testMessage.displayError);\n\t\tconst filteredMessages = this._filterErrors(messages, filterCondition);\n\t\treturn filteredMessages;\n\t}\n\n\t// Remove error messages that are not from a required parameters\n\t_filterNonRequiredErrors(messages) {\n\t\tconst filterCondition = (testMessage) => testMessage.required === true;\n\t\tconst filteredMessages = this._filterErrors(messages, filterCondition);\n\t\treturn filteredMessages;\n\t}\n\n\t// Remove error messages that are disabled or hidden\n\t_filterHiddenDisabledErrors(messages) {\n\t\tconst filterCondition = (testMessage, propertyId) => {\n\t\t\tconst controlState = this.getControlState(propertyId);\n\t\t\tconst controlType = this.getControlType(propertyId);\n\t\t\treturn controlState !== STATES.HIDDEN && controlState !== STATES.DISABLED && controlType !== ControlType.HIDDEN;\n\t\t};\n\t\tconst filteredMessages = this._filterErrors(messages, filterCondition);\n\t\treturn filteredMessages;\n\t}\n\n\n\t// Remove error messages that do not satisfy the given condition\n\t_filterErrors(messages, condition) {\n\t\tconst filteredMessages = {};\n\t\tconst parameterNames = Object.keys(messages);\n\t\tparameterNames.forEach((paramKey) => {\n\t\t\tconst parameterError = messages[paramKey];\n\t\t\tif (parameterError.text && condition(parameterError, parameterError.propertyId)) { // not table\n\t\t\t\tfilteredMessages[paramKey] = parameterError;\n\t\t\t} else { // table cell\n\t\t\t\tfor (const rowKey in parameterError) {\n\t\t\t\t\tif (!has(parameterError, rowKey)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst rowMessage = parameterError[rowKey];\n\t\t\t\t\tif (rowMessage && rowMessage.text && condition(rowMessage, rowMessage.propertyId)) {\n\t\t\t\t\t\tif (typeof filteredMessages[paramKey] === \"undefined\") {\n\t\t\t\t\t\t\tfilteredMessages[paramKey] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfilteredMessages[paramKey][rowKey] = rowMessage;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const colKey in rowMessage) {\n\t\t\t\t\t\t\tif (!has(rowMessage, colKey)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst colMessage = rowMessage[colKey];\n\t\t\t\t\t\t\tif (colMessage && colMessage.text && condition(colMessage, colMessage.propertyId)) {\n\t\t\t\t\t\t\t\tif (typeof filteredMessages[paramKey] === \"undefined\") {\n\t\t\t\t\t\t\t\t\tfilteredMessages[paramKey] = {};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (typeof filteredMessages[paramKey][rowKey] === \"undefined\") {\n\t\t\t\t\t\t\t\t\tfilteredMessages[paramKey][rowKey] = {};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfilteredMessages[paramKey][rowKey][colKey] = colMessage;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn filteredMessages;\n\t}\n\n\tupdateErrorMessage(inPropertyId, message) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tif (message && message.type !== \"info\") {\n\t\t\tthis.propertiesStore.updateErrorMessage(propertyId, message);\n\t\t} else {\n\t\t\tthis.propertiesStore.clearErrorMessage(propertyId);\n\t\t}\n\t}\n\n\tremoveErrorMessageRow(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tlet messages = this.propertiesStore.getErrorMessages();\n\t\tconst controlMsg = messages[propertyId.name];\n\t\tif (typeof controlMsg !== \"undefined\") {\n\t\t\tfor (const rowIndex of Object.keys(controlMsg)) {\n\t\t\t\tconst rowNumber = parseInt(rowIndex, 10);\n\t\t\t\tif (rowNumber === propertyId.row) {\n\t\t\t\t\tdelete messages[propertyId.name][rowNumber];\n\t\t\t\t} else if (rowNumber > propertyId.row) {\n\t\t\t\t\tmessages = this._moveMessageRows(messages, propertyId.name, rowNumber, rowNumber - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setErrorMessages(messages);\n\t\t}\n\t}\n\n\tmoveErrorMessageRows(controlName, firstRow, secondRow) {\n\t\tlet messages = this.propertiesStore.getErrorMessages();\n\t\tconst controlMsg = messages[controlName];\n\t\tif (typeof controlMsg !== \"undefined\") {\n\t\t\tconst firstRowErrorMsg = controlMsg[firstRow];\n\t\t\tconst secondRowErrorMsg = controlMsg[secondRow];\n\t\t\tif (typeof firstRowErrorMsg !== \"undefined\" && typeof secondRowErrorMsg !== \"undefined\") {\n\t\t\t\tmessages = this._moveMessageRows(messages, controlName, firstRow, secondRow);\n\t\t\t\t// create second message because it is deleted in the changeErrorMessageRow, set it to first row number\n\t\t\t\tmessages[controlName][firstRow] = {};\n\t\t\t\tfor (const colNumber of Object.keys(secondRowErrorMsg)) {\n\t\t\t\t\tmessages[controlName][firstRow][colNumber] = secondRowErrorMsg[colNumber];\n\t\t\t\t}\n\t\t\t} else if (typeof firstRowErrorMsg !== \"undefined\") {\n\t\t\t\tmessages = this._moveMessageRows(messages, controlName, firstRow, secondRow);\n\t\t\t} else if (typeof secondRowErrorMsg !== \"undefined\") {\n\t\t\t\tmessages = this._moveMessageRows(messages, controlName, secondRow, firstRow);\n\t\t\t}\n\t\t\tthis.setErrorMessages(messages);\n\t\t}\n\t}\n\n\t_moveMessageRows(messages, controlName, fromRow, toRow) {\n\t\tmessages[controlName][toRow] = messages[controlName][fromRow];\n\t\tdelete messages[controlName][fromRow];\n\t\treturn messages;\n\t}\n\n\t/*\n\t* Controls Methods\n\t*/\n\n\t// Saves controls in a state that get be used to retrieve them using a propertyId\n\tsaveControls(controls) {\n\t\tcontrols.forEach((control) => {\n\t\t\tif (typeof control.columnIndex === \"undefined\") {\n\t\t\t\t// only add to map if control hasn't already been added or override if set to custom.\n\t\t\t\t// This is needed if a parameter is referenced from multiple groups and one is a custom panel\n\t\t\t\tif (!has(this.controls, control.name) || (has(this.controls, control.name) && control.controlType !== ControlType.CUSTOM)) {\n\t\t\t\t\tthis.controls[control.name] = control;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.controls[control.parameterName][control.columnIndex] = control;\n\t\t\t}\n\t\t});\n\t}\n\n\tgetControl(propertyId) {\n\t\tconst control = this.controls[propertyId.name];\n\t\t// if no subcontrol return parent control\n\t\tif (typeof propertyId.col !== \"undefined\" && control) {\n\t\t\tconst subControl = this.controls[propertyId.name][propertyId.col.toString()];\n\t\t\tif (subControl) {\n\t\t\t\treturn subControl;\n\t\t\t}\n\t\t}\n\t\treturn control;\n\t}\n\n\tgetControlPropType(propertyId) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (typeof control.valueDef !== \"undefined\") {\n\t\t\treturn control.valueDef.propType;\n\t\t}\n\t\treturn null;\n\t}\n\n\tupdateControlEnumValues(propertyId, valuesObj) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (!Array.isArray(valuesObj) || !control) {\n\t\t\tlogger.warn(\"properties-controller\", new Error(\"updateControlEnumValues - control not found or valuesObj not valid\"));\n\t\t\treturn;\n\t\t}\n\t\tcontrol.values = valuesObj.map((valueObj) => valueObj.value);\n\t\tcontrol.valueLabels = valuesObj.map((valueObj) => {\n\t\t\tif (!valueObj.label) {\n\t\t\t\treturn valueObj.value;\n\t\t\t}\n\t\t\treturn valueObj.label;\n\t\t});\n\t}\n\n\tgetControls() {\n\t\treturn this.controls;\n\t}\n\n\tsetSaveButtonDisable(saveDisable) {\n\t\tthis.propertiesStore.setSaveButtonDisable(saveDisable);\n\t}\n\n\tgetSaveButtonDisable() {\n\t\treturn this.propertiesStore.getSaveButtonDisable();\n\t}\n\n\t/**\n\t* Enable/disable OK button for given summary panel\n\t* @param panelId {name: panel.id}\n\t* @param wideFlyoutPrimaryButtonDisable boolean\n\t*/\n\tsetWideFlyoutPrimaryButtonDisabled(panelId, wideFlyoutPrimaryButtonDisable) {\n\t\tthis.propertiesStore.setWideFlyoutPrimaryButtonDisabled(panelId, wideFlyoutPrimaryButtonDisable);\n\t}\n\n\t/**\n\t* @param panelId {name: panel.id}\n\t*/\n\tgetWideFlyoutPrimaryButtonDisabled(panelId) {\n\t\treturn this.propertiesStore.getWideFlyoutPrimaryButtonDisabled(panelId);\n\t}\n\n\tisRequired(propertyId) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (control) {\n\t\t\tconst required = control.required;\n\t\t\treturn (required) ? required : false;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisSummary(propertyId) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (control) {\n\t\t\tconst summary = control.summary;\n\t\t\treturn (summary) ? summary : false;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetControlType(propertyId) {\n\t\tif (typeof propertyId === \"undefined\") {\n\t\t\treturn null;\n\t\t}\n\t\tconst control = this.getControl(propertyId);\n\t\tif (control) {\n\t\t\treturn control.controlType;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// check if given column is visible in the table\n\tgetColumnVisibility(propertyId, columnIndex) {\n\t\treturn this.controls[propertyId.name][columnIndex].visible;\n\t}\n\n\ttoggleColumnVisibility(propertyId, columnIndex, value) {\n\t\tthis.controls[propertyId.name][columnIndex].visible = value;\n\t}\n\n\t/*\n\t* Summary Panel controls Methods\n\t*/\n\t_parseSummaryControls(controls) {\n\t\tconst summaryControls = {};\n\t\tcontrols.forEach((control) => {\n\t\t\tif (control.summaryPanelId) {\n\t\t\t\tif (typeof summaryControls[control.summaryPanelId] === \"undefined\") {\n\t\t\t\t\tsummaryControls[control.summaryPanelId] = [];\n\t\t\t\t}\n\t\t\t\tif (typeof control.columnIndex === \"undefined\") {\n\t\t\t\t\tsummaryControls[control.summaryPanelId].push(control.name);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.setSummaryPanelControls(summaryControls);\n\t}\n\tsetSummaryPanelControls(summaryPanelControls) {\n\t\tthis.summaryPanelControls = summaryPanelControls;\n\t}\n\tgetSummaryPanelControls(panelId) {\n\t\treturn this.summaryPanelControls[panelId];\n\t}\n\t// Sets the value to be displayed in the summaryPanel for a customPanel property\n\tupdateCustPropSumPanelValue(propertyId, content) {\n\t\tif (typeof propertyId.name !== \"undefined\") {\n\t\t\tthis.custPropSumPanelValues[propertyId.name] = content;\n\t\t}\n\t}\n\tgetCustPropSumPanelValue(propertyId) {\n\t\t// don't display hidden or disabled parameters\n\t\tconst controlState = this.getControlState(propertyId);\n\t\tif (controlState === STATES.DISABLED || controlState === STATES.HIDDEN) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.custPropSumPanelValues[propertyId.name];\n\t}\n\t// Only used in custom panel to allow for custom property summary values to be displayed\n\tsetControlInSummary(propertyId, label, inSummary) {\n\t\tconst control = this.getControl(propertyId);\n\t\tif (control) {\n\t\t\tcontrol.summary = true;\n\t\t\tcontrol.summaryLabel = label;\n\t\t}\n\t}\n\n\t/**\n\t* Used to create standard controls in customPanels\n\t* @param propertyId - Property id of the controls\n\t* @param paramDef - schema definition.  See paramDef schema\n\t* @param parameter (string) - name of the parameter to pull out of paramDef\n\t*/\n\tcreateControl(propertyId, paramDef, parameter) {\n\t\tconst containerType = get(this.getPropertiesConfig(), \"containerType\");\n\t\tconst control = this.controlFactory.createFormControl(paramDef, parameter, this.getLight(), containerType);\n\t\tconst controls = [];\n\t\t// need to preserve parentCategoryId which is set during initial parsing of all controls\n\t\tconst parentCategoryId = this.getControl(propertyId).parentCategoryId;\n\t\tUiConditionsParser.parseControl(controls, control, parentCategoryId);\n\t\tthis.saveControls(controls);\n\t\treturn this.controlFactory.createControlItem(control, propertyId);\n\t}\n\n\t/**\n\t* Used to create controls\n\t* @return the controlFactory instance\n\t*/\n\tgetControlFactory() {\n\t\treturn this.controlFactory;\n\t}\n\n\t/**\n\t* Sets the custom controls available to common-properties\n\t* @param customControls\n\t*/\n\tsetCustomControls(customControls) {\n\t\tthis.customControls = customControls;\n\t}\n\n\t/**\n\t* Returns a rendered custom control\n\t* @param propertyId\n\t* @param control\n\t* @param tableInfo\n\t*/\n\tgetCustomControl(propertyId, control, tableInfo) {\n\t\tif (control.customControlId) {\n\t\t\tfor (const customCtrl of this.customControls) {\n\t\t\t\tif (customCtrl.id() === control.customControlId) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn new customCtrl(propertyId, this, control.data, tableInfo).renderControl();\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tlogger.warn(\"Error thrown creating custom control: \" + error);\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"Custom control not found: \" + control.customControlId;\n\t}\n\n\t/*\n\t* maxLength for single-line and multi-line control methods\n\t*/\n\n\t/**\n\t* Returns the maximum characters allowed for multi-line string controls like textarea\n\t* Default value is 1024\n\t*/\n\tgetMaxLengthForMultiLineControls() {\n\t\tconst maxLengthForMultiLineControls = (typeof this.getPropertiesConfig().maxLengthForMultiLineControls !== \"undefined\")\n\t\t\t? this.getPropertiesConfig().maxLengthForMultiLineControls\n\t\t\t: 1024;\n\t\treturn maxLengthForMultiLineControls;\n\t}\n\n\t/**\n\t* Returns the maximum characters allowed for single-line string controls like textfield\n\t* Default value is 128\n\t*/\n\tgetMaxLengthForSingleLineControls() {\n\t\tconst maxLengthForSingleLineControls = (typeof this.getPropertiesConfig().maxLengthForSingleLineControls !== \"undefined\")\n\t\t\t? this.getPropertiesConfig().maxLengthForSingleLineControls\n\t\t\t: 128;\n\t\treturn maxLengthForSingleLineControls;\n\t}\n\n\t/**\n\t* Set the initial values of addRemoveRows for all structure controls\n\t*/\n\tsetInitialAddRemoveRows() {\n\t\tconst parameterNames = Object.keys(this.controls);\n\t\tparameterNames.forEach((parameterName) => {\n\t\t\tconst control = this.controls[parameterName];\n\t\t\tif (control.valueDef && control.valueDef.propType === Type.STRUCTURE && !isUndefined(control.addRemoveRows)) {\n\t\t\t\tconst propertyId = { name: control.name };\n\t\t\t\tthis.setAddRemoveRows(propertyId, control.addRemoveRows);\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t* Set the addRemoveRows attribute to 'enabled' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param enabled boolean value to enable or disable addRemoveRows\n\t*/\n\tsetAddRemoveRows(propertyId, enabled) {\n\t\tthis.propertiesStore.setAddRemoveRows(propertyId, enabled);\n\t}\n\n\t/**\n\t* Returns the true if addRemoveRows is enabled for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetAddRemoveRows(propertyId) {\n\t\treturn this.propertiesStore.getAddRemoveRows(propertyId);\n\t}\n\n\t/**\n\t* Set the hideEditButton attribute to 'enabled' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param enabled boolean value to enable or disable hideditButton\n\t*/\n\tsetHideEditButton(propertyId, enabled) {\n\t\tthis.propertiesStore.setHideEditButton(propertyId, enabled);\n\t}\n\n\t/**\n\t* Returns the true if hideEditButton is enabled for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetHideEditButton(propertyId) {\n\t\treturn this.propertiesStore.getHideEditButton(propertyId);\n\t}\n\n\t/**\n\t * Freeze row move buttons for row indexes in given array\n\t * @param propertyId The unique property identifier\n\t * @param rowIndexes Array of row indexes\n\t */\n\n\tgetStaticRows(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\treturn this.propertiesStore.getStaticRows(propertyId);\n\t}\n\n\tupdateStaticRows(inPropertyId, staticRowsArr) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tconst controlValue = this.getPropertyValue(inPropertyId);\n\t\tconst staticRows = staticRowsArr.sort();\n\t\tconst isValidSlection = this.validateSelectionValues(staticRows, controlValue);\n\t\tif (isValidSlection) {\n\t\t\tthis.propertiesStore.updateStaticRows(propertyId, staticRows);\n\t\t}\n\t}\n\n\tclearStaticRows(inPropertyId) {\n\t\tconst propertyId = this.convertPropertyId(inPropertyId);\n\t\tthis.propertiesStore.clearStaticRows(propertyId);\n\t}\n\n\t/**\n\t* Set the initial values of table buttons for all table controls\n\t*/\n\tsetInitialTableButtonState() {\n\t\tconst parameterNames = Object.keys(this.controls);\n\t\tparameterNames.forEach((parameterName) => {\n\t\t\tconst control = this.controls[parameterName];\n\t\t\tconst propertyId = { name: control.name };\n\t\t\tif (!isUndefined(control.buttons)) {\n\t\t\t\tcontrol.buttons.forEach((button) => {\n\t\t\t\t\tthis.setTableButtonEnabled(propertyId, button.id, button.enabled || false);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (control.subControls) {\n\t\t\t\tthis.setInitialTableButtonSubControlState(propertyId, control.subControls);\n\t\t\t}\n\t\t});\n\t}\n\n\t// This only handles 1 level of nesting, will need to make this recusrive if there is a need for deeper nesting\n\tsetInitialTableButtonSubControlState(parentPropertyId, subControls) {\n\t\tsubControls.forEach((control) => {\n\t\t\tconst propertyValues = this.getPropertyValue(parentPropertyId);\n\n\t\t\tif (!isUndefined(control.buttons)) {\n\t\t\t\tpropertyValues.forEach((value, valueIdx) => {\n\t\t\t\t\tconst propertyId = { name: parentPropertyId.name, row: valueIdx, col: control.columnIndex };\n\t\t\t\t\tcontrol.buttons.forEach((button) => {\n\t\t\t\t\t\tthis.setTableButtonEnabled(propertyId, button.id, button.enabled || false);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t* Set the table button to 'enabled' for the given propertyId\n\t* @param propertyId The unique property identifier\n\t* @param buttonId The unique button identifier\n\t* @param enabled boolean value to enable or disable the button\n\t*/\n\tsetTableButtonEnabled(propertyId, buttonId, enabled) {\n\t\tthis.propertiesStore.setTableButtonEnabled(propertyId, buttonId, enabled);\n\t}\n\n\t/**\n\t* Returns the table button states for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @return boolean\n\t*/\n\tgetTableButtons(propertyId) {\n\t\treturn this.propertiesStore.getTableButtons(propertyId);\n\t}\n\n\t/**\n\t* Returns the true if the table button is enabled for the given propertyID\n\t* @param propertyId The unique property identifier\n\t* @param buttonId The unique button identifier\n\t* @return boolean\n\t*/\n\tgetTableButtonEnabled(propertyId, buttonId) {\n\t\treturn this.propertiesStore.getTableButtonEnabled(propertyId, buttonId);\n\t}\n\n\t/**\n\t * Validate if the array for freeze rows is correct. Should only have continuous value of row indexes\n\t * Must not contain first and last row index together in the array ever. you can only freeze either first n row or the last n row\n\t * @param staticRows Array of rows you want to freeze\n\t * @param controlValue the property values for the property Id\n\t * @returns\n\t */\n\tvalidateSelectionValues(staticRows, controlValue) {\n\t\tlet isValid = false;\n\t\tif (staticRows && controlValue.length > 0) {\n\t\t\tconst consecutiveAry = staticRows.slice(1).map(function(n, i) {\n\t\t\t\treturn n - staticRows[i];\n\t\t\t});\n\t\t\tconst isDifference = consecutiveAry.every((value) => value === 1);\n\t\t\tif (isDifference && ((staticRows.includes(0) && !staticRows.includes(controlValue.length - 1)) ||\n\t\t\t(!staticRows.includes(0) && staticRows.includes(controlValue.length - 1)))) {\n\t\t\t\tisValid = true;\n\t\t\t} else {\n\t\t\t\tisValid = false;\n\t\t\t}\n\t\t} else {\n\t\t\tisValid = false;\n\t\t}\n\t\treturn isValid;\n\t}\n}\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport parameterDefsV3Schema from \"@elyra/pipeline-schemas/common-canvas/parameter-defs/parameter-defs-v3-schema.json\";\n\nimport uihintsV3Schema from \"@elyra/pipeline-schemas/common-pipeline/operators/uihints-v3-schema.json\";\nimport conditionsV3Schema from \"@elyra/pipeline-schemas/common-pipeline/operators/conditions-v3-schema.json\";\nimport operatorsV3Schema from \"@elyra/pipeline-schemas/common-pipeline/operators/operator-v3-schema.json\";\nimport dataRecordMetadataV3Schema from \"@elyra/pipeline-schemas/common-pipeline/datarecord-metadata/datarecord-metadata-v3-schema.json\";\n\nimport { Validator as SchemaValidator } from \"jsonschema\";\n\nfunction validateParameterDefAgainstSchema(parameterDef) {\n\tconst validator = getValidator();\n\tvalidateAgainstSchema(parameterDef, parameterDefsV3Schema, \"pipelineFlow\", validator);\n}\n\n// Validates the data provided, against the schema provided, using the validator\n// provided and throws an error if any schema validation errors are found.\nfunction validateAgainstSchema(data, schema, type, validator) {\n\tconst valResult = validator.validate(data, schema, { \"nestedErrors\": true });\n\n\tif (valResult && valResult.errors && valResult.errors.length > 0) {\n\t\tconsole.error(valResult);\n\t}\n}\n\nfunction getValidator() {\n\tconst validator = new SchemaValidator();\n\tconst canvasPrefix = \"https://api.dataplatform.ibm.com/schemas/common-canvas/\";\n\tconst pipelinePrefix = \"https://api.dataplatform.ibm.com/schemas/common-pipeline/\";\n\tvalidator.addSchema(parameterDefsV3Schema, canvasPrefix + \"parameter-defs/pipeline-flow-v3-schema.json\");\n\tvalidator.addSchema(uihintsV3Schema, pipelinePrefix + \"operators/uihints-v3-schema.json\");\n\tvalidator.addSchema(conditionsV3Schema, pipelinePrefix + \"operators/conditions-v3-schema.json\");\n\tvalidator.addSchema(operatorsV3Schema, pipelinePrefix + \"operators/operator-v3-schema.json\");\n\tvalidator.addSchema(dataRecordMetadataV3Schema, pipelinePrefix + \"datarecord-metadata/datarecord-metadata-v3-schema.json\");\n\treturn validator;\n}\n\nexport {\n\tvalidateParameterDefAgainstSchema\n};\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setTitle } from \"./../../actions\";\nimport Isvg from \"react-inlinesvg\";\nimport { get } from \"lodash\";\nimport { TextInput, Button } from \"carbon-components-react\";\nimport { MESSAGE_KEYS, CONDITION_MESSAGE_TYPE } from \"./../../constants/constants\";\nimport * as PropertyUtils from \"./../../util/property-utils\";\nimport classNames from \"classnames\";\nimport { Help16, Edit16, Close16 } from \"@carbon/icons-react\";\n\n\nclass TitleEditor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfocused: false,\n\t\t\ttitleValidation: null\n\t\t};\n\t\tthis.editTitleClickHandler = this.editTitleClickHandler.bind(this);\n\t\tthis.helpClickHandler = this.helpClickHandler.bind(this);\n\t\tthis.id = PropertyUtils.generateId();\n\t\tthis.textInputRef = React.createRef();\n\t\tthis.labelText = PropertyUtils.formatMessage(props.controller.getReactIntl(),\n\t\t\tMESSAGE_KEYS.TITLE_EDITOR_LABEL);\n\t\tthis.textInputOnFocus = this.textInputOnFocus.bind(this);\n\t\tthis.textInputOnBlur = this.textInputOnBlur.bind(this);\n\t\tthis.headingEnabled = this.props.showHeading && (this.props.heading || this.props.icon);\n\t\tthis.handleTitleChange = this.handleTitleChange.bind(this);\n\t\tthis.titleChangeHandler = this.props.controller.getHandlers().titleChangeHandler;\n\t}\n\n\t_handleKeyPress(e) {\n\t\tif (e.key === \"Enter\") {\n\t\t\tthis.textInputRef.current.blur();\n\t\t}\n\t}\n\n\teditTitleClickHandler() {\n\t\tthis.textInputRef.current.focus();\n\t}\n\n\thelpClickHandler() {\n\t\tif (this.props.helpClickHandler) {\n\t\t\tthis.props.helpClickHandler(\n\t\t\t\tthis.props.controller.getForm().componentId,\n\t\t\t\tthis.props.help.data,\n\t\t\t\tthis.props.controller.getAppData());\n\t\t}\n\t}\n\ttextInputOnFocus() {\n\t\tthis.setState({ focused: true });\n\t}\n\n\ttextInputOnBlur() {\n\t\tthis.setState({ focused: false });\n\t}\n\n\thandleTitleChange(evt) {\n\t\t// Clear warning/error message on change.\n\t\tif (this.state.titleValidation !== null) {\n\t\t\tthis.setState({ titleValidation: null });\n\t\t}\n\t\tconst newTitle = evt.target.value;\n\t\tif (typeof this.titleChangeHandler === \"function\") {\n\t\t\tthis.titleChangeHandler(newTitle, (titleValidation) => {\n\t\t\t\tif (titleValidation && (typeof titleValidation === \"object\") && titleValidation.type && titleValidation.message) {\n\t\t\t\t\tthis.setState({ titleValidation: titleValidation });\n\t\t\t\t} else {\n\t\t\t\t\t// titleChangeHandler response is invalid. Don't show error/warning for title.\n\t\t\t\t\tthis.setState({ titleValidation: null });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.props.setTitle(newTitle);\n\t}\n\n\trender() {\n\t\tconst propertiesTitleEditButtonLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.TITLE_EDITOR_LABEL);\n\t\tconst helpButtonLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.TITLE_EDITOR_HELPBUTTON_LABEL);\n\t\tconst closeButtonLabel = PropertyUtils.formatMessage(this.props.controller.getReactIntl(), MESSAGE_KEYS.PROPERTIESEDIT_CLOSEBUTTON_LABEL);\n\t\tconst titleValidationTypes = [CONDITION_MESSAGE_TYPE.ERROR, CONDITION_MESSAGE_TYPE.WARNING];\n\t\tconst titleWithWarning = get(this.state.titleValidation, \"type\", null) === CONDITION_MESSAGE_TYPE.WARNING;\n\t\tconst titleWithErrror = get(this.state.titleValidation, \"type\", null) === CONDITION_MESSAGE_TYPE.ERROR;\n\n\t\tconst propertiesTitleEdit = this.props.labelEditable === false || this.state.focused ? <div />\n\t\t\t: (<Button\n\t\t\t\tkind=\"ghost\"\n\t\t\t\tclassName=\"properties-title-editor-btn edit\"\n\t\t\t\tdata-id=\"edit\"\n\t\t\t\tonClick={this.editTitleClickHandler}\n\t\t\t\ttooltipPosition=\"bottom\"\n\t\t\t\ttooltipAlignment=\"end\"\n\t\t\t\trenderIcon={Edit16}\n\t\t\t\tsize=\"small\"\n\t\t\t\ticonDescription={propertiesTitleEditButtonLabel}\n\t\t\t\thasIconOnly\n\t\t\t/>);\n\n\t\tconst helpButton = this.props.help\n\t\t\t? (<Button\n\t\t\t\tkind=\"ghost\"\n\t\t\t\tclassName=\"properties-title-editor-btn help\"\n\t\t\t\tdata-id=\"help\"\n\t\t\t\tonClick={this.helpClickHandler}\n\t\t\t\ttooltipPosition=\"bottom\"\n\t\t\t\trenderIcon={Help16}\n\t\t\t\tsize=\"small\"\n\t\t\t\ticonDescription={helpButtonLabel}\n\t\t\t\thasIconOnly\n\t\t\t/>)\n\t\t\t: null;\n\n\t\tconst closeButton = this.props.closeHandler\n\t\t\t? (<div className=\"properties-close-button\">\n\t\t\t\t<Button\n\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tdata-id=\"close\"\n\t\t\t\t\tonClick={this.props.closeHandler}\n\t\t\t\t\ttooltipPosition=\"left\"\n\t\t\t\t\trenderIcon={Close16}\n\t\t\t\t\ticonDescription={closeButtonLabel}\n\t\t\t\t\thasIconOnly\n\t\t\t\t/>\n\t\t\t</div>)\n\t\t\t: null;\n\n\t\tlet heading = null;\n\t\tif (this.headingEnabled) {\n\t\t\tconst label = this.props.heading\n\t\t\t\t? (<div className=\"properties-title-heading-label\">\n\t\t\t\t\t{this.props.heading}\n\t\t\t\t</div>)\n\t\t\t\t: null;\n\t\t\tconst icon = this.props.icon && typeof this.props.icon === \"string\"\n\t\t\t\t? <Isvg className=\"properties-title-heading-icon\" src={this.props.icon} />\n\t\t\t\t: null;\n\t\t\tif (label || icon) {\n\t\t\t\theading = (<div className=\"properties-title-heading\">\n\t\t\t\t\t{icon}\n\t\t\t\t\t{label}\n\t\t\t\t\t{helpButton}\n\t\t\t\t</div>);\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={classNames(\"properties-title-editor\",\n\t\t\t\t{ \"properties-title-with-heading\": this.headingEnabled })}\n\t\t\t>\n\t\t\t\t{closeButton}\n\t\t\t\t{heading}\n\t\t\t\t<div className={classNames(\n\t\t\t\t\t\"properties-title-editor-input\",\n\t\t\t\t\t{\n\t\t\t\t\t\t\"properties-title-editor-with-help\": this.props.help && !this.headingEnabled && !titleValidationTypes.includes(get(this.state.titleValidation, \"type\")),\n\t\t\t\t\t\t\"properties-title-editor-with-warning\": titleWithWarning,\n\t\t\t\t\t\t\"properties-title-editor-with-error\": titleWithErrror\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\tref={this.textInputRef}\n\t\t\t\t\t\tvalue={this.props.title}\n\t\t\t\t\t\tonChange={this.handleTitleChange}\n\t\t\t\t\t\tonKeyPress={(e) => this._handleKeyPress(e)}\n\t\t\t\t\t\treadOnly={this.props.labelEditable === false} // shows a non editable icon\n\t\t\t\t\t\tlabelText={this.labelText}\n\t\t\t\t\t\thideLabel\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tonFocus={this.textInputOnFocus}\n\t\t\t\t\t\tonBlur={this.textInputOnBlur}\n\t\t\t\t\t\tlight={this.props.controller.getLight()}\n\t\t\t\t\t\tinvalid={titleWithErrror}\n\t\t\t\t\t\tinvalidText={get(this.state.titleValidation, \"message\")}\n\t\t\t\t\t\twarn={titleWithWarning}\n\t\t\t\t\t\twarnText={get(this.state.titleValidation, \"message\")}\n\t\t\t\t\t\t{... this.state.focused && { className: \"properties-title-editor-focused\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t{titleValidationTypes.includes(get(this.state.titleValidation, \"type\")) ? null : propertiesTitleEdit}\n\t\t\t\t</div>\n\t\t\t\t{!this.headingEnabled && !titleValidationTypes.includes(get(this.state.titleValidation, \"type\")) ? helpButton : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTitleEditor.propTypes = {\n\thelpClickHandler: PropTypes.func,\n\tcloseHandler: PropTypes.func,\n\tcontroller: PropTypes.object.isRequired,\n\tlabelEditable: PropTypes.bool,\n\thelp: PropTypes.object,\n\ticon: PropTypes.string,\n\theading: PropTypes.string,\n\tshowHeading: PropTypes.bool,\n\ttitle: PropTypes.string, // set by redux\n\tsetTitle: PropTypes.func // set by redux\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\ttitle: state.componentMetadataReducer.title\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\tsetTitle: (title) => {\n\t\tdispatch(setTitle(title));\n\t}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleEditor);\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PropertiesModal from \"./../components/properties-modal\";\nimport PropertiesEditor from \"./../components/properties-editor\";\nimport TearSheet from \"../panels/tearsheet\";\nimport MainEditorPropertiesButtons from \"./../components/main-editor-properties-buttons\";\nimport EditorForm from \"./../components/editor-form\";\nimport Form from \"./../form/Form\";\nimport CommonPropertiesAction from \"./../../command-actions/commonPropertiesAction\";\nimport PropertiesController from \"./../properties-controller\";\nimport * as PropertyUtils from \"./../util/property-utils\";\nimport { MESSAGE_KEYS, CONDITION_RETURN_VALUE_HANDLING, CARBON_ICONS, APPLY, CANCEL, ACTIONS } from \"./../constants/constants\";\nimport { Size } from \"./../constants/form-constants\";\nimport { validateParameterDefAgainstSchema } from \"../schema-validator/properties-schema-validator.js\";\nimport { has, isEqual, omit, pick, cloneDeep } from \"lodash\";\nimport Icon from \"./../../icons/icon.jsx\";\nimport { Button } from \"carbon-components-react\";\nimport { Provider } from \"react-redux\";\nimport logger from \"../../../utils/logger\";\nimport TitleEditor from \"./../components/title-editor\";\nimport classNames from \"classnames\";\n\nimport { injectIntl } from \"react-intl\";\nimport styles from \"./properties-main-widths.scss\";\n\nconst FLYOUT_WIDTH_SMALL = parseInt(styles.flyoutWidthSmall, 10);\nconst FLYOUT_WIDTH_MEDIUM = parseInt(styles.flyoutWidthMedium, 10);\nconst FLYOUT_WIDTH_LARGE = parseInt(styles.flyoutWidthLarge, 10);\nconst FLYOUT_WIDTH_MAX = parseInt(styles.flyoutWidthMax, 10);\n\nclass PropertiesMain extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.propertiesController = new PropertiesController();\n\t\tthis.propertiesController.setPropertiesConfig(this.props.propertiesConfig);\n\t\t// Persist editorSize when resize() is not called\n\t\tif (this.props.propertiesInfo.initialEditorSize) {\n\t\t\tthis.propertiesController.setEditorSize(this.props.propertiesInfo.initialEditorSize);\n\t\t}\n\t\tthis.propertiesController.setCustomControls(props.customControls);\n\t\tthis.propertiesController.setConditionOps(props.customConditionOps);\n\t\tthis.propertiesController.setLight(props.light);\n\t\tthis.propertiesController.setAppData(props.propertiesInfo.appData);\n\t\tthis.propertiesController.setExpressionInfo(props.propertiesInfo.expressionInfo);\n\t\tthis.propertiesController.setHandlers({\n\t\t\tcontrollerHandler: props.callbacks.controllerHandler,\n\t\t\tpropertyListener: props.callbacks.propertyListener,\n\t\t\tactionHandler: props.callbacks.actionHandler,\n\t\t\tbuttonHandler: props.callbacks.buttonHandler,\n\t\t\tbuttonIconHandler: props.callbacks.buttonIconHandler,\n\t\t\tvalidationHandler: props.callbacks.validationHandler,\n\t\t\ttitleChangeHandler: props.callbacks.titleChangeHandler,\n\t\t\ttooltipLinkHandler: props.callbacks.tooltipLinkHandler\n\t\t});\n\t\tthis.setForm(props.propertiesInfo);\n\t\tthis.previousErrorMessages = {};\n\t\t// this has to be after setForm because setForm clears all error messages.\n\t\t// Validate all validationDefinitions but show warning messages for \"colDoesExists\" condition only\n\t\tthis.propertiesController.validatePropertiesValues(false);\n\t\tif (props.propertiesInfo.messages) {\n\t\t\tthis.propertiesController.validatePropertiesValues(true);\n\t\t\tthis.previousErrorMessages = this.propertiesController.getAllErrorMessages();\n\t\t}\n\t\t// Callback after all values and messages are set\n\t\tif (this.props.callbacks.propertyListener) {\n\t\t\tthis.props.callbacks.propertyListener({ action: ACTIONS.PROPERTIES_LOADED });\n\t\t}\n\t\tthis.currentParameters = this.propertiesController.getPropertyValues();\n\t\tconst editorSize = this.getEditorSize();\n\t\tthis.state = {\n\t\t\tshowPropertiesButtons: true,\n\t\t\teditorSize: editorSize\n\t\t};\n\t\tthis.applyPropertiesEditing = this.applyPropertiesEditing.bind(this);\n\t\tthis.showPropertiesButtons = this.showPropertiesButtons.bind(this);\n\t\tthis.updateEditorSize = this.updateEditorSize.bind(this);\n\t\tthis.cancelHandler = this.cancelHandler.bind(this);\n\t\tthis._getOverrideSize = this._getOverrideSize.bind(this);\n\t\tthis._getResizeButton = this._getResizeButton.bind(this);\n\t\tthis._isResizeButtonRequired = this._isResizeButtonRequired.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.callbacks.setPropertiesHasMounted();\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) { // eslint-disable-line camelcase, react/sort-comp\n\t\tif (newProps.propertiesInfo) {\n\t\t\tif (!isEqual(Object.keys(newProps.propertiesInfo), Object.keys(this.props.propertiesInfo)) ||\n\t\t\t\t(newProps.propertiesInfo.formData && !isEqual(newProps.propertiesInfo.formData, this.props.propertiesInfo.formData)) ||\n\t\t\t\t(newProps.propertiesInfo.parameterDef && !isEqual(newProps.propertiesInfo.parameterDef, this.props.propertiesInfo.parameterDef)) ||\n\t\t\t\t(newProps.propertiesInfo.appData && !isEqual(newProps.propertiesInfo.appData, this.props.propertiesInfo.appData))) {\n\t\t\t\tthis.setForm(newProps.propertiesInfo);\n\t\t\t\tconst newEditorSize = this.propertiesController.getForm().editorSize;\n\t\t\t\tif (this.state.editorSize !== newEditorSize) {\n\t\t\t\t\tthis.setState({ editorSize: newEditorSize });\n\t\t\t\t}\n\t\t\t\tthis.currentParameters = this.propertiesController.getPropertyValues();\n\t\t\t\tthis.propertiesController.setAppData(newProps.propertiesInfo.appData);\n\t\t\t\tthis.propertiesController.setCustomControls(newProps.customControls);\n\t\t\t\tthis.propertiesController.setConditionOps(newProps.customConditionOps);\n\t\t\t\tthis.previousErrorMessages = {};\n\t\t\t\tif (newProps.propertiesInfo.messages) {\n\t\t\t\t\tthis.propertiesController.validatePropertiesValues();\n\t\t\t\t\tthis.previousErrorMessages = this.propertiesController.getAllErrorMessages();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tonBlur(e) {\n\t\t// apply properties when focus leave common properties.\n\t\t// subdialogs and summary panel causes focus to leave but shouldn't apply settings\n\t\tif (this.props.propertiesConfig.applyOnBlur &&\n\t\t\tthis.commonProperties && !this.commonProperties.contains(e.relatedTarget) &&\n\t\t\t!this.propertiesController.isSummaryPanelShowing() && !this.propertiesController.isSubPanelsShowing()) {\n\t\t\tthis.applyPropertiesEditing(false);\n\t\t}\n\t}\n\n\tsetForm(propertiesInfo) {\n\t\tlet formData = null;\n\n\t\tif (propertiesInfo.formData && Object.keys(propertiesInfo.formData).length !== 0) {\n\t\t\tformData = propertiesInfo.formData;\n\t\t} else if (propertiesInfo.parameterDef) {\n\t\t\tif (this.props.propertiesConfig.schemaValidation) {\n\t\t\t\tvalidateParameterDefAgainstSchema(propertiesInfo.parameterDef);\n\t\t\t}\n\t\t\tformData = Form.makeForm(propertiesInfo.parameterDef, this.props.propertiesConfig.containerType, this.props.propertiesConfig.convertValueDataTypes);\n\t\t}\n\t\t// TODO: This can be removed once the WML Play service generates datasetMetadata instead of inputDataModel\n\t\tif (formData && formData.data && formData.data.inputDataModel && !formData.data.datasetMetadata) {\n\t\t\tformData.data.datasetMetadata = PropertyUtils.convertInputDataModel(formData.data.inputDataModel);\n\t\t}\n\n\t\tthis.propertiesController.setForm(formData, this.props.intl);\n\t\tif (formData) {\n\t\t\tthis.originalTitle = formData.label;\n\t\t}\n\n\t\t// set initial values for undo\n\t\tthis.initialValueInfo = { additionalInfo: { messages: [] }, undoInfo: {} };\n\t\tthis.uiParameterKeys = this._getUiOnlyKeys();\n\t\tthis.initialValueInfo = this._setValueInforProperties(this.initialValueInfo);\n\t\tif (propertiesInfo.messages) {\n\t\t\tthis.initialValueInfo.additionalInfo.messages = cloneDeep(propertiesInfo.messages);\n\t\t}\n\t\tthis.initialValueInfo.undoInfo.properties = this.propertiesController.getPropertyValues(); // used for undoing when node editor open\n\t\tthis.initialValueInfo.undoInfo.messages = this.propertiesController.getAllErrorMessages(); // used for undoing when node editor open\n\t\tthis.initialValueInfo.additionalInfo.title = this.propertiesController.getTitle();\n\t}\n\n\tgetApplyButtonLabel() {\n\t\tif (this.props.propertiesConfig.buttonLabels && this.props.propertiesConfig.buttonLabels.primary) {\n\t\t\treturn this.props.propertiesConfig.buttonLabels.primary;\n\t\t}\n\t\treturn PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_APPLYBUTTON_LABEL);\n\t}\n\n\tgetRejectButtonLabel() {\n\t\tif (this.props.propertiesConfig.buttonLabels && this.props.propertiesConfig.buttonLabels.secondary) {\n\t\t\treturn this.props.propertiesConfig.buttonLabels.secondary;\n\t\t}\n\t\treturn PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_REJECTBUTTON_LABEL);\n\t}\n\n\tgetPropertiesActionLabel() {\n\t\tif (this.props.callbacks.propertiesActionLabelHandler) {\n\t\t\tconst label = this.props.callbacks.propertiesActionLabelHandler();\n\t\t\tif (label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t\treturn PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_ACTION_LABEL, { node_label: this.propertiesController.getTitle() });\n\t}\n\n\tgetEditorSize() {\n\t\t// Determine whether to persist initialEditorSize or set the defaultEditorSize in certain cases\n\t\tconst defaultEditorSize = this.propertiesController.getForm().editorSize;\n\t\tconst initialEditorSize = this.props.propertiesInfo.initialEditorSize;\n\t\t// When defaultEditorSize=\"small\", initialEditorSize can be \"small\" or \"medium\". For any other value, return defaultEditorSize.\n\t\t// When defaultEditorSize=\"medium\", initialEditorSize can be \"medium\" or \"large\". For any other value, return defaultEditorSize.\n\t\t// When defaultEditorSize=\"large\", initialEditorSize can be \"large\" or \"max\". For any other value, return defaultEditorSize.\n\t\tif (defaultEditorSize === Size.SMALL && (initialEditorSize === Size.LARGE || initialEditorSize === Size.MAX)) {\n\t\t\treturn defaultEditorSize;\n\t\t} else if (defaultEditorSize === Size.MEDIUM && (initialEditorSize === Size.SMALL || initialEditorSize === Size.MAX)) {\n\t\t\treturn defaultEditorSize;\n\t\t} else if (defaultEditorSize === Size.LARGE && (initialEditorSize === Size.SMALL || initialEditorSize === Size.MEDIUM)) {\n\t\t\treturn defaultEditorSize;\n\t\t} else if (defaultEditorSize === Size.MAX) {\n\t\t\treturn defaultEditorSize;\n\t\t}\n\t\treturn (initialEditorSize ? initialEditorSize : defaultEditorSize);\n\t}\n\n\t_getOverrideSize() {\n\t\tconst pixelWidth = this.propertiesController.getForm().pixelWidth;\n\t\tconst editorSizeInForm = this.propertiesController.getForm().editorSize;\n\t\tlet overrideSize = null;\n\n\t\tif (pixelWidth) {\n\t\t\tif (editorSizeInForm === Size.SMALL) {\n\t\t\t\tif (this.state.editorSize === Size.SMALL && pixelWidth.min) {\n\t\t\t\t\toverrideSize = pixelWidth.min;\n\n\t\t\t\t} else if (this.state.editorSize === Size.MEDIUM && pixelWidth.max) {\n\t\t\t\t\toverrideSize = pixelWidth.max;\n\t\t\t\t}\n\n\t\t\t} else if (editorSizeInForm === Size.MEDIUM) {\n\t\t\t\tif (this.state.editorSize === Size.MEDIUM && pixelWidth.min) {\n\t\t\t\t\toverrideSize = pixelWidth.min;\n\n\t\t\t\t} else if (this.state.editorSize === Size.LARGE && pixelWidth.max) {\n\t\t\t\t\toverrideSize = pixelWidth.max;\n\t\t\t\t}\n\n\t\t\t} else if (editorSizeInForm === Size.LARGE) {\n\t\t\t\tif (this.state.editorSize === Size.LARGE && pixelWidth.min) {\n\t\t\t\t\toverrideSize = pixelWidth.min;\n\n\t\t\t\t} else if (this.state.editorSize === Size.MAX && pixelWidth.max) {\n\t\t\t\t\toverrideSize = pixelWidth.max;\n\t\t\t\t}\n\n\t\t\t} else if (editorSizeInForm === Size.MAX && pixelWidth.max) {\n\t\t\t\toverrideSize = pixelWidth.max;\n\t\t\t}\n\t\t}\n\t\treturn overrideSize;\n\t}\n\n\t_getResizeButton() {\n\t\tlet resizeButton = <Icon type={CARBON_ICONS.CHEVRONARROWS.LEFT} className=\"properties-resize-caret-left\" />;\n\t\tif (this.propertiesController.getForm().editorSize === Size.SMALL) {\n\t\t\tif (this.state.editorSize === Size.MEDIUM) {\n\t\t\t\tresizeButton = <Icon type={CARBON_ICONS.CHEVRONARROWS.RIGHT} className=\"properties-resize-caret-right\" />;\n\t\t\t}\n\t\t} else if (this.propertiesController.getForm().editorSize === Size.MEDIUM) {\n\t\t\tif (this.state.editorSize === Size.LARGE) {\n\t\t\t\tresizeButton = <Icon type={CARBON_ICONS.CHEVRONARROWS.RIGHT} className=\"properties-resize-caret-right\" />;\n\t\t\t}\n\t\t} else if (this.propertiesController.getForm().editorSize === Size.LARGE) {\n\t\t\tif (this.state.editorSize === Size.MAX) {\n\t\t\t\tresizeButton = <Icon type={CARBON_ICONS.CHEVRONARROWS.RIGHT} className=\"properties-resize-caret-right\" />;\n\t\t\t}\n\t\t}\n\t\treturn resizeButton;\n\t}\n\n\t_isResizeButtonRequired() {\n\t\tconst pixelWidth = this.propertiesController.getForm().pixelWidth;\n\n\t\tif (this.props.propertiesConfig.enableResize !== false) {\n\t\t\tif (pixelWidth) {\n\t\t\t\tif (!pixelWidth.min && !pixelWidth.max) {\n\t\t\t\t\tlogger.warn(\"Pixel width was provided but no min or max property was found in it.\");\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.SMALL) {\n\t\t\t\t\tif (pixelWidth.min && !pixelWidth.max && pixelWidth.min >= FLYOUT_WIDTH_MEDIUM) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size: \" + FLYOUT_WIDTH_MEDIUM);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!pixelWidth.min && pixelWidth.max && pixelWidth.max <= FLYOUT_WIDTH_SMALL) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width max size is less than or equal to default min size: \" + FLYOUT_WIDTH_SMALL);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pixelWidth.min >= pixelWidth.max) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to pixel width max size.\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.MEDIUM) {\n\t\t\t\t\tif (pixelWidth.min && !pixelWidth.max && pixelWidth.min >= FLYOUT_WIDTH_LARGE) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size: \" + FLYOUT_WIDTH_LARGE);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!pixelWidth.min && pixelWidth.max && pixelWidth.max <= FLYOUT_WIDTH_MEDIUM) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width max size is less than or equal to default min size: \" + FLYOUT_WIDTH_MEDIUM);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pixelWidth.min >= pixelWidth.max) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size.\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.LARGE) {\n\t\t\t\t\tif (pixelWidth.min && !pixelWidth.max && pixelWidth.min >= FLYOUT_WIDTH_MAX) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size: \" + FLYOUT_WIDTH_MAX);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!pixelWidth.min && pixelWidth.max && pixelWidth.max <= FLYOUT_WIDTH_LARGE) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width max size is less than or equal to default min size: \" + FLYOUT_WIDTH_LARGE);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pixelWidth.min >= pixelWidth.max) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size is greater than or equal to default max size.\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.MAX) {\n\t\t\t\t\tif (pixelWidth.min) {\n\t\t\t\t\t\tlogger.warn(\"No resize button shown. Pixel width min size ignored.\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t} else if (this.propertiesController.getForm().editorSize === Size.MAX) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// options is an object of config options where\n\t//   applyProperties: true - this function is called from applyPropertiesEditing\n\t_setValueInforProperties(valueInfo, options) {\n\t\tconst applyProperties = options && options.applyProperties === true;\n\t\tconst filterHiddenDisabled = this.props.propertiesConfig.conditionReturnValueHandling === CONDITION_RETURN_VALUE_HANDLING.NULL;\n\t\tconst properties = this.propertiesController.getPropertyValues({ filterHiddenDisabled: filterHiddenDisabled, applyProperties: applyProperties });\n\t\tif (this.uiParameterKeys.length > 0) {\n\t\t\tvalueInfo.properties = omit(properties, this.uiParameterKeys);\n\t\t\tvalueInfo.uiProperties = pick(properties, this.uiParameterKeys);\n\t\t} else {\n\t\t\tvalueInfo.properties = properties;\n\t\t}\n\t\treturn valueInfo;\n\t}\n\n\t// this will return an array of control names that are ui only controls.\n\t_getUiOnlyKeys() {\n\t\tconst uiOnlyKeys = [];\n\t\tconst controls = this.propertiesController.getControls();\n\t\tif (Object.keys(controls).length > 0) {\n\t\t\tfor (const controlKey in controls) {\n\t\t\t\tif (!has(controls, controlKey)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst control = controls[controlKey];\n\t\t\t\tif (control.uionly) {\n\t\t\t\t\tuiOnlyKeys.push(controlKey);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn uiOnlyKeys;\n\t}\n\n\t// cancelSource is \"apply\" if called from applyPropertiesEditing(), else \"cancel\"\n\tcancelHandler(cancelSource) {\n\t\tif (this.props.callbacks.closePropertiesDialog) {\n\t\t\tthis.props.callbacks.closePropertiesDialog(cancelSource);\n\t\t}\n\t}\n\n\tapplyPropertiesEditing(closeProperties) {\n\t\t// validate all the input values.\n\t\tthis.propertiesController.validatePropertiesValues();\n\t\tconst newErrorMessages = this.propertiesController.getAllErrorMessages();\n\n\t\t// only save if title or parameters have changed or new error messages\n\t\tif (this.originalTitle !== this.propertiesController.getTitle() ||\n\t\t\t\t(this.currentParameters && JSON.stringify(this.currentParameters) !==\n\t\t\t\tJSON.stringify(this.propertiesController.getPropertyValues())) ||\n\t\t\t\t(JSON.stringify(this.previousErrorMessages) !== JSON.stringify(newErrorMessages)) ||\n\t\t\t\tthis.props.propertiesConfig.applyPropertiesWithoutEdit) {\n\n\t\t\t// set current values\n\t\t\tlet valueInfo = { additionalInfo: {}, undoInfo: {} };\n\t\t\tvalueInfo = this._setValueInforProperties(valueInfo, { applyProperties: true });\n\t\t\tvalueInfo.undoInfo.properties = this.propertiesController.getPropertyValues();\n\t\t\tconst errorMessages = this.propertiesController.getErrorMessages(true, true, true, false);\n\t\t\tif (errorMessages) {\n\t\t\t\tvalueInfo.additionalInfo.messages = errorMessages;\n\t\t\t}\n\t\t\tvalueInfo.undoInfo.messages = this.propertiesController.getAllErrorMessages();\n\t\t\tif (this.propertiesController.getTitle()) {\n\t\t\t\tvalueInfo.additionalInfo.title = this.propertiesController.getTitle();\n\t\t\t}\n\t\t\tconst propertiesActionLabel = this.getPropertiesActionLabel();\n\t\t\tconst command = new CommonPropertiesAction(valueInfo, this.initialValueInfo,\n\t\t\t\tthis.props.propertiesInfo.appData, this.props.callbacks.applyPropertyChanges, propertiesActionLabel);\n\t\t\tthis.propertiesController.getCommandStack().do(command);\n\n\t\t\t// if we don't close the dialog, set the currentParameters to the new parameters\n\t\t\t// so we don't save again unnecessarily when clicking save but no additional changes happened\n\t\t\tthis.currentParameters = this.propertiesController.getPropertyValues();\n\t\t\t// reset undo values\n\t\t\tthis.initialValueInfo = cloneDeep(valueInfo);\n\t\t\tthis.previousErrorMessages = this.propertiesController.getAllErrorMessages();\n\t\t}\n\t\tif (closeProperties) {\n\t\t\tthis.cancelHandler(APPLY); // close property editor\n\t\t}\n\t}\n\n\tshowPropertiesButtons(state) {\n\t\tthis.setState({ showPropertiesButtons: state });\n\t}\n\n\tupdateEditorSize(newEditorSize) {\n\t\tthis.setState({\n\t\t\teditorSize: newEditorSize\n\t\t});\n\t\tthis.propertiesController.setEditorSize(newEditorSize);\n\t}\n\n\tresize() {\n\t\tif (this.propertiesController.getForm().editorSize === Size.SMALL) {\n\t\t\tif (this.state.editorSize === Size.SMALL) {\n\t\t\t\tthis.updateEditorSize(Size.MEDIUM);\n\t\t\t} else {\n\t\t\t\tthis.updateEditorSize(Size.SMALL);\n\t\t\t}\n\t\t} else if (this.propertiesController.getForm().editorSize === Size.MEDIUM) {\n\t\t\tif (this.state.editorSize === Size.MEDIUM) {\n\t\t\t\tthis.updateEditorSize(Size.LARGE);\n\t\t\t} else {\n\t\t\t\tthis.updateEditorSize(Size.MEDIUM);\n\t\t\t}\n\t\t} else if (this.propertiesController.getForm().editorSize === Size.LARGE) {\n\t\t\tif (this.state.editorSize === Size.LARGE) {\n\t\t\t\tthis.updateEditorSize(Size.MAX);\n\t\t\t} else {\n\t\t\t\tthis.updateEditorSize(Size.LARGE);\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst applyOnBlurEnabled = this.props.propertiesConfig.applyOnBlur && this.props.propertiesConfig.rightFlyout;\n\t\tlet cancelHandler = this.cancelHandler.bind(this, CANCEL);\n\t\t// when onBlur cancel shouldn't be rendered.\n\t\tif (applyOnBlurEnabled) {\n\t\t\tcancelHandler = null;\n\t\t}\n\t\tconst applyLabel = this.getApplyButtonLabel();\n\t\tconst rejectLabel = this.getRejectButtonLabel();\n\n\t\tconst formData = this.propertiesController.getForm();\n\t\tif (formData !== null) {\n\t\t\tlet propertiesDialog = [];\n\t\t\tlet propertiesTitle = <div />;\n\t\t\tlet buttonsContainer = <div />;\n\t\t\tlet resizeBtn = null;\n\t\t\tlet hasHeading = false;\n\n\t\t\tif (this.props.propertiesConfig.rightFlyout) {\n\t\t\t\tpropertiesTitle = (<TitleEditor\n\t\t\t\t\tlabelEditable={formData.labelEditable}\n\t\t\t\t\thelp={formData.help}\n\t\t\t\t\tcontroller={this.propertiesController}\n\t\t\t\t\thelpClickHandler={this.props.callbacks.helpClickHandler}\n\t\t\t\t\tcloseHandler={applyOnBlurEnabled ? this.applyPropertiesEditing.bind(this, true) : null}\n\t\t\t\t\ticon={formData.icon}\n\t\t\t\t\theading={formData.heading}\n\t\t\t\t\tshowHeading={this.props.propertiesConfig.heading}\n\t\t\t\t/>);\n\n\t\t\t\thasHeading = this.props.propertiesConfig.heading && (formData.icon || formData.heading);\n\n\t\t\t\tbuttonsContainer = (<MainEditorPropertiesButtons\n\t\t\t\t\tcontroller={this.propertiesController}\n\t\t\t\t\tokHandler={!applyOnBlurEnabled ? this.applyPropertiesEditing.bind(this, true) : null}\n\t\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\t\tshowPropertiesButtons={this.state.showPropertiesButtons}\n\t\t\t\t\tdisableSaveOnRequiredErrors={this.props.propertiesConfig.disableSaveOnRequiredErrors}\n\t\t\t\t/>);\n\t\t\t\tif (this._isResizeButtonRequired()) {\n\t\t\t\t\tconst resizeIcon = this._getResizeButton();\n\t\t\t\t\t// Resize button label can be \"Expand\" or \"Contract\"\n\t\t\t\t\tconst resizeBtnLabel = (resizeIcon.props && resizeIcon.props.className === \"properties-resize-caret-left\")\n\t\t\t\t\t\t? PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_RESIZEBUTTON_EXPAND_LABEL)\n\t\t\t\t\t\t: PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_RESIZEBUTTON_CONTRACT_LABEL);\n\t\t\t\t\tresizeBtn = (\n\t\t\t\t\t\t<Button kind=\"ghost\" className=\"properties-btn-resize\" onClick={this.resize.bind(this)} aria-label={resizeBtnLabel} >\n\t\t\t\t\t\t\t{resizeIcon}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst editorForm = (<EditorForm\n\t\t\t\tkey=\"editor-form-key\"\n\t\t\t\tcontroller={this.propertiesController}\n\t\t\t\tadditionalComponents={this.props.propertiesInfo.additionalComponents}\n\t\t\t\tshowPropertiesButtons={this.showPropertiesButtons}\n\t\t\t\tcustomPanels={this.props.customPanels}\n\t\t\t\trightFlyout={this.props.propertiesConfig.rightFlyout}\n\t\t\t/>);\n\n\t\t\tif (this.props.propertiesConfig.containerType === \"Editing\") {\n\t\t\t\tpropertiesDialog = (<PropertiesEditor\n\t\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\t\tbsSize={this.state.editorSize}\n\t\t\t\t\ttitle={this.propertiesController.getTitle()}\n\t\t\t\t\tokHandler={this.applyPropertiesEditing.bind(this, true)}\n\t\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t\t\tshowPropertiesButtons={this.state.showPropertiesButtons}\n\t\t\t\t>\n\t\t\t\t\t{editorForm}\n\t\t\t\t</PropertiesEditor>);\n\t\t\t} else if (this.props.propertiesConfig.containerType === \"Custom\") {\n\t\t\t\tpropertiesDialog = (\n\t\t\t\t\t<div className={classNames(\"properties-custom-container\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties-custom-container-with-heading\": !applyOnBlurEnabled && hasHeading,\n\t\t\t\t\t\t\t\"properties-custom-container-applyOnBlur\": applyOnBlurEnabled && !hasHeading,\n\t\t\t\t\t\t\t\"properties-custom-container-applyOnBlur-with-heading\": applyOnBlurEnabled && hasHeading\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{editorForm}\n\t\t\t\t\t</div>);\n\t\t\t} else if (this.props.propertiesConfig.containerType === \"Tearsheet\") {\n\t\t\t\tpropertiesDialog = (<TearSheet\n\t\t\t\t\topen\n\t\t\t\t\tonCloseCallback={this.props.propertiesConfig.applyOnBlur ? this.applyPropertiesEditing.bind(this, true) : null}\n\t\t\t\t\ttearsheet={{\n\t\t\t\t\t\ttitle: this.propertiesController.getTitle(),\n\t\t\t\t\t\tcontent: editorForm\n\t\t\t\t\t}}\n\t\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\t\tokHandler={this.applyPropertiesEditing.bind(this, true)}\n\t\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t\t\tshowPropertiesButtons={this.state.showPropertiesButtons}\n\t\t\t\t\tapplyOnBlur={this.props.propertiesConfig.applyOnBlur}\n\t\t\t\t/>);\n\t\t\t} else { // Modal\n\t\t\t\tpropertiesDialog = (<PropertiesModal\n\t\t\t\t\tonHide={this.props.callbacks.closePropertiesDialog}\n\t\t\t\t\ttitle={this.propertiesController.getTitle()}\n\t\t\t\t\tbsSize={this.state.editorSize}\n\t\t\t\t\tokHandler={this.applyPropertiesEditing.bind(this, true)}\n\t\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t\t\tshowPropertiesButtons={this.state.showPropertiesButtons}\n\t\t\t\t\tapplyLabel={applyLabel}\n\t\t\t\t\trejectLabel={rejectLabel}\n\t\t\t\t>\n\t\t\t\t\t{editorForm}\n\t\t\t\t</PropertiesModal>);\n\t\t\t}\n\t\t\tconst className = classNames(\"properties-wrapper\",\n\t\t\t\t{\n\t\t\t\t\t\"properties-right-flyout\": this.props.propertiesConfig.rightFlyout,\n\t\t\t\t\t\"properties-light-enabled\": this.props.light,\n\t\t\t\t\t\"properties-light-disabled\": !this.props.light\n\t\t\t\t},\n\t\t\t\t`properties-${this.state.editorSize}`);\n\t\t\tconst overrideSize = this._getOverrideSize();\n\t\t\tlet overrideStyle = null;\n\t\t\tif (overrideSize !== null) {\n\t\t\t\toverrideStyle = { width: overrideSize + \"px\" };\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<Provider store={this.propertiesController.getStore()}>\n\t\t\t\t\t<aside\n\t\t\t\t\t\taria-label={PropertyUtils.formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_LABEL)}\n\t\t\t\t\t\trole=\"complementary\"\n\t\t\t\t\t\tref={ (ref) => (this.commonProperties = ref) }\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\tonBlur={this.onBlur}\n\t\t\t\t\t\tstyle={overrideStyle}\n\t\t\t\t\t>\n\t\t\t\t\t\t{resizeBtn}\n\t\t\t\t\t\t{propertiesTitle}\n\t\t\t\t\t\t{propertiesDialog}\n\t\t\t\t\t\t{buttonsContainer}\n\t\t\t\t\t</aside>\n\t\t\t\t</Provider>\n\t\t\t);\n\t\t}\n\t\treturn <div />;\n\t}\n}\n\nPropertiesMain.propTypes = {\n\tpropertiesInfo: PropTypes.object.isRequired,\n\tpropertiesConfig: PropTypes.shape({\n\t\tapplyOnBlur: PropTypes.bool,\n\t\tdisableSaveOnRequiredErrors: PropTypes.bool,\n\t\trightFlyout: PropTypes.bool,\n\t\tcontainerType: PropTypes.string,\n\t\tenableResize: PropTypes.bool,\n\t\tconditionReturnValueHandling: PropTypes.string,\n\t\theading: PropTypes.bool,\n\t\tbuttonLabels: PropTypes.shape({\n\t\t\tprimary: PropTypes.string,\n\t\t\tsecondary: PropTypes.string\n\t\t}),\n\t\tschemaValidation: PropTypes.bool,\n\t\tapplyPropertiesWithoutEdit: PropTypes.bool,\n\t\tconditionHiddenPropertyHandling: PropTypes.oneOf([\"null\", \"undefined\", \"value\"]),\n\t\tconditionDisabledPropertyHandling: PropTypes.oneOf([\"null\", \"undefined\", \"value\"]),\n\t\tmaxLengthForMultiLineControls: PropTypes.number,\n\t\tmaxLengthForSingleLineControls: PropTypes.number,\n\t\tconvertValueDataTypes: PropTypes.bool\n\t}),\n\tcallbacks: PropTypes.shape({\n\t\tcontrollerHandler: PropTypes.func,\n\t\tpropertyListener: PropTypes.func,\n\t\tactionHandler: PropTypes.func,\n\t\tclosePropertiesDialog: PropTypes.func,\n\t\tapplyPropertyChanges: PropTypes.func,\n\t\thelpClickHandler: PropTypes.func,\n\t\tsetPropertiesHasMounted: PropTypes.func,\n\t\tbuttonHandler: PropTypes.func,\n\t\tbuttonIconHandler: PropTypes.func,\n\t\tvalidationHandler: PropTypes.func,\n\t\ttitleChangeHandler: PropTypes.func,\n\t\tpropertiesActionLabelHandler: PropTypes.func,\n\t\ttooltipLinkHandler: PropTypes.func\n\t}),\n\tcustomPanels: PropTypes.array, // array of custom panels\n\tcustomControls: PropTypes.array, // array of custom controls\n\tcustomConditionOps: PropTypes.array, // array of custom condition ops\n\tlight: PropTypes.bool,\n\tintl: PropTypes.object.isRequired\n};\n\nexport default injectIntl(PropertiesMain, { forwardRef: true });\n","/*\n * Copyright 2017-2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PropertiesButtons from \"./components/properties-buttons\";\nimport PropertiesMain from \"./properties-main\";\nimport PropertiesModal from \"./components/properties-modal\";\nimport ValidationMessage from \"./components/validation-message\";\nimport { formatMessage } from \"./util/property-utils\";\nimport { MESSAGE_KEYS } from \"./constants/constants\";\n\nimport { injectIntl } from \"react-intl\";\n\n\nclass CommonProperties extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false,\n\t\t\terror: null,\n\t\t\tinfo: null,\n\t\t};\n\t\tthis.createPropertiesMainComponent = this.createPropertiesMainComponent.bind(this);\n\t\tthis.revertState = this.revertState.bind(this);\n\t\tthis.propertiesMainHasMounted = false;\n\t\tthis.setPropertiesHasMounted = this.setPropertiesHasMounted.bind(this);\n\t\tthis.applyPropertiesEditing = this.applyPropertiesEditing.bind(this);\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({\n\t\t\thasError: true,\n\t\t\terror: error,\n\t\t\tinfo: info\n\t\t});\n\t}\n\n\tsetPropertiesHasMounted() {\n\t\tthis.propertiesMainHasMounted = true;\n\t}\n\n\tapplyPropertiesEditing(closeEditor) {\n\t\tthis.PropertiesMain.applyPropertiesEditing(closeEditor);\n\t}\n\n\tcreatePropertiesMainComponent() {\n\t\tObject.assign(this.props.callbacks, { \"setPropertiesHasMounted\": this.setPropertiesHasMounted });\n\t\tconst propertiesMain = (\n\t\t\t<PropertiesMain\n\t\t\t\tref={\n\t\t\t\t\t(instance) => {\n\t\t\t\t\t\tthis.PropertiesMain = instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpropertiesInfo={this.props.propertiesInfo}\n\t\t\t\tpropertiesConfig={this.props.propertiesConfig}\n\t\t\t\tcustomPanels={this.props.customPanels}\n\t\t\t\tcallbacks= {this.props.callbacks}\n\t\t\t\tcustomControls={this.props.customControls}\n\t\t\t\tcustomConditionOps={this.props.customConditionOps}\n\t\t\t\tlight={this.props.light}\n\t\t\t/>);\n\t\treturn propertiesMain;\n\t}\n\n\trevertState() {\n\t\tthis.setState({\n\t\t\thasError: false,\n\t\t\terror: null,\n\t\t\tinfo: null\n\t\t});\n\t}\n\n\tdisplayAppropriateUIFallback() {\n\t\tconst errorInfo = {\n\t\t\ttext: formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_UNEXPECTED_MESSAGE),\n\t\t\ttype: \"error\"\n\t\t};\n\t\tconst errorHeading = (\n\t\t\t<div className=\"properties-error-heading\">\n\t\t\t\t<ValidationMessage messageInfo={errorInfo} />\n\t\t\t</div>\n\t\t);\n\t\tlet errorMessage;\n\t\tconst supportMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_SUPPORT_MESSAGE);\n\t\tconst closeText = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_CLOSEBUTTON_LABEL);\n\t\tconst closeFunction = this.props.callbacks.closePropertiesDialog;\n\t\tconst revertText = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIESEDIT_REVERTBUTTON_LABEL);\n\t\tconst revertFunction = this.revertState;\n\t\tconst propertiesLandmarkRoleLabel = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_LABEL);\n\t\tlet closeAndRevertContainer;\n\t\tif (this.props.propertiesConfig.containerType === \"Custom\") { // Right flyout view or Custom\n\t\t\tif (this.propertiesMainHasMounted === true) {\n\t\t\t\terrorMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_REVERT_MESSAGE);\n\t\t\t\tcloseAndRevertContainer = ( // Close and Revert Button\n\t\t\t\t\t<div className=\"properties-modal-buttons\">\n\t\t\t\t\t\t<PropertiesButtons\n\t\t\t\t\t\t\tclassName=\"properties-error-display-close-button\"\n\t\t\t\t\t\t\tokHandler={closeFunction}\n\t\t\t\t\t\t\tcancelHandler={revertFunction}\n\t\t\t\t\t\t\tshowPropertiesButtons\n\t\t\t\t\t\t\tapplyLabel={closeText}\n\t\t\t\t\t\t\trejectLabel={revertText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\terrorMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_CLOSE_MESSAGE);\n\t\t\t\tcloseAndRevertContainer = ( // Close Button only\n\t\t\t\t\t<div className=\"properties-modal-buttons\">\n\t\t\t\t\t\t<PropertiesButtons\n\t\t\t\t\t\t\tclassName=\"properties-error-display-close-button\"\n\t\t\t\t\t\t\tokHandler={closeFunction}\n\t\t\t\t\t\t\tshowPropertiesButtons\n\t\t\t\t\t\t\tapplyLabel={closeText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.props.propertiesConfig.rightFlyout) { // Right Flyout View\n\t\t\t\treturn (\n\t\t\t\t\t<aside\n\t\t\t\t\t\taria-label={propertiesLandmarkRoleLabel}\n\t\t\t\t\t\trole=\"complementary\"\n\t\t\t\t\t\tclassName=\"properties-wrapper properties-right-flyout properties-small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"properties-flyout-error-container\">\n\t\t\t\t\t\t\t{errorHeading}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div className=\"properties-error-content\" >\n\t\t\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t{supportMessage}\n\t\t\t\t\t\t\t</div >\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{closeAndRevertContainer}\n\t\t\t\t\t</aside>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn ( // Non Right Flyout Custom\n\t\t\t\t<aside\n\t\t\t\t\taria-label={propertiesLandmarkRoleLabel}\n\t\t\t\t\trole=\"complementary\"\n\t\t\t\t\tclassName=\"properties-wrapper properties-custom-container\"\n\t\t\t\t>\n\t\t\t\t\t<div className= \"properties-flyout-error-container\">\n\t\t\t\t\t\t{ errorHeading }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div className=\"properties-error-content\" >\n\t\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{supportMessage}\n\t\t\t\t\t\t</div >\n\t\t\t\t\t</div>\n\t\t\t\t\t{closeAndRevertContainer}\n\t\t\t\t</aside>\n\t\t\t);\n\t\t}\n\t\t// Modal View\n\t\tif (this.propertiesMainHasMounted === true) { // Revert and Close Button\n\t\t\terrorMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_REVERT_MESSAGE);\n\t\t\tcloseAndRevertContainer = (\n\t\t\t\t<PropertiesModal\n\t\t\t\t\tbsSize=\"large\"\n\t\t\t\t\tshowPropertiesButtons\n\t\t\t\t\tapplyLabel={closeText}\n\t\t\t\t\trejectLabel={revertText}\n\t\t\t\t\tokHandler={closeFunction}\n\t\t\t\t\tcancelHandler={revertFunction}\n\t\t\t\t\ttitle ={errorHeading}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"properties-modal-container properties-error-content\">\n\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{supportMessage}\n\t\t\t\t\t</div>\n\t\t\t\t</PropertiesModal>\n\t\t\t);\n\t\t} else {\t// Close Button Only\n\t\t\terrorMessage = formatMessage(this.props.intl, MESSAGE_KEYS.PROPERTIES_CLOSE_MESSAGE);\n\t\t\tcloseAndRevertContainer = (\n\t\t\t\t<div className = \"properties-modal-error\">\n\t\t\t\t\t<PropertiesModal\n\t\t\t\t\t\tokHandler={closeFunction}\n\t\t\t\t\t\tbsSize=\"large\"\n\t\t\t\t\t\tshowPropertiesButtons\n\t\t\t\t\t\tapplyLabel={closeText}\n\t\t\t\t\t\trejectLabel=\"null\"\n\t\t\t\t\t\ttitle ={errorHeading}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"properties-modal-container properties-error-content\">\n\t\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{supportMessage}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</PropertiesModal>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn ( // Modal flyout vew\n\t\t\tcloseAndRevertContainer\n\t\t);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn this.displayAppropriateUIFallback();\n\t\t}\n\t\treturn this.createPropertiesMainComponent();\n\t}\n\n}\n\nCommonProperties.propTypes = {\n\tpropertiesInfo: PropTypes.object.isRequired,\n\tpropertiesConfig: PropTypes.shape({\n\t\tapplyOnBlur: PropTypes.bool,\n\t\ttrimSpaces: PropTypes.bool,\n\t\tdisableSaveOnRequiredErrors: PropTypes.bool,\n\t\trightFlyout: PropTypes.bool,\n\t\tcontainerType: PropTypes.string,\n\t\tenableResize: PropTypes.bool,\n\t\tconditionReturnValueHandling: PropTypes.oneOf([\"null\", \"value\"]),\n\t\tbuttonLabels: PropTypes.shape({\n\t\t\tprimary: PropTypes.string,\n\t\t\tsecondary: PropTypes.string\n\t\t}),\n\t\tschemaValidation: PropTypes.bool,\n\t\tapplyPropertiesWithoutEdit: PropTypes.bool,\n\t\tconditionHiddenPropertyHandling: PropTypes.oneOf([\"null\", \"value\"]),\n\t\tconditionDisabledPropertyHandling: PropTypes.oneOf([\"null\", \"value\"]),\n\t\tmaxLengthForMultiLineControls: PropTypes.number,\n\t\tmaxLengthForSingleLineControls: PropTypes.number,\n\t\tconvertValueDataTypes: PropTypes.bool\n\t}),\n\tcallbacks: PropTypes.shape({\n\t\tcontrollerHandler: PropTypes.func,\n\t\tpropertyListener: PropTypes.func,\n\t\tactionHandler: PropTypes.func,\n\t\tclosePropertiesDialog: PropTypes.func,\n\t\tapplyPropertyChanges: PropTypes.func,\n\t\thelpClickHandler: PropTypes.func,\n\t\tbuttonHandler: PropTypes.func,\n\t\tbuttonIconHandler: PropTypes.func,\n\t\tvalidationHandler: PropTypes.func,\n\t\ttitleChangeHandler: PropTypes.func,\n\t\tpropertiesActionLabelHandler: PropTypes.func,\n\t\ttooltipLinkHandler: PropTypes.func\n\t}),\n\tcustomPanels: PropTypes.array,\n\tcustomControls: PropTypes.array,\n\tcustomConditionOps: PropTypes.array,\n\tlight: PropTypes.bool,\n\tintl: PropTypes.object.isRequired\n};\n\nCommonProperties.defaultProps = {\n\tpropertiesConfig: {\n\t\tcontainerType: \"Custom\",\n\t\trightFlyout: true,\n\t\tapplyOnBlur: false,\n\t\ttrimSpaces: true,\n\t\tdisableSaveOnRequiredErrors: false,\n\t\tenableResize: true,\n\t\tconditionReturnValueHandling: \"value\",\n\t\tschemaValidation: false,\n\t\tapplyPropertiesWithoutEdit: false,\n\t\tmaxLengthForMultiLineControls: 1024,\n\t\tmaxLengthForSingleLineControls: 128,\n\t\tconvertValueDataTypes: false\n\t},\n\tcallbacks: {\n\t},\n\tlight: true // Enable light option by default\n};\n\nexport default injectIntl(CommonProperties, { forwardRef: true });\n"],"names":["baseGet","require$$0","baseSet","require$$1","castPath","require$$2","basePickBy","object","paths","predicate","index","length","result","path","value","hasIn","baseFlatten","flatten","array","overRest","setToString","_flatRest","func","undefined","basePick","pick_1","baseSlice","start","end","Array","last","parent","toKey","require$$3","_baseUnset","baseGetTag","getPrototype","isObjectLike","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","objectCtorString","call","isPlainObject","proto","Ctor","constructor","arrayMap","baseClone","baseUnset","copyObject","require$$4","customOmitClone","getAllKeysIn","require$$7","omit_1","require$$6","isDeep","CLONE_DEEP_FLAG","PropertiesModal","_Component","_inherits","Component","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","props","bsSize","Size","SMALL","CARBON_MODAL_SIZE_XSMALL","LARGE","MAX","CARBON_MODAL_SIZE_LARGE","MEDIUM","CARBON_MODAL_SIZE_SMALL","modalSize","getCarbonModalSize","React","createElement","Portal","Modal","className","classNames","noButtons","showPropertiesButtons","open","modalHeading","title","primaryButtonText","applyLabel","secondaryButtonText","rejectLabel","onRequestSubmit","okHandler","onSecondarySubmit","cancelHandler","size","children","PropertiesEditor","propertyEditingClass","buttons","PropertiesButtons","TearSheet","tearsheet","description","content","displayFooterButtons","applyOnBlur","displayTabs","isArray","ComposedModal","stacked","preventCloseOnClickOutside","ModalHeader","onCloseCallback","buttonOnClick","ModalBody","defaultProps","MainEditorPropertiesButtons","saveButtonEnabled","disableSaveOnRequiredErrors","keys","requiredErrorMessages","shouldEnabledSaveButton","applyButtonEnabled","connect","state","ownProps","controller","getSaveButtonDisable","getRequiredErrorMessages","SET_PROPERTY_VALUES","UPDATE_PROPERTY_VALUE","REMOVE_PROPERTY_VALUE","SET_CONTROL_STATES","UPDATE_CONTROL_STATE","SET_PANEL_STATES","UPDATE_PANEL_STATE","SET_ACTION_STATES","UPDATE_ACTION_STATE","SET_ERROR_MESSAGES","UPDATE_ERROR_MESSAGE","CLEAR_ERROR_MESSAGE","SET_DATASET_METADATA","UPDATE_SELECTED_ROWS","CLEAR_SELECTED_ROWS","SET_TITLE","SET_ACTIVE_TAB","DISABLE_ROW_MOVE_BUTTONS","SET_SAVE_BUTTON_DISABLE","SET_WIDE_FLYOUT_PRIMARY_BUTTON_DISABLED","SET_ADD_REMOVE_ROWS","UPDATE_STATIC_ROWS","CLEAR_STATIC_ROWS","SET_TABLE_BUTTON_ENABLED","SET_HIDE_EDIT_BUTTON","SET_ACTIVE_TEARSHEET","setTitle","type","setActiveTab","activeTab","SelectorPanel","_React$Component","panel","panels","getPropertyValue","name","dependsOn","WideFlyout","_this","style","height","updateDimensions","bind","_assertThisInitialized","window","addEventListener","removeEventListener","wideFlyout","commonPropertiesParent","findPropertyWrapper","commonProperties","ReactDOM","findDOMNode","getBoundingClientRect","setState","top","node","parentNode","includes","_this2","overlay","show","okButtonEnabled","ref","light","getControlId","propertyId","id","uuid","uuid4","concat","getDataId","row","col","getCharLimit","control","defaultLimit","limit","charLimit","splitNewlines","text","splitValue","split","joinNewlines","list","joinValue","truncated","concatenatedValue","forEach","truncatedValue","truncateDisplayValue","join","TRUNCATE_LIMIT","substring","getValidationProps","messageInfo","inTable","validationProps","invalid","invalidText","warn","warnText","SummaryPanel","showWideFlyout","handleLinkClicked","hideWideFlyout","cancelWideFlyout","_getSummaryTables","evt","mousePos","x","clientX","y","clientY","setIsSummaryPanelShowing","clearSelectedRows","setPropertyValues","initialControlValues","setErrorMessages","initialMessages","setControlStates","initialStates","getPropertyValues","getAllErrorMessages","getControlStates","summaryTables","summaryControls","getSummaryPanelControls","_step","_iterator","_createForOfIteratorHelper","s","n","done","controlName","summaryControl","getControl","controlValue","filterHiddenDisabled","customValue","getCustPropSumPanelValue","showCustom","summaryLabel","label","summaryValues","summaryColumns","subControls","idx","colPropertyId","isSummary","summary","colWidth","rowIdx","rowValue","rowData","colIdx","displayValue","_getSummaryDisplayValue","contentValue","JSON","stringify","replace","RegExp","push","width","onMouseMove","_onMouseMove","Tooltip","tip","showToolTipIfTruncated","summaryBody","role","largeTableLabel","PropertyUtils","getReactIntl","MESSAGE_KEYS","LONG_TABLE_SUMMARY_PLACEHOLDER","err","e","f","returnValue","values","valueLabels","displayIndex","indexOf","valueDef","propType","Type","STRUCTURE","ParamRole","COLUMN","controls","msg","errorCount","warningCount","controlId","controlMsg","getErrorMessage","_isEmpty","CONDITION_MESSAGE_TYPE","WARNING","ERROR","descriptionText","CONTROL_SUMMARY_ERROR","errorMsgCount","CONTROL_SUMMARY_ERROR_WARNING","warningMsgCount","CONTROL_SUMMARY_WARNING","Icon","icon","_getSummaryIconState","link","Button","onClick","kind","renderIcon","Add16","APPLYBUTTON_LABEL","REJECTBUTTON_LABEL","flyout","getLight","panelClassName","hide","panelState","STATES","HIDDEN","nestedPanel","disabled","DISABLED","ControlUtils","getPanelState","getWideFlyoutPrimaryButtonDisabled","TwistyPanel","Accordion","AccordionItem","SubPanelInvoker","hideHandler","subPanelVisible","showSubDialog","hideSubDialog","increaseVisibleSubPanelCounter","applyChanges","decreaseVisibleSubPanelCounter","propertiesDialog","rightFlyout","isTearsheetContainer","SubPanelButton","showSubPanel","onSubPanelHidden","logger","info","subPanelInvoker","formatMessage","button","small","ColumnPanel","gridColumns","item","gridTemplateColumns","ControlPanel","Subtabs","activeTabId","tabId","subTabs","tabIdx","i","tabs","tab","group","subPanelItems","genUIItem","Tab","leftnav","tabIndex","vertical","Tabs","selected","TextPanel","hidden","dynamicDescriptionText","evaluateText","placement","tooltip","tooltipLinkHandler","getHandlers","direction","disable","showToolTipOnClick","CARBON_ICONS","INFORMATION","propertyValues","ActionPanel","ButtonAction","applyAction","_has","CARBON_BUTTON_KIND","TERTIARY","action","PRIMARY","SECONDARY","GHOST","DANGER","DANGER_TERTIARY","DANGER_GHOST","CARBON_BUTTON_SIZE","DEFAULT","EXTRA_LARGE","actionHandler","getAppData","data","actionButtonKind","getActionButtonKind","actionButtonSize","getActionButtonSize","display","tooltipId","getActionState","convertPropertyId","ImageAction","image","left","right","_extends","src","url","tooltipDirection","tooltip_direction","toLowerCase","ActionFactory","actionType","ALERT_TAB_GROUP","EditorForm","showFieldPicker","genPanel","genUIContent","_getGroupedMessages","closeFieldPicker","openFieldPicker","generateSharedControlNames","messages","ControlFactory","getControlFactory","setFunctions","setRightFlyout","actionFactory","FIRST_TEARSHEET_ID","TEARSHEETS","visibleTearsheet","nextProps","nextState","isSummaryPanelShowing","isSubPanelsShowing","ctrl","id_ref","parentCategoryId","_sortBy","panelId","ev","indexof","tabContent","hasAlertsTab","modalSelected","nonTearsheetTabs","filter","t","itemType","ItemType","TEARSHEET","totalTabs","panelItems","_getContainerIndex","additionalComponent","additionalComponents","panelArrow","CHEVRONARROWS","DOWN","categoryOpen","UP","_showCategoryPanel","_getMessageCountForCategory","_modalTabsOnClick","tabContentClassName","subPanels","generateAdditionalPanels","indent","groupClassName","uiItems","uiContent","uiItem","inPropertyId","textClass","additionalItems","optionalPanels","parentPropertyId","_cloneDeep","updateLastChildPropertyId","createControlItem","subPanel","secondaryText","textType","PropertyUtil","Link","_handleMessageClick","genPrimaryTabs","genPanelSelector","generateCustomPanel","generateAction","customPanels","custPanel","_get","parameters","renderPanel","error","_step2","_iterator2","getSharedCtrlInfo","_step3","sharedCtrlNames","_iterator3","panelItem","addSharedControls","_this3","panelType","getActiveTearsheet","clearActiveTearsheet","newSelectedFields","newSelections","closeFieldPickerCallback","fieldPickerPropertyId","callback","dmImage","currentControlValues","fields","getFilteredDatasetMetadata","tableFieldIndex","formattedFieldsList","FieldPicker","currentFields","dmIcon","msgUIItems","map","ALERTS_TAB_TITLE","getUiItems","unshift","genAlertsTab","stackedTearsheet","wideFly","form","getForm","FIELDPICKER_SAVEBUTTON_LABEL","fieldPicker","componentMetadataReducer","getErrorMessages","dispatch","propertyOf_1","L10nProvider","resources","defaultVal","_propertyOf","resourceObj","resource_key","l10n","uiObject","l10nResource","baseKey","lookupKey","desc","ResourceDef","resource","Group","cname","actions","insertPanels","subGroups","copen","make","GroupType","CONTROLS","uiGroup","group_info","newGroup","makeGroup","GroupMetadata","groups","uiGroups","Action","actionName","ActionDef","actionDef","ActionMetadata","actionDefs","actionId","uihintsActions","actionsDefs","makeActionDef","ParameterDef","settings","valueRestriction","defaultValue","toType","parameter_ref","parameterRef","isList","isMapValue","labelVisible","orientation","placeHolderText","separator","visible","valueIcons","sortable","filterable","resizable","editStyle","required","numberGenerator","isKey","dmDefault","language","enableMaximize","increment","textAfter","textBefore","moveableRows","generatedValues","dateFormat","timeFormat","customControlId","rows","displayChars","uionly","actionRef","customValueAllowed","showRequiredLabel","startsWith","EditStyle","SUBPANEL","OBJECT","baseType","getValidValues","ENUM","UNSPECIFIED","typ","trim","STRING","BOOLEAN","l10nProvider","defaultControl","defaultCol","Separator","AFTER","BEFORE","param","uihint","getParamUIHint","paramName","uihints","ParameterMetadata","paramDefs","paramDef","uihintsParams","uihintsUiParams","requiredParameters","parameter","half","makeParameterDef","carbonIcon","enabled","divider","ButtonDef","buttonDef","carbon_icon","ButtonMetadata","buttonDefs","buttonId","uihintsButtons","makeButtonDef","StructureDef","keyDefinition","parameterMetadata","rowSelection","addRemoveRows","header","includeAllFields","layout","params","isSubPanelEdit","defaults","structure","makeParameterMetadata","makeButtonMetadata","getStructureUIHint","structureName","complex_type_ref","StructureMetadata","structures","structName","structureDef","uihintsStructures","_step4","structureDefs","_iterator4","struct","makeStructure","PropertyDef","editorSize","pixelWidth","labelEditable","help","structureMetadata","groupMetadata","actionMetadata","heading","titleDefinition","makeStructureMetadata","makeActionMetadata","makeGroupMetadata","getParameters","editable","DEFAULT_LABEL_EDITABLE","Control","controlType","additionalText","valueDescs","operation","start_value","startValue","structureType","childItem","keyIndex","defaultRow","hideEditButton","isKeyField","INLINE","UIItem","elements","PRIMARY_TABS","SUB_TABS","groupName","PANEL_SELECTOR","PANEL","dialogText","ADDITIONAL_LINK","CONTROL","ACTION","HORIZONTAL_SEPARATOR","STATIC_TEXT","TEXT_PANEL","CUSTOM_PANEL","_objectSpread","EditorTab","ValueDef","isMap","Label","Description","CustomControlPanel","NumberGenerator","range","makePrimaryTab","propertyDef","containerType","l10nLabel","additionalInfo","_makeUIItem","groupItem","groupLabel","groupType","makePanel","PanelType","GENERAL","_makeControls","COLUMN_SELECTION","ADDITIONAL","makeAdditionalLink","subTabItems","subGroup","subGroupName","makeSubTabs","panSelSubItems","_genPanelSelectorPanels","makePanelSelector","PANELS","panSubItems","COLUMN_PANEL","makeCustomPanel","CUSTOM","parameterNames","SUMMARY_PANEL","SUMMARY","ACTION_PANEL","groupDesc","actionIds","makeAction","_makeAction","getAction","_makeActions","makeTextPanel","TWISTY_PANEL","TEARSHEET_PANEL","additionalInfoUpdated","assign","makeTearsheetPanel","panelInsertedFor","prop","getParameter","getStructure","_makeControl","makeControl","separatorBefore","makeHSeparator","makeStaticText","getTextBefore","getTextBeforeType","getTextAfter","getTextAfterType","separatorAfter","ControlType","RADIOSET","ORIENTATIONS","VERTICAL","_hasPanelBeenInserted","_makeStringControl","isSubControl","getRole","controlObj","TEXT","TEXTAREA","getValidValueCount","CHECKBOXSET","SOMEOFSELECT","SELECTCOLUMNS","_processListParameter","_isEmbeddedOption","ONEOFSELECT","_isEmbeddedMultiOption","SELECTCOLUMN","EXPRESSION","EMAIL","TEXTFIELD","URL","COLOR","structureDefinition","subControl","getAdditionalText","controlDesc","controlLabel","l10nDesc","returnObject","PASSWORD","PASSWORDFIELD","CHECKBOX","INTEGER","LONG","DOUBLE","NUMBERFIELD","DATE","DATEFIELD","TIME","TIMEFIELD","TIMESTAMP","hasSubPanel","_makeEditStyleSubPanel","keyAttributeIndex","defaultStructure","newSubControl","_makeSubControl","STRUCTURETABLE","STRUCTURELISTEDITOR","buttonMetadata","buttonLabel","buttonDescription","_makeButton","getButton","_makeButtons","STRUCTUREEDITOR","READONLY","isCompoundField","paramLabels","paramValue","l10nValueLabel","String","_parameterValueLabels","paramDescs","l10nValueDesc","_parameterValueDescription","CONTAINER_TYPE","columns","actionDesc","actionLabel","o","allowArrayLike","it","Symbol","iterator","minLen","_arrayLikeToArray","slice","from","test","_unsupportedIterableToArray","F","_e","TypeError","normalCompletion","didErr","step","next","_e2","arr","len","arr2","searchMessage","_typeof","message","Form","componentId","conditions","shouldConvertValueDataTypes","okBtn","cancelBtn","propDef","makePropertyDef","currentParameters","convertValueDataTypes","uiCurrentParameters","datasetMetadata","editorSizeDefault","MODAL","editorSizeHint","makePrimaryTabs","translateMessages","isPrimary","CommonPropertiesAction","_Action","newValues","initialValues","appData","applyPropertyChanges","propertiesActionLabel","properties","undoInfo","uiProperties","baseRest","isIterateeCall","assignValue","createAssigner","assigner","sources","customizer","guard","source","isArrayLike","isPrototype","require$$5","assign_1","property","newState","updateNestedPropertyValue","states","strRow","strCol","validation_id","displayError","Number","isInteger","selectedRows","staticRows","componentMetadata","disableRowMoveButtons","propertyIds","setSaveButtonDisable","disableState","setWideFlyoutPrimaryButtonDisabled","updateNestedPropertySetting","_set","setting","tearsheetId","PropertiesStore","combinedReducer","combineReducers","propertiesReducer","controlStatesReducer","panelStatesReducer","errorMessagesReducer","datasetMetadataReducer","rowSelectionsReducer","disableRowMoveButtonsReducer","actionStatesReducer","wideFlyoutPrimaryButtonDisableReducer","tearsheetStatesReducer","saveButtonDisableReducer","propertiesSettingsReducer","rowFreezeReducer","enableDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","subscribe","propValue","getState","getNestedPropertyValue","locState","colId","rowId","_isEqual","getPanelStates","setPanelStates","getActionStates","setActionStates","disablePrimaryButtonForPanel","enumFilter","intl","controlMessage","returnMessage","clonedControlMsg","_getTableCellErrors","rowKey","rowMessage","colKey","colMessage","TABLE_SUMMARY_ERROR","TABLE_SUMMARY_WARNING","setDatasetMetadata","rowSelections","selection","rowStatic","getNestedPropertySetting","tableButtons","setTearsheetState","evaluate","paramsList","defaultParameter","or","and","condition","Error","parameter_2_ref","parseControl","parameterName","columnIndex","parseUiItem","summaryPanelId","CHECKBOX_SELECTOR","locPanelId","_step5","_iterator5","parseConditions","container","uiCondition","conditionType","definition","parameter_refs","uniqueList","Set","parseInput","groupDef","_setDefinitions","refs","group_refs","action_refs","target","j","setExpressionInfo","inExpressionInfo","expressionFunctionInfo","functions","expressionInfo","function_info","function_categories","functionInfoList","parmsSet","functionInfo","newEntry","locLabel","return_type_label","returnTypeLabel","locReturnType","_genFunctionParameters","functionCategories","category","functionList","function_refs","functionId","_getFunctionInfo","operators","operator_refs","field_categories","field_table_info","fieldCat","field_columns","field_column_info","value_column_info","fieldColInfoDesc","descLabel","valueColInfoDesc","additional_column_info","fieldInfo","find","functionElem","panelTree","currentPanel","_newPanelTreeObject","baseUniq","isArrayLikeObject","unionWith_1","arrays","comparator","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","Math","min","_baseIntersection","iteratee","othLength","othIndex","caches","maxLength","Infinity","seen","outer","computed","cache","_castArrayLikeObject","baseIntersection","castArrayLikeObject","intersectionWith_1","mapped","pop","validateInput","validation","fail_message","evaluateData","isValidation","failedErrorMessage","focus_parameter_ref","failedMessage","enum_filter","filteredEnum","allow_change","allowChange","default_value","conditionalDefault","filterDef","evaluateFilter","evaluated","op","param2","options","propertiesConfig","getPropertiesConfig","conditionDisabledPropertyHandling","filterDisabled","conditionHiddenPropertyHandling","filterHidden","param2Info","paramInfo","_getPropertyIdFromParam","getConditionOp","filterItem","conditionItem","conditionItems","inFields","newFields","_unionWith","orFilter","_intersectionWith","andFilter","_toConsumableArray","measurementValues","field","measurementValue","metadata","measure","_handleDmMeasurement","typeValues","typeValue","_handleDmType","roleValues","roleValue","modeling_role","_handleDmModelingRole","returnFields","filterFieldsFromSharedProps","_handleSharedFields","conditionFilter","paramPropertyID","offset","startCol","endCol","parseInt","_getColumnNumber","validatePropertiesValues","showErrors","getControls","controlKey","validatePropertiesListValues","validatePropertiesConditions","newStates","_validateConditionsByType","rowIndex","colIndex","subPropId","validatePropertiesListConditions","_propagateParentPanelStates","PANEL_TREE_ROOT","prevPropertyValues","_getConditionPropertyValues","_comparePropertyValues","validateConditions","_validateInput","runCount","newPropertyValues","updatePropertyIds","_union","prevPropertyValue","newPropertyValue","updateState","refState","propState","newPropState","ENABLED","hideColumn","updateColumnVisibility","getColumnVisibility","toggleColumnVisibility","updateEnumerationState","enumValue","getParamRefPropertyId","paramRef","controlPropertyId","baseParam","injectDefaultValidations","validationDefinitions","requiredDefinitionsIds","keyName","controlValId","seedrandom","rng","_injectRequiredDefinition","_injectDateTimeDefinition","locKeyName","_injectInvalidFieldDefinition","disabledOnly","currentPanelState","allowUpdate","_step6","_iterator6","_step7","_iterator7","_step8","_iterator8","errorSet","validations","getDefinitions","CONDITION_TYPE","VALIDATION","CONDITION_DEFINITION_INDEX","getRequiredDefinitionIds","_step9","output","_iterator9","errorMessage","DEFAULT_VALIDATION_MESSAGE","UiConditions","isError","msgPropertyId","alwaysShow","updateErrorMessage","_validateDefinitionsByType","VISIBLE","FILTEREDENUM","condType","_validateByType","definitions","evalState","_updateControlState","lastDefinition","currentDefinition","currentParameter","_isLastDefintiionForParameter","filtered","enumFilters","_getFilteredEnumItems","enumFilterApplied","filterApplied","_updateFilteredState","stateOn","visibleControl","_updateRefsState","_step10","newOnState","newOffState","notAllowedState","_iterator10","groupReferenceId","currentState","_getState","_updateStateIfParent","_updatePanelChildrenState","_updateGroupRefsControlState","refsList","refsType","_step11","refStates","_iterator11","referenceId","_step12","_iterator12","_updateStateIfPanel","_step13","_iterator13","panelPropertyId","_runRefsValidateDefinitions","_step14","_iterator14","_updatePanelChildrenObjectState","_step15","_iterator15","objectId","objectStates","dfnType","refsDefinitions","REFS","panelName","prevValue","previousValues","filterValues","valDefinitions","definitionId","injectedDefinition","default","REQUIRED_ERROR","format","defaultFormat","DEFAULT_DATE_FORMAT","DEFAULT_TIME_FORMAT","dtFormat","DATETIME_FORMAT_ERROR","INVALID_FIELD_ERROR","getMetadataFieldMatch","field2","origName","field_name","schema","link_ref","intersection_1","ValidationMessage","tableOnly","msgText","msgIcon","ReadonlyControl","updateValueFromFilterEnum","prevProps","controlOpts","skipValidateInput","newValue","_intersection","updatePropertyValue","controlIndex","stringifyFieldValue","getCustomControl","table","DATA_TYPE","date","Date","isValid","tableControl","FormattedDate","day","month","year","hour","minute","weekday","readOnly","TruncatedContentTooltip","tooltipText","controlItem","getControlState","getFilteredEnumItems","TextfieldControl","reactIntl","getMaxLengthForSingleLineControls","joined","textInput","TRUNCATE_LONG_STRING_ERROR","truncate_limit","TextInput","autoComplete","placeholder","onChange","handleChange","labelText","hideLabel","ToggletextControl","valuesMap","iconsMap","imgSource","Isvg","alt","rendered","buttonType","iconDescription","TOGGLETEXT_ICON_DESCRIPTION","toggletext_label","TextareaControl","getMaxLengthForMultiLineControls","textArea","showValidationMessage","TextArea","NumberfieldControl","onDirection","generateNumber","originalValue","decimalsInOriginalValue","decimalsInIncrement","numValue","decimalPrecision","toFixed","validity","badInput","isFinite","INVALID_NUMBER_ERROR","actualValue","generator","max","floor","random","Shuffle16","tooltipPosition","tooltipAlignment","hasIconOnly","NumberInput","numberInput","allowEmpty","hideSteppers","toNumber","INFINITY","toFinite","toInteger_1","remainder","baseFindIndex","baseIteratee","toInteger","nativeMax","findIndex_1","fromIndex","TableButtons","getCustomButtonEnabled","customButtonIconCallback","customButtonOnClick","convertToolbarConfig","tableState","buttonConfig","tableDisabled","buttonEnabled","customButtonsState","buttonIconHandler","appIcon","buttonHandler","toolbarConfig","enable","iconEnabled","incLabelWithIcon","leftBar","customButtons","Toolbar","config","instanceId","toolbarActionHandler","SubPanelCell","initialControlValue","subPanelToolTip","SUBPANEL_BUTTON_TOOLTIP","Settings16","AbstractTable","filterText","enableRemoveIcon","onPanelContainer","allowColumnControls","isReadonlyTable","indexOfColumn","setCurrentControlValueSelected","setReadOnlyColumnValue","removeSelected","updateRowSelections","handleRowClick","createTable","onFilter","onSort","setScrollToRow","includeInFilter","makeAddRemoveButtonPanel","makeEditButtonPanel","makeCustomButtonsPanel","buildChildItem","makeCells","checkedAll","isLightTheme","scrollToRow","selectSummaryPropertyName","saveControls","setSelectedSummaryRowValue","updatedControlValues","UPDATE_TYPE","INITIAL_LOAD","isSelectSummaryEdit","updateSelectedRowsValues","removePropertyValue","filterString","spec","column","SORT_DIRECTION","DESC","reverse","colValue","inSelectedRows","idx2","controlValues","columnDef","summaryPropertyId","getDefaultRow","selectedSummaryRowValue","ROW_SELECTION","MULTIPLE","READONLYTABLE","_findIndex","columnControl","SINGLE","metaKey","ctrlKey","splice","shiftKey","anchor","newSelns","newSelectedSummaryRow","cellValue","testCell","updateSelectedRows","sort","a","b","removeErrorMessageRow","propertyName","selectSummaryRow","childPropertyId","setChildPropertyId","cellContent","tableInfo","columnDefObj","cellClassName","getDatasetMetadataFields","stringValue","ON_PANEL","createControl","defaultContent","cellPropertyId","filterFields","hasFilter","addOnClickCallback","onFieldPickerCloseCallback","rowsSelectedLabel","MULTI_SELECTED_ROW_LABEL","rowsSelectedAction","MULTI_SELECTED_ROW_ACTION","headers","makeHeader","tableLabel","FlexibleTable","showHeader","scrollKey","summaryTable","emptyTablePlaceholder","tableButtonConfig","fieldPickerCloseFunction","removeOnClick","removeButtonFunction","removeButtonLabel","STRUCTURETABLE_REMOVEBUTTON_LABEL","removeDisabled","addButtonDisabled","addButtonFunction","addButtonLabel","STRUCTURETABLE_ADDBUTTON_LABEL","TrashCan16","addOnClick","editButton","editCallback","editOnClickCallback","editOnClick","Edit16","customTableButtons","checked","sortFields","rowToScrollTo","selectedEditRow","makeSelectedEditRow","topRightPanel","rowClickCallback","checkboxName","colState","columnLabel","Checkbox","checkedAllValue","TABLE_SUBPANEL_BUTTON_WIDTH","staticWidth","propName","_makeCell","cell","subItemButton","buildUIItem","subCell","prevState","EmptyTable","getEmptyTableText","overrideEmptyTableTextKey","defaultEmptyTableText","PROPERTIES_EMPTY_TABLE_TEXT","button_label","emptyTableButtonLabel","getResource","emptyTableText","emptyTableButtonClickHandler","MoveableTableRows","getTableRowMoveImages","topMoveRow","upMoveRow","downMoveRow","bottomMoveRow","getMoveableTableRows","getLeastValue","getMaxValue","moveCol","moveImages","tableContainer","getSelectedRows","topEnabled","bottomEnabled","getStaticRows","topLabel","MOVEABLE_TABLE_BUTTON_TOP_DESCRIPTION","upLabel","MOVEABLE_TABLE_BUTTON_UP_DESCRIPTION","topImages","UpToTop24","ArrowUp24","bottomLabel","MOVEABLE_TABLE_BUTTON_DOWN_DESCRIPTION","downLabel","MOVEABLE_TABLE_BUTTON_BOTTOM_DESCRIPTION","ArrowDown24","DownToBottom24","leastValue","maxValue","firstRow","selectedRow","shift","tmpRow","moveErrorMessageRows","lastRow","isEmptyTable","isDisableRowMoveButtons","getAddRemoveRows","getTableButtons","NUMBER_TYPES","ListControl","_AbstractTable","addRow","controlPropType","getControlPropType","newRow","currentValue","listHeader","tableHeaders","makeCell","onClickCallback","LIST_TABLE_LABEL","STRUCTURELISTEDITOR_ADDBUTTON_LABEL","STRUCTURELISTEDITOR_REMOVEBUTTON_LABEL","makeRows","propTypes","PropTypes","isRequired","element","string","bool","FIELDS_SPECIAL_CHARACTERS_REGEX","ExpressionSelectFieldOrFunction","valueColumn","EXPRESSION_VALUE_COLUMN","valueColumnDesc","EXPRESSION_VALUE_COLUMN_DESCRIPTION","recentUseCat","EXPRESSION_RECENTLY_USED","recentUseCatInfo","EXPRESSION_RECENTLY_USED_COLUMN","inCategories","_makeDatasetFields","getExpressionInfo","fieldSelected","valueSelected","functionSelected","fieldTableSortSpec","valuesTableSortSpec","functionTableSortSpec","functionCategory","selectedIndex","fieldCategory","currentFieldDataset","field_value_groups","onFunctionCatChange","onFieldCatChange","onFieldFilter","onValueFilter","onFunctionFilter","onFieldTableClick","onFieldTableDblClick","onFunctionTableClick","onFunctionTableDblClick","onValueTableClick","onValueTableDblClick","sortTableRows","shouldQuoteField","switchName","selectedItem","currentData","getExpressionFieldsRecentlyUsed","updateExpressionFieldsRecentlyUsed","quote","fieldFilterText","fieldValue","minValue","valueFilterText","getExpressionRecentlyUsed","updateExpressionRecentlyUsed","functionFilterText","tableColumns","sortedData","match","expressionTableCellContent","expressionTableCellContentWithTooltip","dataset","fieldDataset","catIndex","infoIndex","fieldColumn","EXPRESSION_FIELD_COLUMN","fieldColumnDesc","EXPRESSION_FIELD_COLUMN_DESCRIPTION","storageColumn","EXPRESSION_STORAGE_COLUMN","fieldsCatInfo","EXPRESSION_FIELDS_DROPDOWN_TITLE","fieldsTableInfo","entry","additional_column_entries","val","_makeFieldDropdown","fieldHeaders","valueHeader","categoryInfo","tableContents","tableData","valuesTableData","fieldColumns","createContentObject","_makeAdditionalColumnsContent","_makeValuesContent","selectedField","findIndex","selectedValue","fieldsTableLabel","EXPRESSION_FIELDS_TABLE_LABEL","valuesTableLabel","EXPRESSION_VALUES_TABLE_LABEL","emptyFieldsLabel","EXPRESSION_FIELDS_EMPTY_TABLE_LABEL","emptyValuesLabel","EXPRESSION_VALUES_EMPTY_TABLE_LABEL","EXPRESSION_TABLE_ROWS","onRowDoubleClick","setSortColumn","minLabel","EXPRESSION_MIN_LABEL","maxLabel","EXPRESSION_MAX_LABEL","_addValueRow","valueColumns","categories","selectCategory","_makeFunctionDropdown","functionsTable","_makeFunctionsTable","items","first","TABLE_SEARCH_HEADER","listBoxMenuIconTranslationIds","DROPDOWN_TOOLTIP_CLOSEMENU","DROPDOWN_TOOLTIP_OPENMENU","Dropdown","translateWithId","titleText","newItems","_this4","functionColumn","EXPRESSION_FUNCTION_COLUMN","returnColumn","EXPRESSION_RETURN_COLUMN","_buildFunctionTable","selectedFunction","functionsTableLabel","EXPRESSION_FUNCTIONS_TABLE_LABEL","functionsEmptyLabel","EXPRESSION_NO_FUNCTIONS","helpContainer","categoryFunctions","catFunction","returnType","return_type","fieldAndValueTable","_makeFieldAndValuesContent","_makeFunctionsContent","fieldsTab","EXPRESSION_FIELD_TAB","functionsTab","EXPRESSION_FUNCTIONS_TAB","ContentSwitcher","onSwitch","Switch","ExpressionSelectOperator","operatorList","operatorButtons","operator","second","onOperatorClick","operatorDiv","_makeOperatorContent","ExpressionSelectionPanel","fieldsOrFunction","ExpressionBuilder","editorDidMount","onBlur","onSelectionChange","lastCursorPos","cursor","editor","getCursor","selectionOffset","somethingSelected","replaceSelection","buffer","setCursor","charBefore","getLine","line","ch","_setSelection","exprValue","getValue","skipValidate","expressionSelectionPanel","contains","relatedTarget","firstParam","head","lineCount","paramOffset","insertSelection","expressionLabel","EXPRESSION_BUILDER_LABEL","ExpressionControl","builder","selectionRange","CodeMirror","injectIntl","ExpressionToggle","Maximize16","EXPRESSION_MAXIMIZE_LABEL","tearsheet_ref","setActiveTearsheet","Minimize16","EXPRESSION_MINIMIZE_LABEL","scriptHint","_keywords","getToken","context","cur","token","tprop","completionList","found","maybeAdd","str","lastIndexOf","arrayContains","gatherCompletions","_obj","pythonBuiltinsL","pythonKeywordsL","obj","base","getCompletions","Pos","to","pythonHint","getTokenAt","rBuiltInsL","rKeywordsL","rHint","CLEMKeywords","CLEMHint","keywords","innerMode","getMode","getAutoCompletions","indx","defineMode","isSpecialChar","isDigit","isNumberChar","isWordChar","isOperatorChar","tokenResolve","stream","startOfLine","skipToEnd","tokenize","tokenString","tokenVariable","eatWhile","current","startState","eatSpace","electricChars","cm","navigator","require","registerHelper","registerPython","registerR","defineMIME","registerClem","showExpressionBuilder","validationInProgress","origHint","handleValidate","hasValidate","cancelExpressionBuilder","hideExpressionBuilder","addonHints","getDatasetFields","handleBlur","handleKeyDown","newPos","removed","validateIcon","setSelection","focus","results","controlWidth","expressionEditorDiv","clientWidth","charPerLine","setSize","getHelper","initialMessage","initialState","updateControlState","validationHandler","response","input","blur","code","classList","messageType","INFO","SUCCESS","theme","_showBuilderButton","Calculator24","EXPRESSION_BUILDER_ICON_DESCRIPTION","validateLabel","EXPRESSION_VALIDATING_LABEL","EXPRESSION_VALIDATE_LABEL","validateLink","mirrorOptions","mode","extraKeys","autoRefresh","lineNumbers","expressonTitle","EXPRESSION_BUILDER_TITLE","expressionLink","toggleMaxMin","isTearsheetOpen","codeMirror","onKeyDown","PasswordControl","overrideShowPasswordLabel","overrideHidePasswordLabel","defaultShowPasswordLabel","SHOW_PASSWORD_TOOLTIP","defaultHidePasswordLabel","HIDE_PASSWORD_TOOLTIP","showPasswordLabel","hidePasswordLabel","PasswordInput","DatefieldControl","getDateFormat","parse","formattedValue","TimefieldControl","getTimeFormat","time","CheckboxControl","tooltipIcon","checkboxLabel","Boolean","ToggleControl","overrideLabelKeyOn","overrideLabelKeyOff","defaultOnEditLabel","TOGGLE_ON_LABEL","defaultOffEditLabel","TOGGLE_OFF_LABEL","labelOn","labelOff","toggleControl","Toggle","toggled","labelB","labelA","onToggle","CheckboxsetControl","checkboxes","Information16","RadiosetControl","setEnabledStateOfOptionalPanels","handleCheckedDisabled","isRadioButtonDisabled","targetValue","valueSet","parsePanelTree","ConditionsUtils","panelIds","updateType","oldVal","newVal","convertTargetValue","radioValue","valueStates","itemDisabled","newRadioSelection","optionalPanel","getOptionalPanel","RadioButton","horizontal","getControlValueStates","DropDown","emptyLabel","disableEmptyListDropdown","overrideEmptyListPlaceholder","defaultEmptyListPlaceholder","EMPTY_LIST_PLACEHOLDER","handleComboOnChange","handleOnInputChange","genSchemaSelectOptions","genSelectOptions","genFieldSelectOptions","selectedOption","option","schemaName","getSelectedOption","dropDown","SELECTSCHEMA","dropdownComponent","SelectItem","Select","inline","ComboBox","ariaLabel","onInputChange","getDatasetMetadataSchemas","MultiSelectControl","handleOnChange","setShouldRender","shouldRender","selectedValues","selectedOptions","selectedItems","multiSelectDropdown","DROPDOWN_TOOLTIP_CLEARALL","DROPDOWN_TOOLTIP_CLEARSELECTION","overrideEmptyLabelKey","defaultEmptyLabel","MULTISELECT_DROPDOWN_EMPTY_LABEL","overrideOptionsSelectedLabelKey","defaultOptionsSelectedLabel","MULTISELECT_DROPDOWN_OPTIONS_SELECTED_LABEL","FilterableMultiSelect","initialSelectedItems","MultiSelect","SomeofselectControl","updateSelections","tableOptions","selectable","SelectColumnsControl","allSelectedFields","FIELDPICKER_FIELDCOLUMN_LABEL","onFieldPickerClose","StructureEditorControl","controlFactory","subCtrlName","rowCtrlNames","_getSubControlDef","_getColumnIndex","_makeRow","_makeControlTable","baseEach","arrayFilter","baseFilter","collection","negate","args","reject_1","StructureTableControl","addColumns","removeColumns","indexOfRow","columnName","columnNames","newRows","_reject","dataColumnIndex","NEW_COLUMN","defaultRowIndex","defaultRowValue","newControlValues","getOnPanelContainer","StructurelisteditorControl","ReadonlyTableControl","overrideLabelKey","defaultEditLabel","READONLYTABLE_EDIT_BUTTON_LABEL","getHideEditButton","ControlItem","indicator","LABEL_INDICATOR_REQUIRED","LABEL_INDICATOR_OPTIONAL","accessibleControls","SPINNER","TOGGLETEXT","LIST","TOGGLE","CODE","MULTISELECT","tableControls","createdControl","complex_types","dataModelFields","columnExists","fieldValueMatchesProto","fieldColumnValues","_findFieldColumnValues","columnValue","allValid","valueInDataset","dataModelField","baseValues","baseIndexOf","isString","dataType","_includes","trimSpaces","regExp","timeDateFormat","valueLength","compareValue","getConditionOps","customOps","ops","cellNotEmpty","colNotExists","colDoesExists","equals","greaterThan","isEmpty","isNotEmpty","lessThan","matches","notContains","notEquals","notMatches","isDateTime","dmTypeEquals","dmTypeNotEquals","dmMeasurementEquals","dmMeasurementNotEquals","dmRoleEquals","dmRoleNotEquals","lengthEquals","lengthLessThan","lengthGreaterThan","custOp","PropertiesController","propertiesStore","handlers","propertyListener","controllerHandler","titleChangeHandler","visibleDefinitions","enabledDefinitions","filterDefinitions","filteredEnumDefinitions","allowChangeDefinitions","conditionalDefaultDefinitions","customControls","summaryPanelControls","controllerHandlerCalled","commandStack","CommandStack","custPropSumPanelValues","sharedCtrlInfo","isSummaryPanel","visibleSubPanelCounter","conditionOps","expressionRecentlyUsed","expressionFieldsRecentlyUsed","selectionListeners","getStore","inHandlers","convertTypes","formData","makeForm","setForm","_parseUiConditions","UiConditionsParser","_parseSummaryControls","conditionsUtil","_assign","_addToControlValues","setInitialAddRemoveRows","setInitialTableButtonState","filteredTearsheets","FILTER","ALLOWCHANGE","CONDITIONALDEFAULT","dfnIndex","conditionDefinitions","retCond","conditionKey","baseId","convertNestedPropertyId","childProperties","panelTreeRoot","parseUiContent","resolveParameterRefs","_populateFieldData","multiSchema","_isMultiSchemaControl","_indexOfField","k","_getDefaultSubControlValue","fieldName","controlsNames","controlNames","getTitle","custOps","getDatasetMetadata","schemas","schemaNames","_filterSharedDataset","defs","skipControlName","sharedCtrlList","propNames","fieldNames","skipName","usedFields","sharedProp","arrayValue","fieldIdx","usedFieldsList","inDatasetMetadata","_loop","dupNamedSchemas","filterSchema","multipleSchemas","_canHaveMultipleSchemas","_notifySelectionListener","setDisableRowMoveButtons","getDisableRowMoveButtons","some","el","listener","selections","enumSet","replacementItems","newControl","_loop2","initialValue","allowValidations","convertedValue","_convertObjectStructure","ACTIONS","UPDATE_PROPERTY","propertyValue","filteredValue","filterHiddenControls","controlState","getControlType","valueState","valueType","applyProperties","convert","returnValues","filteredValues","propKey","isInitProps","inValues","currentValues","convertedValues","conditionalDefaultValues","SET_PROPERTIES","updatePanelState","setActiveTearsheetId","getActiveTearsheetId","updateActionState","filterHiddenDisable","filterSuccess","filterDisplayError","_isUndefined","filteredPipeline","_filterDisplayErrors","_filterMessages","requiredMessages","_filterNonRequiredErrors","_filterHiddenDisabledErrors","filteredMessages","pipelineMessages","paramKey","paramMessage","_filterErrors","testMessage","parameterError","clearErrorMessage","_i","_Object$keys","rowNumber","_moveMessageRows","secondRow","firstRowErrorMsg","secondRowErrorMsg","_i2","_Object$keys2","colNumber","fromRow","toRow","valuesObj","valueObj","saveDisable","wideFlyoutPrimaryButtonDisable","setSummaryPanelControls","inSummary","createFormControl","customCtrl","renderControl","maxLengthForMultiLineControls","maxLengthForSingleLineControls","setAddRemoveRows","setHideEditButton","staticRowsArr","validateSelectionValues","updateStaticRows","clearStaticRows","_this5","setTableButtonEnabled","setInitialTableButtonSubControlState","_this6","valueIdx","getTableButtonEnabled","every","validateParameterDefAgainstSchema","parameterDef","validator","SchemaValidator","canvasPrefix","pipelinePrefix","addSchema","parameterDefsV3Schema","uihintsV3Schema","conditionsV3Schema","operatorsV3Schema","dataRecordMetadataV3Schema","getValidator","valResult","validate","nestedErrors","errors","console","validateAgainstSchema","TitleEditor","focused","titleValidation","editTitleClickHandler","helpClickHandler","textInputRef","createRef","TITLE_EDITOR_LABEL","textInputOnFocus","textInputOnBlur","headingEnabled","showHeading","handleTitleChange","newTitle","propertiesTitleEditButtonLabel","helpButtonLabel","TITLE_EDITOR_HELPBUTTON_LABEL","closeButtonLabel","PROPERTIESEDIT_CLOSEBUTTON_LABEL","titleValidationTypes","titleWithWarning","titleWithErrror","propertiesTitleEdit","helpButton","Help16","closeButton","closeHandler","Close16","onKeyPress","_handleKeyPress","onFocus","FLYOUT_WIDTH_SMALL","styles","flyoutWidthSmall","FLYOUT_WIDTH_MEDIUM","flyoutWidthMedium","FLYOUT_WIDTH_LARGE","flyoutWidthLarge","FLYOUT_WIDTH_MAX","flyoutWidthMax","PropertiesMain","propertiesController","setPropertiesConfig","propertiesInfo","initialEditorSize","setEditorSize","setCustomControls","setConditionOps","customConditionOps","setLight","setAppData","setHandlers","callbacks","previousErrorMessages","PROPERTIES_LOADED","getEditorSize","applyPropertiesEditing","updateEditorSize","_getOverrideSize","_getResizeButton","_isResizeButtonRequired","setPropertiesHasMounted","newProps","newEditorSize","schemaValidation","inputDataModel","originalTitle","initialValueInfo","uiParameterKeys","_getUiOnlyKeys","_setValueInforProperties","buttonLabels","primary","PROPERTIESEDIT_APPLYBUTTON_LABEL","secondary","PROPERTIESEDIT_REJECTBUTTON_LABEL","propertiesActionLabelHandler","PROPERTIES_ACTION_LABEL","node_label","defaultEditorSize","editorSizeInForm","overrideSize","resizeButton","LEFT","RIGHT","enableResize","valueInfo","conditionReturnValueHandling","CONDITION_RETURN_VALUE_HANDLING","NULL","_omit","_pick","uiOnlyKeys","cancelSource","closePropertiesDialog","closeProperties","newErrorMessages","applyPropertiesWithoutEdit","errorMessages","getPropertiesActionLabel","command","getCommandStack","APPLY","applyOnBlurEnabled","CANCEL","getApplyButtonLabel","getRejectButtonLabel","propertiesTitle","buttonsContainer","resizeBtn","hasHeading","resizeIcon","resizeBtnLabel","PROPERTIESEDIT_RESIZEBUTTON_EXPAND_LABEL","PROPERTIESEDIT_RESIZEBUTTON_CONTRACT_LABEL","resize","editorForm","onHide","overrideStyle","Provider","PROPERTIES_LABEL","forwardRef","CommonProperties","hasError","createPropertiesMainComponent","revertState","propertiesMainHasMounted","closeEditor","instance","closeAndRevertContainer","errorInfo","PROPERTIES_UNEXPECTED_MESSAGE","errorHeading","supportMessage","PROPERTIES_SUPPORT_MESSAGE","closeText","closeFunction","revertText","PROPERTIESEDIT_REVERTBUTTON_LABEL","revertFunction","propertiesLandmarkRoleLabel","PROPERTIES_REVERT_MESSAGE","PROPERTIES_CLOSE_MESSAGE","displayAppropriateUIFallback"],"mappings":"qoFAAA,IAAIA,GAAUC,EACVC,GAAUC,GACVC,GAAWC,MCFXC,GDaJ,SAAoBC,EAAQC,EAAOC,GAKjC,IAJA,IAAIC,GAAS,EACTC,EAASH,EAAMG,OACfC,EAAS,KAEJF,EAAQC,GAAQ,CACvB,IAAIE,EAAOL,EAAME,GACbI,EAAQd,GAAQO,EAAQM,GAExBJ,EAAUK,EAAOD,IACnBX,GAAQU,EAAQR,GAASS,EAAMN,GAASO,GAG5C,OAAOF,CACT,EC1BIG,GAAQZ,OCDRa,GAAcf,OCAdgB,GDgBJ,SAAiBC,GAEf,OADsB,MAATA,EAAgB,EAAIA,EAAMP,QACvBK,GAAYE,EAAO,GAAK,EAC1C,EClBIC,GAAWhB,GACXiB,GAAcf,OAalBgB,GAJA,SAAkBC,GAChB,OAAOF,GAAYD,GAASG,OAAMC,EAAWN,IAAUK,EAAO,GAChE,ECbIE,GHYJ,SAAkBjB,EAAQC,GACxB,OAAOF,GAAWC,EAAQC,GAAO,SAASM,EAAOD,GAC/C,OAAOE,GAAMR,EAAQM,KAEzB,EGQAY,GAvBetB,IAmBK,SAASI,EAAQC,GACnC,OAAiB,MAAVD,EAAiB,GAAKiB,GAASjB,EAAQC,EAChD,QCtBIR,GAAUC,EACVyB,GCQJ,SAAmBR,EAAOS,EAAOC,GAC/B,IAAIlB,GAAS,EACTC,EAASO,EAAMP,OAEfgB,EAAQ,IACVA,GAASA,EAAQhB,EAAS,EAAKA,EAASgB,IAE1CC,EAAMA,EAAMjB,EAASA,EAASiB,GACpB,IACRA,GAAOjB,GAETA,EAASgB,EAAQC,EAAM,EAAMA,EAAMD,IAAW,EAC9CA,KAAW,EAGX,IADA,IAAIf,EAASiB,MAAMlB,KACVD,EAAQC,GACfC,EAAOF,GAASQ,EAAMR,EAAQiB,GAEhC,OAAOf,CACT,MC5BIR,GAAWH,EACX6B,GAAO3B,GACP4B,GFSJ,SAAgBxB,EAAQM,GACtB,OAAOA,EAAKF,OAAS,EAAIJ,EAASP,GAAQO,EAAQmB,GAAUb,EAAM,GAAI,GACxE,EEVImB,GAAQC,OAgBZC,GANA,SAAmB3B,EAAQM,GAGzB,OAFAA,EAAOT,GAASS,EAAMN,GAEL,OADjBA,EAASwB,GAAOxB,EAAQM,YACQN,EAAOyB,GAAMF,GAAKjB,IACpD,ECjBIsB,GAAalC,GACbmC,GAAejC,EACfkC,GAAehC,GAMfiC,GAAYC,SAASC,UACrBC,GAAcC,OAAOF,UAGrBG,GAAeL,GAAUM,SAGzBC,GAAiBJ,GAAYI,eAG7BC,GAAmBH,GAAaI,KAAKL,YClBrCM,GDgDJ,SAAuBlC,GACrB,IAAKuB,GAAavB,IA5CJ,mBA4CcqB,GAAWrB,GACrC,OAAO,EAET,IAAImC,EAAQb,GAAatB,GACzB,GAAc,OAAVmC,EACF,OAAO,EAET,IAAIC,EAAOL,GAAeE,KAAKE,EAAO,gBAAkBA,EAAME,YAC9D,MAAsB,mBAARD,GAAsBA,aAAgBA,GAClDP,GAAaI,KAAKG,IAASJ,EAC/B,ME3DIM,GAAWnD,GACXoD,GAAYlD,EACZmD,GAAYjD,GACZD,GAAW6B,EACXsB,GAAaC,EACbC,GDMJ,SAAyB3C,GACvB,OAAOkC,GAAclC,QAASS,EAAYT,CAC5C,ECNI4C,GAAeC,EAiDnBC,GAlDeC,IA4BK,SAAStD,EAAQC,GACnC,IAAII,EAAS,GACb,GAAc,MAAVL,EACF,OAAOK,EAET,IAAIkD,GAAS,EACbtD,EAAQ4C,GAAS5C,GAAO,SAASK,GAG/B,OAFAA,EAAOT,GAASS,EAAMN,GACtBuD,IAAWA,EAASjD,EAAKF,OAAS,GAC3BE,KAET0C,GAAWhD,EAAQmD,GAAanD,GAASK,GACrCkD,IACFlD,EAASyC,GAAUzC,EAAQmD,EAAwDN,KAGrF,IADA,IAAI9C,EAASH,EAAMG,OACZA,KACL2C,GAAU1C,EAAQJ,EAAMG,IAE1B,OAAOC,CACT,4aChCyH,IAEpGoD,YAAeC,GAAAC,EAAAF,EAASG,GAAT,IAAAC,EAAAC,GAAAL,GAAA,SAAAA,IAAA,OAAAM,OAAAN,GAAAI,EAAAG,WAAAC,WAmClC,OAnCkCC,EAAAT,IAAAU,yBAAA5D,MAGnC,WACC,OAAQ6D,KAAKC,MAAMC,QACnB,KAAKC,EAAKC,MAAO,OAAOC,GACxB,KAAKF,EAAKG,MACV,KAAKH,EAAKI,IAAK,OAAOC,GACtB,KAAKL,EAAKM,OACV,QAAS,OAAOC,OAEhBX,aAAA5D,MAED,WACC,IAAMwE,EAAYX,KAAKY,qBAEvB,OACCC,EAAAC,cAACC,QACAF,EAAAC,cAACE,IACAC,UAAWC,GAAW,mBAAoB,CAAEC,WAAkD,IAArCnB,KAAKC,MAAMmB,uBAAmCpB,KAAKC,MAAMiB,YAClHG,QACAC,aAActB,KAAKC,MAAMsB,MACzBC,kBAAmBxB,KAAKC,MAAMwB,WAC9BC,oBAAqB1B,KAAKC,MAAM0B,YAChCC,gBAAiB5B,KAAKC,MAAM4B,UAC5BC,kBAAmB9B,KAAKC,MAAM8B,cAC9B,aAAW,GACXC,KAAMrB,GAENE,EAAAC,qBAAKG,UAAU,6BACbjB,KAAKC,MAAMgC,gBAKhB5C,CAAA,OC1CaA,2aCCyC,IAEnC6C,YAAgB5C,GAAAC,EAAA2C,EAAS1C,GAAT,IAAAC,EAAAC,GAAAwC,GAAA,SAAAA,IAAA,OAAAvC,OAAAuC,GAAAzC,EAAAG,WAAAC,WAsBnC,OAtBmCC,EAAAoC,IAAAnC,aAAA5D,MAEpC,WACC,IACMgG,EAAuB,uCADmB,IAAtBnC,KAAKC,MAAMC,OAA0B,QAAUF,KAAKC,MAAMC,QAE9EkC,EAAWvB,EAAAC,cAACuB,GACjBR,UAAW7B,KAAKC,MAAM4B,UACtBE,cAAe/B,KAAKC,MAAM8B,cAC1BN,WAAYzB,KAAKC,MAAMwB,WACvBE,YAAa3B,KAAKC,MAAM0B,YACxBP,sBAAuBpB,KAAKC,MAAMmB,wBAGnC,OACCP,EAAAC,qBAAKG,UAAWkB,GACftB,EAAAC,wBAAKd,KAAKC,MAAMsB,OAChBV,EAAAC,qBAAKG,UAAU,mBACbjB,KAAKC,MAAMgC,UAEZG,OAGHF,CAAA,OCzBaA,2aCMqD,IAE9DI,YAAShD,GAAAC,EAAA+C,EAAS9C,GAAT,IAAAC,EAAAC,GAAA4C,GAAA,SAAAA,IAAA,OAAA3C,OAAA2C,GAAA7C,EAAAG,WAAAC,WA6Cb,OA7CaC,EAAAwC,IAAAvC,aAAA5D,MACd,WACC,IAAMoF,EAAQvB,KAAKC,MAAMsC,UAAYvC,KAAKC,MAAMsC,UAAUhB,MAAQ,KAC5DiB,EAAcxC,KAAKC,MAAMsC,UAAYvC,KAAKC,MAAMsC,UAAUC,YAAc,KACxEC,EAAUzC,KAAKC,MAAMsC,UAAYvC,KAAKC,MAAMsC,UAAUE,QAAU,KAChEC,EAAuB1C,KAAKC,MAAMmB,wBAA0BpB,KAAKC,MAAM0C,YACvEC,GAAe1F,MAAM2F,QAAQJ,GAE7BL,EAAUpC,KAAKC,MAAM0C,YACxB,KACC9B,EAAAC,cAACuB,GACHR,UAAW7B,KAAKC,MAAM4B,UACtBE,cAAe/B,KAAKC,MAAM8B,cAC1BN,WAAYzB,KAAKC,MAAMwB,WACvBE,YAAa3B,KAAKC,MAAM0B,YACxBP,sBAAuBpB,KAAKC,MAAMmB,wBAGpC,OACCP,EAAAC,cAACC,QACAF,EAAAC,cAACgC,IACA7B,UAAWC,GAAW,6BAA8B,CAAE,+BAAgClB,KAAKC,MAAM8C,UACjG1B,KAAMrB,KAAKC,MAAMoB,KACjBW,KAAK,KACLgB,+BAEAnC,EAAAC,cAACmC,IACAhC,UAAWC,GAAW,8BACrB,CAAE,eAAgBwB,GAClB,CAAE,YAAaE,GACf,CAAE,oBAA2D,mBAA/B5C,KAAKC,MAAMiD,kBAC1C3B,MAAOA,EACP4B,cAAenD,KAAKC,MAAMiD,iBAEzBV,EAAe3B,EAAAC,uBAAI0B,GAAoB,MAEzC3B,EAAAC,cAACsC,IAAUnC,UAAWC,GAAW,4BAChC,CAAE,eAAgBwB,GAClB,CAAE,YAAaE,KAEdH,GAEDL,QAGJE,CAAA,IAsBFA,GAAUe,aAAe,CACxBhC,MAAM,EACND,uBAAuB,EACvBuB,aAAa,EACbI,SAAS,GAGV,OAAeT,2aChFuC,IAGhDgB,YAA2BhE,GAAAC,EAAA+D,EAAS9D,GAAT,IAAAC,EAAAC,GAAA4D,GAAA,SAAAA,IAAA,OAAA3D,OAAA2D,GAAA7D,EAAAG,WAAAC,WAuB/B,OAvB+BC,EAAAwD,IAAAvD,8BAAA5D,MAEhC,WACC,QAAI6D,KAAKC,MAAMsD,qBACVvD,KAAKC,MAAMuD,6BAEkD,IAAzDzF,OAAO0F,KAAKzD,KAAKC,MAAMyD,uBAAuB1H,WAKvD+D,aAAA5D,MAED,WACC,IAAMoH,EAAoBvD,KAAK2D,0BAC/B,OAAQ9C,EAAAC,cAACuB,GACRR,UAAW7B,KAAKC,MAAM4B,UACtBE,cAAe/B,KAAKC,MAAM8B,cAC1BN,WAAYzB,KAAKC,MAAMwB,WACvBE,YAAa3B,KAAKC,MAAM0B,YACxBP,sBAAuBpB,KAAKC,MAAMmB,sBAClCwC,mBAAoBL,QAErBD,CAAA,IAeFA,GAA4BD,aAAe,CAC1CE,mBAAmB,GAGpB,OAKeM,IALS,SAACC,EAAOC,GAAQ,MAAM,CAC7CR,mBAAoBQ,EAASC,WAAWC,uBACxCP,sBAAuBK,EAASC,WAAWE,2BAC3C,GAEuC,KAAzBL,CAA+BP,ICjDjCa,GAAsB,sBACtBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAuB,uBACvBC,GAAmB,mBACnBC,GAAqB,qBACrBC,GAAoB,oBACpBC,GAAsB,sBACtBC,GAAqB,qBACrBC,GAAuB,uBACvBC,GAAsB,sBACtBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAsB,sBACtBC,GAAY,YACZC,GAAiB,iBACjBC,GAA2B,2BAC3BC,GAA0B,0BAC1BC,GAA0C,0CAC1CC,GAAsB,sBACtBC,GAAqB,qBACrBC,GAAoB,oBACpBC,GAA2B,2BAC3BC,GAAuB,uBACvBC,GAAuB,uBAwE7B,SAASC,GAAStE,GACxB,MAAO,CAAEuE,KAAMZ,GAAW3D,MAAAA,EAC3B,CAEO,SAASwE,GAAaC,GAC5B,MAAO,CAAEF,KAAMX,GAAgBa,UAAAA,EAChC,yaCzGsC,IAEhCC,YAAaC,GAAA3G,EAAA0G,EAAAC,GAAA,IAAAzG,EAAAC,GAAAuG,GAAA,SAAAA,IAAA,OAAAtG,OAAAsG,GAAAxG,EAAAG,WAAAC,WAQjB,OARiBC,EAAAmG,IAAAlG,aAAA5D,MAElB,WACC,IAAIgK,EAAQnG,KAAKC,MAAMkG,MAIvB,YAHqB,IAAVA,IACVA,EAAQtF,EAAAC,qBAAKG,UAAU,8BAEhBkF,MACRF,CAAA,EAR0BpF,EAAMrB,cAsBnBqE,IAJS,SAACC,EAAOC,GAAQ,MAAM,CAC7CoC,MAAOpC,EAASqC,OAAOrC,EAASC,WAAWqC,iBAAiB,CAAEC,KAAMvC,EAASwC,aAC7E,GAEuC,KAAzB1C,CAA+BoC,4aCrBR,IAEjBO,YAAUlH,GAAAC,EAAAiH,EAAShH,GAAT,IAAAC,EAAAC,GAAA8G,GAC9B,SAAAA,EAAYvG,GAAO,IAAAwG,EAOuC,OAPvC9G,OAAA6G,IAClBC,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,CACZ4C,MAAO,CACNC,OAAQ,IAGVF,EAAKG,iBAAmBH,EAAKG,iBAAiBC,KAAIC,EAAAL,IAAOA,EAqEzD,OApEA3G,EAAA0G,IAAAzG,wBAAA5D,MAED,WACC6D,KAAK4G,mBACLG,OAAOC,iBAAiB,SAAUhH,KAAK4G,qBACvC7G,2BAAA5D,MAED,WACC4K,OAAOE,oBAAoB,SAAUjH,KAAK4G,qBAC1C7G,uBAAA5D,MAED,WACC,GAAI6D,KAAKkH,aAEHlH,KAAKmH,yBACTnH,KAAKmH,uBAAyBnH,KAAKoH,oBAAoBpH,KAAKkH,aAEzDlH,KAAKmH,wBAAwB,CAChC,IAAME,EAAmBC,GAASC,YAAYvH,KAAKmH,wBAAwBK,wBAC3ExH,KAAKyH,SAAS,CACbf,MAAO,CACNC,OAAQU,EAAiBV,OAAS,KAClCe,IAAKL,EAAiBK,IAAM,YAKhC3H,0BAAA5D,MACD,SAAoBwL,GACnB,OAAIA,GAAQA,EAAKC,YAAcD,EAAKC,WAAW3G,WAAa0G,EAAKC,WAAW3G,UAAU4G,SAAS,2BACvFF,EAAKC,WACFD,GAAQA,EAAKC,WAChB5H,KAAKoH,oBAAoBO,EAAKC,YAE/B,QACP7H,aAAA5D,MAED,WAAS,IAEJoF,EACAa,EACAH,EAJI6F,OACFC,EAAWlH,EAAAC,qBAAKG,UAAWC,GAAW,wBAAyB,CAAE8G,KAAQhI,KAAKC,MAAM+H,SAkB1F,OAdIhI,KAAKC,MAAM+H,OACVhI,KAAKC,MAAMsB,QACdA,EAASV,EAAAC,qBAAKG,UAAU,uBAAuBjB,KAAKC,MAAMsB,QAE3Da,EAAWvB,EAAAC,cAACuB,GACXR,UAAW7B,KAAKC,MAAM4B,UACtBE,cAAe/B,KAAKC,MAAM8B,cAC1BX,sBAAuBpB,KAAKC,MAAMmB,sBAClCK,WAAYzB,KAAKC,MAAMwB,WACvBE,YAAa3B,KAAKC,MAAM0B,YACxBiC,mBAAoB5D,KAAKC,MAAMgI,kBAEhChG,EAAYpB,EAAAC,qBAAKG,UAAU,0BAAyB,IAAEjB,KAAKC,MAAMgC,SAAS,MAG1EpB,EAAAC,qBAAKG,UAAU,sBAAsBiH,IAAM,SAACA,GAAG,OAAMJ,EAAKZ,WAAagB,IACtErH,EAAAC,cAACC,IAAO4G,KAAM3H,KAAKmH,wBAChBY,EACFlH,EAAAC,qBAAKG,UAAWC,GAAW,wBAAyB,CAAE8G,KAAQhI,KAAKC,MAAM+H,KAAM,6BAA8BhI,KAAKC,MAAMkI,QAAUzB,MAAO1G,KAAK8D,MAAM4C,OAClJnF,EACAU,EACAG,SAKLoE,CAAA,IAgBFA,GAAWnD,aAAe,CACzB2E,MAAM,EACNC,iBAAiB,GCrGlB,OAAezB,GCOf,SAAS4B,GAAaC,EAAYC,GACjC,IAAMC,EAAOD,GAAUE,KACvB,SAAAC,OAAUC,GAAUL,QAAWI,OAAIF,EACpC,CAEA,SAASG,GAAUL,GAClB,IAAIC,EAAKD,EAAW/B,KASpB,YAR8B,IAAnB+B,EAAWM,KACrBL,GAAM,IAAMD,EAAWM,SACO,IAAnBN,EAAWO,MACrBN,GAAM,IAAMD,EAAWO,WAEY,IAAnBP,EAAWO,MAC5BN,GAAM,IAAMD,EAAWO,KAEjB,cAAgBN,CACxB,CAEA,SAASO,GAAaC,EAASC,GAC9B,IAAIC,EAAQD,EAIZ,OAHID,EAAQG,YACXD,EAAQF,EAAQG,WAEVD,CACR,CAEA,SAASE,GAAcC,EAAMC,GAC5B,GAAID,EAAKnN,OAAS,EAAG,CACpB,IAAMqN,EAAQF,EAAKE,MAAMD,GACzB,OAAIlM,MAAM2F,QAAQwG,GACVA,EAED,CAACA,GAET,MAAO,EACR,CAKA,SAASC,GAAaC,EAAMC,GAC3B,IAAIC,GAAY,EAChB,GAAIvM,MAAM2F,QAAQ0G,GAAO,CACxB,GAAoB,IAAhBA,EAAKvN,OACR,MAAO,CAAEG,MAAO,GAAIsN,UAAAA,GAGrB,IAAIC,EAAoB,GASxB,OARAH,EAAKI,SAAQ,SAACxN,EAAOJ,GACpB,IAAM6N,EAAiBC,GAAqB1N,GACtC2N,EAAO/N,IAAUwN,EAAKvN,OAAS,EAAI,GAAKwN,EAC9CE,GAAqBE,EAAiBE,EACjCL,IACJA,EAAYG,EAAe5N,SAAWG,EAAMH,WAGvC,CACNG,MAAOuN,EACPD,UAAAA,GAGF,MAAO,CAAEtN,MAAOoN,EAAME,UAAAA,EACvB,CAGA,SAASI,GAAqB1N,GAC7B,OAAIA,EAAMH,OAAS+N,GACX5N,EAAM6N,UAAU,EAAGD,IAAkB,MAEtC5N,CACR,CAEA,SAAS8N,GAAmBC,EAAaC,GACxC,IAAMC,EAAkB,GAExB,OAAKF,GAAeC,IAGK,UAArBD,EAAYpE,MACfsE,EAAgBC,SAAU,EAC1BD,EAAgBE,YAAcJ,EAAYf,MACX,YAArBe,EAAYpE,OACtBsE,EAAgBG,MAAO,EACvBH,EAAgBI,SAAWN,EAAYf,OAPhCiB,CAUT,i8CC5EqD,IAE/CK,YAAYvE,GAAA3G,EAAAkL,EAAAvE,GAAA,IAAAzG,EAAAC,GAAA+K,GACjB,SAAAA,EAAYxK,GAAO,IAAAwG,EAQyC,OARzC9G,OAAA8K,IAClBhE,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,CACZ4G,gBAAgB,GAEjBjE,EAAKkE,kBAAoBlE,EAAKkE,kBAAkB9D,KAAIC,EAAAL,IACpDA,EAAKmE,eAAiBnE,EAAKmE,eAAe/D,KAAIC,EAAAL,IAC9CA,EAAKoE,iBAAmBpE,EAAKoE,iBAAiBhE,KAAIC,EAAAL,IAClDA,EAAKqE,kBAAoBrE,EAAKqE,kBAAkBjE,KAAIC,EAAAL,IAAOA,EAqR3D,OApRA3G,EAAA2K,IAAA1K,mBAAA5D,MACD,SAAa4O,GACZ/K,KAAKyH,SAAS,CAAEuD,SAAU,CAAEC,EAAGF,EAAIG,QAASC,EAAGJ,EAAIK,cACnDrL,qBAAA5D,MAED,WACC6D,KAAKC,MAAM+D,WAAWqH,0BAAyB,GAC/CrL,KAAKyH,SAAS,CAAEiD,gBAAgB,IAEhC1K,KAAKC,MAAM+D,WAAWsH,uBACtBvL,uBAAA5D,MACD,WAEC6D,KAAKC,MAAM+D,WAAWuH,kBAAkBvL,KAAKwL,sBAC7CxL,KAAKC,MAAM+D,WAAWyH,iBAAiBzL,KAAK0L,iBAC5C1L,KAAKC,MAAM+D,WAAW2H,iBAAiB3L,KAAK4L,eAC5C5L,KAAK4K,oBACL7K,wBAAA5D,MAED,WACK6D,KAAKC,MAAMgC,WACdjC,KAAKC,MAAM+D,WAAWqH,0BAAyB,GAC/CrL,KAAKyH,SAAS,CAAEiD,gBAAgB,KAGjC1K,KAAKwL,qBAAuBxL,KAAKC,MAAM+D,WAAW6H,oBAClD7L,KAAK0L,gBAAkB1L,KAAKC,MAAM+D,WAAW8H,sBAC7C9L,KAAK4L,cAAgB5L,KAAKC,MAAM+D,WAAW+H,sBAG5ChM,wBAAA5D,MAGA,WACC,IAAM6P,EAAgB,GAChBC,EAAkBjM,KAAKC,MAAM+D,WAAWkI,wBAAwBlM,KAAKC,MAAMkG,MAAMmC,IAEvF,IAAKpL,MAAM2F,QAAQoJ,GAClB,OAAOD,EACP,IACwCG,EADxCC,EAAAC,GACyBJ,GAAe,IAAzC,IAAAG,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA2C,CAAA,IAAhCC,EAAWN,EAAAhQ,MACfkM,EAAa,CAAE/B,KAAMmG,GACrBC,EAAiB1M,KAAKC,MAAM+D,WAAW2I,WAAWtE,GAEpDuE,EAAe5M,KAAKC,MAAM+D,WAAWqC,iBAAiBgC,EAAY,CAAEwE,sBAAsB,IAGxFC,EAAc9M,KAAKC,MAAM+D,WAAW+I,yBAAyB1E,GAC/D2E,GAAa,EACb,MAAOF,IACVF,EAAeE,EAAY3Q,MAC3BuQ,EAAeO,aAAeH,EAAYI,MAC1CF,GAAa,GAEd,IAAMG,EAAgB,GACtB,GAAIjQ,MAAM2F,QAAQ+J,GAAe,CAChC,IAAIQ,EAAiB,EACrB,GAAIV,EAAeW,YAClB,IAAK,IAAIC,EAAM,EAAGA,EAAMZ,EAAeW,YAAYrR,OAAQsR,IAAO,CACjE,IAAMC,EAAgB,CACrBjH,KAAM+B,EAAW/B,KACjBsC,IAAK0E,IAEFtN,KAAKC,MAAM+D,WAAWwJ,UAAUD,IAAkBP,IACrDI,SAGQV,EAAee,UACzBL,EAAiB,GAKlB,IAFA,IAAMM,EAA8B,IAAnBN,EAAuB,gBAAkBA,EAAiB,WAAa,OAE/EO,EAAS,EAAGA,EAASf,EAAa5Q,OAAQ2R,IAAU,CAC5D,IAAMC,EAAWhB,EAAae,GACxBE,EAAU,GAEhB,GAAI3Q,MAAM2F,QAAQ+K,GACjB,IAAK,IAAIE,EAAS,EAAGA,EAASF,EAAS5R,OAAQ8R,IAAU,CACxD,IAAMP,EAAgB,CACrBjH,KAAM+B,EAAW/B,KACjBsC,IAAKkF,GAEN,GAAI9N,KAAKC,MAAM+D,WAAWwJ,UAAUD,IAAkBP,EAAY,CAEjE,IAAMe,EAAe/N,KAAKgO,wBAAwBJ,EAASE,GAASP,GAC9DU,OAAuC,IAAjBF,EAA+B,GACxDG,KAAKC,UAAUJ,GAAcK,QAAQ,IAAM,IAC3CA,QAAQ,IAAIC,OAAO,IAAM,KAAM,IAAM,IACxCR,EAAQS,KACPzN,EAAAC,oBAAIf,IAAK,sBAAwB+N,EAChC7M,UAAW,+BACXyF,MAAO,CAAE6H,MAAOb,GAChBc,YAAaxO,KAAKyO,aAAa5H,KAAK7G,OAEpCa,EAAAC,cAAC4N,IAAQpG,GAAIE,KAASmG,IAAKV,EAAcjD,SAAUhL,KAAK8D,MAAMkH,SAAU4D,2BACvE/N,EAAAC,sBAAMwH,GAAI,QAAUE,MAAUyF,YAK7B,GAAIjO,KAAKC,MAAM+D,WAAWwJ,UAAUnF,IAAe2E,EAAY,CACrE,IAAMe,EAAe/N,KAAKgO,wBAAwBJ,EAAUvF,GAC5DwF,EAAQS,KACPzN,EAAAC,oBAAIf,IAAK,0BAA4B4N,EAAQ1M,UAAW,gCACvDJ,EAAAC,cAAC4N,IAAQpG,GAAIE,KAASmG,IAAKZ,EAAc/C,SAAUhL,KAAK8D,MAAMkH,SAAU4D,2BACvE/N,EAAAC,sBAAMwH,GAAI,QAAUE,MAAUuF,MAI9BF,EAAQ7R,OAAS,GACpBmR,EAAcmB,KACbzN,EAAAC,oBAAIf,IAAK,qBAAuB4N,EAAQ1M,UAAW,0BACjD4M,UAIC,GAAIjB,IAEN5M,KAAKC,MAAM+D,WAAWwJ,UAAUnF,IAAe2E,GAAY,CAC9D,IAAMe,EAAe/N,KAAKgO,wBAAwBpB,EAAcvE,GAChE8E,EAAcmB,KACbzN,EAAAC,oBAAIf,IAAK,eAAiB0M,EAAaxL,UAAU,0BAChDJ,EAAAC,oBAAIf,IAAK,0BAA4B0M,EAAaxL,UAAW,gCAC1D8M,KAMP,GAAIZ,EAAcnR,OAAS,EAAG,CAE7B,IAAI6S,EAAehO,EAAAC,uBAAOgO,KAAK,eAAe/O,IAAK,iBAAmB0M,EAAaxL,UAAU,4BAC5FJ,EAAAC,uBAAOf,IAAK,gBAAkB0M,GAC5BU,IAGH,GAAIA,EAAcnR,OAAS,GAAI,CAC9B,IAAM+S,EAAkBC,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eACzEC,GAAaC,gCACdN,EAAehO,EAAAC,qBAAKG,UAAW,4BAA4BJ,EAAAC,0BAAOiO,IAEnE/C,EAAcsC,KACbzN,EAAAC,qBAAKf,IAAK,qBAAuB0M,EAAaxL,UAAW,6BACxDJ,EAAAC,sBAAMf,IAAK,gBAAkB0M,EAAaxL,UAAW,4BAA6ByL,EAAeO,cAChG4B,YAIJO,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,IACD,OAAOtD,KAGRjM,8BAAA5D,MAOA,SAAwB4R,EAAc1F,GACrC,IAAIkH,EAAcxB,EACZjF,EAAU9I,KAAKC,MAAM+D,WAAW2I,WAAWtE,GAGjD,GAAIS,EAAQ0G,QAAU1G,EAAQ2G,YAAa,CAC1C,IAAMC,EAAe5G,EAAQ0G,OAAOG,QAAQ5B,GACxC2B,GAAgB,GAAK5G,EAAQ2G,YAAYC,KAC5CH,EAAczG,EAAQ2G,YAAYC,IAYpC,MAT0C,WAAtCV,EAAqBO,KAEvBA,EADGzG,EAAQ8G,SAASC,WAAaC,EAAKC,WAAajH,EAAQgG,OAASkB,EAAUC,OAChEjB,EAAkCjB,EAAcjF,GAGhDoF,KAAKC,UAAUoB,IAIxBA,KACPxP,2BAAA5D,MAED,WAAuB,IAAA2L,OAChBoI,EAAWlQ,KAAKC,MAAM+D,WAAWkI,wBAAwBlM,KAAKC,MAAMkG,MAAMmC,IAC5E6H,EAAM,GACNC,EAAa,EACbC,EAAe,EAiBnB,GAhBInT,MAAM2F,QAAQqN,IACjBA,EAASvG,SAAQ,SAAC2G,GACjB,IAAMC,EAAazI,EAAK7H,MAAM+D,WAAWwM,gBAAgB,CAAElK,KAAMgK,IAAa,GACzEG,GAAQF,KACRA,EAAWzK,OAAS4K,GAAuBC,UAC9CN,GAAgB,GAEbE,EAAWzK,OAAS4K,GAAuBE,QAC9CR,GAAc,IAGXK,GAAQF,IAAiBE,GAAQN,IAAqB,UAAbA,EAAIrK,OACjDqK,EAAMI,OAIJE,GAAQN,GAAM,CAClB,IAAIU,EAAkB,GAatB,OAZIT,EAAa,GAAsB,IAAjBC,EACrBQ,EAAkB7B,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eACnEC,GAAa4B,sBAAuB,CAAEC,cAAeX,IAC5CA,EAAa,GAAKC,EAAe,EAC3CQ,EAAkB7B,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eACnEC,GAAa8B,8BACb,CAAED,cAAeX,EAAYa,gBAAiBZ,IACtB,IAAfD,GAAoBC,EAAe,IAC7CQ,EAAkB7B,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eACnEC,GAAagC,wBAAyB,CAAED,gBAAiBZ,KAI1DxP,EAAAC,cAAC4N,IACApG,GAAKE,KAAU,eACfmG,IAAKkC,EACL5P,UAAU,uBAETJ,EAAAC,cAACqQ,IAAKrL,KAAMqK,EAAIrK,KAAM7E,0CAASwH,OAAkC0H,EAAIrK,SAIzE,OAAO,QACP/F,aAAA5D,MAED,WACC,IAAMiV,EAAOpR,KAAKqR,uBACZC,EAAQzQ,EAAAC,qBAAKG,UAAU,qCAC5BJ,EAAAC,cAACyQ,IACAtQ,UAAU,iCACVuQ,QAASxR,KAAK2K,kBACd3I,KAAK,QACLyP,KAAK,QACLC,WAAYC,IAEX3R,KAAKC,MAAMkG,MAAM+G,OAElBkE,GAEI3P,EAAauN,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAa0C,mBAC5FjQ,EAAcqN,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAa2C,oBAC7FC,EAAS9R,KAAK8D,MAAM4G,eAAkB7J,EAAAC,cAAC0F,IAC5CzE,cAAe/B,KAAK6K,iBACpBhJ,UAAW7B,KAAK4K,eAChB5C,QACAvG,WAAYA,EACZE,YAAaA,EACbJ,MAAOvB,KAAKC,MAAMkG,MAAM+G,MACxB/E,MAAOnI,KAAKC,MAAM+D,WAAW+N,WAC7B9J,gBAAiBjI,KAAKC,MAAMgI,iBAE5BpH,EAAAC,yBACEd,KAAKC,MAAMgC,WAEGpB,EAAAC,0BACXkR,EAAiBhS,KAAKC,MAAMkG,MAAMlF,UAAYjB,KAAKC,MAAMkG,MAAMlF,UAAY,GAC3EA,EAAYC,GACjB,2BACA,2BACA,CAAE+Q,KAAQjS,KAAKC,MAAMiS,aAAeC,GAAOC,QAC3C,CAAE,kCAAmCpS,KAAKC,MAAMkG,MAAMkM,aACtDL,GAED,OACCnR,EAAAC,qBAAKG,UAAWA,EAAWqR,SAAUtS,KAAKC,MAAMiS,aAAeC,GAAOI,SAAU,UAASC,GAAuB,CAAElM,KAAMtG,KAAKC,MAAMkG,MAAMmC,MACvIwJ,EACAR,EACAtR,KAAK8K,yBAGRL,CAAA,EA9RyB5J,EAAMrB,cA8SlBqE,IALS,SAACC,EAAOC,GAAQ,MAAM,CAC7CmO,WAAYnO,EAASC,WAAWyO,cAAc,CAAEnM,KAAMvC,EAASoC,MAAMmC,KACrEL,iBAAkBlE,EAASC,WAAW0O,mCAAmC,CAAEpM,KAAMvC,EAASoC,MAAMmC,KAChG,GAEuC,KAAzBzE,CAA+B4G,4aC5TU,IAGlDkI,YAAWzM,GAAA3G,EAAAoT,EAAAzM,GAAA,IAAAzG,EAAAC,GAAAiT,GAAA,SAAAA,IAAA,OAAAhT,OAAAgT,GAAAlT,EAAAG,WAAAC,WAqBf,OArBeC,EAAA6S,IAAA5S,aAAA5D,MAEhB,WACC,IAAM8E,EAAYjB,KAAKC,MAAMkG,MAAMlF,UAAYjB,KAAKC,MAAMkG,MAAMlF,UAAY,GACtEqR,EAAWtS,KAAKC,MAAMiS,aAAeC,GAAOI,SAClD,OACC1R,EAAAC,qBACCG,UAAWC,GACV,0BACA,CAAE+Q,KAAQjS,KAAKC,MAAMiS,aAAeC,GAAOC,QAC3C,CAAE,kCAAmCpS,KAAKC,MAAMkG,MAAMkM,aACtDpR,GACE,UAASuR,GAAuB,CAAElM,KAAMtG,KAAKC,MAAMkG,MAAMmC,MAE5DzH,EAAAC,cAAC8R,IAAUN,SAAUA,GACpBzR,EAAAC,cAAC+R,IAAcP,SAAUA,EAAUjR,KAAMrB,KAAKC,MAAMkG,MAAM9E,KAAME,MAAOvB,KAAKC,MAAMkG,MAAM+G,OACtFlN,KAAKC,MAAMgC,gBAKhB0Q,CAAA,EArBwB9R,EAAMrB,cAmCjBqE,IAJS,SAACC,EAAOC,GAAQ,MAAM,CAC7CmO,WAAYnO,EAASC,WAAWyO,cAAc,CAAEnM,KAAMvC,EAASoC,MAAMmC,KACrE,GAEuC,KAAzBzE,CAA+B8O,4aCxCU,IAEnCG,YAAe5M,GAAA3G,EAAAuT,EAAA5M,GAAA,IAAAzG,EAAAC,GAAAoT,GACnC,SAAAA,EAAY7S,GAAO,IAAAwG,EASiC,OATjC9G,OAAAmT,IAClBrM,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,CACZqC,MAAO,KACP5E,MAAO,KACPwR,YAAa,KACbC,iBAAiB,GAElBvM,EAAKwM,cAAgBxM,EAAKwM,cAAcpM,KAAIC,EAAAL,IAC5CA,EAAKyM,cAAgBzM,EAAKyM,cAAcrM,KAAIC,EAAAL,IAAOA,EA4DnD,OA3DA3G,EAAAgT,IAAA/S,oBAAA5D,MAED,SAAcoF,EAAO4E,EAAO4M,GAC3B/S,KAAKC,MAAM+D,WAAWmP,iCACtBnT,KAAKyH,SAAS,CACbtB,MAAOA,EACP5E,MAAOA,EACPwR,YAAaA,EACbC,iBAAiB,OAElBjT,oBAAA5D,MAED,SAAciX,GACbpT,KAAKC,MAAM+D,WAAWqP,iCACtBrT,KAAK8D,MAAMiP,YAAYK,GACvBpT,KAAKyH,SAAS,CACbtB,MAAO,KACP5E,MAAO,KACPwR,YAAa,KACbC,iBAAiB,OAElBjT,aAAA5D,MAED,WACC,IAAImX,EAAmB,GACvB,GAAItT,KAAK8D,MAAMkP,kBAAoBhT,KAAKC,MAAMsT,YAAa,CAC1D,IAAMtS,EAAYjB,KAAKC,MAAM+D,WAAWwP,uBAAyB,yCAA2C,GAC5GF,EAAoBzS,EAAAC,cAACzB,IACpBkC,MAAOvB,KAAK8D,MAAMvC,MAClBM,UAAW7B,KAAKkT,cAAcrM,KAAK7G,MAAM,GACzC+B,cAAe/B,KAAKkT,cAAcrM,KAAK7G,MAAM,GAC7CyB,WAAYzB,KAAKC,MAAMwB,WACvBE,YAAa3B,KAAKC,MAAM0B,YACxBT,WAAYD,GAEXjB,KAAK8D,MAAMqC,YAEHnG,KAAKC,MAAMsT,aAAevT,KAAK8D,MAAMkP,kBAC/CM,EAAoBzS,EAAAC,cAAC0F,IACpBzE,cAAe/B,KAAKkT,cAAcrM,KAAK7G,MAAM,GAC7C6B,UAAW7B,KAAKkT,cAAcrM,KAAK7G,MAAM,GACzCgI,QACAvG,WAAYzB,KAAKC,MAAMwB,WACvBE,YAAa3B,KAAKC,MAAM0B,YACxBJ,MAAOvB,KAAK8D,MAAMvC,MAClB4G,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAE7BlR,EAAAC,yBACEd,KAAK8D,MAAMqC,SAKf,OACCtF,EAAAC,yBACEwS,EACAtT,KAAKC,MAAMgC,cAGd6Q,CAAA,EAtE2CjS,EAAMrB,mbAiFnDsT,GAAgBzP,aAAe,CAC9BkQ,aAAa,GChF8B,IAEvBE,YAAcvN,GAAA3G,EAAAkU,EAAAvN,GAAA,IAAAzG,EAAAC,GAAA+T,GAClC,SAAAA,EAAYxT,GAAO,IAAAwG,EAGuC,OAHvC9G,OAAA8T,IAClBhN,EAAAhH,EAAArB,UAAM6B,IACDyT,aAAejN,EAAKiN,aAAa7M,KAAIC,EAAAL,IAC1CA,EAAKkN,iBAAmBlN,EAAKkN,iBAAiB9M,KAAIC,EAAAL,IAAOA,EAmCzD,OAlCA3G,EAAA2T,IAAA1T,uBAAA5D,MAGD,SAAiBiX,GAChBQ,EAAOC,KAAK,oCAAsCT,MAClDrT,mBAAA5D,MAED,WACC6D,KAAK8T,gBAAgBb,cAAcjT,KAAKC,MAAMsB,MAAOvB,KAAKC,MAAMkG,MAAOnG,KAAK2T,qBAC5E5T,aAAA5D,MAED,WAAS,IAAA2L,OACFrG,EAAasS,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAa0C,mBAC9EjQ,EAAcoS,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAa2C,oBAE/EmC,EAAUnT,EAAAC,cAACyQ,IAChBtQ,UAAU,6BACV6E,KAAK,SACLmO,SACAxC,KAAK,YACLD,QAASxR,KAAK0T,cAEb1T,KAAKC,MAAMiN,OAAS,IAEtB,OACCrM,EAAAC,cAACgS,IAAgB5K,IAAM,SAACA,GAAG,OAAMJ,EAAKgM,gBAAkB5L,GACvDqL,YAAavT,KAAKC,MAAMsT,YACxB9R,WAAYA,EACZE,YAAaA,EACbqC,WAAYhE,KAAKC,MAAM+D,YAEtBgQ,OAGHP,CAAA,EAvC0C5S,EAAMrB,mbCLM,IAGlD0U,YAAWhO,GAAA3G,EAAA2U,EAAAhO,GAAA,IAAAzG,EAAAC,GAAAwU,GAChB,SAAAA,EAAYjU,GAAO,IAAAwG,EAAA9G,OAAAuU,GAClBzN,EAAAhH,EAAArB,UAAM6B,GACN,IAAIkU,EAAc,GAUhB,OATFlU,EAAMgC,SAAS0H,SAAQ,SAACyK,EAAM9G,GACjB,IAARA,EACH6G,EAAc,MAEdA,GAAe,UAGjB1N,EAAKC,MAAQ,CACZ2N,oBAAuBF,GACtB1N,EAoBF,OAnBA3G,EAAAoU,IAAAnU,aAAA5D,MAED,WACC,IAAM8E,EAAYjB,KAAKC,MAAMkG,MAAMlF,UAAYjB,KAAKC,MAAMkG,MAAMlF,UAAY,GAE5E,OACCJ,EAAAC,qBACCG,UAAWC,GACV,0BACA,CAAE+Q,KAAQjS,KAAKC,MAAMiS,aAAeC,GAAOC,QAC3C,CAAE,kCAAmCpS,KAAKC,MAAMkG,MAAMkM,aACtDpR,GAEDqR,SAAUtS,KAAKC,MAAMiS,aAAeC,GAAOI,SAAU,UAASC,GAAuB,CAAElM,KAAMtG,KAAKC,MAAMkG,MAAMmC,KAC9G5B,MAAO1G,KAAK0G,OAEX1G,KAAKC,MAAMgC,cAGdiS,CAAA,EAjCwBrT,EAAMrB,cA+CjBqE,IAJS,SAACC,EAAOC,GAAQ,MAAM,CAC7CmO,WAAYnO,EAASC,WAAWyO,cAAc,CAAEnM,KAAMvC,EAASoC,MAAMmC,KACrE,GAEuC,KAAzBzE,CAA+BqQ,4aClDU,IAGlDI,YAAYpO,GAAA3G,EAAA+U,EAAApO,GAAA,IAAAzG,EAAAC,GAAA4U,GAAA,SAAAA,IAAA,OAAA3U,OAAA2U,GAAA7U,EAAAG,WAAAC,WAqBhB,OArBgBC,EAAAwU,IAAAvU,aAAA5D,MAEjB,WACC,IAAM8E,EAAYjB,KAAKC,MAAMkG,MAAMlF,UAAYjB,KAAKC,MAAMkG,MAAMlF,UAAY,GAiB5E,OAhBqBjB,KAAKC,MAAMgC,SAASjG,OAAS,EAEhD6E,EAAAC,qBACCG,UAAWC,GACV,2BACA,CAAE+Q,KAAQjS,KAAKC,MAAMiS,aAAeC,GAAOC,QAC3C,CAAE,kCAAmCpS,KAAKC,MAAMkG,MAAMkM,aACtD,CAAE,sBAAuBrS,KAAKC,MAAM+D,WAAWwP,wBAC/CvS,GAEDqR,SAAUtS,KAAKC,MAAMiS,aAAeC,GAAOI,SAAU,UAASC,GAAuB,CAAElM,KAAMtG,KAAKC,MAAMkG,MAAMmC,MAE7GtI,KAAKC,MAAMgC,UAGZ,SAEHqS,CAAA,EArByBzT,EAAMrB,cAmClBqE,IAJS,SAACC,EAAOC,GAAQ,MAAM,CAC7CmO,WAAYnO,EAASC,WAAWyO,cAAc,CAAEnM,KAAMvC,EAASoC,MAAMmC,KACrE,GAEuC,KAAzBzE,CAA+ByQ,4aCtCU,IAElDC,YAAOrO,GAAA3G,EAAAgV,EAAArO,GAAA,IAAAzG,EAAAC,GAAA6U,GACZ,SAAAA,EAAYtU,GAAO,IAAAwG,EAIhB,OAJgB9G,OAAA4U,IAClB9N,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,CACZ0Q,YAAa,IACZ/N,EAyDF,OAxDA3G,EAAAyU,IAAAxU,cAAA5D,MAED,SAAQsY,GACPzU,KAAKyH,SAAS,CAAE+M,YAAaC,OAC7B1U,aAAA5D,MAED,WAKC,IAJA,IAAMuY,EAAU,GACZ1O,EAAY,EACZ2O,EAAS,EACP1T,EAAYjB,KAAKC,MAAMgB,UAAYjB,KAAKC,MAAMgB,UAAY,GACvD2T,EAAI,EAAGA,EAAI5U,KAAKC,MAAM4U,KAAK7Y,OAAQ4Y,IAAK,CAChD,IAAME,EAAM9U,KAAKC,MAAM4U,KAAKD,GAEtB1C,EAAalS,KAAKC,MAAM+D,WAAWyO,cAAc,CAAEnM,KAAMwO,EAAIC,QACnE,GAAI7C,IAAeC,GAAOC,OAAQ,CACjC,IAAM4C,EAAgBhV,KAAKC,MAAMgV,UAAUL,EAAGE,EAAIrS,SAC9CzC,KAAK8D,MAAM0Q,cAAgBM,EAAIC,OAAS7C,IAAeC,GAAOI,WACjEvM,EAAY2O,GAGbD,EAAQpG,KACPzN,EAAAC,cAACoU,IACAnV,IAAK,eAAiB6U,EACtBtC,SAAUJ,IAAeC,GAAOI,SAChCtR,UAAWC,GAAW,oBAAqB,CAAE,iCAAkClB,KAAKC,MAAMkV,UAC1FC,SAAUT,EACVzH,MAAO4H,EAAI3L,KACX5H,MAAOuT,EAAI3L,KACXqI,QAASxR,KAAKwR,QAAQ3K,KAAK7G,KAAM8U,EAAIC,OACrC,UAASrM,GAAU,CAAEpC,KAAMwO,EAAIC,SAE9BC,IAGHL,KAGF,OACC9T,EAAAC,qBACCG,UAAWC,GACV,+BACA,CAAEmU,UAAWrV,KAAKC,MAAMsT,aACxB,CAAE,kCAAmCvT,KAAKC,MAAMoS,aAChD,CAAE,+BAAgCrS,KAAKC,MAAMkV,SAC7ClU,IAGDJ,EAAAC,cAACwU,IAAKrU,UAAWC,GAAW,qBAAsB,CAAE,6BAA8BlB,KAAKC,MAAMkV,UAC5FI,SAAUvP,EACVmC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAE5B2C,QAIJH,CAAA,EA9DoB1T,EAAMrB,WA2E5B+U,GAAQlR,aAAe,CACtB8R,SAAS,GAGV,OAAeZ,2aC9E8B,IAEvCiB,YAASlW,GAAAC,EAAAiW,EAAShW,GAAT,IAAAC,EAAAC,GAAA8V,GAAA,SAAAA,IAAA,OAAA7V,OAAA6V,GAAA/V,EAAAG,WAAAC,WAgDb,OAhDaC,EAAA0V,IAAAzV,aAAA5D,MACd,WACC,IAIIqG,EAJEvB,EAAYjB,KAAKC,MAAMkG,MAAMlF,UAAYjB,KAAKC,MAAMkG,MAAMlF,UAAY,GACtEwU,EAASzV,KAAKC,MAAMiS,aAAeC,GAAOC,OAC1CE,EAAWtS,KAAKC,MAAMiS,aAAeC,GAAOI,SAC9CrF,EAAQlN,KAAKC,MAAMkG,MAAM+G,MAASrM,EAAAC,qBAAKG,UAAU,eAAejB,KAAKC,MAAMkG,MAAM+G,OAAgB,KAErG,GAAIlN,KAAKC,MAAMkG,MAAM3D,cAAgBiO,GAAQzQ,KAAKC,MAAMkG,MAAM3D,YAAY2G,MAAO,CAChF,IAAMuM,EAAyBC,EAAa3V,KAAKC,MAAMkG,MAAM3D,YAAY2G,KAAMnJ,KAAKC,MAAM+D,YAC1F,GAA+C,eAA3ChE,KAAKC,MAAMkG,MAAM3D,YAAYoT,UAA4B,CAExD5V,KAAKC,MAAMkG,MAAM3D,YAAY8O,OAChCtR,KAAKC,MAAMkG,MAAM3D,YAAY8O,KAAKjJ,WAAa,CAAE/B,KAAMtG,KAAKC,MAAMkG,MAAMmC,KAEzE,IAAMuN,EAAWhV,EAAAC,cAAC4N,IACjBpG,oBAAEG,OAAmBzI,KAAKC,MAAMkG,MAAMmC,IACtCqG,IAAK+G,EACLpE,KAAMtR,KAAKC,MAAMkG,MAAM3D,YAAY8O,KAAOtR,KAAKC,MAAMkG,MAAM3D,YAAY8O,KAAO,KAC9EwE,mBAAoB9V,KAAKC,MAAM+D,WAAW+R,cAAcD,mBACxDE,UAAU,SACVC,QAASR,GAAUnD,EACnB4D,uBAEArV,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAaC,YAAanV,UAAU,8CAEjDiM,EACCrM,EAAAC,qBAAKG,UAAWC,GAAW,+BACzBgM,EACA2I,QAIHrT,EAAc3B,EAAAC,qBAAKG,UAAU,qBAAqByU,GAGpD,OACC7U,EAAAC,qBACCG,UAAWC,GACV,wBACA,CAAE+Q,KAAQwD,GACV,CAAE,kCAAmCzV,KAAKC,MAAMkG,MAAMkM,aACtDpR,GAEDqR,SAAUA,GAETpF,EACA1K,OAEHgT,CAAA,OAca3R,IALS,SAACC,EAAOC,GAAQ,MAAM,CAC7CmO,WAAYnO,EAASC,WAAWyO,cAAc,CAAEnM,KAAMvC,EAASoC,MAAMmC,KACrE+N,eAAgBtS,EAASC,WAAW6H,oBACpC,GAEuC,KAAzBhI,CAA+B2R,4aChED,IAGvCc,YAAWhX,GAAAC,EAAA+W,EAAS9W,GAAT,IAAAC,EAAAC,GAAA4W,GAAA,SAAAA,IAAA,OAAA3W,OAAA2W,GAAA7W,EAAAG,WAAAC,WA+Cf,OA/CeC,EAAAwW,IAAAvW,aAAA5D,MAChB,WACC,IAGI+Q,EAHEjM,EAAYjB,KAAKC,MAAMkG,MAAMlF,UAAYjB,KAAKC,MAAMkG,MAAMlF,UAAY,GACtEwU,EAASzV,KAAKC,MAAMiS,aAAeC,GAAOC,OAC1CE,EAAWtS,KAAKC,MAAMiS,aAAeC,GAAOI,SAElD,GAAIvS,KAAKC,MAAMkG,MAAM+G,MAAO,CAC3B,IAAI2I,EACJ,GAAI7V,KAAKC,MAAMkG,MAAM3D,cAAgBiO,GAAQzQ,KAAKC,MAAMkG,MAAM3D,YAAY2G,MAAO,CAChF,IAAMuM,EAAyBC,EAAa3V,KAAKC,MAAMkG,MAAM3D,YAAY2G,KAAMnJ,KAAKC,MAAM+D,YAEtFhE,KAAKC,MAAMkG,MAAM3D,YAAY8O,OAChCtR,KAAKC,MAAMkG,MAAM3D,YAAY8O,KAAKjJ,WAAa,CAAE/B,KAAMtG,KAAKC,MAAMkG,MAAMmC,KAEzEuN,EAAWhV,EAAAC,cAAC4N,IACXpG,oBAAEG,OAAmBzI,KAAKC,MAAMkG,MAAMmC,IACtCqG,IAAK+G,EACLpE,KAAMtR,KAAKC,MAAMkG,MAAM3D,YAAY8O,KAAOtR,KAAKC,MAAMkG,MAAM3D,YAAY8O,KAAO,KAC9EwE,mBAAoB9V,KAAKC,MAAM+D,WAAW+R,cAAcD,mBACxDE,UAAU,SACVC,QAASR,GAAUnD,EACnB4D,uBAEArV,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAaC,YAAanV,UAAU,8CAGlDiM,EACCrM,EAAAC,qBAAKG,UAAWC,GAAW,+BAC1BL,EAAAC,uBAAOG,UAAU,4BAA4BjB,KAAKC,MAAMkG,MAAM+G,OAC7D2I,GAIJ,OACChV,EAAAC,qBACCG,UAAWC,GACV,0BACA,CAAE+Q,KAAQwD,GACV,CAAE,kCAAmCzV,KAAKC,MAAMkG,MAAMkM,aACtDpR,GAED,UAASuR,GAAuB,CAAElM,KAAMtG,KAAKC,MAAMkG,MAAMmC,KACzDgK,SAAUA,GAETpF,EACAlN,KAAKC,MAAMgC,cAEdqU,CAAA,OAiBazS,IAJS,SAACC,EAAOC,GAAQ,MAAM,CAC7CmO,WAAYnO,EAASC,WAAWyO,cAAc,CAAEnM,KAAMvC,EAASoC,MAAMmC,KACrE,GAEuC,KAAzBzE,CAA+ByS,4aCpEX,IAG7BC,YAAYrQ,GAAA3G,EAAAgX,EAAArQ,GAAA,IAAAzG,EAAAC,GAAA6W,GACjB,SAAAA,EAAYtW,GAAO,IAAAwG,EAKE,OALF9G,OAAA4W,IAClB9P,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,GAEb2C,EAAK+P,YAAc/P,EAAK+P,YAAY3P,KAAIC,EAAAL,IACxCA,EAAK8B,KAAOC,KAAQ/B,EAmFpB,OAlFA3G,EAAAyW,IAAAxW,0BAAA5D,MAED,WACC,IAAKsa,GAAIzW,KAAKC,MAAO,sBACpB,OAAOyW,GAAmBC,SAE3B,OAAQ3W,KAAKC,MAAM2W,OAAO5C,OAAOvC,MACjC,KAAKiF,GAAmBG,QAAS,OAAOH,GAAmBG,QAC3D,KAAKH,GAAmBI,UAAW,OAAOJ,GAAmBI,UAC7D,KAAKJ,GAAmBC,SAAU,OAAOD,GAAmBC,SAC5D,KAAKD,GAAmBK,MAAO,OAAOL,GAAmBK,MACzD,KAAKL,GAAmBM,OAAQ,OAAON,GAAmBM,OAC1D,KAAKN,GAAmBO,gBAAiB,OAAOP,GAAmBO,gBACnE,KAAKP,GAAmBQ,aAAc,OAAOR,GAAmBQ,aAChE,QAAS,OAAOR,GAAmBC,aAEnC5W,0BAAA5D,MAED,WACC,IAAKsa,GAAIzW,KAAKC,MAAO,sBACpB,OAAOkX,GAAmB/W,MAE3B,OAAQJ,KAAKC,MAAM2W,OAAO5C,OAAOhS,MACjC,KAAKmV,GAAmB/W,MAAO,OAAO+W,GAAmB/W,MACzD,KAAK+W,GAAmB1W,OAAQ,OAAO0W,GAAmBC,QAC1D,KAAKD,GAAmB7W,MAAO,OAAO6W,GAAmB7W,MACzD,KAAK6W,GAAmBE,YAAa,OAAOF,GAAmBE,YAC/D,QAAS,OAAOF,GAAmB/W,UAEnCL,kBAAA5D,MAED,WAEC,IAAMmb,EAAgBtX,KAAKC,MAAM+D,WAAW+R,cAAcuB,cAC7B,mBAAlBA,GACVA,EAActX,KAAKC,MAAM2W,OAAOtQ,KAC/BtG,KAAKC,MAAM+D,WAAWuT,aAAcvX,KAAKC,MAAM2W,OAAOY,SAExDzX,aAAA5D,MAED,WACC,IAAM8E,EAAYC,GAAW,2BAA4B,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,SACzFE,EAAWtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACvCkF,EAAmBzX,KAAK0X,sBACxBC,EAAmB3X,KAAK4X,sBACxB5D,EACLnT,EAAAC,cAACyQ,IACAzL,KAAK,SACL9D,KAAM2V,EACNlG,KAAMgG,EACNjG,QAASxR,KAAKwW,YACdlE,SAAUA,GAETtS,KAAKC,MAAM2W,OAAO1J,MAAM/D,MAIvB0O,EAAU7D,EACd,GAAIhU,KAAKC,MAAM2W,OAAOpU,YAAa,CAClC,IAAMsV,EAAY9X,KAAKuI,KAAO,mBAAqBvI,KAAKC,MAAM2W,OAAOtQ,KAC/DuP,EACLhV,EAAAC,qBAAKG,UAAU,uBACbjB,KAAKC,MAAM2W,OAAOpU,YAAY2G,MAIjC0O,EAAWhX,EAAAC,cAAC4N,IACXpG,GAAIwP,EACJnJ,IAAKkH,EACLG,UAAU,SACV/U,UAAU,sBACVgV,QAAS3D,GAER0B,GAIH,OACCnT,EAAAC,qBAAKG,UAAWA,EAAW,UAASjB,KAAKC,MAAM2W,OAAOtQ,MACpDuR,OAGHtB,CAAA,EAzFyB1V,EAAMrB,cAsGlBqE,IAJS,SAACC,EAAOC,GAAQ,MAAM,CAC7CD,MAAOC,EAASC,WAAW+T,eAAehU,EAASC,WAAWgU,kBAAkBjU,EAAS6S,OAAOtQ,OAChG,GAEuC,KAAzBzC,CAA+B0S,4aC1GX,IAE7B0B,YAAW/R,GAAA3G,EAAA0Y,EAAA/R,GAAA,IAAAzG,EAAAC,GAAAuY,GAChB,SAAAA,EAAYhY,GAAO,IAAAwG,EAKE,OALF9G,OAAAsY,IAClBxR,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,GAEb2C,EAAK+P,YAAc/P,EAAK+P,YAAY3P,KAAIC,EAAAL,IACxCA,EAAK8B,KAAOC,KAAQ/B,EAmEpB,OAlEA3G,EAAAmY,IAAAlY,kBAAA5D,MAED,WACC,GAAI6D,KAAKC,MAAM6D,QAAUqO,GAAOI,SAAU,CAEzC,IAAM+E,EAAgBtX,KAAKC,MAAM+D,WAAW+R,cAAcuB,cAC7B,mBAAlBA,GACVA,EAActX,KAAKC,MAAM2W,OAAOtQ,KAC/BtG,KAAKC,MAAM+D,WAAWuT,aAAcvX,KAAKC,MAAM2W,OAAOY,UAGzDzX,aAAA5D,MAED,WACC,IAAIwK,EAAS,GACT4H,EAAQ,GACRvO,KAAKC,MAAM2W,OAAOsB,MAAMlW,OAC3B2E,EAAS3G,KAAKC,MAAM2W,OAAOsB,MAAMlW,KAAK2E,OAAS,CAAEA,OAAU3G,KAAKC,MAAM2W,OAAOsB,MAAMlW,KAAK2E,QAAW,GACnG4H,EAAQvO,KAAKC,MAAM2W,OAAOsB,MAAMlW,KAAKuM,MAAQ,CAAEA,MAASvO,KAAKC,MAAM2W,OAAOsB,MAAMlW,KAAKuM,OAAU,IAGhG,IAAM+D,EAAWtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACvCtR,EAAYC,GAAW,0BAA2B,CAAEiX,KAA8C,SAAtCnY,KAAKC,MAAM2W,OAAOsB,MAAMtC,WACzF,CAAEwC,MAA+C,UAAtCpY,KAAKC,MAAM2W,OAAOsB,MAAMtC,WAAyB,CAAE3D,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QAClG,CAAEE,SAAYA,IAET4F,EACLrX,EAAAC,qBAAK,UAASd,KAAKC,MAAM2W,OAAOtQ,MAC/BzF,EAAAC,oBAAAuX,IACCC,IAAKtY,KAAKC,MAAM2W,OAAOsB,MAAMK,IAC7B/G,QAASxR,KAAKwW,aACV7P,EACA4H,KAKHsJ,EAAUK,EACd,GAAIlY,KAAKC,MAAM2W,OAAOpU,YAAa,CAClC,IAAMsV,EAAY9X,KAAKuI,KAAO,mBAAqBvI,KAAKC,MAAM2W,OAAOtQ,KAC/DuP,EACLhV,EAAAC,qBAAKG,UAAU,uBACbjB,KAAKC,MAAM2W,OAAOpU,YAAY2G,MAI3BqP,EAAmBxY,KAAKC,MAAM2W,OAAOsB,MAAMO,mBAD9B,CAAC,OAAQ,QAAS,MAAO,UACqC5Q,SAAS7H,KAAKC,MAAM2W,OAAOsB,MAAMO,kBAAkBC,eACjI1Y,KAAKC,MAAM2W,OAAOsB,MAAMO,kBAAkBC,cAC1C,SAEHb,EAAWhX,EAAAC,cAAC4N,IACXpG,GAAIwP,EACJnJ,IAAKkH,EACLG,UAAWwC,EACXvX,UAAU,sBACVgV,QAAS3D,GAER4F,GAIH,OACCrX,EAAAC,qBAAKG,UAAWA,GACd4W,OAGHI,CAAA,EAzEwBpX,EAAMrB,cAsFjBqE,IAJS,SAACC,EAAOC,GAAQ,MAAM,CAC7CD,MAAOC,EAASC,WAAW+T,eAAehU,EAASC,WAAWgU,kBAAkBjU,EAAS6S,OAAOtQ,OAChG,GAEuC,KAAzBzC,CAA+BoU,ICxFzBU,cAEpB,SAAAA,EAAY3U,GAAYrE,OAAAgZ,GACvB3Y,KAAKgE,WAAaA,EAyBlB,OAxBAlE,EAAA6Y,IAAA5Y,qBAAA5D,MAGD,SAAe4D,EAAK6W,GACnB,GAAIA,EAAQ,CACX,GAA0B,WAAtBA,EAAOgC,WACV,OACC/X,EAAAC,cAACyV,IACAxW,IAAK,UAAYA,EACjB6W,OAAQA,EACR5S,WAAYhE,KAAKgE,aAGb,GAA0B,UAAtB4S,EAAOgC,WACjB,OACC/X,EAAAC,cAACmX,IACAlY,IAAK,UAAYA,EACjB6W,OAAQA,EACR5S,WAAYhE,KAAKgE,aAKrB,OAAO,SACP2U,CAAA,o8CCLF,IAAME,GAAkB,YAClBC,YAAU5S,GAAA3G,EAAAuZ,EAAA5S,GAAA,IAAAzG,EAAAC,GAAAoZ,GAEf,SAAAA,EAAY7Y,GAAO,IAAAwG,EA0BW,OA1BX9G,OAAAmZ,IAClBrS,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,CACZiV,iBAAiB,GAGlBtS,EAAKuS,SAAWvS,EAAKuS,SAASnS,KAAIC,EAAAL,IAClCA,EAAKwS,aAAexS,EAAKwS,aAAapS,KAAIC,EAAAL,IAC1CA,EAAKwO,UAAYxO,EAAKwO,UAAUpO,KAAIC,EAAAL,IACpCA,EAAKyS,oBAAsBzS,EAAKyS,oBAAoBrS,KAAIC,EAAAL,IAExDA,EAAK0S,iBAAmB1S,EAAK0S,iBAAiBtS,KAAIC,EAAAL,IAClDA,EAAK2S,gBAAkB3S,EAAK2S,gBAAgBvS,KAAIC,EAAAL,IAChDA,EAAK4S,2BAA6B5S,EAAK4S,2BAA2BxS,KAAIC,EAAAL,IAEtEA,EAAK6S,SAAW7S,EAAKyS,oBAAoBjZ,EAAMqZ,UAG/C7S,EAAK8S,eAAiBtZ,EAAM+D,WAAWwV,oBACvC/S,EAAK8S,eAAeE,aAAahT,EAAK2S,gBAAiB3S,EAAKwO,WAC5DxO,EAAK8S,eAAeG,eAAezZ,EAAMsT,aAEzC9M,EAAKkT,cAAgB,IAAIhB,GAAclS,EAAKxG,MAAM+D,YAElDyC,EAAKmT,mBAAqB,KAC1BnT,EAAKoT,WAAa,GAClBpT,EAAKqT,iBAAmB,KAAKrT,EAskB7B,OApkBA3G,EAAAgZ,IAAA/Y,4BAAA5D,MAED,SAAsB4d,EAAWC,GAOhC,OANKha,KAAKC,MAAM+D,WAAWiW,yBAA4Bja,KAAKC,MAAM+D,WAAWkW,uBAI5Ela,KAAKsZ,SAAWtZ,KAAKkZ,oBAAoBa,EAAUT,YAE7C,KACPvZ,kCAAA5D,MAED,SAA4B2Y,GAAK,IAAAhN,OAChC,GAAIgN,EAAIC,QAAU8D,GACjB,MAAO,KAAO7Y,KAAKsZ,SAAStd,OAAS,IAEtC,IAAIC,EAAS,EAOb,OANA+D,KAAKsZ,SAAS3P,SAAQ,SAACwG,GACtB,IAAMgK,EAAOrS,EAAK7H,MAAM+D,WAAW2I,WAAW,CAAErG,KAAQ6J,EAAIiK,SACxDD,GAAQA,EAAKE,mBAAqBvF,EAAIC,OACzC9Y,OAGKA,EAAS,EAAI,KAAOA,EAAS,IAAM,QAC1C8D,0BAAA5D,MAED,SAAoBmd,GAEnB,OAAK7I,GAAQ6I,GAGN,GAFCgB,EAAOhB,EAAU,CAAC,YAG1BvZ,gBAAA5D,MAED,SAAU2Y,GACT,OAAOA,EAAIC,SACXhV,yBAAA5D,MAED,SAAmBoe,GAClB,IAAIvU,EAAYuU,EACZva,KAAKC,MAAM+F,YAAcuU,IAC5BvU,EAAY,IAEbhG,KAAKC,MAAM8F,aAAaC,MACxBjG,0BAAA5D,MAED,SAAoBmU,EAAWkK,GAC9B,IAAM1R,EAAU9I,KAAKC,MAAM+D,WAAW2I,WAAW2D,GACjDtQ,KAAKC,MAAM8F,aAAa+C,EAAQuR,qBAChCta,wBAAA5D,MAED,SAAkBsY,GACjBzU,KAAKC,MAAM8F,aAAa0O,MACxB1U,qBAAA5D,MAED,SAAe4D,EAAK8U,EAAMxM,EAAYoS,GAQrC,IAPA,IAAMC,EAAa,GACfC,GAAe,EACfC,EAAgB,EACdC,EAAmBhG,EAAKiG,QAAO,SAACC,GAAC,OAAKA,EAAEtY,QAAQuY,WAAaC,EAASC,aAEtEC,EADgBtG,EAAKiG,QAAO,SAACC,GAAC,OAAKA,EAAEtY,QAAQuY,WAAaC,EAASC,aACzCzS,OAAOoS,GAE9BjG,EAAI,EAAGA,EAAIuG,EAAUnf,OAAQ4Y,IAAK,CAC1C,IAAME,EAAMqG,EAAUvG,GAEtB,GADiB5U,KAAKC,MAAM+D,WAAWyO,cAAc,CAAEnM,KAAMwO,EAAIC,UAChD5C,GAAOC,OAAxB,CAGU,IAANwC,GAAWE,EAAIC,QAAU8D,KAC5B8B,GAAe,GAEhB,IAAMS,EAAapb,KAAKiV,UAAUjV,KAAKqb,mBAAmBV,EAAc/F,GAAIE,EAAIrS,QAAS4F,EAAYoS,GACjGa,EAAsB,KAM1B,GALItb,KAAKC,MAAMsb,uBACdD,EAAsBtb,KAAKC,MAAMsb,qBAAqBzG,EAAIC,QAIlC,IAArBoG,EAAUnf,QAA4C,IAA5B6e,EAAiB7e,OAC9C,OACC6E,EAAAC,qBAAKf,IAAK,OAASA,EAAKkB,UAAU,8BAChCma,EACAE,GAIJ,GAAItb,KAAKC,MAAMsT,YAAa,CAC3B,IAAIiI,EAAa3a,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAasF,cAAcC,KAAMza,UAAU,mCACpE0a,GAAe,EACf3b,KAAKC,MAAM+F,YAAc8O,EAAIC,QAChCyG,EAAa3a,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAasF,cAAcG,GAAI3a,UAAU,iCAClE0a,GAAe,GAEZ7G,EAAIrS,QAAQuY,WAAaC,EAASC,WAAyC,IAA5BL,EAAiB7e,OACnE0e,EAAWpM,KACVzN,EAAAC,qBAAKf,IAAK,OAASA,EAAKkB,UAAU,8BAChCma,EACAE,IAIHZ,EAAWpM,KACVzN,EAAAC,qBAAKf,IAAKC,KAAKqb,mBAAmBV,EAAc/F,GAAK,IAAM7U,EAC1DkB,UAAWC,GAAW,gCAAiC,CAAE,8BAA+B4T,EAAIrS,QAAQuY,WAAaC,EAASC,aAE1Hra,EAAAC,wBAAQgF,KAAK,SAAS0L,QAASxR,KAAK6b,mBAAmBhV,KAAK7G,KAAM8U,EAAIC,OACrE9T,UAAWC,GAAW,4BAA6B,CAAE,2BAA4BlB,KAAKC,MAAM+D,WAAW+N,cAEtG+C,EAAI3L,KAAMnJ,KAAK8b,4BAA4BhH,GAC3C0G,GAEF3a,EAAAC,qBAAKG,UAAWC,GAAW,8BAA+B,CAAE8G,KAAQ2T,KAClEP,EACAE,UAMDtb,KAAKC,MAAM+F,YAAc8O,EAAIC,QAChC6F,EAAgBhG,GAEjB8F,EAAWpM,KACVzN,EAAAC,cAACoU,IACAnV,IAAKC,KAAKqb,mBAAmBV,EAAc/F,GAAK,IAAM7U,EACtDqV,SAAUR,EACV1H,MAAO4H,EAAI3L,KACX5H,MAAOuT,EAAI3L,KACXlI,UAAWC,GAAW,CAAE,8BAA+B4T,EAAIrS,QAAQuY,WAAaC,EAASC,YACzF1J,QAASxR,KAAK+b,kBAAkBlV,KAAK7G,KAAM8U,EAAIC,QAE9CqG,EACAE,KAML,OAAItb,KAAKC,MAAMsT,YAEb1S,EAAAC,qBAAKf,IAAK,OAASA,EAAKkB,UAAU,yBAChCyZ,GAKH7Z,EAAAC,cAACwU,IAAKvV,IAAK,OAASA,EACnBkB,UAAU,yBACVsU,SAAUqF,EACVzS,MAAOnI,KAAKC,MAAM+D,WAAW+N,WAC7BiK,oBAAqB9a,GAAW,+BAAgC,CAAE,sBAAuBlB,KAAKC,MAAM+D,WAAWwP,0BAE9GkH,MAGH3a,yBAAA5D,MAED,SAAmBwe,EAAc5e,GAGhC,OAAI4e,GAA0B,IAAV5e,EACZ,SAEJ4e,EACI5e,EAAQ,EAETA,KACPgE,uBAAA5D,MAED,SAAiB4D,EAAK8U,EAAMtO,EAAW8B,EAAYoS,EAASF,EAAStZ,GACpE,IAAMgb,EAAYjc,KAAKkc,yBAAyBrH,EAAM9U,EAAKsI,EAAYoS,GAAS,EAAOxZ,GACvF,OACCJ,EAAAC,cAACmF,IACAlG,IAAK,gBAAkBA,EACvBqG,OAAQ6V,EACR1V,UAAWA,EACXvC,WAAYhE,KAAKC,MAAM+D,gBAGzBjE,+BAAA5D,MAED,SAAyB0Y,EAAM9U,EAAKsI,EAAYoS,EAAS0B,EAAQC,GAEhE,IADA,IAAMH,EAAY,GACTrH,EAAI,EAAGA,EAAIC,EAAK7Y,OAAQ4Y,IAAK,CACrC,IAAME,EAAMD,EAAKD,GACb3T,EAAY,2BACZ6T,EAAIrS,SAAoC,cAAzBqS,EAAIrS,QAAQuY,WAC9B/Z,EAAY,IAGTkb,IACHlb,GAAa,oCAEdgb,EAAUnH,EAAIC,OACblU,EAAAC,qBAAKG,UAAWC,GAAWD,EAAWmb,GAAiBrc,IAAK+U,EAAIC,MAAQhV,GACtEC,KAAKiV,UAAUL,EAAGE,EAAIrS,QAAS4F,EAAYoS,IAK/C,OAAOwB,KACPlc,mBAAA5D,MAED,SAAakgB,EAAShU,EAAYoS,GAEjC,IADA,IAAI6B,EAAY,GACP1H,EAAI,EAAGA,EAAIyH,EAAQrgB,OAAQ4Y,IACnC0H,EAAUhO,KAAKtO,KAAKiV,UAAUL,EAAGyH,EAAQzH,GAAIvM,EAAYoS,IAE1D,OAAO6B,KAGRvc,gBAAA5D,MAGA,SAAU4D,EAAKwc,EAAQC,EAAc/B,GACpC,IAAIgC,EAAY,GACZrL,EAAO,KACPjI,EAAO,GACX,OAAQoT,EAAOvB,UACf,IAAM,UAIDuB,EAAOG,iBAAmBH,EAAOG,gBAAgB1gB,OAAS,IAC7DugB,EAAOzT,QAAQ4T,gBAAkBH,EAAOG,gBACxCH,EAAOzT,QAAQ6T,eACd3c,KAAKkc,yBAAyBK,EAAOG,gBAAiB3c,EAAK,KAAM0a,GAAS,IAG5E,IAAMpS,EAAa,CAAE/B,KAAMiW,EAAOzT,QAAQxC,MAG1C,GAAIkW,EAAc,CACjB,IAAMI,EAAmBC,EAAUL,GAGnC,OADAxc,KAAKC,MAAM+D,WAAW8Y,0BAA0BF,EAAkB,CAAEhU,IAAK6R,EAAQ8B,EAAOzT,QAAQxC,QACzFtG,KAAKuZ,eAAewD,kBAAkBR,EAAOzT,QAAS8T,GAG9D,OAAO5c,KAAKuZ,eAAewD,kBAAkBR,EAAOzT,QAAST,GAE9D,IAAM,iBACL,IAAI2U,EAAWhd,KAAKgZ,SAASjZ,EAAKwc,EAAOpW,MAAOqW,EAAc/B,GAC9D,OAAQ5Z,EAAAC,cAAC2S,IAAe1T,IAAK,oBAAsBA,EAClDmN,MAAOqP,EAAOpT,KACd5H,MAAOgb,EAAOU,cACd9W,MAAO6W,EACPhZ,WAAYhE,KAAKC,MAAM+D,WACvBuP,YAAavT,KAAKC,MAAMsT,cAE1B,IAAM,aAIL,OAHAkJ,EAAYvb,GAAW,yBAA0Bqb,EAAOW,UACxD9L,EAA2B,SAApBmL,EAAOW,SAAsBrc,EAAAC,yBAAKD,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAaC,YAAanV,UAAU,sCAA8C,KACvIkI,EAAOtI,EAAAC,qBAAKG,UAAWwb,GAAYU,EAA0BZ,EAAOpT,KAAMnJ,KAAKC,MAAM+D,aAC9EnD,EAAAC,qBAAKf,IAAK,eAAiBA,EAAKkB,UAAU,oCAAoCmQ,EAAMjI,GAC5F,IAAM,WAWL,OAVAsT,EAAYvb,GAAW,iCAAkCqb,EAAOW,UACxC,YAApBX,EAAOW,SACV9L,EAAOvQ,EAAAC,cAACqQ,IAAKrL,KAAM4K,GAAuBC,UACZ,UAApB4L,EAAOW,WACjB9L,EAAOvQ,EAAAC,cAACqQ,IAAKrL,KAAM4K,GAAuBE,SAE3CzH,EACCtI,EAAAC,cAACsc,IAAKnc,UAAU,uBAAuBuQ,QAASxR,KAAKqd,oBAAoBxW,KAAK7G,KAAMuc,EAAOjM,YACzF6M,EAA0BZ,EAAOpT,KAAMnJ,KAAKC,MAAM+D,aAE9CnD,EAAAC,qBAAKf,IAAK,aAAeA,EAAKkB,UAAWwb,GAAarL,EAAMjI,GACpE,IAAM,aACL,OAAOtI,EAAAC,oBAAIf,IAAK,eAAiBA,EAAKkB,UAAU,2BACjD,IAAM,QACN,IAAM,YAiBN,IAAM,mBACL,OAAOjB,KAAKgZ,SAASjZ,EAAKwc,EAAOpW,MAAOqW,EAAc/B,GAhBvD,IAAM,UAEL,OAAQ5Z,EAAAC,cAACyT,IAAQxU,IAAK,WAAaA,EAClC8U,KAAM0H,EAAO1H,KACb5T,UAAWsb,EAAOtb,UAClB+C,WAAYhE,KAAKC,MAAM+D,WACvBuP,YAAavT,KAAKC,MAAMsT,YACxB0B,UAAWjV,KAAKiV,UAChB5C,YAAakK,EAAOlK,YACpB8C,QAASnV,KAAKC,MAAM+D,WAAWwP,yBAEjC,IAAM,cACL,OAAOxT,KAAKsd,eAAevd,EAAKwc,EAAO1H,KAAM2H,EAAc/B,GAC5D,IAAM,gBACL,OAAOza,KAAKud,iBAAiBxd,EAAKwc,EAAO1H,KAAM0H,EAAOhW,UAAWiW,EAAc/B,EAAS8B,EAAOjU,GAAIiU,EAAOtb,WAG3G,IAAM,cACL,OAAOjB,KAAKwd,oBAAoBzd,EAAKwc,EAAOpW,OAE7C,IAAM,SACL,OAAOnG,KAAK2Z,cAAc8D,eAAe1d,EAAKwc,EAAO3F,QACtD,IAAM,YACL,OAAI2F,EAAOpW,MACFtF,EAAAC,cAAC0U,IAAUzV,IAAK,cAAgBA,EAAKoG,MAAOoW,EAAOpW,MAAOnC,WAAYhE,KAAKC,MAAM+D,aAEnFnD,EAAAC,qBAAKf,IAAK,WAAaA,GAAK,YAAUwc,EAAOvB,UACrD,QACC,OAAOna,EAAAC,qBAAKf,IAAK,WAAaA,GAAK,YAAUwc,EAAOvB,cAErDjb,0BAAA5D,MAED,SAAoB4D,EAAKoG,GACxB,GAAInG,KAAKC,MAAMyd,aAAc,CAAA,IACmBvR,EADnBC,EAAAC,GACJrM,KAAKC,MAAMyd,cAAY,IAA/C,IAAAtR,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAiD,CAAA,IAAtCmR,EAASxR,EAAAhQ,MACnB,GAAIwhB,EAAUrV,OAASnC,EAAMmC,GAC5B,IACC,OACCzH,EAAAC,qBACCG,UAAWC,GAAW,0BAA2B,CAAE,kCAAmC0c,GAAIzX,EAAO,eAAe,KAChHpG,IAAK,UAAYA,GAEhB,IAAI4d,EAAUxX,EAAM0X,WAAY7d,KAAKC,MAAM+D,WAAYmC,EAAMqR,MAAMsG,eAErE,MAAOC,GAER,OADAnK,EAAOrJ,KAAK,uCAAyCwT,GAC9C,aAGT3O,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAEF,OAAOzO,EAAAC,qBAAKf,IAAK,UAAYA,GAAK,oBAAkBoG,EAAMmC,OAC1DvI,iCAAA5D,MAED,SAA2BgK,GAAO,IAC2B6X,EAD3BC,EAAA5R,GACdrM,KAAKC,MAAM+D,WAAWka,qBAAmB,IAA5D,IAAAD,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAA8D,CAAA,IAAnDqH,EAAImK,EAAA7hB,MACd,QAAuB,IAAZ0X,EAAKvL,IAAsBuL,EAAKvL,KAAOnC,EAAMmC,GACvD,cAED8G,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,IACD,IACqC6O,EAD/BC,EAAkB,GAAGC,EAAAhS,GACHlG,EAAMkW,SAAO,IAArC,IAAAgC,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAAuC,CAAA,IAA5B8R,EAASH,EAAAhiB,MAEnB,GAAImiB,EAAUxV,SAAWwV,EAAUxV,QAAQxC,KAAM,CAChD,IAAMmG,EAAc6R,EAAUxV,QAAQxC,KACtC8X,EAAgB9P,KAAK,CACpB7B,YAAeA,YAGjB2C,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,IACDtP,KAAKC,MAAM+D,WAAWua,kBAAkBpY,EAAMmC,GAAI8V,MAClDre,eAAA5D,MAED,SAAS4D,EAAKoG,EAAOkC,EAAYoS,GAAS,IAAA+D,OACrC/b,EAAUzC,KAAKiZ,aAAa9S,EAAMkW,QAAShU,EAAYoS,GACrDnS,EAAK,SAAWvI,EACtB,OAAQoG,EAAMsY,WACd,IAAM,kBAIL,OAHAze,KAAKqZ,2BAA2BlT,GAEhC1D,EAAUzC,KAAKiZ,aAAa9S,EAAMkW,QAAShU,EAAYoS,GAC/C5Z,EAAAC,cAACwT,IACRvU,IAAKuI,EACLtE,WAAYhE,KAAKC,MAAM+D,WACvBmC,MAAOA,GAEN1D,GAEH,IAAM,UACL,OAAIzC,KAAKC,MAAMsT,YAEb1S,EAAAC,cAAC2J,IACA1K,IAAK,iBAAmBuI,EACxBtE,WAAYhE,KAAKC,MAAM+D,WACvBmC,MAAOA,GAEN1D,GAGGA,EACR,IAAM,cACL,OACC5B,EAAAC,cAACwV,IAAYvW,IAAK,gBAAkBA,EAAKiE,WAAYhE,KAAKC,MAAM+D,WAAYmC,MAAOA,GACjF1D,GAEJ,IAAM,SACL,OACC5B,EAAAC,cAAC6R,IACA5S,IAAKuI,EACLtE,WAAYhE,KAAKC,MAAM+D,WACvBmC,MAAOA,GAEN1D,GAEJ,IAAM,YAYL,GAXAzC,KAAK6Z,WAAW1T,EAAMmC,IAAM,CAC3BnC,MAAOA,EACP5E,MAAO4E,EAAM+G,MACb1K,YAAa2D,EAAM3D,YAAc2D,EAAM3D,YAAY2G,KAAO,KAC1D1G,QAASA,GAEyC,OAA/CzC,KAAKC,MAAM+D,WAAW0a,qBACzB1e,KAAK8Z,iBAAmB9Z,KAAK6Z,WAAW7Z,KAAKC,MAAM+D,WAAW0a,sBAE9D1e,KAAK8Z,iBAAmB,MAEpB9Z,KAAK4Z,oBAAsB5Z,KAAK4Z,qBAAuBzT,EAAMmC,GAAI,CACrEtI,KAAK4Z,mBAAqBzT,EAAMmC,GAIhC,OACCzH,EAAAC,cAACwB,IACAjB,KAAqD,OAA/CrB,KAAKC,MAAM+D,WAAW0a,qBAC5Bxb,gBANsB,WACvBsb,EAAKve,MAAM+D,WAAW2a,wBAMrB5e,IAAKoG,EAAMmC,GACX/F,UAAWvC,KAAK8Z,mBAInB,OAAO,KACR,IAAM,SACL,OACCjZ,EAAAC,cAACoT,IACAnU,IAAKuI,EACLtE,WAAYhE,KAAKC,MAAM+D,WACvBmC,MAAOA,GAEN1D,GAEJ,QACC,OAAQ5B,EAAAC,cAACwT,IACRvU,IAAKuI,EACLtE,WAAYhE,KAAKC,MAAM+D,WACvBmC,MAAOA,GAEN1D,OAKJ1C,uBAAA5D,MAKA,SAAiByiB,EAAmBC,GAC/B7e,KAAK8e,2BACR9e,KAAK8e,yBAAyBF,EAAmBC,GACjD7e,KAAK8e,yBAA2B,MAEjC9e,KAAKC,MAAMmB,uBAAsB,GACjCpB,KAAK+e,sBAAwB,KAC7B/e,KAAKyH,SAAS,CACbsR,iBAAiB,OAInBhZ,sBAAA5D,MAKA,SAAgBkM,EAAY2W,GAC3Bhf,KAAKC,MAAMmB,uBAAsB,GACjCpB,KAAK+e,sBAAwB1W,EAC7BrI,KAAK8e,yBAA2BE,EAChChf,KAAKyH,SAAS,CACbsR,iBAAiB,OAInBhZ,kBAAA5D,MAIA,SAAYoF,GACX,GAAIvB,KAAK+e,uBAAyB/e,KAAK+e,sBAAsBzY,KAAM,CAClE,IAMI2Y,EANEC,EAAuBlf,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAK+e,uBAEnEI,EAASnf,KAAKC,MAAM+D,WAAWob,2BAA2Bpf,KAAK+e,uBAG/DjW,EAAU9I,KAAKC,MAAM+D,WAAW2I,WAAW3M,KAAK+e,uBAEhDM,EAAkBlC,EAAgCrU,GAClDuE,EAAcvE,EAAQuE,aACH,IAArBgS,IAIFJ,EAHI5R,EAGMA,EAAYgS,GAAiBJ,QAF7BnW,EAAQmW,SAKpB,IAAMK,EAAsBnC,EAAwCrU,EAASoW,GAE7E,OAAQre,EAAAC,qBAAKG,UAAU,uBACtBJ,EAAAC,cAACye,GACAxf,IAAI,uBACJiE,WAAYhE,KAAKC,MAAM+D,WACvBmV,iBAAkBnZ,KAAKmZ,iBACvBqG,cAAeF,EACfH,OAAQA,EACR5d,MAAOA,EACPgS,YAAavT,KAAKC,MAAMsT,YACxBkM,OAAQR,KAIX,OAAOpe,EAAAC,6BACPf,mBAAA5D,MAED,SAAamd,GACZ,IAAMoG,EAAapG,EAASqG,KAAI,SAACxP,GAAG,MACnC,CACC6K,SAAY,WACZ7R,KAAQgH,EAAIhH,KACZ+T,SAAY/M,EAAIrK,KAChBwK,UAAa,CAAEhK,KAAQ6J,EAAIiK,YAG7B,MAAO,CACNjR,KAAQgU,EACPnd,KAAKC,MAAM+D,WAAWiL,eACtBC,GAAa0Q,kBACd7K,MAAS8D,GACTpW,QACC,CAAEuY,SAAY,QACb7U,MAAS,CACRmC,GAAM,eACNmW,UAAa,UACbpC,QAAWqD,QAIf3f,aAAA5D,MAED,WACC,IAAIkgB,EAAUrc,KAAKC,MAAM+D,WAAW6b,cAC/BpP,GAAQzQ,KAAKsZ,WAAqC,gBAAxB+C,EAAQ,GAAGrB,UAA8BqB,EAAQ,GAAGxH,MAAQwH,EAAQ,GAAGxH,KAAK7Y,OAAS,IAEnHqgB,EAAUQ,EAAUR,IACZ,GAAGxH,KAAKiL,QAAQ9f,KAAK+f,aAAa/f,KAAKsZ,WAGhD,IAEI0G,EAFAvd,EAAUzC,KAAKiZ,aAAaoD,GAC5B4D,EAAUpf,EAAAC,0BAGRof,EAAOlgB,KAAKC,MAAM+D,WAAWmc,UAC7B5e,EAAQ4b,EAA2Bnd,KAAKC,MAAM+D,WAAWiL,eAC9DC,GAAakR,8BAAgC,IAAMF,EAAKhT,MA0BzD,OAxBIlN,KAAK8D,MAAMiV,kBACV/Y,KAAKC,MAAMsT,YACd0M,EAAWpf,EAAAC,cAAC0F,IACXpF,uBAAuB,EACvB4G,QACAzG,MAAOA,EACP4G,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAE5B/R,KAAKqgB,YAAY9e,IAETvB,KAAKC,MAAM+D,WAAWwP,uBAChCwM,EAAoBnf,EAAAC,cAACwB,IACpBjB,QACA0B,WACAR,UAAW,CACVhB,MAAOA,EACPkB,QAASzC,KAAKqgB,iBAIhB5d,EAAUzC,KAAKqgB,YAAY9e,IAK5BV,EAAAC,qBAAKG,UAAWC,GAAW,yBAC1B,CAAE,sBAAuBlB,KAAKC,MAAM+D,WAAWwP,wBAC/C,CAAE,eAAgBxT,KAAK8D,MAAMiV,mBAE5BtW,EACAwd,EACAD,OAGHlH,CAAA,EAlmBuBjY,EAAMrB,cA2nBhBqE,IAXS,SAACC,EAAOC,GAAQ,MAAM,CAC7CiC,UAAWlC,EAAMwc,yBAAyBta,UAC1CsT,SAAUvV,EAASC,WAAWuc,kBAAiB,GAAM,GAAM,GAC3D,IAE0B,SAACC,EAAUzc,GAAQ,MAAM,CACnDgC,aAAc,SAAC0O,GACd+L,EAASza,GAAa0O,KAEvB,GAEc5Q,CAA6CiV,ICzqBxDzd,GAAUC,MA6BdmlB,GANA,SAAoB7kB,GAClB,OAAO,SAASM,GACd,OAAiB,MAAVN,OAAiBgB,EAAYvB,GAAQO,EAAQM,GAExD,ECTawkB,cACZ,SAAAA,EAAYC,GAAWhhB,OAAA+gB,GACtB1gB,KAAK2gB,UAAYA,EAgEjB,OA7DD7gB,EAAA4gB,IAAA3gB,WAAA5D,MAGA,SAAK4D,EAAK6gB,GACT,GAAI5gB,KAAK2gB,UAAW,CACnB,IAAMxkB,EAAQ0kB,GAAW7gB,KAAK2gB,UAAhBE,CAA2B9gB,GACzC,GAAI5D,GAAmB,KAAVA,EACZ,OAAOA,EAGT,OAAIykB,GAGG7gB,KAGRA,mBAAA5D,MAGA,SAAa2kB,GACZ,IAAI3X,EAWJ,OAVI2X,IACCA,EAAYC,cACf5X,EAAOnJ,KAAKghB,KAAKF,EAAYC,gBACf5X,IAAS2X,EAAYC,eAAiBD,YACnD3X,EAAO2X,WAEEA,YACV3X,EAAO2X,YAGF3X,KAGRpJ,gBAAA5D,MAGA,SAAU8kB,EAAUlhB,GACnB,OAAOC,KAAKkhB,aAAaD,EAAS/T,OAASlN,KAAKkhB,aAAaD,EAAS/T,OAASlN,KAAKghB,KAAKjhB,EAAM,SAAUA,MAG1GA,eAAA5D,MAGA,SAAS8kB,EAAUlhB,GAClB,OAAOC,KAAKkhB,aAAaD,EAASze,aAAexC,KAAKkhB,aAAaD,EAASze,aAAexC,KAAKghB,KAAKjhB,EAAM,QAASA,MAGrHA,qBAAA5D,MAIA,SAAeglB,EAAShlB,GACvB,IAAMilB,EAAYD,EAAU,IAAMhlB,EAAQ,SAC1C,OAAO6D,KAAKghB,KAAKI,EAAWjlB,MAC5B4D,oBAAA5D,MAED,SAAcglB,EAAShlB,GACtB,IAAMilB,EAAYD,EAAU,IAAMhlB,EAAQ,QACpCklB,EAAOrhB,KAAKghB,KAAKI,EAAWjlB,GAClC,OAAQklB,IAASllB,EAAQklB,EAAO,SAChCX,CAAA,IAGWY,cAAW,SAAAA,IAAA3hB,OAAA2hB,GAkBtB,OAlBsBxhB,EAAAwhB,SAAAvhB,WAAA5D,MACvB,SAAY2kB,GACX,IAAIS,EAeJ,OAdIT,KACHS,EAAW,IAAID,WACIR,UACnBS,EAASR,aAAeD,EAAYC,aAChCD,EAAYlL,YACf2L,EAAS3L,UAAYkL,EAAYlL,WAE9BkL,EAAYhb,OACfyb,EAASzb,KAAOgb,EAAYhb,MAEzBgb,EAAYxP,OACfiQ,EAASjQ,KAAOwP,EAAYxP,OAGvBiQ,MACPD,CAAA,4hCCtFiC,IAE7BE,cACL,SAAAA,EAAYC,EAAO5D,EAAY6D,EAAS5b,EAAMoH,EAAO3G,EAAWob,EAActP,EAAauP,EAAWpf,EAAagV,EAAMvW,EAAW4gB,GAAOliB,OAAA6hB,GAC1IxhB,KAAKsG,KAAOmb,EACZzhB,KAAK6d,WAAaA,EAClB7d,KAAK0hB,QAAUA,EACf1hB,KAAK8F,KAAOA,EACZ9F,KAAKkN,MAAQoU,GAAYQ,KAAK5U,GAC9BlN,KAAKuG,UAAYA,EACjBvG,KAAK2hB,aAAeA,EACpB3hB,KAAKqS,YAAcA,EACnBrS,KAAK4hB,UAAYA,EACjB5hB,KAAKwC,YAAc8e,GAAYQ,KAAKtf,GACpCxC,KAAKwX,KAAOA,EACZxX,KAAKiB,UAAYA,EACjBjB,KAAKqB,KAAOwgB,EA4CZ,OA3CA/hB,EAAA0hB,IAAAzhB,qBAAA5D,MAED,WACC,OAAO6D,KAAK6d,cACZ9d,gBAAA5D,MAED,WACC,OAAO6D,KAAK0hB,WACZ3hB,gBAAA5D,MAED,WACC,OAAQ6D,KAAK8F,KAAO9F,KAAK8F,KAAOic,EAAUC,cAC1CjiB,gBAAA5D,MAED,SAAiB8lB,GAChB,GAAIA,EAAS,CACZ,IAAIL,EACJ,GAAInL,GAAIwL,EAAS,cAAe,CAC/BL,EAAY,GAAG,IACuBzV,EADvBC,EAAAC,GACK4V,EAAQC,YAAU,IAAtC,IAAA9V,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAwC,CAAA,IAA7BuI,EAAK5I,EAAAhQ,MACTgmB,EAAWX,EAAMY,UAAUrN,GAChB,OAAboN,GACHP,EAAUtT,KAAK6T,UAEhB/S,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAEF,OAAO,IAAIkS,EACVX,GAAWoB,EAAXpB,CAAoB,MACpBA,GAAWoB,EAAXpB,CAAoB,kBACpBA,GAAWoB,EAAXpB,CAAoB,eACpBA,GAAWoB,EAAXpB,CAAoB,QACpBA,GAAWoB,EAAXpB,CAAoB,SACpBA,GAAWoB,EAAXpB,CAAoB,kBACpBA,GAAWoB,EAAXpB,CAAoB,iBACpBA,GAAWoB,EAAXpB,CAAoB,gBACpBe,EACAf,GAAWoB,EAAXpB,CAAoB,eACpBA,GAAWoB,EAAXpB,CAAoB,QACpBA,GAAWoB,EAAXpB,CAAoB,cACpBA,GAAWoB,EAAXpB,CAAoB,SAGtB,OAAO,SACPW,CAAA,IAGWa,cACZ,SAAAA,EAAYC,GAAQ3iB,OAAA0iB,GACnBriB,KAAKsiB,OAASA,EAkBd,OAjBAxiB,EAAAuiB,SAAAtiB,wBAAA5D,MAED,SAAyBomB,EAAU1E,GAClC,IAAMyE,EAAS,GACf,GAAIC,EAAU,CAAA,IACevE,EADfC,EAAA5R,GACOkW,GAAQ,IAA5B,IAAAtE,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAA8B,CAAA,IAAnBuI,EAAKiJ,EAAA7hB,MACTgmB,EAAWX,GAAMY,UAAUrN,GAChB,OAAboN,GACHG,EAAOhU,KAAK6T,UAEb/S,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,UAIDgT,EAAOhU,KAAK,IAAIkT,GAAMhZ,KAASqV,EAAY,KAAMkE,EAAUC,WAE5D,OAAO,IAAIK,EAAcC,OACzBD,CAAA,giCCnFWG,GAAM1iB,GAClB,SAAA0iB,EAAYC,EAAYvV,EAAO1K,EAAasG,EAAS0O,EAAMU,EAAOlE,GAAQrU,OAAA6iB,GACzExiB,KAAKsG,KAAOmc,EACZziB,KAAKkN,MAAQA,EACblN,KAAKwC,YAAcA,EACnBxC,KAAK4Y,WAAa9P,EAClB9I,KAAKwX,KAAOA,EACZxX,KAAKkY,MAAQA,EACblY,KAAKgU,OAASA,CACf,IAGK0O,cAAS,SAAAA,IAAA/iB,OAAA+iB,GAcb,OAda5iB,EAAA4iB,SAAA3iB,oBAAA5D,MACd,SAAqBya,GACpB,GAAIA,EAAQ,CACX,IAAM+L,EAAY,IAAID,EAQtB,OAPAC,EAAUra,GAAKsO,EAAOtO,GACtBqa,EAAUzV,MAAQoU,GAAYQ,KAAKlL,EAAO1J,OAC1CyV,EAAUngB,YAAc8e,GAAYQ,KAAKlL,EAAOpU,aAChDmgB,EAAU7Z,QAAU8N,EAAO9N,QAC3B6Z,EAAUnL,KAAOZ,EAAOY,KACxBmL,EAAUzK,MAAQtB,EAAOsB,MACzByK,EAAU3O,OAAS4C,EAAO5C,OACnB2O,EAER,OAAO,SACPD,CAAA,IAGWE,cACZ,SAAAA,EAAYC,GAAYljB,OAAAijB,GACvB5iB,KAAK6iB,WAAaA,EA0BlB,OAvBD/iB,EAAA8iB,IAAA7iB,gBAAA5D,MACA,SAAU2mB,GACT,IAAIH,EAMJ,OALA3iB,KAAK6iB,WAAWlZ,SAAQ,SAASiN,GAC5BA,EAAOtO,KAAOwa,IACjBH,EAAY/L,MAGP+L,OACP5iB,yBAAA5D,MAED,SAA0B4mB,GACzB,GAAIA,EAAgB,CACnB,IACmC5W,EAD7B6W,EAAc,GAAG5W,EAAAC,GACF0W,GAAc,IAAnC,IAAA3W,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAqC,CAAA,IAA1BoK,EAAMzK,EAAAhQ,MACVwmB,EAAYD,GAAUO,cAAcrM,GACtC+L,GACHK,EAAY1U,KAAKqU,UAElBvT,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,IACD,OAAO,IAAIsT,EAAeI,GAE3B,OAAO,SACPJ,CAAA,giCCtDWM,cACZ,SAAAA,EAAYC,GAAUxjB,OAAAujB,GACjBC,EAAS7a,KACZtI,KAAKsG,KAAO6c,EAAS7a,IAElB6a,EAASjW,QACZlN,KAAKkN,MAAQoU,GAAYQ,KAAKqB,EAASjW,QAEpCiW,EAAS3gB,cACZxC,KAAKwC,YAAc8e,GAAYQ,KAAKqB,EAAS3gB,cAE1C2gB,EAASrd,OACZ9F,KAAK8F,KAAOqd,EAASrd,MAElBqd,EAASrU,OACZ9O,KAAK8O,KAAOqU,EAASrU,MAElBqU,EAASC,mBACZpjB,KAAKojB,iBAAmBD,EAASC,kBAEJ,OAA1BD,EAASE,cAA2D,cAAlCC,EAAOH,EAASE,cACjDF,EAASE,aAAaE,eACzBvjB,KAAKqjB,aAAe,GACpBrjB,KAAKqjB,aAAaG,aAAeL,EAASE,aAAaE,eAEvDvjB,KAAKqjB,aAAeF,EAASE,kBAEa,IAA1BF,EAASE,eAAiCrjB,KAAKyjB,UAAYzjB,KAAK0jB,gBACjF1jB,KAAKqjB,aAAe,IAEgB,kBAA1BF,EAASQ,eACnB3jB,KAAK2jB,aAAeR,EAASQ,cAE1BR,EAASra,UACZ9I,KAAK8I,QAAUqa,EAASra,SAErBqa,EAASS,cACZ5jB,KAAK4jB,YAAcT,EAASS,aAEzBT,EAAS5U,QACZvO,KAAKuO,MAAQ4U,EAAS5U,OAEnB4U,EAASla,YACZjJ,KAAKiJ,UAAYka,EAASla,WAEvBka,EAASU,kBACZ7jB,KAAK6jB,gBAAkBvC,GAAYQ,KAAKqB,EAASU,kBAE9CV,EAASW,YACZ9jB,KAAK8jB,UAAYX,EAASW,WAEvBX,EAASpC,eACZ/gB,KAAK+gB,aAAeoC,EAASpC,cAEG,YAA7BuC,EAAOH,EAASY,SACnB/jB,KAAK+jB,QAAUZ,EAASY,QAExB/jB,KAAK+jB,SAAU,EAEZZ,EAASa,aACZhkB,KAAKgkB,WAAab,EAASa,YAEM,YAA9BV,EAAOH,EAASc,YACnBjkB,KAAKikB,SAAWd,EAASc,UAEU,YAAhCX,EAAOH,EAASe,cACnBlkB,KAAKkkB,WAAaf,EAASe,YAEO,YAA/BZ,EAAOH,EAASgB,aACnBnkB,KAAKmkB,UAAYhB,EAASgB,WAEvBhB,EAASiB,YACZpkB,KAAKokB,UAAYjB,EAASiB,WAEO,YAA9Bd,EAAOH,EAASkB,YACnBrkB,KAAKqkB,SAAWlB,EAASkB,UAEtBlB,EAASmB,kBACZnB,EAASmB,gBAAgBpX,MAAQoU,GAAYQ,KAAKqB,EAASmB,gBAAgBpX,OAC3ElN,KAAKskB,gBAAkBnB,EAASmB,iBAE7BnB,EAASoB,QACZvkB,KAAKukB,MAAQpB,EAASoB,OAEnBpB,EAASqB,YACZxkB,KAAKwkB,UAAYrB,EAASqB,WAEvBrB,EAASlE,UACZjf,KAAKif,QAAUkE,EAASlE,SAErBkE,EAASsB,WACZzkB,KAAKykB,SAAWtB,EAASsB,UAEtBtB,EAASuB,iBACZ1kB,KAAK0kB,eAAiBvB,EAASuB,gBAGC,YAA7BpB,EAAOH,EAAS1V,WACnBzN,KAAKyN,QAAU0V,EAAS1V,SAErB0V,EAASwB,YACZ3kB,KAAK2kB,UAAYxB,EAASwB,WAEvBxB,EAASyB,YACZ5kB,KAAK4kB,UAAYtD,GAAYQ,KAAKqB,EAASyB,YAExCzB,EAAS0B,aACZ7kB,KAAK6kB,WAAavD,GAAYQ,KAAKqB,EAAS0B,aAEP,YAAlCvB,EAAOH,EAAS2B,gBACnB9kB,KAAK8kB,aAAe3B,EAAS2B,cAE1B3B,EAAS4B,kBACZ/kB,KAAK+kB,gBAAkB5B,EAAS4B,iBAE7B5B,EAAS6B,aACZhlB,KAAKglB,WAAa7B,EAAS6B,YAExB7B,EAAS8B,aACZjlB,KAAKilB,WAAa9B,EAAS8B,YAExB9B,EAAS+B,kBACZllB,KAAKklB,gBAAkB/B,EAAS+B,iBAE7B/B,EAAS3L,OACZxX,KAAKwX,KAAO2L,EAAS3L,MAElB2L,EAASgC,OACZnlB,KAAKmlB,KAAOhC,EAASgC,MAElBhC,EAASiC,eACZplB,KAAKolB,aAAejC,EAASiC,cAE1BjC,EAASkC,SACZrlB,KAAKqlB,OAASlC,EAASkC,QAEpBlC,EAASmC,YACZtlB,KAAKslB,UAAYnC,EAASmC,WAEiB,YAAxChC,EAAOH,EAASoC,sBACnBvlB,KAAKulB,mBAAqBpC,EAASoC,oBAEhCpC,EAASliB,YACZjB,KAAKiB,UAAYkiB,EAASliB,WAEvBkiB,EAASqC,oBACZxlB,KAAKwlB,kBAAoBrC,EAASqC,mBA0MnC,OAxMA1lB,EAAAojB,IAAAnjB,aAAA5D,MAED,WACC,QAAI6D,KAAK8F,MACD9F,KAAK8F,KAAK2f,WAAW,aAG7B1lB,iBAAA5D,MAED,WACC,QAAI6D,KAAK8F,MACD9F,KAAK8F,KAAK2f,WAAW,WAG7B1lB,qBAAA5D,MAED,WACC,OAAI6D,KAAKokB,YAAcsB,EAAUC,YAMlC5lB,sBAAA5D,MAKA,WACC,SAAI6D,KAAK8O,OAAQ9O,KAAK8F,SACJ9F,KAAK8F,OAASgK,EAAK8V,QAAU5lB,KAAK6lB,aAAe/V,EAAK8V,SACpD5lB,KAAK8O,OAASkB,EAAUC,WAG5ClQ,eAAA5D,MAED,WAEC,IAAIA,EACJ,IAAK,IAAM4D,KAAO+P,EACb9P,KAAK6lB,aAAe/V,EAAK/P,KAC5B5D,EAAQ2T,EAAK/P,IAMf,OAHK5D,IACJA,EAAQ2T,EAAKC,WAEP5T,KACP4D,cAAA5D,MAED,WACC,OAAI6D,KAAK8O,KACD9O,KAAK8O,KACF9O,KAAK8lB,iBAER9V,EAAU+V,KAEX/V,EAAUgW,eAGlBjmB,eAAA5D,MAGA,WACC,IAAM8pB,EAAMjmB,KAAK8F,KACjB,OAAI9F,KAAKyjB,SAEDwC,EAAIjc,UAAU,EAAGhK,KAAK8F,KAAK9J,OAAS,GACjCgE,KAAK0jB,aAERuC,EAAIjc,UAAUic,EAAItW,QAAQ,KAAO,EAAG3P,KAAK8F,KAAK9J,OAAS,GAAGkqB,OACvDlmB,KAAKojB,mBAAqBpjB,KAAK8F,KAClCgK,EAAKqW,OAENF,KACPlmB,qBAAA5D,MAED,WAEC,OAAI6D,KAAKojB,iBACDpjB,KAAKojB,iBACFpjB,KAAK8F,OAASgK,EAAKsW,QACtB,EAAC,GAAM,QADR,KAIPrmB,yBAAA5D,MAED,WACC,OAAQ6D,KAAK8lB,iBAAmB9lB,KAAK8lB,iBAAiB9pB,OAAS,KAGhE+D,wBAAA5D,MAIA,SAAkBkqB,GACjB,OAAOA,EAAanF,aAAalhB,KAAK6jB,oBACtC9jB,mBAAA5D,MAED,SAAakqB,GACZ,OAAOA,EAAanF,aAAalhB,KAAK4kB,cACtC7kB,uBAAA5D,MACD,WACC,OAAO6D,KAAK4kB,UAAY5kB,KAAK4kB,UAAU9e,KAAO,QAC9C/F,oBAAA5D,MACD,SAAckqB,GACb,OAAOA,EAAanF,aAAalhB,KAAK6kB,eACtC9kB,wBAAA5D,MACD,WACC,OAAO6D,KAAK6kB,WAAa7kB,KAAK6kB,WAAW/e,KAAO,QAGjD/F,iBAAA5D,MAIA,SAAWmqB,GACV,OAAQtmB,KAAK8I,QAAU9I,KAAK8I,QAAUwd,KAGvCvmB,cAAA5D,MAGA,SAAQoqB,GACP,OAAQvmB,KAAKuO,MAAQvO,KAAKuO,MAAQgY,KAGnCxmB,qBAAA5D,MAIA,WACC,OAAI6D,KAAK8jB,YAAc0C,EAAUC,SAMlC1mB,sBAAA5D,MAIA,WACC,OAAI6D,KAAK8jB,YAAc0C,EAAUE,YAIjC3mB,uBAAA5D,MAED,SAAwBwqB,EAAOC,EAAQrC,GACtC,OAAIoC,EACI,IAAIzD,EAAa,CACvB5a,GAAMuY,GAAW8F,EAAX9F,CAAkB,MACxB6D,eAAkB7D,GAAW+F,EAAX/F,CAAmB,mBACrC3T,MAAS2T,GAAW+F,EAAX/F,CAAmB,SAC5Bre,YAAeqe,GAAW+F,EAAX/F,CAAmB,eAClC/a,KAAQ+a,GAAW8F,EAAX9F,CAAkB,QAC1B/R,KAAQ+R,GAAW8F,EAAX9F,CAAkB,QAC1BuC,iBAAoBvC,GAAW8F,EAAX9F,CAAkB,QACtCwC,aAAgBxC,GAAW8F,EAAX9F,CAAkB,WAClC8C,aAAgB9C,GAAW+F,EAAX/F,CAAmB,iBACnC/X,QAAW+X,GAAW+F,EAAX/F,CAAmB,WAC9B+C,YAAe/C,GAAW+F,EAAX/F,CAAmB,eAClCtS,MAASsS,GAAW+F,EAAX/F,CAAmB,SAC5B5X,UAAa4X,GAAW+F,EAAX/F,CAAmB,cAChCgD,gBAAmBhD,GAAW+F,EAAX/F,CAAmB,qBACtCiD,UAAajD,GAAW+F,EAAX/F,CAAmB,aAChCE,aAAgBF,GAAW+F,EAAX/F,CAAmB,gBACnCkD,QAAWlD,GAAW+F,EAAX/F,CAAmB,WAC9BmD,WAAcnD,GAAW+F,EAAX/F,CAAmB,eACjCoD,SAAYpD,GAAW+F,EAAX/F,CAAmB,YAC/BqD,WAAcrD,GAAW+F,EAAX/F,CAAmB,cACjCsD,UAAatD,GAAW+F,EAAX/F,CAAmB,aAChCuD,UAAavD,GAAW+F,EAAX/F,CAAmB,cAChCwD,SAAYxD,GAAW8F,EAAX9F,CAAkB,YAC9ByD,gBAAmBzD,GAAW+F,EAAX/F,CAAmB,oBACtC0D,MAASA,EACTC,UAAa3D,GAAW+F,EAAX/F,CAAmB,cAChC5B,QAAW4B,GAAW+F,EAAX/F,CAAmB,YAC9B4D,SAAY5D,GAAW+F,EAAX/F,CAAmB,YAC/BpT,QAAWoT,GAAW+F,EAAX/F,CAAmB,WAC9B8D,UAAa9D,GAAW+F,EAAX/F,CAAmB,aAChC+D,UAAa/D,GAAW+F,EAAX/F,CAAmB,cAChCgE,WAAchE,GAAW+F,EAAX/F,CAAmB,eACjCiE,aAAgBjE,GAAW+F,EAAX/F,CAAmB,iBACnCkE,gBAAmBlE,GAAW+F,EAAX/F,CAAmB,oBACtCmE,WAAcnE,GAAW+F,EAAX/F,CAAmB,eACjCoE,WAAcpE,GAAW+F,EAAX/F,CAAmB,eACjCqE,gBAAmBrE,GAAW+F,EAAX/F,CAAmB,qBACtCrJ,KAAQqJ,GAAW+F,EAAX/F,CAAmB,QAC3BsE,KAAQtE,GAAW+F,EAAX/F,CAAmB,QAC3BuE,aAAgBvE,GAAW+F,EAAX/F,CAAmB,iBACnCwE,OAAUxE,GAAW8F,EAAX9F,CAAkB,UAC5ByE,UAAazE,GAAW+F,EAAX/F,CAAmB,cAChC0E,mBAAsB1E,GAAW+F,EAAX/F,CAAmB,wBACzC5f,UAAa4f,GAAW+F,EAAX/F,CAAmB,cAChC2E,kBAAqB3E,GAAW8F,EAAX9F,CAAkB,uBAGlC,SACPqC,CAAA,IAIF,SAAS2D,GAAeC,EAAWC,GAClC,GAAIA,EAAS,CAAA,IACgB5a,EADhBC,EAAAC,GACS0a,GAAO,IAA5B,IAAA3a,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA8B,CAAA,IAAnBoa,EAAMza,EAAAhQ,MAChB,GAAI2qB,IAAcF,EAAOrD,cACxB,OAAOqD,SAERxX,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAEF,OAAO,IACR,KAGa0X,cACZ,SAAAA,EAAYC,GAAWtnB,OAAAqnB,GACtBhnB,KAAKinB,UAAYA,EAsDjB,OAnDDnnB,EAAAknB,IAAAjnB,mBAAA5D,MACA,SAAa2qB,GACZ,IAAII,EAMJ,OALAlnB,KAAKinB,UAAUtd,SAAQ,SAASgd,GAC3BA,EAAMrgB,OAASwgB,IAClBI,EAAWP,MAGNO,KAGRnnB,oBAAA5D,MACA,WACC,OAAO6D,KAAKinB,UAAUtH,KAAI,SAACgH,GAAK,OAAKA,EAAMrgB,aAG5CvG,4BAAA5D,MACA,SAA6B0hB,EAAYsJ,EAAeC,GACvD,IAAMH,EAAY,GAClB,GAAIpJ,EAAY,CAEf,IAAMwJ,EAAqBxJ,EAAW/C,QAAO,SAACwM,GAAS,OAA4B,IAAvBA,EAAUjD,YAChEkD,EAAO1J,EAAW7hB,OAAS,EACjC6hB,EAAWlU,SAAQ,SAAC2d,GACfD,EAAmBrrB,QAAUurB,EAChCD,EAAU9B,mBAAoB,EAE9B8B,EAAU9B,mBAAoB,KAKjC,GAAItoB,MAAM2F,QAAQgb,GAAa,CAAA,IACAG,EADAC,EAAA5R,GACVwR,GAAU,IAA9B,IAAAI,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAAgC,CAAA,IAArBma,EAAK3I,EAAA7hB,MACT+qB,EAAWhE,GAAasE,iBAAiBb,EAAOE,GAAeF,EAAMre,GAAI6e,IAC3ED,GACHD,EAAU3Y,KAAK4Y,UAEhB9X,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,KAGF,GAAIpS,MAAM2F,QAAQukB,GAAkB,CAAA,IACAjJ,EADAE,EAAAhS,GACf+a,GAAe,IAAnC,IAAA/I,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAAqC,CAAA,IAA1Bma,EAAKxI,EAAAhiB,MACT+qB,EAAWhE,GAAasE,iBAAiBb,EAAOE,GAAeF,EAAMre,GAAI6e,IAC3ED,IACHA,EAAS7B,QAAS,EAClB4B,EAAU3Y,KAAK4Y,WAEhB9X,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,KAEF,OAAO,IAAI0X,EAAkBC,OAC7BD,CAAA,giCCvaWzV,GAAMzR,GAClB,SAAAyR,EAAYjJ,EAAI4E,EAAO1K,EAAa4O,EAAMqW,EAAYC,EAASC,GAAShoB,OAAA4R,GACvEvR,KAAKsI,GAAKA,EACVtI,KAAKkN,MAAQA,EACblN,KAAKwC,YAAcA,EACnBxC,KAAKoR,KAAOA,EACZpR,KAAKynB,WAAaA,EAClBznB,KAAK0nB,QAAUA,EACf1nB,KAAK2nB,QAAUA,CAChB,IAGKC,cAAS,SAAAA,IAAAjoB,OAAAioB,GAcb,OAda9nB,EAAA8nB,SAAA7nB,oBAAA5D,MACd,SAAqB6X,GACpB,GAAIA,EAAQ,CACX,IAAM6T,EAAY,IAAID,EAQtB,OAPAC,EAAUvf,GAAK0L,EAAO1L,GACtBuf,EAAU3a,MAAQoU,GAAYQ,KAAK9N,EAAO9G,OAC1C2a,EAAUrlB,YAAc8e,GAAYQ,KAAK9N,EAAOxR,aAChDqlB,EAAUzW,KAAO4C,EAAO5C,KACxByW,EAAUJ,WAAazT,EAAO8T,YAC9BD,EAAUH,QAAU1T,EAAO0T,QAC3BG,EAAUF,QAAU3T,EAAO2T,QACpBE,EAER,OAAO,SACPD,CAAA,IAGWG,cACZ,SAAAA,EAAYC,GAAYroB,OAAAooB,GACvB/nB,KAAKgoB,WAAaA,EAyBlB,OAxBAloB,EAAAioB,IAAAhoB,gBAAA5D,MAED,SAAU8rB,GACT,IAAIJ,EAMJ,OALA7nB,KAAKgoB,WAAWre,SAAQ,SAASqK,GAC5BA,EAAO1L,KAAO2f,IACjBJ,EAAY7T,MAGP6T,OACP9nB,yBAAA5D,MAED,SAA0B+rB,GACzB,GAAIA,EAAgB,CACnB,IACmC/b,EAD7B6b,EAAa,GAAG5b,EAAAC,GACD6b,GAAc,IAAnC,IAAA9b,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAqC,CAAA,IAA1BwH,EAAM7H,EAAAhQ,MACV0rB,EAAYD,GAAUO,cAAcnU,GACtC6T,GACHG,EAAW1Z,KAAKuZ,UAEjBzY,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,IACD,OAAO,IAAIyY,EAAeC,GAE3B,OAAO,SACPD,CAAA,giCCtDWK,cACZ,SAAAA,EAAY3G,EAAO4G,EAAeC,EAAmBxD,EAAc5X,EAClEqb,EAAcC,EAAeC,EAAQC,EAAkBC,EAAQvmB,EAAS0D,GAAMnG,OAAAyoB,GAC9EpoB,KAAKsG,KAAOmb,EACZzhB,KAAKqoB,cAAgBA,EACrBroB,KAAKsoB,kBAAoBA,EACzBtoB,KAAK8kB,aAAeA,EACpB9kB,KAAKkN,MAAQoU,GAAYQ,KAAK5U,GAC9BlN,KAAKuoB,aAAeA,EACpBvoB,KAAKoC,QAAUA,EAEdpC,KAAKwoB,cADuB,kBAAlBA,GACWA,EAKrBxoB,KAAKyoB,OADgB,kBAAXA,GACIA,EAIiB,kBAArBC,IACV1oB,KAAK0oB,iBAAmBA,GAErBxrB,MAAM2F,QAAQ8lB,KACjB3oB,KAAK2oB,OAASA,GAGd3oB,KAAK8F,UADc,IAATA,EACE,QAEAA,EAgEb,OA5DDhG,EAAAsoB,IAAAroB,qBAAA5D,MAGA,WACC,IAAMysB,EAAS,GACf,GAAI5oB,KAAKsoB,kBAAmB,CAAA,IACyBnc,EADzBC,EAAAC,GACPrM,KAAKsoB,kBAAkBrB,WAAS,IAApD,IAAA7a,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAsD,CAAA,IAA3Cma,EAAKxa,EAAAhQ,MACfysB,EAAOta,KAAKqY,EAAMrgB,aAClB8I,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAEF,OAAOsZ,KACP7oB,kBAAA5D,MACD,WACC,GAAI6D,KAAKsoB,kBAAmB,CAAA,IACyBtK,EADzBC,EAAA5R,GACPrM,KAAKsoB,kBAAkBrB,WAAS,IAApD,IAAAhJ,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAAsD,CACrD,GADewR,EAAA7hB,MACL0sB,iBACT,OAAO,SAERzZ,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,KAEF,OAAO,KACPvP,wBAAA5D,MACD,WACC,OAAI6D,KAAKqoB,cAED,GAEA,KACRtoB,uBAAA5D,MAED,WACC,IAAM2sB,EAAW,GAQjB,OAPA9oB,KAAKsoB,kBAAkBrB,UAAUtd,SAAQ,SAASgd,GACjDmC,EAASxa,KAAKqY,EAAMtD,iBAEjBrjB,KAAKqoB,eAERS,EAAShJ,QAAQ9f,KAAKqoB,cAAchF,cAE9ByF,OACP/oB,oBAAA5D,MAED,SAAqB4sB,EAAWhC,GAC/B,OAAIgC,EACI,IAAIX,EACVvH,GAAWkI,EAAXlI,CAAsB,MACtBqC,GAAasE,iBAAiB3G,GAAWkI,EAAXlI,CAAsB,kBAAmBA,GAAWkG,EAAXlG,CAAoB,mBAAmB,GAC9GmG,GAAkBgC,sBAAsBnI,GAAWkI,EAAXlI,CAAsB,cAAeA,GAAWkG,EAAXlG,CAAoB,eACjGA,GAAWkG,EAAXlG,CAAoB,iBACpBA,GAAWkG,EAAXlG,CAAoB,SACpBA,GAAWkG,EAAXlG,CAAoB,iBACpBA,GAAWkG,EAAXlG,CAAoB,mBACpBA,GAAWkG,EAAXlG,CAAoB,UACpBA,GAAWkG,EAAXlG,CAAoB,sBACpBA,GAAWkG,EAAXlG,CAAoB,UACpBkH,GAAekB,mBAAmBpI,GAAWkG,EAAXlG,CAAoB,YACtDA,GAAWkI,EAAXlI,CAAsB,SAGjB,SACPuH,CAAA,IAIF,SAASc,GAAmBC,EAAepC,GAC1C,GAAIA,EAAS,CAAA,IACgB5I,EADhBE,EAAAhS,GACS0a,GAAO,IAA5B,IAAA1I,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAA8B,CAAA,IAAnBoa,EAAMzI,EAAAhiB,MAChB,GAAIgtB,IAAkBvC,EAAOwC,iBAC5B,OAAOxC,SAERxX,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,KAEF,OAAO,IACR,KAEa+Z,cACZ,SAAAA,EAAYC,GAAY3pB,OAAA0pB,GACvBrpB,KAAKspB,WAAaA,EA0BlB,OAzBAxpB,EAAAupB,IAAAtpB,mBAAA5D,MAED,SAAaotB,GACZ,IAAIC,EAMJ,OALAxpB,KAAKspB,WAAW3f,SAAQ,SAASof,GAC5BA,EAAUziB,OAASijB,IACtBC,EAAeT,MAGVS,OACPzpB,4BAAA5D,MAGD,SAA6BmtB,EAAYG,GACxC,GAAIH,EAAY,CACf,IACkCI,EAD5BC,EAAgB,GAAGC,EAAAvd,GACDid,GAAU,IAAlC,IAAAM,EAAAtd,MAAAod,EAAAE,EAAArd,KAAAC,MAAoC,CAAA,IAAzBuc,EAASW,EAAAvtB,MACb0tB,EAASzB,GAAa0B,cAAcf,EAAWG,GAAmBH,EAAUzgB,GAAImhB,IACvE,OAAXI,GACHF,EAAcrb,KAAKub,UAEpBza,GAAAwa,EAAAva,EAAAD,WAAAwa,EAAAta,IACD,OAAO,IAAI+Z,EAAkBM,GAE9B,OAAO,SACPN,CAAA,ICpIWU,cACZ,SAAAA,EAAYtI,EAAOrQ,EAAM4Y,EAAYC,EAAY/c,EAAOgd,EAAeC,EAAM3nB,EAAa4nB,EAAmB9B,EAAmB+B,EAAeC,EAAgBC,GAAS5qB,OAAAoqB,GACvK/pB,KAAKsG,KAAOmb,EACZzhB,KAAKoR,KAAOA,EACZpR,KAAKgqB,WAAaA,EAClBhqB,KAAKiqB,WAAaA,EAClBjqB,KAAKkN,MAAQA,EACblN,KAAKkqB,cAAgBA,EACrBlqB,KAAKmqB,KAAOA,EACZnqB,KAAKwC,YAAc8e,GAAYQ,KAAKtf,GACpCxC,KAAKoqB,kBAAoBA,EACzBpqB,KAAKsoB,kBAAoBA,EACzBtoB,KAAKqqB,cAAgBA,EACrBrqB,KAAKsqB,eAAiBA,EACtBtqB,KAAKuqB,QAAUA,EA2Cf,OAxCDzqB,EAAAiqB,IAAAhqB,qBAAA5D,MAIA,SAAeknB,GACd,OAAIrjB,KAAKgqB,WACDhqB,KAAKgqB,WAET3G,GAGGljB,EAAKC,WACZL,sBAAA5D,MAGD,SAAuBquB,EAAiB3M,EAAYyL,EAAYvC,GAC/D,IAAMqD,EAAoBf,GAAkBoB,sBAAsBnB,EAAYzI,GAAWkG,EAAXlG,CAAoB,sBAC5FyH,EAAoBtB,GAAkBgC,sBAAsBnL,EACjEgD,GAAWkG,EAAXlG,CAAoB,kBAAmBA,GAAWkG,EAAXlG,CAAoB,kBACtDyJ,EAAiB1H,GAAe8H,mBAAmB7J,GAAWkG,EAAXlG,CAAoB,gBACvEwJ,EAAgBhI,GAAcsI,kBAAkB9J,GAAWkG,EAAXlG,CAAoB,cAAeyH,EAAkBsC,iBAErG1d,EAAQsd,GAAmBA,EAAgBjpB,MAAQipB,EAAgBjpB,MAAQ,GAC3E2oB,EAAgBM,QAAuD,IAA7BA,EAAgBK,SAA2BL,EAAgBK,SAAWC,GAEtH,OAAO,IAAIf,EACVlJ,GAAWkG,EAAXlG,CAAoB,MACpBA,GAAWkG,EAAXlG,CAAoB,QACpBA,GAAWkG,EAAXlG,CAAoB,eACpBA,GAAWkG,EAAXlG,CAAoB,eACpB3T,EACAgd,EACArJ,GAAWkG,EAAXlG,CAAoB,QACpBA,GAAWkG,EAAXlG,CAAoB,eACpBuJ,EACA9B,EACA+B,EACAC,EACAzJ,GAAWkG,EAAXlG,CAAoB,cAErBkJ,CAAA,IC7DWgB,GAAOjrB,GACnB,SAAAirB,EAAY5H,GAAUxjB,OAAAorB,GACrB/qB,KAAKsG,KAAO6c,EAAS7c,KACjB6c,EAASjW,QACZlN,KAAKkN,MAAQiW,EAASjW,OAEnBiW,EAAS3gB,cACZxC,KAAKwC,YAAc2gB,EAAS3gB,aAEQ,kBAA1B2gB,EAASQ,eACnB3jB,KAAK2jB,aAAeR,EAASQ,cAE1BR,EAAS6H,cACZhrB,KAAKgrB,YAAc7H,EAAS6H,aAEzB7H,EAASvT,WACZ5P,KAAK4P,SAAWuT,EAASvT,UAEtBuT,EAASrU,OACZ9O,KAAK8O,KAAOqU,EAASrU,MAElBqU,EAAS8H,iBACZjrB,KAAKirB,eAAiB9H,EAAS8H,gBAE5B9H,EAASS,cACZ5jB,KAAK4jB,YAAcT,EAASS,aAEzBT,EAAS3T,SACZxP,KAAKwP,OAAS2T,EAAS3T,QAEpB2T,EAAS1T,cACZzP,KAAKyP,YAAc0T,EAAS1T,aAEzB0T,EAAS+H,aACZlrB,KAAKkrB,WAAa/H,EAAS+H,YAExB/H,EAASa,aACZhkB,KAAKgkB,WAAab,EAASa,YAEK,kBAAtBb,EAASc,WACnBjkB,KAAKikB,SAAWd,EAASc,UAES,kBAAxBd,EAASe,aACnBlkB,KAAKkkB,WAAaf,EAASe,YAEM,kBAAvBf,EAASgB,YACnBnkB,KAAKmkB,UAAYhB,EAASgB,WAEvBhB,EAASsB,WACZzkB,KAAKykB,SAAWtB,EAASsB,UAEtBtB,EAASuB,iBACZ1kB,KAAK0kB,eAAiBvB,EAASuB,gBAE5BvB,EAASla,YACZjJ,KAAKiJ,UAAYka,EAASla,WAEvBka,EAAS1V,UACZzN,KAAKyN,QAAU0V,EAAS1V,SAErB0V,EAASwB,YACZ3kB,KAAK2kB,UAAYxB,EAASwB,WAEvBxB,EAAS4B,kBACZ/kB,KAAK+kB,gBAAkB,GACnB5B,EAAS4B,gBAAgBoG,YAC5BnrB,KAAK+kB,gBAAgBoG,UAAYhI,EAAS4B,gBAAgBoG,WAEvDhI,EAAS4B,gBAAgBqG,cAC5BprB,KAAK+kB,gBAAgBsG,WAAalI,EAAS4B,gBAAgBqG,cAGzDjI,EAAS6B,aACZhlB,KAAKglB,WAAa7B,EAAS6B,YAExB7B,EAAS8B,aACZjlB,KAAKilB,WAAa9B,EAAS8B,YAExB9B,EAAS+B,kBACZllB,KAAKklB,gBAAkB/B,EAAS+B,iBAE7B/B,EAAS3L,OACZxX,KAAKwX,KAAO2L,EAAS3L,MAElB2L,EAASgC,OACZnlB,KAAKmlB,KAAOhC,EAASgC,MAElBhC,EAASiC,eACZplB,KAAKolB,aAAejC,EAASiC,cAE1BjC,EAASvM,SACZ5W,KAAK4W,OAASuM,EAASvM,QAEpBuM,EAASmI,gBACZtrB,KAAKsrB,cAAgBnI,EAASmI,eAE3BnI,EAAS9V,cACZrN,KAAKqN,YAAc8V,EAAS9V,aAEzB8V,EAASoI,YACZvrB,KAAKurB,UAAYpI,EAASoI,WAEvBpI,EAASwF,SACZ3oB,KAAK2oB,OAASxF,EAASwF,QAES,iBAAtBxF,EAASqI,WACnBxrB,KAAKwrB,SAAWrI,EAASqI,UAEtBrI,EAASsI,aACZzrB,KAAKyrB,WAAatI,EAASsI,YAES,kBAA1BtI,EAAS2B,eACnB9kB,KAAK8kB,aAAe3B,EAAS2B,cAEG,kBAAtB3B,EAASkB,WACnBrkB,KAAKqkB,SAAWlB,EAASkB,UAEtBlB,EAASoF,eACZvoB,KAAKuoB,aAAepF,EAASoF,cAEQ,kBAA3BpF,EAASqF,gBACnBxoB,KAAKwoB,cAAgBrF,EAASqF,eAGQ,kBAA5BrF,EAASuI,iBACnB1rB,KAAK0rB,eAAiBvI,EAASuI,gBAGD,kBAApBvI,EAASsF,SACnBzoB,KAAKyoB,OAAStF,EAASsF,QAEO,kBAApBtF,EAASkC,SACnBrlB,KAAKqlB,OAASlC,EAASkC,QAEiB,kBAA9BlC,EAASuF,mBACnB1oB,KAAK0oB,iBAAmBvF,EAASuF,kBAE9BvF,EAASlE,UACZjf,KAAKif,QAAUkE,EAASlE,SAGO,kBAArBkE,EAASY,UACnB/jB,KAAK+jB,QAAUZ,EAASY,SAEK,iBAAnBZ,EAAS5U,QACnBvO,KAAKuO,MAAQ4U,EAAS5U,OAEnB4U,EAASiB,UACZpkB,KAAKokB,UAAYjB,EAASiB,UACfjB,EAASwI,iBAAgD,IAA3BxI,EAASmI,gBAClDtrB,KAAKokB,UAAYsB,EAAUkG,QAExBzI,EAASqB,YACZxkB,KAAKwkB,UAAYrB,EAASqB,WAEvBrB,EAASlE,UACZjf,KAAKif,QAAUkE,EAASlE,SAErBkE,EAASoC,qBACZvlB,KAAKulB,mBAAqBpC,EAASoC,oBAEhCpC,EAASliB,YACZjB,KAAKiB,UAAYkiB,EAASliB,WAEvBkiB,EAASqC,oBACZxlB,KAAKwlB,kBAAoBrC,EAASqC,mBAE/BrC,EAAS/gB,UACZpC,KAAKoC,QAAU+gB,EAAS/gB,SAEzBpC,KAAKmI,MAAQyV,GAAIuF,EAAU,SAAS,EACrC,4kBC7KY0I,cACZ,SAAAA,EAAYC,GAAUnsB,OAAAksB,GACrB7rB,KAAKsI,GAAKuY,GAAWiL,EAAXjL,CAAqB,MAC/B7gB,KAAKgb,SAAW6F,GAAWiL,EAAXjL,CAAqB,YACrC7gB,KAAK6U,KAAOgM,GAAWiL,EAAXjL,CAAqB,QACjC7gB,KAAKmG,MAAQ0a,GAAWiL,EAAXjL,CAAqB,SAClC7gB,KAAK8I,QAAU+X,GAAWiL,EAAXjL,CAAqB,WACpC7gB,KAAKmJ,KAAO0X,GAAWiL,EAAXjL,CAAqB,QACjC7gB,KAAKkd,SAAW2D,GAAWiL,EAAXjL,CAAqB,YACrC7gB,KAAKid,cAAgB4D,GAAWiL,EAAXjL,CAAqB,iBAC1C7gB,KAAKuG,UAAYsa,GAAWiL,EAAXjL,CAAqB,aACtC7gB,KAAK4W,OAASiK,GAAWiL,EAAXjL,CAAqB,UACnC7gB,KAAKiB,UAAY4f,GAAWiL,EAAXjL,CAAqB,aACtC7gB,KAAKqS,YAAcwO,GAAWiL,EAAXjL,CAAqB,eAsGxC,OArGA/gB,EAAA+rB,SAAA9rB,sBAAA5D,MAED,SAAuB0Y,GACtB,OAAO,IAAIgX,EAAO,CACjB7Q,SAAUC,EAAS8Q,aACnBlX,KAAMA,OAEP9U,kBAAA5D,MAED,SAAmB0Y,EAAM5T,EAAWoR,GACnC,OAAO,IAAIwZ,EAAO,CACjB7Q,SAAUC,EAAS+Q,SACnBnX,KAAMA,EACN5T,UAAWA,EACXoR,YAAaA,OAEdtS,wBAAA5D,MAED,SAAyB8vB,EAAWpX,EAAMtO,EAAWtF,GACpD,OAAO,IAAI4qB,EAAO,CACjBvjB,GAAI2jB,EACJjR,SAAUC,EAASiR,eACnBrX,KAAMA,EACNtO,UAAWA,EACXtF,UAAWA,OAEZlB,gBAAA5D,MAED,SAAiBgK,GAChB,OAAO,IAAI0lB,EAAO,CACjB7Q,SAAUC,EAASkR,MACnBhmB,MAAOA,OAERpG,yBAAA5D,MAED,SAA0BgN,EAAMijB,EAAYjmB,GAC3C,OAAO,IAAI0lB,EAAO,CACjB7Q,SAAUC,EAASoR,gBACnBlmB,MAAOA,EACPgD,KAAMA,EACN8T,cAAemP,OAEhBrsB,kBAAA5D,MAED,SAAmB2M,GAClB,OAAO,IAAI+iB,EAAO,CACjB7Q,SAAUC,EAASqR,QACnBxjB,QAASA,OAEV/I,iBAAA5D,MAED,SAAkBya,GACjB,OAAO,IAAIiV,EAAO,CACjB7Q,SAAUC,EAASsR,OACnB3V,OAAQA,OAET7W,qBAAA5D,MAED,WACC,OAAO,IAAI0vB,EAAO,CACjB7Q,SAAUC,EAASuR,0BAEpBzsB,qBAAA5D,MAED,SAAsBgN,EAAM+T,GAC3B,OAAO,IAAI2O,EAAO,CACjB7Q,SAAUC,EAASwR,YACnBtjB,KAAMA,EACN+T,SAAUA,OAEXnd,oBAAA5D,MAED,SAAqB8vB,EAAW/e,EAAO1K,EAAavB,EAAWoR,GAC9D,OAAO,IAAIwZ,EAAO,CACjB7Q,SAAUC,EAASyR,WACnBvmB,MAAO,CACNmC,GAAI2jB,EACJ/e,MAAOA,EACP1K,YAAaA,EACbvB,UAAWA,EACXoR,YAAaA,QAGftS,sBAAA5D,MAED,SAAuBgK,EAAOlF,GAC7B,OAAO,IAAI4qB,EAAO,CACjB7Q,SAAUC,EAAS0R,aACnBxmB,MAAOA,EACPlF,UAAWA,OAEZlB,yBAAA5D,MAED,SAA0B2M,EAAStG,GAClC,OAAO,IAAIqpB,EAAO,CACjB7Q,SAAUC,EAASC,UACnB/U,MAAKymB,GAAAA,MACD9jB,OACHtG,YAAAA,UAGFqpB,CAAA,ICtGWgB,GAAS/sB,GACrB,SAAA+sB,EAAY3f,EAAOuU,EAAOlF,GAAQ5c,OAAAktB,GACjC7sB,KAAKmJ,KAAO+D,EACZlN,KAAK+U,MAAQ0M,EACbzhB,KAAKyC,QAAU8Z,CAChB,IAGKuQ,cACL,SAAAA,EAAYjd,EAAU4T,EAAQsJ,EAAO1J,GAAc1jB,OAAAmtB,GAClD9sB,KAAK6P,SAAWA,IAAaC,EAAK8V,OAAS9V,EAAKC,UAAYF,EAC5D7P,KAAKyjB,OAASA,EACdzjB,KAAK+sB,MAAQA,EACb/sB,KAAKqjB,aAAeA,EAKpB,OAJAvjB,EAAAgtB,SAAA/sB,WAAA5D,MACD,SAAYmrB,GACX,OAAO,IAAIwF,EAASxF,EAAUzX,WAAYyX,EAAU7D,SACnD6D,EAAU5D,aAAc4D,EAAUjE,kBACnCyJ,CAAA,IAGIE,GAAKltB,GACV,SAAAktB,EAAY7jB,EAAMmb,GAAiB3kB,OAAAqtB,GAClChtB,KAAKmJ,KAAOA,EACRmb,IACHtkB,KAAKskB,gBAAkBA,EAEzB,IAGK2I,GAAWntB,GAChB,SAAAmtB,EAAY9jB,EAAMyM,EAAWtE,GAAM3R,OAAAstB,GAClCjtB,KAAKmJ,KAAOA,EACRyM,IACH5V,KAAK4V,UAAYA,GAEdtE,IACHtR,KAAKsR,KAAOA,EAEd,IAGKgD,GAAYxU,GACjB,SAAAwU,EAAYhM,EAAImW,EAAWxd,EAAWoR,EAAanC,EAAUhD,GAAsB,IAAf2U,EAAKhiB,UAAA7D,eAAAY,IAAAiD,cAAAA,aAAQF,OAAA2U,GAChFtU,KAAKsI,GAAKA,EACVtI,KAAKye,UAAYA,EACjBze,KAAKqS,YAAcA,EACnBrS,KAAKqc,QAAUnM,EACflQ,KAAKqB,KAAOwgB,EACR3U,IACHlN,KAAKkN,MAAQA,GAEVjM,IACHjB,KAAKiB,UAAYA,EAEnB,IAGKqV,GAAWxW,GAChB,SAAAwW,EAAYhO,EAAImW,EAAWxd,EAAWoR,EAAaqP,EAASxU,EAAO1K,GAAa7C,OAAA2W,GAC/EtW,KAAKsI,GAAKA,EACVtI,KAAKye,UAAYA,EACjBze,KAAKqS,YAAcA,EACnBrS,KAAKqc,QAAUqF,EACXzgB,IACHjB,KAAKiB,UAAYA,GAEdiM,IACHlN,KAAKkN,MAAQA,GAEV1K,IACHxC,KAAKwC,YAAcA,EAErB,IAGK0qB,GAAkBptB,GACvB,SAAAotB,EAAY5kB,EAAImW,EAAWxd,EAAWoR,EAAawL,EAAYrG,GAAM7X,OAAAutB,GACpEltB,KAAKsI,GAAKA,EACVtI,KAAKye,UAAYA,EACjBze,KAAKqS,YAAcA,EACnBrS,KAAK6d,WAAaA,EAClB7d,KAAKwX,KAAOA,EACRvW,IACHjB,KAAKiB,UAAYA,EAEnB,IAGKksB,GAAertB,GACpB,SAAAqtB,EAAYhkB,EAAMmb,GAAiB3kB,OAAAwtB,GAClCntB,KAAKmJ,KAAOA,EACRmb,EAAgB8I,QACnBptB,KAAKotB,MAAQ9I,EAAgB8I,MAE/B,IAMD,SAASC,GAAeC,EAAavY,EAAOsR,EAAckH,GACzD,IAAMrgB,EAAQmZ,EAAamH,UAAUzY,EAAOA,EAAMzO,MAC5CmnB,EAAiB,CACtBtlB,OAAO,EACPolB,cAAAA,GAED,OAAO,IAAIV,GAAU3f,EAAO6H,EAAMzO,KACjConB,GAAYJ,EAAYhF,kBAAmBgF,EAAYhD,eAAgBvV,EAAOuY,EAAYlD,kBAAmB/D,EAAcoH,GAC7H,CAEA,SAASC,GAAYpF,EAAmBgC,EAAgBvV,EAAOqV,EAAmB/D,EAAcoH,GAC/F,IAAMxB,EAAYlX,EAAMzO,KACpBqnB,EAAY,KACZC,EAAa,KACXxR,EAAiBrH,EAAM9T,UACvBoR,EAAcuL,GAAI7I,EAAO,eAAe,GAC9C,OAAQA,EAAM8Y,aACd,KAAK9L,EAAUC,SACd,OAAO6J,GAAOiC,UAAU,IAAIxZ,GAAa2X,EAAW8B,EAAUC,QAAS5R,EAAgB/J,EACtF4b,GAAc3F,EAAmBgC,EAAgBvV,EAAOqV,EAAmB/D,EAAcoH,KAC3F,KAAK1L,EAAUmM,iBACd,OAAOrC,GAAOiC,UAAU,IAAIxZ,GAAa2X,EAAW8B,EAAUG,iBAAkB9R,EAAgB/J,EAC/F4b,GAAc3F,EAAmBgC,EAAgBvV,EAAOqV,EAAmB/D,EAAcoH,KAC3F,KAAK1L,EAAUoM,WACd,IAAMhoB,EAAQ,IAAImO,GAAa2X,EAAW8B,EAAUC,QAAS5R,EAAgB/J,EAC5E4b,GAAc3F,EAAmBgC,EAAgBvV,EAAOqV,EAAmB/D,EAAcoH,IAE1F,OADAG,EAAavH,EAAamH,UAAUzY,EAAOA,EAAMzO,MAC1CulB,GAAOuC,mBAAmBR,EAAYA,EAAYznB,GAE1D,KAAK4b,EAAUiK,SAEd,IAAMqC,EAAc,GASpB,OARInxB,MAAM2F,QAAQkS,EAAM6M,YACvB7M,EAAM6M,UAAUjY,SAAQ,SAAS2kB,GAChC,IAAMC,EAAeD,EAAShoB,KAC9BqnB,EAAYD,GAAYpF,EAAmBgC,EAAgBgE,EAAUlE,EAAmB/D,EAAcoH,GACtGG,EAAavH,EAAamH,UAAUc,EAAUA,EAAShoB,MACvD+nB,EAAY/f,KAAK,IAAIue,GAAUe,EAAYW,EAAcZ,OAGpD9B,GAAO2C,YAAYH,EAAajS,EAAgB/J,GAExD,KAAK0P,EAAUmK,eAEd,IAAMuC,EAAiBC,GAAwB3Z,EAAOuT,EAAmBgC,EAAgBF,EAAmB/D,EAAcoH,GAC1H,OAAO5B,GAAO8C,kBAAkB1C,EAAWwC,EAAgB1Z,EAAMxO,UAAW6V,GAE7E,KAAK2F,EAAU6M,OACd,IAAMC,EAAc,GAOpB,OANI3xB,MAAM2F,QAAQkS,EAAM6M,YACvB7M,EAAM6M,UAAUjY,SAAQ,SAAS2kB,GAChCX,EAAYD,GAAYpF,EAAmBgC,EAAgBgE,EAAUlE,EAAmB/D,EAAcoH,GACtGoB,EAAYvgB,KAAKqf,MAGZ9B,GAAOiC,UAAU,IAAIxZ,GAAa2X,EAAW8B,EAAUC,QAAS5R,EAAgB/J,EAAawc,IAErG,KAAK9M,EAAU+M,aACd,IAAMD,EAAc,GAOpB,OANI3xB,MAAM2F,QAAQkS,EAAM6M,YACvB7M,EAAM6M,UAAUjY,SAAQ,SAAS2kB,GAChCX,EAAYD,GAAYpF,EAAmBgC,EAAgBgE,EAAUlE,EAAmB/D,EAAcoH,GACtGoB,EAAYvgB,KAAKqf,MAGZ9B,GAAOiC,UAAU,IAAIxZ,GAAa2X,EAAW8B,EAAUe,aAAc1S,EAAgB/J,EAAawc,IAE1G,KAAK9M,EAAU4K,aACd,OAAOd,GAAOkD,gBAAgB,IAAI7B,GAAmBjB,EAAW8B,EAAUiB,OAAQ5S,EAAgB/J,EAAa0C,EAAMka,iBAAkBla,EAAMyC,OAE9I,KAAKuK,EAAUmN,cACdtB,EAAavH,EAAamH,UAAUzY,EAAOA,EAAMzO,MACjD,IAAMuoB,EAAc,GAOpB,OANI3xB,MAAM2F,QAAQkS,EAAM6M,YACvB7M,EAAM6M,UAAUjY,SAAQ,SAAS2kB,GAChCX,EAAYD,GAAYpF,EAAmBgC,EAAgBgE,EAAUlE,EAAmB/D,EAAcoH,GACtGoB,EAAYvgB,KAAKqf,MAGZ9B,GAAOiC,UAAU,IAAIxZ,GAAa2X,EAAW8B,EAAUoB,QAAS/S,EAAgB/J,EAAawc,EAAajB,IAElH,KAAK7L,EAAUqN,aAEd,IAAIC,EAMJ,OAPAzB,EAAavH,EAAanF,aAAanM,EAAM7H,OAEzC6H,EAAMvS,cACT6sB,EAAY,IAAIpC,GAAY5G,EAAanF,aAAanM,EAAMvS,aAC3D,KACAuS,EAAMvS,YAAcuS,EAAMvS,YAAY8O,KAAO,OAExCua,GAAOiC,UAAU,IAAIxX,GAAY2V,EAAW8B,EAAUqB,aAAchT,EAAgB/J,EA0gB7F,SAAsBiW,EAAmBgC,EAAgBvV,EAAOqV,EAAmB/D,GAClF,IAAMhK,EAAU,GACZnf,MAAM2F,QAAQkS,EAAMua,cACvBva,EAAMua,YAAY3lB,SAAQ,SAASmZ,GAElC,IAAMlM,EAASiV,GAAO0D,WAAWC,GAAYlF,EAAemF,UAAU3M,GAAWuD,IACjFhK,EAAQ/N,KAAKsI,MAGf,OAAOyF,CACR,CAnhBGqT,CAAapH,EAAmBgC,EAAgBvV,EAAOqV,EAAmB/D,GAAeuH,EAAYyB,IAEvG,KAAKtN,EAAU2K,WAEd,IAAI2C,EAMJ,OAPAzB,EAAavH,EAAanF,aAAanM,EAAM7H,OAEzC6H,EAAMvS,cACT6sB,EAAY,IAAIpC,GAAY5G,EAAanF,aAAanM,EAAMvS,aAC3DuS,EAAMvS,YAAcuS,EAAMvS,YAAYoT,UAAY,KAClDb,EAAMvS,YAAcuS,EAAMvS,YAAY8O,KAAO,OAExCua,GAAO8D,cAAc1D,EAAW2B,EAAYyB,EAAWjT,EAAgB/J,GAE/E,KAAK0P,EAAU6N,aACdhC,EAAavH,EAAamH,UAAUzY,EAAOA,EAAMzO,MACjD,IAAMuoB,EAAc,GAOpB,OANI3xB,MAAM2F,QAAQkS,EAAM6M,YACvB7M,EAAM6M,UAAUjY,SAAQ,SAAS2kB,GAChCX,EAAYD,GAAYpF,EAAmBgC,EAAgBgE,EAAUlE,EAAmB/D,EAAcoH,GACtGoB,EAAYvgB,KAAKqf,MAGZ9B,GAAOiC,UAAU,IAAIxZ,GAAa2X,EAAW8B,EAAU6B,aAAcxT,EAAgB/J,EAAawc,EAAajB,EAAY7Y,EAAM1T,OAEzI,KAAK0gB,EAAU8N,gBAEd,IAAIR,EADJzB,EAAavH,EAAamH,UAAUzY,EAAOA,EAAMzO,MAE7CyO,EAAMvS,cACT6sB,EAAY,IAAIpC,GAAY5G,EAAanF,aAAanM,EAAMvS,eAE7D,IAAMqsB,EAAc,GAQpB,OAPI3xB,MAAM2F,QAAQkS,EAAM6M,YACvB7M,EAAM6M,UAAUjY,SAAQ,SAAS2kB,GAChC,IAAMwB,EAAwB/xB,OAAOgyB,OAAO,GAAItC,EAAgB,CAAEtlB,OAAO,IACzEwlB,EAAYD,GAAYpF,EAAmBgC,EAAgBgE,EAAUlE,EAAmB/D,EAAcyJ,GACtGjB,EAAYvgB,KAAKqf,MAGZ9B,GAAOmE,mBAAmB,IAAI1b,GAAa2X,EAAW8B,EAAU7S,UAAWkB,EAAgB/J,EAAawc,EAAajB,GAAY,GAAQyB,GAEjJ,QAEC,OADAzb,EAAOrJ,KAAK,wBAA0BwK,EAAM8Y,YAAc,MACnD,KAET,CAKA,SAASI,GAAc3F,EAAmBgC,EAAgBvV,EAAOqV,EAAmB/D,EAAcoH,GACjG,IAAMpR,EAAU,GACV4T,EAAmB,GACzB,OAAK/yB,MAAM2F,QAAQkS,EAAMka,mBAGzBla,EAAMka,iBAAiBtlB,SAAQ,SAASmd,GAEvC,IACI0C,EADE0G,EAAO5H,EAAkB6H,aAAarJ,GAK5C,GAHIoJ,EAAKrgB,aAAeC,EAAKC,WAAaqa,IACzCZ,EAAeY,EAAkBgG,aAAaF,EAAKrK,eAE9C9Q,aAAiBqT,KAAkBrT,aAAiBqT,IAAgB8H,EAAKrH,iBAAmB,CACjG,IAAM1O,EAAOkW,GAAa/H,EAAmBxB,EAAW/R,EAAOyU,EAAcnD,EAAciE,EAAgBF,EAAmB,KAAMqD,GAC9H3kB,EAAU+iB,GAAOyE,YAAYnW,GAsBnC,GArBI+V,EAAKK,mBACRlU,EAAQ/N,KAAKud,GAAO2E,kBAEjBN,EAAKrL,YACRxI,EAAQ/N,KAAKud,GAAO4E,eAAeP,EAAKQ,cAAcrK,GAAe6J,EAAKS,sBAE3EtU,EAAQ/N,KAAKxF,GACTonB,EAAKtL,WACRvI,EAAQ/N,KAAKud,GAAO4E,eAAeP,EAAKU,aAAavK,GAAe6J,EAAKW,qBAEtEX,EAAKY,kBACRzU,EAAQ/N,KAAKud,GAAO2E,kBAUjBzb,EAAM6M,WAAa7M,EAAM6M,UAAU5lB,OAAS,EAC/C,IAAK,IAAI4Y,EAAI,EAAGA,EAAIG,EAAM6M,UAAU5lB,OAAQ4Y,IACvC9L,EAAQA,QAAQkiB,cAAgB+F,EAAYC,UAC9CloB,EAAQA,QAAQ8a,cAAgBqN,EAAaC,UAC7Cnc,EAAM6M,UAAUhN,GAAG9O,OAASic,EAAUmK,iBACF,IAApCnX,EAAM6M,UAAUhN,GAAG+M,cACnB5M,EAAM6M,UAAUhN,GAAGrO,YAAcuC,EAAQA,QAAQxC,OAClD2pB,EAAiB3hB,KAAKyG,EAAM6M,UAAUhN,GAAGrO,WACzCuC,EAAQ4T,gBACPgS,GAAwB3Z,EAAM6M,UAAUhN,GAAI0T,EAAmBgC,EAAgBF,EAAmB/D,EAAcoH,QASlHvwB,MAAM2F,QAAQkS,EAAM6M,YACvB7M,EAAM6M,UAAUjY,SAAQ,SAAS2kB,GAChC,IAYH,SAA+B2B,EAAkB1pB,GAChD,GAAIA,EACH,IAAK,IAAIqO,EAAI,EAAGA,EAAIqb,EAAiBj0B,OAAQ4Y,IAC5C,GAAIqb,EAAiBrb,KAAOrO,EAC3B,OAAO,EAIV,OAAO,CACR,CArBQ4qB,CAAsBlB,EAAkB3B,EAAS/nB,WAAY,CACjE,IAAMgW,EAASmR,GAAYpF,EAAmBgC,EAAgBgE,EAAUlE,EAAmB/D,EAAcoH,GACzGpR,EAAQ/N,KAAKiO,OAITF,GA3DCA,CA4DT,CAqBA,SAASqS,GAAwB3Z,EAAOuT,EAAmBgC,EAAgBF,EAAmB/D,EAAcoH,GAC3G,IAAMgB,EAAiB,GASvB,OARIvxB,MAAM2F,QAAQkS,EAAM6M,YACvB7M,EAAM6M,UAAUjY,SAAQ,SAAS2kB,GAChC,IAAMC,EAAeD,EAAShoB,KACxBqnB,EAAYD,GAAYpF,EAAmBgC,EAAgBgE,EAAUlE,EAAmB/D,EAAcoH,GACtGG,EAAavH,EAAamH,UAAUc,EAAUA,EAAShoB,MAC7DmoB,EAAengB,KAAK,IAAIue,GAAUe,EAAYW,EAAcZ,OAGvDc,CACR,CAEA,SAAS2C,GAAmB9J,EAAW+J,GACtC,IAAIrG,EACAlc,EAAOwY,EAAUgK,UACrB,GAAIhK,EAAU7D,SAAU,CACvB,IAAM8N,EAySR,SAA+BjK,GAC9B,IAAMiK,EAAa,GACnB,OAAQjK,EAAUgK,WAClB,KAAKthB,EAAUwhB,KACdD,EAAWvG,YAAc+F,EAAYU,SACrC,MACD,KAAKzhB,EAAU+V,KACVuB,EAAUoK,qBAAuB,EACpCH,EAAWvG,YAAc+F,EAAYY,YAErCJ,EAAWvG,YAAc+F,EAAYa,aAEtC,MACD,KAAK5hB,EAAUC,OACdshB,EAAWziB,KAAOkB,EAAUC,OAC5BshB,EAAWvG,YAAc+F,EAAYc,cACrC,MACD,QACCN,EAAWvG,YAAc+F,EAAYU,SAEtC,OAAOF,CACR,CA9TqBO,CAAsBxK,GACzC0D,EAAcuG,EAAWvG,YACrBuG,EAAWziB,OACdA,EAAOyiB,EAAWziB,WAGnB,OAAQwY,EAAUgK,WAClB,KAAKthB,EAAUwhB,KACdxG,EAAc+F,EAAYU,SAC1B,MACD,KAAKzhB,EAAU+V,KAGbiF,EADG1D,EAAUoK,qBAAuB,GAAML,IAAiBU,GAAkBzK,GAC/DyJ,EAAYiB,YAEZjB,EAAYC,SAE3B,MACD,KAAKhhB,EAAUC,OACdnB,EAAOkB,EAAUC,OAEhB+a,EADGqG,GA8UP,SAAgC/J,GAC/B,GAAIA,EAAU7D,UAAY6D,EAAU5D,aACnC,OAAOqO,GAAkBzK,GAE1B,OAAO,CACR,CAnVuB2K,CAAuB3K,GAC5ByJ,EAAYc,cAEZd,EAAYmB,aAE3B,MACD,KAAKliB,EAAUmiB,WACdnH,EAAc+F,EAAYoB,WAC1B,MACD,KAAKniB,EAAUoiB,MACdtjB,EAAOkB,EAAUoiB,MACjBpH,EAAc+F,EAAYsB,UAC1B,MACD,KAAKriB,EAAUsiB,IACdxjB,EAAOkB,EAAUsiB,IACjBtH,EAAc+F,EAAYsB,UAC1B,MACD,KAAKriB,EAAUuiB,MACdzjB,EAAOkB,EAAUuiB,MACjBvH,EAAc+F,EAAYsB,UAC1B,MACD,QACCrH,EAAc+F,EAAYsB,UAG5B,MAAO,CAAErH,YAAaA,EAAalc,KAAMA,EAC1C,CAKA,SAASuhB,GAAa/H,EAAmBxB,EAAW/R,EAAOyd,EAAqBnM,EAAciE,EAAgBF,EAAmBqI,EAAYhF,GAC5I,IAAM4D,OAAqC,IAAfoB,GAA8BA,EAGpDnL,EAAY+J,EAAeoB,EAAanK,EAAkB6H,aAAarJ,GAEvEmE,EAAiB3D,EAAUoL,kBAAkBrM,GAC7CzC,EAAc0D,EAAU1D,YACxBS,EAAWiD,EAAUjD,SACvBiD,EAAUhD,kBACbgD,EAAUhD,gBAAkB,IAAI6I,GAAgB9G,EAAamH,UAAUlG,EAAUhD,gBAAiBgD,EAAUhhB,MAAOghB,EAAUhD,kBAE9H,IACIqO,EADEC,EAAe,IAAI5F,GAAM3G,EAAamH,UAAUlG,EAAWA,EAAUhhB,MAAOghB,EAAUhD,iBAExFgD,EAAU9kB,cACbmwB,EAAc,IAAI1F,GAAY5G,EAAawM,SAASvL,EAAWA,EAAUhhB,MACxEghB,EAAU9kB,YAAc8kB,EAAU9kB,YAAYoT,UAAY,KAC1D0R,EAAU9kB,YAAc8kB,EAAU9kB,YAAY8O,KAAO,OAIvD,IACIxC,EACAkc,EACA3d,EACAme,EACAC,EACAF,EAEAhD,EACAC,EACAC,EACAC,EACAC,EACAvmB,EAsIAqN,EAKAyb,EAIAtU,EA5JA+M,GAAe,EAOfmB,EAAewC,EAAUxC,aAOzBwG,EAAgBhE,EAAUgE,cAG9B,GAAK+F,GAAgB/J,EAAUgK,YAActhB,EAAUgf,OAGtD,OAAQ1H,EAAUzX,YAClB,KAAKC,EAAKqW,OACT,IAAM2M,EAAe1B,GAAmB9J,EAAW+J,GACnDrG,EAAc8H,EAAa9H,YAC3Blc,EAAOgkB,EAAahkB,KACpB,MAED,KAAKgB,EAAKijB,SACT/H,EAAc+F,EAAYiC,cAC1B,MACD,KAAKljB,EAAKsW,QACJkB,EAAUxe,SAAWwe,EAAUxe,UAAYioB,EAAYkC,WAC3DtP,GAAe,EACfqH,EAAc+F,EAAYkC,UAE3B,MACD,KAAKnjB,EAAKojB,QACV,KAAKpjB,EAAKqjB,KACV,KAAKrjB,EAAKsjB,OAERpI,EADG1D,EAAU7D,SACCsN,EAAYU,SAEZV,EAAYsC,YAE3B,MACD,KAAKvjB,EAAKwjB,KACTxkB,EAAOgB,EAAKwjB,KAEXtI,EADG1D,EAAU7D,SACCsN,EAAYU,SAEZV,EAAYwC,UAE3B,MACD,KAAKzjB,EAAK0jB,KACT1kB,EAAOgB,EAAK0jB,KAEXxI,EADG1D,EAAU7D,SACCsN,EAAYU,SAEZV,EAAY0C,UAE3B,MACD,KAAK3jB,EAAK4jB,UACT1I,EAAc+F,EAAY2C,UAC1B,MACD,KAAK5jB,EAAKC,UACT,IAAMyZ,EAAe6H,EAAejH,EAAkBgG,aAAa9I,EAAUzB,YAAc2M,EAE3F,GAAIhJ,EAAc,CAkBjB,GAjBIA,EAAamK,gBAChBpI,EAmLL,SAAgC/B,EAAcnD,EAAc+D,EAAmBqD,GAE9E,IAAMtnB,EAAQ,IAAImO,GACjBkV,EAAaljB,KACbynB,EAAUC,QACV,kCACA,EACAC,GAAczE,EAAalB,kBAC1BkB,EAAac,eACbd,EACAY,EACA/D,EACAoH,IAEIG,EAAavH,EAAamH,UAAUhE,EAAcA,EAAaljB,MACrE,OAAOulB,GAAOuC,mBAAmB,MAAOR,EAAYznB,EACrD,CAnMiBytB,CAAuBpK,EAAcnD,EAAc+D,EAAmBqD,IAEnFjC,EAAWhC,EAAaqK,oBAGxBpI,EAAajC,EAAasK,mBAE1BzmB,EAAc,GACVmc,EAAalB,mBAAqBprB,MAAM2F,QAAQ2mB,EAAalB,kBAAkBrB,YAClFuC,EAAalB,kBAAkBrB,UAAUtd,SAAQ,SAASgd,GACzD,IAAMoN,EAAgBC,GAAgBrN,EAAON,EAAc+D,EAAmBqD,GAC9EpgB,EAAYiB,KAAKylB,OAKdzM,EAAU5D,cAAgB4D,EAAU7D,WAAa+F,EAAanB,cAAe,CACjF,IAAM0L,EAAgBC,GAAgBxK,EAAanB,cAAehC,EAAc+D,EAAmBqD,GACnGpgB,EAAYyS,QAAQiU,GAEjBzM,EAAU7D,UAAY6D,EAAU5D,eAC7B2N,GAAgBtc,QAAoC,IAApBA,EAAM8Y,WAA6B9Y,EAAM8Y,cAAgB9L,EAAUmM,kBACvG5G,EAAUxe,UAAYioB,EAAYkD,gBAClC3M,EAAUgK,YAActhB,EAAUC,QACnC+a,EAAc+F,EAAYkD,eAC1BnP,EAAe0E,EAAa1E,aAC5ByD,EAAeiB,EAAajB,aAC5BC,EAAgBgB,EAAahB,cAC7BC,EAASe,EAAaf,OACtBC,EAAmBc,EAAad,mBAEhCsC,EAAc+F,EAAYmD,oBAC1BpP,EAAe0E,EAAa1E,aAC5ByD,EAAeiB,EAAajB,aAC5BC,EAAgBgB,EAAahB,cAC7BC,EAASe,EAAaf,QAGnBe,EAAapnB,UAChBA,EAoNN,SAAsB+xB,EAAgB9N,GACrC,IAAMjkB,EAAU,GAIhB,OAHA+xB,EAAenM,WAAWre,SAAQ,SAACke,GAClCzlB,EAAQkM,KAKV,SAAqB0F,EAAQqS,GAC5B,IAAI+N,EAIAC,EAHArgB,EAAO9G,QACVknB,EAAc,IAAIpH,GAAM3G,EAAamH,UAAUxZ,EAAQA,EAAO1L,MAG3D0L,EAAOxR,cACV6xB,EAAoB,IAAIpH,GAAY5G,EAAawM,SAAS7e,EAAQA,EAAOxR,eAE1E,OAAO,IAAI+O,GAAOyC,EAAO1L,GAAI8rB,EAAaC,EAAmBrgB,EAAO5C,KAAM4C,EAAOyT,WAAYzT,EAAO0T,QAAS1T,EAAO2T,QACrH,CAfe2M,CAAYH,EAAeI,UAAU1M,EAAUvf,IAAK+d,OAE3DjkB,CACR,CA1NgBoyB,CAAahL,EAAapnB,QAASikB,MAG9C2E,EAAc+F,EAAY0D,gBACtBjL,EAAab,SAChBA,EAASa,EAAab,SAIxB2C,EAAgB9B,EAAa1jB,UAE7BklB,EAAc+F,EAAYsB,UAE3B,MAED,KAAKviB,EAAK8V,OACT,GAAIyL,GACHviB,EAAOwY,EAAUgK,aACJthB,EAAUC,OACtB+a,EAAc+F,EAAYmB,cAE1Bte,EAAOrJ,KAAK,sDAAwD+c,EAAUhhB,MAC9E0kB,EAAc+F,EAAY2D,eAErB,GAAIpN,EAAUqN,kBAAmB,CACvC,IAAM7B,EAAe1B,GAAmB9J,EAAW+J,GACnDrG,EAAc8H,EAAa9H,YAC3Blc,EAAOgkB,EAAahkB,UAEpB8E,EAAOrJ,KAAK,qDAAuD+c,EAAUhhB,MAC7E0kB,EAAc+F,EAAY2D,SAE3B,MACD,QACC5lB,EAAO,MAAQwY,EAAUzX,WAAa,MACtCmb,EAAc+F,EAAYU,cA7H3BzG,EAAc+F,EAAY/B,OAkIvB1H,EAAUgK,YAActhB,EAAU+V,OACrCtW,EA+LF,SAA+B6X,EAAWjB,GACzC,GAAInpB,MAAM2F,QAAQykB,EAAUxB,kBAAmB,CAC9C,IAAI/lB,EAEHA,EADGunB,EAAUvG,aACPuG,EAAUvG,aAEVuG,EAAUhhB,KAEjB,IAAMsuB,EAAc,GAIpB,OAHAtN,EAAUxB,iBAAiBnc,SAAQ,SAASkrB,GAC3CD,EAAYtmB,KAAK+X,EAAayO,eAAe/0B,EAAKg1B,OAAOF,QAEnDD,EAER,MAAO,EACR,CA9MgBI,CAAsB1N,EAAWjB,IAI5CiB,EAAUgK,YAActhB,EAAU+V,OACrCmF,EA2MF,SAAoC5D,EAAWjB,GAC9C,GAAInpB,MAAM2F,QAAQykB,EAAUxB,kBAAmB,CAC9C,IAAI/lB,EAEHA,EADGunB,EAAUvG,aACPuG,EAAUvG,aAEVuG,EAAUhhB,KAEjB,IAAM2uB,EAAa,GAInB,OAHA3N,EAAUxB,iBAAiBnc,SAAQ,SAASkrB,GAC3CI,EAAW3mB,KAAK+X,EAAa6O,cAAcn1B,EAAKg1B,OAAOF,QAEjDI,EAER,MAAO,EACR,CA1NeE,CAA2B7N,EAAWjB,KAG/CgL,GAAgB/J,EAAUhC,YAC9B1O,EAAS4Y,GAAYlF,EAAemF,UAAUnI,EAAUhC,WAAYe,IAErE,IA2DwBle,EAAOolB,EAAe1E,EA3DxC1F,EAAW,GAwDjB,OAvDAA,EAAS7c,KAAOghB,EAAUhhB,KAC1B6c,EAASjW,MAAQ0lB,EACjBzP,EAAS3gB,YAAcmwB,EACvBxP,EAASQ,aAAiD,kBAA3B2D,EAAU3D,aAA6B2D,EAAU3D,aAAeA,EAC/FR,EAAS6H,YAAc1D,EAAU3a,WAAWqe,GAC5C7H,EAASvT,SAAWkd,GAAShL,KAAKwF,GAClCnE,EAASmI,cAAgBA,EACzBnI,EAASrU,KAAOA,EAChBqU,EAAS8H,eAAiBA,EAC1B9H,EAASS,YAAcA,EACvBT,EAAS3T,OAAS8X,EAAUxB,iBAC5B3C,EAAS1T,YAAcA,EACvB0T,EAAS+H,WAAaA,EACtB/H,EAASa,WAAasD,EAAUtD,WAChCb,EAASc,SAAWqD,EAAUrD,SAC9Bd,EAASe,WAAaoD,EAAUpD,WAChCf,EAASgB,UAAYmD,EAAUnD,UAC/BhB,EAASla,UAAYqe,EAAUre,UAC/Bka,EAAS9V,YAAcA,EACvB8V,EAASqI,SAAWA,EACpBrI,EAASsI,WAAaA,EACtBtI,EAASoI,UAAYA,EACrBpI,EAAS2B,aAAeA,EACxB3B,EAASkB,SAAWA,EACpBlB,EAASsB,SAAW6C,EAAU7C,SAC9BtB,EAASuB,eAAiB4C,EAAU5C,eACpCvB,EAAS1V,QAAU6Z,EAAU7Z,QAC7B0V,EAASwB,UAAY2C,EAAU3C,UAC/BxB,EAASoF,aAAeA,EACxBpF,EAAS4B,gBAAkBuC,EAAUvC,gBACrC5B,EAASqF,cAAgBA,EACzBrF,EAAS6B,WAAasC,EAAUtC,WAChC7B,EAAS8B,WAAaqC,EAAUrC,WAChC9B,EAAS+B,gBAAkBoC,EAAUpC,gBACrC/B,EAAS3L,KAAO8P,EAAU9P,KAC1B2L,EAASgC,KAAOmC,EAAUnC,KAC1BhC,EAASiC,aAAekC,EAAUlC,aAClCjC,EAASsF,OAASA,EAClBtF,EAASkC,OAASiC,EAAUjC,OAC5BlC,EAASuF,iBAAmBA,EAC5BvF,EAASwF,OAASA,EAClBxF,EAASlE,QAAUqI,EAAUrI,QAC7BkE,EAASvM,OAASA,EAClBuM,EAASoC,mBAAqB+B,EAAU/B,mBACxCpC,EAASliB,UAAYqmB,EAAUrmB,UAC/BkiB,EAASqC,kBAAoB8B,EAAU9B,kBACvCrC,EAAS/gB,QAAUA,EACnB+gB,EAAShb,OAWeA,EAXSslB,EAAetlB,MAWjBolB,EAXwBE,EAAeF,cAWxB1E,EAXuCvB,EAAUuB,iBAYxF1gB,IACLolB,IAAkB6H,GAAela,WACjCqS,IAAkB6H,GAAela,WAAa2N,IAb5CwI,IACHlO,EAASY,QAAUuD,EAAUvD,QAC7BZ,EAAS5U,MAAQ+Y,EAAU+N,QAAQ,GACnClS,EAASiB,UAAYkD,EAAUlD,UAC/BjB,EAASwI,WAAarE,EAAU/C,MAChCpB,EAASqB,UAAY8C,EAAU9C,WAEzB,IAAIuG,GAAQ5H,EACpB,CAoDA,SAAS6Q,GAAgB1M,EAAWjB,EAAc+D,EAAmBqD,GAOpE,OAAO4C,GANmB,KACR,KACJ,KACO/I,EAAUzX,aAAeC,EAAKC,UAAYqa,EAAkBgG,aAAa9I,EAAUzB,YAAc,KAG/CQ,EAFhD,KAE8E+D,EADlF9C,EACiHmG,EACrI,CAeA,SAASsE,GAAkBzK,GAC1B,MAA+B,aAAxBA,EAAUlD,WAAoD,aAAxBkD,EAAUlD,SACxD,CAiBA,SAASoL,GAAY5Y,EAAQyP,GAC5B,IACIiP,EADEC,EAAc,IAAIvI,GAAM3G,EAAamH,UAAU5W,EAAQA,EAAOtO,KAKpE,OAHIsO,EAAOpU,cACV8yB,EAAa,IAAIrI,GAAY5G,EAAawM,SAASjc,EAAQA,EAAOtO,MAE5D,IAAIka,GAAO5L,EAAOtO,GAAIitB,EAAaD,EAAY1e,EAAO9N,QAAS8N,EAAOY,KAAMZ,EAAOsB,MAAOtB,EAAO5C,OACzG,CC3vBA,SAAA3H,GAAAmpB,EAAAC,OAAAC,sBAAAC,QAAAH,EAAAG,OAAAC,WAAAJ,oBAAAE,MAAAx4B,MAAA2F,QAAA2yB,KAAAE,EAAA,SAAAF,EAAAK,OAAAL,6BAAAA,SAAAM,GAAAN,EAAAK,OAAAtpB,EAAAxO,OAAAF,UAAAI,SAAAG,KAAAo3B,GAAAO,uBAAAxpB,GAAAipB,EAAAh3B,cAAA+N,EAAAipB,EAAAh3B,YAAA8H,iBAAAiG,WAAAA,SAAArP,MAAA84B,KAAAR,oBAAAjpB,8CAAA0pB,KAAA1pB,UAAAupB,GAAAN,EAAAK,GAAAK,CAAAV,KAAAC,GAAAD,oBAAAA,EAAAx5B,QAAA05B,IAAAF,EAAAE,OAAA9gB,IAAAuhB,sBAAA7pB,EAAA6pB,EAAA5pB,oBAAAqI,GAAA4gB,EAAAx5B,QAAAwQ,UAAAA,QAAArQ,MAAAq5B,EAAA5gB,OAAAvF,WAAA+mB,SAAAA,GAAA9mB,EAAA6mB,aAAAE,uJAAAjnB,EAAAknB,KAAAC,YAAAjqB,aAAAopB,EAAAA,EAAAt3B,KAAAo3B,IAAAjpB,iBAAAiqB,EAAAd,EAAAe,cAAAH,EAAAE,EAAAhqB,KAAAgqB,GAAAnnB,WAAAqnB,GAAAH,KAAAnnB,EAAAsnB,GAAApnB,iBAAAgnB,SAAAZ,UAAAA,sBAAAa,QAAAnnB,KAAA,SAAA0mB,GAAAa,EAAAC,UAAAA,GAAAA,EAAAD,EAAA36B,UAAA46B,EAAAD,EAAA36B,gBAAA4Y,IAAAiiB,MAAA35B,MAAA05B,GAAAhiB,EAAAgiB,EAAAhiB,IAAAiiB,EAAAjiB,GAAA+hB,EAAA/hB,UAAAiiB,EA8BA,SAASC,GAAcl7B,EAAQyqB,GAC9B,IAAK,IAAIpb,KAAKrP,EACT6a,GAAI7a,EAAQqP,IACU,WAArB8rB,EAAOn7B,EAAOqP,KAAiC,OAAdrP,EAAOqP,KACvCrP,EAAOqP,GAAG+rB,QACbp7B,EAAOqP,GAAG+rB,gBAAkB3Q,EAAanF,aAAatlB,EAAOqP,GAAG+rB,SAEhEF,GAAcl7B,EAAOqP,GAAIob,GAK9B,6hCChBqB4Q,cACpB,SAAAA,EAAYC,EAAahqB,EAAOgd,EAAeC,EAAMH,EAAYC,EAAY5N,EAASja,EAASoV,EAAM2f,EAAYxW,EAAWvP,EAAMmZ,GAAS5qB,OAAAs3B,GAC1Ij3B,KAAKk3B,YAAcA,EACnBl3B,KAAKkN,MAAQA,EACblN,KAAKkqB,cAAgBA,EACrBlqB,KAAKmqB,KAAOA,EACZnqB,KAAKgqB,WAAaA,EAClBhqB,KAAKiqB,WAAaA,EAClBjqB,KAAKqc,QAAUA,EACfrc,KAAKoC,QAAUA,EACfpC,KAAKwX,KAAOA,EACZxX,KAAKm3B,WAAaA,EAClBn3B,KAAK2gB,UAAYA,EACjB3gB,KAAKoR,KAAOA,EACZpR,KAAKuqB,QAAUA,EAmDf,OAhDDzqB,EAAAm3B,SAAAl3B,eAAA5D,MAMA,SAAgB+qB,EAAUqG,EAAe6J,GACxC,IA6CKC,EACAC,EA9CCC,EAAUxN,GAAYyN,gBAAgB3W,GAAWqG,EAAXrG,CAAqB,mBAAoBA,GAAWqG,EAAXrG,CAAqB,cAAeA,GAAWqG,EAAXrG,CAAqB,iBAC7IA,GAAWqG,EAAXrG,CAAqB,YAChBF,EAAYE,GAAWqG,EAAXrG,CAAqB,aACjCsW,EAAatW,GAAWqG,EAAXrG,CAAqB,cACxC,GAAI0W,EAAS,CACZ,IAAMlR,EAAe,IAAI3F,GAAaC,GAChC9L,EAAO,GACb,GAAI0iB,EAAQlN,eAAiBkN,EAAQlN,cAAc/H,OAAQ,CAAA,IACVnW,EADUC,EAAAC,GACtCkrB,EAAQlN,cAAc/H,QAAM,IAAhD,IAAAlW,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAkD,CAAA,IAAvCuI,EAAK5I,EAAAhQ,MACf0Y,EAAKvG,KAAK+e,GAAekK,EAASxiB,EAAOsR,EAAckH,WACvDne,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAGF,IAAImoB,EAAoB5W,GAAWqG,EAAXrG,CAAqB,sBACzCuW,IACHK,EAAoBC,EAAsBD,EAAmBF,EAAQjP,kBAAkBrB,YAGxF,IAAMzP,EAAO,CACZigB,kBAAmBA,EACnBE,oBAAqB9W,GAAWqG,EAAXrG,CAAqB,yBAC1C+W,gBAAiB/W,GAAWqG,EAAXrG,CAAqB,qBAGjCgX,EADUtK,IAAkB6H,GAAela,WAAaqS,IAAkB6H,GAAe0C,MAC3D33B,EAAKG,MAAQH,EAAKC,MACtD,OAAO,IAAI62B,EAAKM,EAAQjxB,KACvBixB,EAAQrqB,MACRqqB,EAAQrN,cACRqN,EAAQpN,KACRoN,EAAQQ,eAAeF,GACvBN,EAAQtN,WACR,CAAC4B,GAAOmM,gBAAgBnjB,KAcrBwiB,EAAQ,IAAI9lB,GAAO,KAAM,MAAM,EAAM,IACrC+lB,EAAY,IAAI/lB,GAAO,SAAU,UAAU,EAAO,IACjD,CAAC8lB,EAAOC,IAdZ9f,ED9DJ,SAA2B2f,EAAY9Q,GACtC,GAAI8Q,GAAcj6B,MAAM2F,QAAQs0B,GAAa,CAAA,IACZhrB,EADYC,EAAAC,GACtB8qB,GAAU,IAAhC,IAAA/qB,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MACCsqB,GADiB3qB,EAAAhQ,MACQkqB,SACzBjX,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAEF,OAAO6nB,CACR,CCwDIc,CAAkBd,EAAY9Q,GAC9B1F,EACA4W,EAAQnmB,KACRiV,EAAanF,aAAaqW,EAAQhN,UAGpC,OAAO,SACP0M,CAAA,IAOD,IAEK1lB,GAAMzR,GACX,SAAAyR,EAAYjJ,EAAIa,EAAM+uB,EAAW3f,GAAK5Y,OAAA4R,GACrCvR,KAAKsI,GAAKA,EACVtI,KAAKmJ,KAAOA,EACZnJ,KAAKk4B,UAAYA,EACjBl4B,KAAKuY,IAAMA,CACZ,4aC3F+C,IAE3B4f,YAAsBC,GAAA74B,EAAA44B,EAAS3V,IAAT,IAAA/iB,EAAAC,GAAAy4B,GAC1C,SAAAA,EAAYE,EAAWC,EAAeC,EAASC,EAAsBC,GAAuB,IAAAhyB,EAMxC,OANwC9G,OAAAw4B,IAC3F1xB,EAAAhH,EAAArB,UAAMi6B,IACDA,UAAYA,EACjB5xB,EAAK6xB,cAAgBA,EACrB7xB,EAAK8xB,QAAUA,EACf9xB,EAAK+xB,qBAAuBA,EAC5B/xB,EAAKgyB,sBAAwBA,EAAsBhyB,EAkBnD,OAfD3G,EAAAq4B,IAAAp4B,SAAA5D,MACA,WACC6D,KAAKw4B,qBAAqBx4B,KAAKq4B,UAAUK,WAAY14B,KAAKu4B,QAASv4B,KAAKq4B,UAAU5K,eAAgBztB,KAAKq4B,UAAUM,SAAU34B,KAAKq4B,UAAUO,iBAC1I74B,WAAA5D,MAED,WACC6D,KAAKw4B,qBAAqBx4B,KAAKs4B,cAAcI,WAAY14B,KAAKu4B,QAASv4B,KAAKs4B,cAAc7K,eAAgBztB,KAAKs4B,cAAcK,SAAU34B,KAAKs4B,cAAcM,iBAC1J74B,WAAA5D,MAED,WACC6D,KAAKw4B,qBAAqBx4B,KAAKq4B,UAAUK,WAAY14B,KAAKu4B,QAASv4B,KAAKq4B,UAAU5K,eAAgBztB,KAAKq4B,UAAUM,SAAU34B,KAAKq4B,UAAUO,iBAC1I74B,eAAA5D,MAED,WACC,OAAO6D,KAAKy4B,0BACZN,CAAA,IC1CEU,GAAWv9B,GACXw9B,GAAiBt9B,MCDjBu9B,GAAcz9B,EACdsD,GAAapD,EACbw9B,GDQJ,SAAwBC,GACtB,OAAOJ,IAAS,SAASj9B,EAAQs9B,GAC/B,IAAIn9B,GAAS,EACTC,EAASk9B,EAAQl9B,OACjBm9B,EAAan9B,EAAS,EAAIk9B,EAAQl9B,EAAS,QAAKY,EAChDw8B,EAAQp9B,EAAS,EAAIk9B,EAAQ,QAAKt8B,EAWtC,IATAu8B,EAAcF,EAASj9B,OAAS,GAA0B,mBAAdm9B,GACvCn9B,IAAUm9B,QACXv8B,EAEAw8B,GAASN,GAAeI,EAAQ,GAAIA,EAAQ,GAAIE,KAClDD,EAAan9B,EAAS,OAAIY,EAAYu8B,EACtCn9B,EAAS,GAEXJ,EAASmC,OAAOnC,KACPG,EAAQC,GAAQ,CACvB,IAAIq9B,EAASH,EAAQn9B,GACjBs9B,GACFJ,EAASr9B,EAAQy9B,EAAQt9B,EAAOo9B,GAGpC,OAAOv9B,IAEX,EC/BI09B,GAAch8B,GACdi8B,GAAc16B,GACd4E,GAAO+1B,GAMPt7B,GAHcH,OAAOF,UAGQK,eA8CjCu7B,GAZaT,IAAe,SAASp9B,EAAQy9B,GAC3C,GAAIE,GAAYF,IAAWC,GAAYD,GACrCz6B,GAAWy6B,EAAQ51B,GAAK41B,GAASz9B,QAGnC,IAAK,IAAImE,KAAOs5B,EACVn7B,GAAeE,KAAKi7B,EAAQt5B,IAC9Bg5B,GAAYn9B,EAAQmE,EAAKs5B,EAAOt5B,GAGtC,ICrCA,SAAS24B,KAA+B,IAApB50B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EAC/ByL,EAAauO,EAAO8iB,UAAY9iB,EAAO8iB,SAASrxB,WAAauO,EAAO8iB,SAASrxB,WAAa,KAChG,OAAQuO,EAAO9Q,MACf,KAAK1B,GACJ,GAAmB,OAAfiE,EACH,OAAOvE,EAER,IAAI61B,EAAW71B,EAuBf,YAtB8B,IAAnBuE,EAAWM,UACoB,IAA9BgxB,EAAStxB,EAAW/B,QAC9BqzB,EAAStxB,EAAW/B,MAAQ,SAEC,IAAnB+B,EAAWO,UACoC,IAA9C+wB,EAAStxB,EAAW/B,MAAM+B,EAAWM,OAC/CgxB,EAAStxB,EAAW/B,MAAM+B,EAAWM,KAAO,SAGR,IAA1BN,EAAWA,WACrBuxB,GAA0BvxB,EAAWA,WAAYsxB,EAAStxB,EAAW/B,MAAM+B,EAAWM,KAAKN,EAAWO,KAAMgO,EAAO8iB,SAASv9B,OAE5Hw9B,EAAStxB,EAAW/B,MAAM+B,EAAWM,KAAKN,EAAWO,KAAOgO,EAAO8iB,SAASv9B,YAElC,IAA1BkM,EAAWA,WAC5BuxB,GAA0BvxB,EAAWA,WAAYsxB,EAAStxB,EAAW/B,MAAM+B,EAAWM,KAAMiO,EAAO8iB,SAASv9B,OAE5Gw9B,EAAStxB,EAAW/B,MAAM+B,EAAWM,KAAOiO,EAAO8iB,SAASv9B,OAG7Dw9B,EAAStxB,EAAW/B,MAAQsQ,EAAO8iB,SAASv9B,MAEtC4B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAKx1B,GACJ,OAAOpG,OAAOgyB,OAAO,GAAInZ,EAAO8hB,YAEjC,KAAKr0B,GACJ,IAAM2V,EAAYlW,EAIlB,OAHmB,OAAfuE,QAAkD,IAApBA,EAAW/B,aACrC0T,EAAU3R,EAAW/B,MAEtBvI,OAAOgyB,OAAO,GAAIjsB,EAAOkW,GAEjC,QACC,OAAOlW,EAET,CAEA,SAAS81B,GAA0BvxB,EAAYsxB,EAAUx9B,QAC1B,IAAnBkM,EAAWM,WACS,IAAnBN,EAAWO,UACmB,IAA7B+wB,EAAStxB,EAAWM,OAC9BgxB,EAAStxB,EAAWM,KAAO,SAGS,IAA1BN,EAAWA,WACrBuxB,GAA0BvxB,EAAWA,WAAYsxB,EAAStxB,EAAWM,KAAKN,EAAWO,KAAMzM,GAE3Fw9B,EAAStxB,EAAWM,KAAKN,EAAWO,KAAOzM,GAG5Cw9B,EAAStxB,EAAWM,KAAOxM,EAG9B,CC3DA,SAAS09B,KAA2B,IAApB/1B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EACjC,OAAQga,EAAO9Q,MACf,KAAKvB,GACJ,IAAMo1B,EAAW71B,EACXuE,EAAauO,EAAO9S,MAAMuE,WAIhC,QAHyC,IAA9BsxB,EAAStxB,EAAW/B,QAC9BqzB,EAAStxB,EAAW/B,MAAQ,SAEC,IAAnB+B,EAAWM,IAAqB,CAC1C,IAAMmxB,EAASzxB,EAAWM,IAAI1K,WAI9B,QAHiD,IAAtC07B,EAAStxB,EAAW/B,MAAMwzB,KACpCH,EAAStxB,EAAW/B,MAAMwzB,GAAU,SAEP,IAAnBzxB,EAAWO,IAAqB,CAC1C,IAAMmxB,EAAS1xB,EAAWO,IAAI3K,gBAC2B,IAA9C07B,EAAStxB,EAAW/B,MAAMwzB,GAAQC,KAC5CJ,EAAStxB,EAAW/B,MAAMwzB,GAAQC,GAAU,IAE7CJ,EAAStxB,EAAW/B,MAAMwzB,GAAQC,GAAU,CAC3C59B,MAAOya,EAAO9S,MAAM3H,YAGrBw9B,EAAStxB,EAAW/B,MAAMwzB,GAAU,CACnC39B,MAAOya,EAAO9S,MAAM3H,YAItBw9B,EAAStxB,EAAW/B,MAAQ,CAC3BnK,MAAOya,EAAO9S,MAAM3H,OAGtB,OAAO4B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAKr1B,GACJ,OAAOvG,OAAOgyB,OAAO,GAAInZ,EAAOijB,QAEjC,QACC,OAAO/1B,EAGT,CCxCA,SAAS+1B,KAA2B,IAApB/1B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EACjC,OAAQga,EAAO9Q,MACf,KAAKrB,GACJ,IAAMk1B,EAAW71B,EAIjB,OAHA61B,EAAS/iB,EAAO9S,MAAMyW,QAAQjU,MAAQ,CACrCnK,MAAOya,EAAO9S,MAAM3H,OAEd4B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAKn1B,GACJ,OAAOzG,OAAOgyB,OAAO,GAAInZ,EAAOijB,QAEjC,QACC,OAAO/1B,EAGT,CChBA,SAAS+1B,KAA2B,IAApB/1B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EACjC,OAAQga,EAAO9Q,MACf,KAAKnB,GACJ,IAAMg1B,EAAW71B,EAIjB,OAHA61B,EAAS/iB,EAAO9S,MAAMgf,SAASxc,MAAQ,CACtCnK,MAAOya,EAAO9S,MAAM3H,OAEd4B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAKj1B,GACJ,OAAO3G,OAAOgyB,OAAO,GAAInZ,EAAOijB,QAEjC,QACC,OAAO/1B,EAGT,CCdA,SAASwV,KAA6B,IAApBxV,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EACnC,OAAQga,EAAO9Q,MACf,KAAKjB,GACJ,IAAM80B,EAAW71B,EACXuE,EAAauO,EAAOogB,QAAQ3uB,WAIlC,QAHyC,IAA9BsxB,EAAStxB,EAAW/B,QAC9BqzB,EAAStxB,EAAW/B,MAAQ,SAEC,IAAnB+B,EAAWM,IAAqB,CAC1C,IAAMmxB,EAASzxB,EAAWM,IAAI1K,WAI9B,QAHiD,IAAtC07B,EAAStxB,EAAW/B,MAAMwzB,KACpCH,EAAStxB,EAAW/B,MAAMwzB,GAAU,SAEP,IAAnBzxB,EAAWO,IAAqB,CAC1C,IAAMmxB,EAAS1xB,EAAWO,IAAI3K,gBAC2B,IAA9C07B,EAAStxB,EAAW/B,MAAMwzB,GAAQC,KAC5CJ,EAAStxB,EAAW/B,MAAMwzB,GAAQC,GAAU,IAE7CJ,EAAStxB,EAAW/B,MAAMwzB,GAAQC,GAAUnjB,EAAOogB,QAAQ76B,WAE3Dw9B,EAAStxB,EAAW/B,MAAMwzB,GAAU/7B,OAAOgyB,OAAO,GAAInZ,EAAOogB,QAAQ76B,YAGtEw9B,EAAStxB,EAAW/B,MAAQvI,OAAOgyB,OAAO,GAAInZ,EAAOogB,QAAQ76B,OAE9D,OAAO4B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAK70B,GACJ,IAAM60B,EAAW71B,EAoBjB,OAnBI61B,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,aACO,IAAlCsQ,EAAOogB,QAAQ3uB,WAAWM,SACS,IAAlCiO,EAAOogB,QAAQ3uB,WAAWO,WAC7B+wB,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,MAAMsQ,EAAOogB,QAAQ3uB,WAAWM,KAAKiO,EAAOogB,QAAQ3uB,WAAWO,YAElG+wB,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,MAAMsQ,EAAOogB,QAAQ3uB,WAAWM,aAGpEgxB,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,MAAMR,YACzC6zB,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,MAAM6C,YACzCwwB,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,MAAM0zB,qBACzCL,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,MAAM+d,gBACzCsV,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,MAAM+B,kBACzCsxB,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,MAAM2zB,aAC5CxpB,GAAQkpB,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,eACvCqzB,EAAS/iB,EAAOogB,QAAQ3uB,WAAW/B,QAItCvI,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAK/0B,GACJ,OAAO7G,OAAOgyB,OAAO,GAAInZ,EAAO0C,UAEjC,QACC,OAAOxV,EAGT,CC/DA,SAAS8zB,KAAoC,IAApB9zB,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EAC1C,OAAQga,EAAO9Q,OACVf,GACGhH,OAAOgyB,OAAO,GAAIjsB,EAAO8S,EAAOghB,iBAEhC9zB,CAET,CCFA,SAAS+1B,KAA2B,IAApB/1B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EACjC,OAAQga,EAAO9Q,MACf,KAAKd,GACJ,IAAM20B,EAAW71B,EACXuE,EAAauO,EAAO/C,KAAKxL,WAI/B,GAHKsxB,EAAStxB,EAAW/B,QACxBqzB,EAAStxB,EAAW/B,MAAQ,IAEzB4zB,OAAOC,UAAU9xB,EAAWM,KAAM,CACrC,IAAMmxB,EAAS/E,OAAO1sB,EAAWM,KAIjC,GAHKgxB,EAAStxB,EAAW/B,MAAMwzB,KAC9BH,EAAStxB,EAAW/B,MAAMwzB,GAAU,IAEjCI,OAAOC,UAAU9xB,EAAWO,KAAM,CACrC,IAAMmxB,EAAShF,OAAO1sB,EAAWO,KAC5B+wB,EAAStxB,EAAW/B,MAAMwzB,GAAQC,KACtCJ,EAAStxB,EAAW/B,MAAMwzB,GAAQC,GAAU,IAE7CJ,EAAStxB,EAAW/B,MAAMwzB,GAAQC,GAAQK,aAAexjB,EAAO/C,KAAKumB,kBAErET,EAAStxB,EAAW/B,MAAMwzB,GAAQM,aAAexjB,EAAO/C,KAAKumB,kBAG9DT,EAAStxB,EAAW/B,MAAM8zB,aAAexjB,EAAO/C,KAAKumB,aAEtD,OAAOr8B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAK10B,GACJ,IAAM00B,EAAW71B,EACXuE,EAAauO,EAAO/C,KAAKxL,WAC/B,GAAIuO,EAAO/C,KAAKxL,WAAY,CAC3B,GAAIsxB,EAAStxB,EAAW/B,MACvB,GAAI4zB,OAAOC,UAAU9xB,EAAWM,MAAQgxB,EAAStxB,EAAW/B,MAAMyuB,OAAO1sB,EAAWM,MAAO,CAC1F,IAAMmxB,EAAS/E,OAAO1sB,EAAWM,KAC7BuxB,OAAOC,UAAU9xB,EAAWO,MAAQ+wB,EAAStxB,EAAW/B,MAAMwzB,GAAQ/E,OAAO1sB,EAAWO,MAC3F+wB,EAAStxB,EAAW/B,MAAMwzB,GAAQ/E,OAAO1sB,EAAWO,MAAMwxB,aAAe,GAEzET,EAAStxB,EAAW/B,MAAMwzB,GAAQM,aAAe,QAGlDT,EAAStxB,EAAW/B,MAAM8zB,aAAe,GAG3C,OAAOr8B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,MAAO,GAER,QACC,OAAO71B,EAGT,CCnDA,SAAS+1B,KAA2B,IAApB/1B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EACjC,OAAQga,EAAO9Q,MACf,KAAKN,GACJ,IAAMm0B,EAAW71B,EACXuE,EAAauO,EAAO/C,KAAKxL,WAI/B,GAHKsxB,EAAStxB,EAAW/B,QACxBqzB,EAAStxB,EAAW/B,MAAQ,IAEzB4zB,OAAOC,UAAU9xB,EAAWM,KAAM,CACrC,IAAMmxB,EAAS/E,OAAO1sB,EAAWM,KAIjC,GAHKgxB,EAAStxB,EAAW/B,MAAMwzB,KAC9BH,EAAStxB,EAAW/B,MAAMwzB,GAAU,IAEjCI,OAAOC,UAAU9xB,EAAWO,KAAM,CACrC,IAAMmxB,EAAShF,OAAO1sB,EAAWO,KAC5B+wB,EAAStxB,EAAW/B,MAAMwzB,GAAQC,KACtCJ,EAAStxB,EAAW/B,MAAMwzB,GAAQC,GAAU,IAE7CJ,EAAStxB,EAAW/B,MAAMwzB,GAAQC,GAAQM,WAAazjB,EAAO/C,KAAKwmB,gBAEnEV,EAAStxB,EAAW/B,MAAMwzB,GAAQO,WAAazjB,EAAO/C,KAAKwmB,gBAG5DV,EAAStxB,EAAW/B,MAAM+zB,WAAazjB,EAAO/C,KAAKwmB,WAEpD,OAAOt8B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAKl0B,GACJ,IAAMk0B,EAAW71B,EACXuE,EAAauO,EAAO/C,KAAKxL,WAC/B,GAAIuO,EAAO/C,KAAKxL,WAAY,CAC3B,GAAIsxB,EAAStxB,EAAW/B,MACvB,GAAI4zB,OAAOC,UAAU9xB,EAAWM,MAAQgxB,EAAStxB,EAAW/B,MAAMyuB,OAAO1sB,EAAWM,MAAO,CAC1F,IAAMmxB,EAAS/E,OAAO1sB,EAAWM,KAC7BuxB,OAAOC,UAAU9xB,EAAWO,MAAQ+wB,EAAStxB,EAAW/B,MAAMwzB,GAAQ/E,OAAO1sB,EAAWO,MAC3F+wB,EAAStxB,EAAW/B,MAAMwzB,GAAQ/E,OAAO1sB,EAAWO,MAAMyxB,WAAa,GAEvEV,EAAStxB,EAAW/B,MAAMwzB,GAAQO,WAAa,QAGhDV,EAAStxB,EAAW/B,MAAM+zB,WAAa,GAGzC,OAAOt8B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,MAAO,GAER,QACC,OAAO71B,EAGT,CCvDA,SAASw2B,KAAsC,IAApBx2B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EAC5C,OAAQga,EAAO9Q,MACf,KAAKZ,GACJ,IAAMy0B,EAAW71B,EAEjB,OADA61B,EAASp4B,MAAQqV,EAAOrV,MACjBxD,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAKx0B,GACJ,IAAMw0B,EAAW71B,EAEjB,OADA61B,EAAS3zB,UAAY4Q,EAAO5Q,UACrBjI,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,QACC,OAAO71B,EAET,CChBA,SAASy2B,KAA0C,IAApBz2B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EAChD,GAAQga,EAAO9Q,OACVV,GAAL,CACC,IAAMu0B,EAAW71B,EAEjB,OADA61B,EAASa,YAAc5jB,EAAO4jB,YACvBz8B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAGhC,OAAO71B,CAET,CCVA,SAAS22B,KAAyC,IAApB32B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EAC/C,GAAQga,EAAO9Q,OACVT,GAAL,CACC,IAAMs0B,EAAW71B,EAEjB,OADA61B,EAAS1jB,QAAUW,EAAO8jB,aACnB38B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAGhC,OAAO71B,CAET,CCVA,SAAS62B,KAAuD,IAApB72B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EAC7D,GAAQga,EAAO9Q,OACVR,GAAL,CACC,IAAMq0B,EAAW71B,EAEjB,OADA61B,EAAS/iB,EAAO/C,KAAK0G,QAAQjU,MAAQsQ,EAAO/C,KAAK6mB,aAC1C38B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAGhC,OAAO71B,CAET,CCLA,SAAS+1B,KAA2B,IAApB/1B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EAC3ByL,EAAauO,EAAO/C,MAAQ+C,EAAO/C,KAAKxL,WAAauO,EAAO/C,KAAKxL,WAAa,KACpF,OAAQuO,EAAO9Q,MACf,KAAKP,GACJ,GAAmB,OAAf8C,EACH,OAAOvE,EAER,IAAM61B,EAAW71B,EAUjB,YATyC,IAA9B61B,EAAStxB,EAAW/B,QAC9BqzB,EAAStxB,EAAW/B,MAAQ,SAGC,IAAnB+B,EAAWM,IACrBiyB,GAA4BvyB,EAAYsxB,EAAStxB,EAAW/B,MAAO,gBAAiBsQ,EAAO/C,KAAK1X,OAEhGw9B,EAAStxB,EAAW/B,MAAMkiB,cAAgB5R,EAAO/C,KAAK1X,MAEhD4B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAKj0B,GACJ,GAAmB,OAAf2C,EACH,OAAOvE,EAER,IAAM61B,EAAW71B,EAUjB,YATyC,IAA9B61B,EAAStxB,EAAW/B,QAC9BqzB,EAAStxB,EAAW/B,MAAQ,SAGC,IAAnB+B,EAAWM,IACrBiyB,GAA4BvyB,EAAYsxB,EAAStxB,EAAW/B,sBAAKmC,OAAkBmO,EAAO/C,KAAKoU,UAAYrR,EAAO/C,KAAK1X,OAEvH0+B,GAAIlB,EAAStxB,EAAW/B,sBAAKmC,OAAkBmO,EAAO/C,KAAKoU,UAAYrR,EAAO/C,KAAK1X,OAE7E4B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,KAAKh0B,GACJ,GAAmB,OAAf0C,EACH,OAAOvE,EAER,IAAM61B,EAAW71B,EAUjB,YATyC,IAA9B61B,EAAStxB,EAAW/B,QAC9BqzB,EAAStxB,EAAW/B,MAAQ,SAGC,IAAnB+B,EAAWM,IACrBiyB,GAA4BvyB,EAAYsxB,EAAStxB,EAAW/B,MAAO,iBAAkBsQ,EAAO/C,KAAK1X,OAEjGw9B,EAAStxB,EAAW/B,MAAMolB,eAAiB9U,EAAO/C,KAAK1X,MAEjD4B,OAAOgyB,OAAO,GAAIjsB,EAAO61B,GAEjC,QACC,OAAO71B,EAGT,CAEA,SAAS82B,GAA4BvyB,EAAYsxB,EAAUmB,EAAS3+B,QACrC,IAAnBkM,EAAWM,WACmB,IAA7BgxB,EAAStxB,EAAWM,OAC9BgxB,EAAStxB,EAAWM,KAAO,SAEE,IAAnBN,EAAWO,UACmC,IAA7C+wB,EAAStxB,EAAWM,KAAKN,EAAWO,OAC9C+wB,EAAStxB,EAAWM,KAAKN,EAAWO,KAAO,SAEP,IAA1BP,EAAWA,WACrBuyB,GAA4BvyB,EAAWA,WAAYsxB,EAAStxB,EAAWM,KAAKN,EAAWO,KAAMkyB,EAAS3+B,GAEtG0+B,GAAIlB,EAAStxB,EAAWM,KAAKN,EAAWO,KAAMkyB,EAAS3+B,SAEb,IAA1BkM,EAAWA,WAC5BuyB,GAA4BvyB,EAAWA,WAAYsxB,EAAStxB,EAAWM,KAAMmyB,EAAS3+B,GAEtF0+B,GAAIlB,EAAStxB,EAAWM,KAAMmyB,EAAS3+B,GAG1C,CClFA,SAAS09B,KAA2B,IAApB/1B,EAAKjE,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,GAAI+W,EAAM/W,UAAA7D,SAAA6D,kBAAAjD,EACjC,OAAQga,EAAO9Q,OACVF,GACG7H,OAAOgyB,OAAO,GAAIjsB,EAAO8S,EAAOmkB,aAGhCj3B,CAET,CCoBA,IAEqBk3B,cACpB,SAAAA,IAAcr7B,OAAAq7B,GACbh7B,KAAKi7B,gBAAkBC,GAAgB,CAAEC,kBAAAA,GAAmBC,qBAAAA,GAAsBC,mBAAAA,GACjFC,qBAAAA,GAAsBC,uBAAAA,GAAwBC,qBAAAA,GAAsBlb,yBAAAA,GACpEmb,6BAAAA,GAA8BC,oBAAAA,GAAqBC,sCAAAA,GAAuCC,uBAAAA,GAC1FC,yBAAAA,GAA0BC,0BAAAA,GAA2BC,iBAAAA,KACtD,IAAIC,GAAiB,EACC,oBAAXj1B,SACVi1B,EAAiBj1B,OAAOk1B,8BAAgCl1B,OAAOk1B,gCAEhEj8B,KAAKk8B,MAAQC,GAAYn8B,KAAKi7B,gBAAiBe,GA+e/C,OA9eAl8B,EAAAk7B,IAAAj7B,eAAA5D,MAED,SAASya,GACR5W,KAAKk8B,MAAM1b,SAAS5J,MACpB7W,eAAA5D,MAED,WACC,OAAO6D,KAAKk8B,SACZn8B,gBAAA5D,MACD,SAAU6iB,GACThf,KAAKk8B,MAAME,UAAUpd,MACrBjf,uBAAA5D,MAED,SAAiBkM,GAChB,IACMg0B,EADQr8B,KAAKk8B,MAAMI,WACDnB,kBAAkB9yB,EAAW/B,MACrD,OAAOtG,KAAKu8B,uBAAuBl0B,EAAYg0B,MAC/Ct8B,6BAAA5D,MAED,SAAuBkM,EAAYg0B,GAClC,QAA8B,IAAnBh0B,EAAWM,KAAlB,MAAiD0zB,EAAkD,CACtG,IAAMzuB,EAAWyuB,EAAUh0B,EAAWM,KACtC,YAA8B,IAAnBN,EAAWO,KAAlB,MAAiDgF,GAAkD1Q,MAAM2F,QAAQ+K,QACpF,IAArBvF,EAAWtM,MACd6R,EAASvF,EAAWO,KAAKP,EAAWtM,YAGP,IAA1BsM,EAAWA,WACdrI,KAAKu8B,uBAAuBl0B,EAAWA,WAAYuF,EAASvF,EAAWO,MAExEgF,EAASvF,EAAWO,UAES,IAA1BP,EAAWA,WACdrI,KAAKu8B,uBAAuBl0B,EAAWA,WAAYuF,GAEpDA,EAER,OAAOyuB,KACPt8B,wBAAA5D,MACD,WACC,IAAM2H,EAAQ9D,KAAKk8B,MAAMI,WACzB,OAAOttB,EAAmBlL,EAAMq3B,sBAChCp7B,wBAAA5D,MACD,SAAkBqT,GACjBxP,KAAKk8B,MAAM1b,ShDhDN,SAA2BkY,GACjC,MAAO,CAAE5yB,KAAM3B,GAAqBu0B,WAAAA,EACrC,CgD8CsBntB,CAAkBiE,OACtCzP,0BAAA5D,MAED,SAAoBkM,EAAYlM,GAC/B6D,KAAKk8B,MAAM1b,ShD/CL,CAAE1a,KAAM1B,GAAuBs1B,SgD+CG,CAAErxB,WAAYA,EAAYlM,MAAOA,QACzE4D,0BAAA5D,MAED,SAAoBkM,GACnBrI,KAAKk8B,MAAM1b,ShD/CL,CAAE1a,KAAMzB,GAAuBq1B,SgD+CG,CAAErxB,WAAYA,QACtDtI,sBAAA5D,MAED,SAAgBkM,GACf,QAA0B,IAAfA,EACV,OAAO,KAER,IACIm0B,EADUx8B,KAAKk8B,MAAMI,WACJlB,qBAAqB/yB,EAAW/B,MAErD,GAAIk2B,IAAgC,WAAnBA,EAASrgC,OAAyC,aAAnBqgC,EAASrgC,OACxD,OAAOqgC,EAIR,IAAMC,OAAkC,IAAnBp0B,EAAWO,IAAsBP,EAAWO,IAAI3K,WAAa,KAC5Ey+B,OAAkC,IAAnBr0B,EAAWM,IAAsBN,EAAWM,IAAI1K,WAAa,KAalF,OAZc,OAAVw+B,GAAkBD,GAAYA,EAASC,UACP,IAA1BD,EAASC,GAAOtgC,OAA0BqgC,EAASC,GAAOC,UACxB,IAAjCF,EAASC,GAAOC,GAAOvgC,YACW,IAAlCqgC,EAASC,GAAOC,GAAOltB,WAEjCgtB,EAAWA,EAASC,GACN,OAAVC,GAAkBF,GAAYA,EAASE,UACR,IAA1BF,EAASE,GAAOvgC,YAA2D,IAA3BqgC,EAASE,GAAOltB,UAExEgtB,EAAWA,EAASE,KAGlBF,GAGG,QACPz8B,uBAAA5D,MAED,WACC,IAAM2H,EAAQ9D,KAAKk8B,MAAMI,WAEzB,OAAOttB,EAAmBlL,EAAMs3B,yBAChCr7B,uBAAA5D,MAED,SAAiBqT,GAEXmtB,EAAQ38B,KAAK+L,mBAAoByD,IACrCxP,KAAKk8B,MAAM1b,ShDvFP,SAA0BqZ,GAChC,MAAO,CAAE/zB,KAAMxB,GAAoBu1B,OAAAA,EACpC,CgDqFuBluB,CAAiB6D,OAEtCzP,yBAAA5D,MAED,SAAmBkM,EAAYlM,GAC9B6D,KAAKk8B,MAAM1b,ShDvFL,CAAE1a,KAAMvB,GAAsBT,MgDuFG,CAAEuE,WAAYA,EAAYlM,MAAOA,QACxE4D,oBAAA5D,MAED,SAAcoe,GACb,QAAuB,IAAZA,EACV,OAAO,KAER,IACMiiB,EADQx8B,KAAKk8B,MAAMI,WACFjB,mBAAmB9gB,EAAQjU,MAClD,OAAIk2B,GAAYA,EAASrgC,MACjBqgC,EAASrgC,MAEV,QACP4D,qBAAA5D,MACD,WACC,IAAM2H,EAAQ9D,KAAKk8B,MAAMI,WAEzB,OAAOttB,EAAmBlL,EAAMu3B,uBAChCt7B,qBAAA5D,MACD,SAAeqT,GAETmtB,EAAQ38B,KAAK48B,iBAAkBptB,IACnCxP,KAAKk8B,MAAM1b,ShD1GP,SAAwBqZ,GAC9B,MAAO,CAAE/zB,KAAMtB,GAAkBq1B,OAAAA,EAClC,CgDwGuBgD,CAAertB,OAEpCzP,uBAAA5D,MACD,SAAiBoe,EAASpe,GACzB6D,KAAKk8B,MAAM1b,ShDzGL,CAAE1a,KAAMrB,GAAoBX,MgDyGG,CAAEyW,QAASA,EAASpe,MAAOA,QAChE4D,qBAAA5D,MAED,SAAe2mB,GACd,QAAwB,IAAbA,EACV,OAAO,KAER,IACM0Z,EADQx8B,KAAKk8B,MAAMI,WACFZ,oBAAoB5Y,EAASxc,MACpD,OAAIk2B,GAAYA,EAASrgC,MACjBqgC,EAASrgC,MAEV,QACP4D,sBAAA5D,MACD,WACC,IAAM2H,EAAQ9D,KAAKk8B,MAAMI,WAEzB,OAAOttB,EAAmBlL,EAAM43B,wBAChC37B,sBAAA5D,MACD,SAAgBqT,GAEVmtB,EAAQ38B,KAAK88B,kBAAmBttB,IACpCxP,KAAKk8B,MAAM1b,ShD5HP,SAAyBqZ,GAC/B,MAAO,CAAE/zB,KAAMpB,GAAmBm1B,OAAAA,EACnC,CgD0HuBkD,CAAgBvtB,OAErCzP,wBAAA5D,MACD,SAAkB2mB,EAAU3mB,GAC3B6D,KAAKk8B,MAAM1b,ShD3HL,CAAE1a,KAAMnB,GAAqBb,MgD2HG,CAAEgf,SAAUA,EAAU3mB,MAAOA,QACnE4D,2BAAA5D,MAED,SAAqBu+B,GACpB16B,KAAKk8B,MAAM1b,ShDvFN,SAA8Bka,GACpC,MAAO,CAAE50B,KAAMT,GAAyBq1B,aAAAA,EACzC,CgDqFsBD,CAAqBC,OACzC36B,2BAAA5D,MAED,WAEC,OADc6D,KAAKk8B,MAAMI,WACZT,yBAAyB5lB,WACtClW,yCAAA5D,MAED,SAAmCoe,EAASmgB,GAC3C16B,KAAKk8B,MAAM1b,ShD3FL,CAAE1a,KAAMR,GAAyCuO,KgD2FA,CAAE0G,QAASA,EAASmgB,aAAcA,QACzF36B,yCAAA5D,MAED,SAAmCoe,GAClC,QAAuB,IAAZA,EACV,OAAO,KAER,IACMyiB,EADQh9B,KAAKk8B,MAAMI,WACkBX,sCAAsCphB,EAAQjU,MACzF,YAA4C,IAAjC02B,EACHA,EAED,QAGRj9B,2BAAA5D,MAGA,SAAqBkM,GACpB,QAA0B,IAAfA,EACV,OAAO,KAGR,IACIm0B,EADUx8B,KAAKk8B,MAAMI,WACJlB,qBAAqB/yB,EAAW/B,MASrD,YAR8B,IAAnB+B,EAAWO,KAAuB4zB,GAAYA,EAASn0B,EAAWO,IAAI3K,cAEhFu+B,EAAWA,EAASn0B,EAAWO,IAAI3K,iBACL,IAAnBoK,EAAWM,KAAuB6zB,EAASn0B,EAAWM,IAAI1K,cAEpEu+B,EAAWA,EAASn0B,EAAWM,IAAI1K,cAGjCu+B,EACIA,EAASS,WAEV,QAGRl9B,sBAAA5D,MAIA,SAAgBkM,EAAY60B,GAC3B,QAA0B,IAAf70B,EACV,OAAO,KAER,IACIkI,EADUvQ,KAAKk8B,MAAMI,WACFhB,qBAAqBjzB,EAAW/B,MACvD,QAA8B,IAAnB+B,EAAWM,KAAuB4H,EAAY,CAExD,GADAA,EAAaA,EAAWlI,EAAWM,IAAI1K,iBACT,IAAnBoK,EAAWO,KAAuB2H,EAC5C,OAAOA,EAAWlI,EAAWO,IAAI3K,YAElC,GAAIsS,GAAcA,EAAWpH,KAC5B,OAAOoH,EAGT,IAAI4sB,EAAiB,KACjBC,EAAgB,KAIpB,GAHI7sB,GAAcA,EAAWpH,OAC5Bg0B,EAAiB5sB,GAEdA,EAAY,CACf,IAAM8sB,EAAmBxgB,EAAUtM,GACnC6sB,EAAgBp9B,KAAKs9B,oBAAoBD,EAAkBH,GAO5D,OALuB,OAAnBC,GAA6C,OAAlBC,EAC9BD,EAAeh0B,KAAOg0B,EAAeh0B,KAAO,IAAMi0B,EAAcj0B,KACnC,OAAnBg0B,IACVA,EAAiBC,GAEXD,KAGRp9B,0BAAA5D,MACA,SAAoBoU,EAAY2sB,GAC/B,IAAIE,EAAgB,KAChBrsB,EAAgB,EAChBE,EAAkB,EAEtB,IAAK,IAAMssB,KAAUhtB,EACpB,GAAKkG,GAAIlG,EAAYgtB,IAGN,SAAXA,EAAJ,CAGA,IAAMC,EAAajtB,EAAWgtB,GAM9B,GALIC,GAAcA,EAAWr0B,OAC5Bi0B,EAAgBI,EAChBzsB,GAAkBysB,EAAW13B,OAAS4K,GAAuBE,MAAS,EAAI,EAC1EK,GAAoBusB,EAAW13B,OAAS4K,GAAuBC,QAAW,EAAI,GAE3E6sB,EACH,IAAK,IAAMC,KAAUD,EACpB,GAAK/mB,GAAI+mB,EAAYC,IAGN,SAAXA,EAAJ,CAGA,IAAMC,EAAaF,EAAWC,GAC1BC,GAAcA,EAAWv0B,OAC5Bi0B,EAAgBM,EAChB3sB,GAAkB2sB,EAAW53B,OAAS4K,GAAuBE,MAAS,EAAI,EAC1EK,GAAoBysB,EAAW53B,OAAS4K,GAAuBC,QAAW,EAAI,IAgBlF,OAXKI,EAAgBE,IAAqB,GAAKmsB,IAC9CA,EAAct3B,KAAQiL,EAAgB,EAAKL,GAAuBE,MAAQF,GAAuBC,QACjGysB,EAAcj0B,KAAQ4H,EAAgB,EACnC/B,EAA4BkuB,EAC7BhuB,GAAayuB,oBAAqB,CAAE5sB,cAAeA,IAClD,GACHqsB,EAAcj0B,MAAS8H,EAAkB,EACtCjC,EAA4BkuB,EAC7BhuB,GAAa0uB,sBAAuB,CAAE3sB,gBAAiBA,IACtD,IAEGmsB,KACPr9B,uBAAA5D,MAED,WACC,IAAM2H,EAAQ9D,KAAKk8B,MAAMI,WACzB,OAAOttB,EAAmBlL,EAAMw3B,yBAChCv7B,uBAAA5D,MACD,SAAiBqT,GAEXmtB,EAAQ38B,KAAKugB,mBAAoB/Q,IACrCxP,KAAKk8B,MAAM1b,ShDxQP,SAA0BlH,GAChC,MAAO,CAAExT,KAAMlB,GAAoB0U,SAAAA,EACpC,CgDsQuB7N,CAAiB+D,OAEtCzP,yBAAA5D,MACD,SAAmBkM,EAAYlM,GACzBwgC,EAAQ38B,KAAKwQ,gBAAgBnI,GAAalM,IAC9C6D,KAAKk8B,MAAM1b,ShDxQN,CAAE1a,KAAMjB,GAAsBmyB,QgDwQI,CAAE3uB,WAAYA,EAAYlM,MAAOA,QAEzE4D,wBAAA5D,MACD,SAAkBkM,GACwB,OAArCrI,KAAKwQ,gBAAgBnI,IACxBrI,KAAKk8B,MAAM1b,ShDzQN,CAAE1a,KAAMhB,GAAqBkyB,QgDyQI,CAAE3uB,WAAYA,QAItDtI,yBAAA5D,MAGA,SAAmBy7B,GAClB53B,KAAKk8B,MAAM1b,ShD9QN,SAA4BoX,GAClC,MAAO,CAAE9xB,KAAMf,GAAsB6yB,gBAAAA,EACtC,CgD4QsBiG,CAAmBjG,OACvC73B,yBAAA5D,MACD,WAEC,OADc6D,KAAKk8B,MAAMI,WACZf,0BAGdx7B,sBAAA5D,MAGA,SAAgBkM,GACf,QAA0B,IAAfA,EACV,MAAO,GAER,IACIy1B,EADU99B,KAAKk8B,MAAMI,WACCd,qBAAqBnzB,EAAW/B,MAO1D,OANI4zB,OAAOC,UAAU9xB,EAAWM,MAAQm1B,IACvCA,EAAgBA,EAAc/I,OAAO1sB,EAAWM,MAC5CuxB,OAAOC,UAAU9xB,EAAWO,MAAQk1B,IACvCA,EAAgBA,EAAc/I,OAAO1sB,EAAWO,QAG3Ck1B,GAAiBA,EAAc1D,aAAe0D,EAAc1D,aAAe,MAClFr6B,yBAAA5D,MAED,SAAmBkM,EAAY01B,GAC9B/9B,KAAKk8B,MAAM1b,ShDnSL,CAAE1a,KAAMd,GAAsB6O,KgDmSG,CAAExL,WAAYA,EAAY+xB,aAAc2D,QAC/Eh+B,wBAAA5D,MAED,SAAkBkM,GACjBrI,KAAKk8B,MAAM1b,ShDnSL,CAAE1a,KAAMb,GAAqB4O,KgDmSG,CAAExL,WAAYA,QACpDtI,oBAAA5D,MAED,SAAckM,GACb,QAA0B,IAAfA,EACV,MAAO,GAER,IACI21B,EADUh+B,KAAKk8B,MAAMI,WACHP,iBAAiB1zB,EAAW/B,MAOlD,OANI4zB,OAAOC,UAAU9xB,EAAWM,MAAQq1B,IACvCA,EAAYA,EAAUjJ,OAAO1sB,EAAWM,MACpCuxB,OAAOC,UAAU9xB,EAAWO,MAAQo1B,IACvCA,EAAYA,EAAUjJ,OAAO1sB,EAAWO,QAGnCo1B,GAAaA,EAAU3D,WAAa2D,EAAU3D,WAAa,MAClEt6B,uBAAA5D,MAED,SAAiBkM,EAAYgyB,GAC5Br6B,KAAKk8B,MAAM1b,ShD1RL,CAAE1a,KAAMN,GAAoBqO,KgD0RG,CAAExL,WAAYA,EAAYgyB,WAAYA,QAC3Et6B,sBAAA5D,MAED,SAAgBkM,GACfrI,KAAKk8B,MAAM1b,ShD1RL,CAAE1a,KAAML,GAAmBoO,KgD0RG,CAAExL,WAAYA,QAGnDtI,+BAAA5D,MAIA,SAAyBq+B,GACxBx6B,KAAKk8B,MAAM1b,ShDvTN,SAA+Bga,GACrC,MAAO,CAAE10B,KAAMV,GAA0Bo1B,YAAAA,EAC1C,CgDqTsBD,CAAsBC,OAC1Cz6B,+BAAA5D,MAED,WAEC,OADc6D,KAAKk8B,MAAMI,WACZb,6BAA6BjB,eAC1Cz6B,eAAA5D,MAED,SAASoF,GACRvB,KAAKk8B,MAAM1b,SAAS3a,GAAStE,OAC7BxB,eAAA5D,MAED,WAEC,OADc6D,KAAKk8B,MAAMI,WACZhc,yBAAyB/e,SACtCxB,mBAAA5D,MAED,SAAa6J,GACZhG,KAAKk8B,MAAM1b,SAASza,GAAaC,OACjCjG,mBAAA5D,MAED,WAEC,OADc6D,KAAKk8B,MAAMI,WACZhc,yBAAyBta,aAGvCjG,uBAAA5D,MAKA,SAAiBkM,EAAYqf,GAC5B1nB,KAAKk8B,MAAM1b,ShD1UL,CAAE1a,KAAMP,GAAqBsO,KgD0UE,CAAExL,WAAYA,EAAYlM,MAAOurB,QAGvE3nB,uBAAA5D,MAKA,SAAiBkM,GAChB,IAAMvE,EAAQ9D,KAAKk8B,MAAMI,WAEzB,OAAIx4B,EAAMg4B,0BAA0BzzB,EAAW/B,aAChB,IAAnB+B,EAAWM,IACds1B,GAAyB51B,EAAYvE,EAAMg4B,0BAA0BzzB,EAAW/B,MAAO,gBAH3E,MAKbxC,EAAMg4B,0BAA0BzzB,EAAW/B,MAAMkiB,kBAGzDzoB,4BAAA5D,MAED,SAAsBkM,EAAY4f,EAAUP,GAC3C1nB,KAAKk8B,MAAM1b,ShDnVL,CAAE1a,KAAMJ,GAA0BmO,KgDmVE,CAAExL,WAAYA,EAAY4f,SAAUA,EAAU9rB,MAAOurB,QAC/F3nB,sBAAA5D,MAED,SAAgBkM,GACf,IAAMvE,EAAQ9D,KAAKk8B,MAAMI,WACnBjZ,EAAe,GACrB,OAAIvf,EAAMg4B,0BAA0BzzB,EAAW/B,WAChB,IAAnB+B,EAAWM,IACds1B,GAAyB51B,EAAYvE,EAAMg4B,0BAA0BzzB,EAAW/B,MAAO,eAAgB+c,GAExGvf,EAAMg4B,0BAA0BzzB,EAAW/B,MAAM43B,cAAgB7a,EAElEA,KACPtjB,4BAAA5D,MAED,SAAsBkM,EAAY4f,GACjC,IAAMnkB,EAAQ9D,KAAKk8B,MAAMI,WAEzB,QAAIx4B,EAAMg4B,0BAA0BzzB,EAAW/B,aAChB,IAAnB+B,EAAWM,IACds1B,GAAyB51B,EAAYvE,EAAMg4B,0BAA0BzzB,EAAW/B,sBAAKmC,OAAkBwf,GAH3F,OAKbnkB,EAAMg4B,0BAA0BzzB,EAAW/B,MAAM43B,aAAajW,OAKvEloB,wBAAA5D,MAKA,SAAkBkM,EAAYqf,GAC7B1nB,KAAKk8B,MAAM1b,ShDtdL,CAAE1a,KAAMH,GAAsBkO,KgDsdE,CAAExL,WAAYA,EAAYlM,MAAOurB,QAGxE3nB,wBAAA5D,MAKA,SAAkBkM,GACjB,IAAMvE,EAAQ9D,KAAKk8B,MAAMI,WAEzB,QAAIx4B,EAAMg4B,0BAA0BzzB,EAAW/B,aAChB,IAAnB+B,EAAWM,IACds1B,GAAyB51B,EAAYvE,EAAMg4B,0BAA0BzzB,EAAW/B,MAAO,iBAH3E,OAKbxC,EAAMg4B,0BAA0BzzB,EAAW/B,MAAMolB,mBAGzD3rB,2BAAA5D,MAED,SAAqB4+B,GACpB/6B,KAAKk8B,MAAM1b,ShDtYN,SAA2Bua,GACjC,MAAO,CAAEj1B,KAAMF,GAAsBm1B,YAAAA,EACtC,CgDoYsBoD,CAAkB,CAAEpD,YAAaA,QACrDh7B,2BAAA5D,MAED,WACC,IACM4+B,EADQ/6B,KAAKk8B,MAAMI,WACCV,uBAAuBb,YACjD,YAA2B,IAAhBA,EACHA,EAED,SACPC,CAAA,IAGF,SAASiD,GAAyB51B,EAAYvE,EAAOg3B,EAASzX,GAC7D,YAA8B,IAAnBhb,EAAWM,KAAuB7E,EAAMuE,EAAWM,UAC/B,IAAnBN,EAAWO,KAAuB9E,EAAMuE,EAAWM,KAAKN,EAAWO,UACxC,IAA1BP,EAAWA,WACd41B,GAAyB51B,EAAWA,WAAYvE,EAAMuE,EAAWM,KAAKN,EAAWO,KAAMkyB,EAASzX,GAEjGzF,GAAI9Z,EAAMuE,EAAWM,KAAKN,EAAWO,KAAMkyB,QACP,IAA1BzyB,EAAWA,WACrB41B,GAAyB51B,EAAWA,WAAYvE,EAAMuE,EAAWM,KAAMmyB,EAASzX,GAEjFzF,GAAI9Z,EAAMuE,EAAWM,KAAMmyB,GAE5BzX,CACR,yhCC5gBA,SAAS+a,GAAS5mB,EAAM6mB,EAAYC,GACnC,GAAI9mB,EAAK+mB,IAcV,SAAY/mB,EAAM6mB,EAAYC,GAC7B,IAAK,IAAI1pB,EAAI,EAAGA,EAAI4C,EAAKxb,OAAQ4Y,IAChCwpB,GAAS5mB,EAAK5C,GAAIypB,EAAYC,EAEhC,CAjBEC,CAAG/mB,EAAK+mB,GAAIF,EAAYC,QAClB,GAAI9mB,EAAKgnB,KAwBjB,SAAahnB,EAAM6mB,EAAYC,GAC9B,IAAK,IAAI1pB,EAAI,EAAGA,EAAI4C,EAAKxb,OAAQ4Y,IAChCwpB,GAAS5mB,EAAK5C,GAAIypB,EAAYC,EAEhC,CA3BEE,CAAIhnB,EAAKgnB,IAAKH,EAAYC,OACpB,KAAI9mB,EAAKinB,UAGf,MAAM,IAAIC,MAAM,+BA4BlB,SAAmBlnB,EAAM6mB,EAAYC,GAChC9mB,EAAK+L,eACR8a,EAAW/vB,KAAKkJ,EAAK+L,eACjB/L,EAAKmnB,iBACRN,EAAW/vB,KAAKkJ,EAAKmnB,kBAItBN,EAAW/vB,KAAKgwB,EAElB,CAxCEG,CAAUjnB,EAAKinB,UAAWJ,EAAYC,GAIxC,CA+CA,SAASM,GAAa1uB,EAAUpH,EAASuR,GAQxC,GAPIvR,EAAQoE,QACXpE,EAAQmE,aAAenE,EAAQoE,MAAM/D,MAElCkR,IACHvR,EAAQuR,iBAAmBA,GAE5BnK,EAAS5B,KAAKxF,GACVA,EAAQuE,YACX,IAAK,IAAIC,EAAM,EAAGA,EAAMxE,EAAQuE,YAAYrR,OAAQsR,IAAO,CAC1D,IAAMmlB,EAAa3pB,EAAQuE,YAAYC,GACvCmlB,EAAWoM,cAAgB/1B,EAAQxC,KACnCmsB,EAAWqM,YAAcxxB,EACrB+M,IACHoY,EAAWpY,iBAAmBA,GAE/BnK,EAAS5B,KAAKmkB,GAGjB,CAEA,SAASsM,GAAY7uB,EAAUwR,EAASnF,EAAQhC,EAASF,GACxD,OAAQkC,EAAOvB,UACf,KAAKC,EAASqR,QACb,IAAMxjB,EAAUyT,EAAOzT,QAWvB,GAVIyR,IACHzR,EAAQk2B,eAAiBzkB,GAEtBF,IACHvR,EAAQuR,iBAAmBA,GAE5BukB,GAAa1uB,EAAUpH,EAASuR,GAI5BkC,EAAOG,gBAAiB,CAAA,IACwBsB,EADxBC,EAAA5R,GACEkQ,EAAOG,iBAAe,IAAnD,IAAAuB,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAAqD,CACpDuyB,GAAY7uB,EAAUwR,EADE1D,EAAA7hB,MACsBsG,QAAS8X,EAASF,UAChEjL,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,KAEF,MAED,KAAK2L,EAASoR,gBACd,KAAKpR,EAASgkB,kBACd,KAAKhkB,EAASC,UACd,KAAKD,EAASkR,MACb,GAAI5P,EAAOpW,OAASoW,EAAOpW,MAAMkW,QAAS,CACzC,IAAI6iB,EAAa3kB,EACbgC,EAAOpW,MAAMsY,YAAcsP,EAAUoB,UACxC+P,EAAa3iB,EAAOpW,MAAMmC,IAC1B,IAC6C6V,EAD7CE,EAAAhS,GACyBkQ,EAAOpW,MAAMkW,SAAO,IAA9C,IAAAgC,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAAgD,CAC/CuyB,GAAY7uB,EAAUwR,EADDvD,EAAAhiB,MACuB+iC,EAAY7kB,UACxDjL,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,KAEF,MAED,KAAK2L,EAAS8Q,aACd,KAAK9Q,EAASiR,eACd,KAAKjR,EAAS+Q,SACb,GAAIzP,EAAO1H,KAAM,CAAA,IACa6U,EADbE,EAAAvd,GACEkQ,EAAO1H,MAAI,IAA7B,IAAA+U,EAAAtd,MAAAod,EAAAE,EAAArd,KAAAC,MAA+B,CAAA,IAApBsI,EAAG4U,EAAAvtB,MACb4iC,GAAY7uB,EAAUwR,EAAS5M,EAAIrS,QAAS8X,EAC3CgC,EAAOvB,WAAaC,EAASiR,gBAAkB3P,EAAOvB,WAAaC,EAAS+Q,SACzE3R,EACAvF,EAAIC,cACR3F,GAAAwa,EAAAva,EAAAD,WAAAwa,EAAAta,KAEF,MAED,KAAK2L,EAAS0R,aACb,GAAIpQ,EAAOpW,OAASoW,EAAOpW,MAAM0X,WAAY,CAAA,IACDshB,EADCC,EAAA/yB,GACxBkQ,EAAOpW,MAAM0X,YAAU,IAA3C,IAAAuhB,EAAA9yB,MAAA6yB,EAAAC,EAAA7yB,KAAAC,MAA6C,CAAA,IACtC1D,EAAU,CACfxC,KAFc64B,EAAAhjC,MAGd6uB,YAAa,UAEVzQ,IACHzR,EAAQk2B,eAAiBzkB,GAEtBF,IACHvR,EAAQuR,iBAAmBA,GAE5BnK,EAAS5B,KAAKxF,UACdsG,GAAAgwB,EAAA/vB,EAAAD,WAAAgwB,EAAA9vB,KAEF,MACD,KAAK2L,EAASsR,OACThQ,EAAO3F,QAAU2F,EAAO3F,OAAOtQ,OAClCob,EAAQnF,EAAO3F,OAAOtQ,MAAQiW,EAAO3F,QAEtC,MACD,KAAKqE,EAASwR,YACd,KAAKxR,EAASyR,WACd,KAAKzR,EAASuR,qBACb,MAED,QACC5Y,EAAOrJ,KAAK,mDAAqDgS,EAAOvB,UAIzE,OAAO9K,CAER,CAGA,SAASmvB,GAAgBC,EAAWC,EAAaC,GAChD,IACC,IAAItvB,EA/LN,SAAoBuvB,GACnB,IAAIjoB,EAAOioB,EACX,GAAIjoB,EAAK4mB,SAAU,CAClB,IAAIC,EAAa,GACb7mB,EAAKkoB,eACRtB,GAAS5mB,EAAK4mB,SAAUC,EAAY7mB,EAAKkoB,gBAEzCtB,GAAS5mB,EAAK4mB,SAAUC,EAAY7mB,EAAK+L,eAG1C,IAAIoc,EAAaziC,MAAM84B,KAAK,IAAI4J,IAAIvB,IACpC,OAAIsB,EAAW3jC,OAAS,EAChB2jC,EAGUA,EAAW,GAG9B,MAAM,IAAIjB,MAAM,4BACjB,CA4KiBmB,CAAWN,EAAYC,IAClCM,EAAW,CACdlX,OAAU1Y,EACVuvB,WAAcF,GAEfQ,GAAgBT,EAAUpvB,SAAUA,EAAU4vB,GAC9C,IAAIE,EAAOT,EAAYC,GAAeE,eAClCH,EAAYC,GAAeS,WAC9BD,EAAOT,EAAYC,GAAeS,WACxBV,EAAYC,GAAeU,YACrCF,EAAOT,EAAYC,GAAeU,YACxBX,EAAYC,GAAeW,QAAUZ,EAAYC,GAAeW,OAAO5c,gBACjFyc,EAAO,CAACT,EAAYC,GAAeW,OAAO5c,gBAEvCyc,GACHD,GAAgBT,EAAUU,KAAMA,EAAMF,GAEtC,MAAO/hB,GACRnK,EAAOC,KAAK,gCAAkCkK,GAE/C,OAAOuhB,CACR,CAEA,SAASS,GAAgBT,EAAWpvB,EAAU4vB,GAC7C,IAAgC,IAA5B5iC,MAAM2F,QAAQqN,GACjB,IAAK,IAAIkwB,EAAI,EAAGA,EAAIlwB,EAASlU,OAAQokC,SACE,IAA3Bd,EAAUpvB,EAASkwB,MAC7Bd,EAAUpvB,EAASkwB,IAAM,IAE1Bd,EAAUpvB,EAASkwB,IAAI9xB,KAAKwxB,aAGM,IAAxBR,EAAUpvB,KACpBovB,EAAUpvB,GAAY,IAEvBovB,EAAUpvB,GAAU5B,KAAKwxB,EAE3B,CCpOA,SAASO,GAAkBC,GAC1B,IAAMC,EAAyB,GAC/B,GAAID,GAAoBA,EAAiBE,UAAW,CACnD,IAAMna,EAAe,IAAI3F,GAAaG,GAAWyf,EAAXzf,CAA6B,cAC7D4f,EAAiB5jB,EAAUyjB,EAAiBE,WAClD,GAAItjC,MAAM2F,QAAQ49B,EAAeC,gBAAkBxjC,MAAM2F,QAAQ49B,EAAeE,qBAAsB,CAErG,IAAMC,EAAmBH,EAAeI,SAAWJ,EAAeC,cAsErE,SAAgCE,EAAkBva,GACjD,OAAOua,EAAiBjhB,KAAI,SAACmhB,GAC5B,IAAMC,EAAWD,EAKjB,GAJAC,EAASC,SAAW3a,EAAamH,UAAUuT,EAAUA,EAASz4B,IAC9Dy4B,EAAS5W,KAAO9D,EAAawM,SAASkO,EAAUA,EAASC,UACzDD,EAAS5kC,MAAQ4kC,EAASC,SAEtBD,EAASE,kBAAmB,CAC/B,IAAMC,EAAkB5f,GAAYQ,KAAKif,EAASE,mBAClDF,EAASI,cAAgB9a,EAAanF,aAAaggB,GAwBpD,OAtBIhkC,MAAM2F,QAAQi+B,EAAajjB,cAE1BkjB,EAASC,WAAgD,IAApCD,EAASC,SAASrxB,QAAQ,KAClDmxB,EAAajjB,WAAWlU,SAAQ,SAAC2d,IAEZ,IADDyZ,EAASC,SAASrxB,QAAQ,OAE5CoxB,EAASC,SAAWD,EAASC,SAAS5yB,QAAQ,IAAK,IAAMiY,EAAamH,UAAUlG,EAAWA,EAAUhf,IAAM,UAK7Gy4B,EAAS5kC,OAAS,IAClB4kC,EAASC,UAAY,IACrBF,EAAajjB,WAAWlU,SAAQ,SAAC2d,EAAWvrB,GAC3C,IAAM+nB,EAAa/nB,EAAQ,EAAK,KAAO,GACvCglC,EAASC,UAAYld,EAAYuC,EAAamH,UAAUlG,EAAWA,EAAUhf,IAC7Ey4B,EAAS5kC,OAAS2nB,EAAY,OAE/Bid,EAASC,UAAY,IACrBD,EAAS5kC,OAAS,MAGb4kC,IAGT,CA1GqFK,CAAuBX,EAAeC,cAAera,GACvIoa,EAAeI,UAAW,EAG1BN,EAAuBc,mBAAqB,GAC5CZ,EAAeE,oBAAoBh3B,SAAQ,SAAC23B,GAC3Cf,EAAuBc,mBAAmBC,EAASh5B,IAAM,GACzDi4B,EAAuBc,mBAAmBC,EAASh5B,IAAI04B,SAAW3a,EAAamH,UAAU8T,EAAUA,EAASh5B,IAC5Gi4B,EAAuBc,mBAAmBC,EAASh5B,IAAIi5B,aAAe,GACtED,EAASE,cAAc73B,SAAQ,SAAC83B,GAC/B,IAAMX,EAAeY,GAAiBD,EAAYb,GAC9CE,GACHP,EAAuBc,mBAAmBC,EAASh5B,IAAIi5B,aAAajzB,KAAKwyB,SAM5EP,EAAuBoB,UAAY,GAC/BlB,EAAemB,eAClBnB,EAAemB,cAAcj4B,SAAQ,SAAC83B,GACrC,IAAMX,EAAeY,GAAiBD,EAAYb,GAC9CE,GACHP,EAAuBoB,UAAUrzB,KAAKwyB,MAIzCP,EAAuBphB,OAAS,CAAE0iB,iBAAoB,GAAIC,iBAAoB,IAC1ExB,EAAiBnhB,SAChBmhB,EAAiBnhB,OAAO0iB,kBAC3BvB,EAAiBnhB,OAAO0iB,iBAAiBl4B,SAAQ,SAACo4B,GACjDA,EAASf,SAAW3a,EAAamH,UAAUuU,EAAUA,EAASz5B,IAE9Dy5B,EAASC,cAAcC,kBAAkBjB,SAAW3a,EAAamH,UAAUuU,EAASC,cAAcC,kBAAmBF,EAASz5B,GAAK,sBACnIy5B,EAASC,cAAcE,kBAAkBlB,SAAW3a,EAAamH,UAAUuU,EAASC,cAAcE,kBAAmBH,EAASz5B,GAAK,sBAEnI,IAAM65B,EAAmB9b,EAAawM,SAASkP,EAASC,cAAcC,kBAAmBF,EAASz5B,GAAK,sBACnG65B,IAAqBJ,EAASz5B,GAAK,uBACtCy5B,EAASC,cAAcC,kBAAkBG,UAAYD,GAEtD,IAAME,EAAmBhc,EAAawM,SAASkP,EAASC,cAAcE,kBAAmBH,EAASz5B,GAAK,sBACnG+5B,IAAqBN,EAASz5B,GAAK,uBACtCy5B,EAASC,cAAcE,kBAAkBE,UAAYC,GAGlDN,EAASC,cAAcM,wBAC1BP,EAASC,cAAcM,uBAAuB34B,SAAQ,SAACf,GACtDA,EAAIo4B,SAAW3a,EAAamH,UAAU5kB,EAAKm5B,EAASz5B,GAAK,2BAA6BM,EAAIN,OAG5Fi4B,EAAuBphB,OAAO0iB,iBAAiBvzB,KAAKyzB,MAGlDzB,EAAiBnhB,OAAO2iB,kBAC3BxB,EAAiBnhB,OAAO2iB,iBAAiBn4B,SAAQ,SAAC44B,GACjDhC,EAAuBphB,OAAO2iB,iBAAiBxzB,KAAKi0B,QAWzD,OAJIjC,GAAoBA,EAAiB3f,YACxC4f,EAAuB5f,UAAY2f,EAAiB3f,WAG9C4f,CACR,CAyCA,SAASmB,GAAiBD,EAAYb,GACrC,IAAME,EAAeF,EAAiB4B,MAAK,SAACC,GAAY,OAAKA,EAAan6B,KAAOm5B,KACjF,OAAKX,IACJltB,EAAOrJ,KAAK,2EAA6Ek3B,GAClF,KAGT,CC9IA,SAAAp1B,GAAAmpB,EAAAC,OAAAC,sBAAAC,QAAAH,EAAAG,OAAAC,WAAAJ,oBAAAE,MAAAx4B,MAAA2F,QAAA2yB,KAAAE,EAAA,SAAAF,EAAAK,OAAAL,6BAAAA,SAAAM,GAAAN,EAAAK,OAAAtpB,EAAAxO,OAAAF,UAAAI,SAAAG,KAAAo3B,GAAAO,uBAAAxpB,GAAAipB,EAAAh3B,cAAA+N,EAAAipB,EAAAh3B,YAAA8H,iBAAAiG,WAAAA,SAAArP,MAAA84B,KAAAR,oBAAAjpB,8CAAA0pB,KAAA1pB,UAAAupB,GAAAN,EAAAK,GAAAK,CAAAV,KAAAC,GAAAD,oBAAAA,EAAAx5B,QAAA05B,IAAAF,EAAAE,OAAA9gB,IAAAuhB,sBAAA7pB,EAAA6pB,EAAA5pB,oBAAAqI,GAAA4gB,EAAAx5B,QAAAwQ,UAAAA,QAAArQ,MAAAq5B,EAAA5gB,OAAAvF,WAAA+mB,SAAAA,GAAA9mB,EAAA6mB,aAAAE,uJAAAjnB,EAAAknB,KAAAC,YAAAjqB,aAAAopB,EAAAA,EAAAt3B,KAAAo3B,IAAAjpB,iBAAAiqB,EAAAd,EAAAe,cAAAH,EAAAE,EAAAhqB,KAAAgqB,GAAAnnB,WAAAqnB,GAAAH,KAAAnnB,EAAAsnB,GAAApnB,iBAAAgnB,SAAAZ,UAAAA,sBAAAa,QAAAnnB,KAAA,SAAA0mB,GAAAa,EAAAC,UAAAA,GAAAA,EAAAD,EAAA36B,UAAA46B,EAAAD,EAAA36B,gBAAA4Y,IAAAiiB,MAAA35B,MAAA05B,GAAAhiB,EAAAgiB,EAAAhiB,IAAAiiB,EAAAjiB,GAAA+hB,EAAA/hB,UAAAiiB,EA+BA,SAASkI,GAAY2D,EAAWnmB,EAAQomB,GACvC,OAAQpmB,EAAOvB,UACf,KAAKC,EAAS8Q,aACd,KAAK9Q,EAAS+Q,SACb,GAAIzP,EAAO1H,KAAM,CAAA,IACamJ,EADbC,EAAA5R,GACEkQ,EAAO1H,MAAI,IAA7B,IAAAoJ,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAA+B,CAC9BuyB,GAAY2D,EADC1kB,EAAA7hB,MACcsG,QAASkgC,UACpCvzB,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,KAEF,MAED,KAAK2L,EAASyR,WACd,KAAKzR,EAASkR,MACd,KAAKlR,EAAS0R,aACd,KAAK1R,EAASoR,gBACd,KAAKpR,EAASC,UACd,KAAKD,EAASgkB,kBACb,GAAI1iB,EAAOpW,OAASoW,EAAOpW,MAAMmC,KAChCo6B,EAAUC,GAAcv8B,OAAOkI,KAAKiO,EAAOpW,MAAMmC,IACjDs6B,GAAoBF,EAAWnmB,EAAOpW,MAAMmC,IACxCiU,EAAOpW,MAAMkW,SAAS,CAAA,IACqB8B,EADrBE,EAAAhS,GACCkQ,EAAOpW,MAAMkW,SAAO,IAA9C,IAAAgC,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAAgD,CAC/CuyB,GAAY2D,EADSvkB,EAAAhiB,MACeogB,EAAOpW,MAAMmC,WACjD8G,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,KAGH,MAED,KAAK2L,EAASqR,QASb,GARAoW,EAAUC,GAAczyB,SAAS5B,KAAKiO,EAAOzT,QAAQxC,MAEjDiW,EAAOzT,QAAQ8N,QAClB8rB,EAAUC,GAAcjhB,QAAQpT,KAAKiO,EAAOzT,QAAQ8N,OAAOtQ,MAKxDiW,EAAOzT,QAAQ4T,gBAAiB,CAAA,IACmBgN,EADnBE,EAAAvd,GACXkQ,EAAOzT,QAAQ4T,iBAAe,IAAtD,IAAAkN,EAAAtd,MAAAod,EAAAE,EAAArd,KAAAC,MAAwD,CACvDuyB,GAAY2D,EADOhZ,EAAAvtB,MACcsG,QAASkgC,UAC1CvzB,GAAAwa,EAAAva,EAAAD,WAAAwa,EAAAta,KAEF,MAED,KAAK2L,EAASiR,eAMb,GALAwW,EAAUC,GAAcv8B,OAAOkI,KAAKiO,EAAOjU,IAC3Cs6B,GAAoBF,EAAWnmB,EAAOjU,IAClCiU,EAAOhW,WACVm8B,EAAUnmB,EAAOjU,IAAI4H,SAAS5B,KAAKiO,EAAOhW,WAEvCgW,EAAO1H,KAAM,CAAA,IACasqB,EADbC,EAAA/yB,GACEkQ,EAAO1H,MAAI,IAA7B,IAAAuqB,EAAA9yB,MAAA6yB,EAAAC,EAAA7yB,KAAAC,MAA+B,CAC9BuyB,GAAY2D,EADCvD,EAAAhjC,MACcsG,QAAS8Z,EAAOjU,WAC3C8G,GAAAgwB,EAAA/vB,EAAAD,WAAAgwB,EAAA9vB,KAGF,MAGD,KAAK2L,EAASsR,OAEbmW,EAAUC,GAAcjhB,QAAQpT,KAAKiO,EAAO3F,OAAOtQ,MACnD,MAED,KAAK2U,EAASwR,YACd,KAAKxR,EAASuR,qBACb,MAED,QACC5Y,EAAOrJ,KAAK,mDAAqDgS,EAAOvB,UAG1E,CAEA,SAAS4nB,GAAoBF,EAAWnoB,GACnC9D,GAAIisB,EAAWnoB,IAClB3G,EAAOrJ,KAAK,kEAAoEgQ,GAEjFmoB,EAAUnoB,GAAW,CAAErK,SAAU,GAAI9J,OAAQ,GAAIsb,QAAS,GAC3D,CC9GA,IAAIrlB,GAAcf,GAEdunC,GAAWnnC,GACXonC,GAAoBxlC,GACpBH,GAAO0B,GA6BXkkC,GAhCevnC,IA0BU,SAASwnC,GAChC,IAAIC,EAAa9lC,GAAK6lC,GAEtB,OADAC,EAAkC,mBAAdA,EAA2BA,OAAarmC,EACrDimC,GAASxmC,GAAY2mC,EAAQ,EAAGF,IAAmB,QAAOlmC,EAAWqmC,EAC9E,IC/BIC,GAAW5nC,GACX6nC,GAAgB3nC,GAChB4nC,GAAoB1nC,GACpB+C,GAAWnB,GACX+lC,GAAYxkC,GACZykC,GAAW9J,GAGX+J,GAAYC,KAAKC,QAiErBC,GArDA,SAA0BV,EAAQW,EAAUV,GAS1C,IARA,IAAIp7B,EAAWo7B,EAAaG,GAAoBD,GAC5CnnC,EAASgnC,EAAO,GAAGhnC,OACnB4nC,EAAYZ,EAAOhnC,OACnB6nC,EAAWD,EACXE,EAAS5mC,MAAM0mC,GACfG,EAAYC,IACZ/nC,EAAS,GAEN4nC,KAAY,CACjB,IAAItnC,EAAQymC,EAAOa,GACfA,GAAYF,IACdpnC,EAAQkC,GAASlC,EAAO8mC,GAAUM,KAEpCI,EAAYR,GAAUhnC,EAAMP,OAAQ+nC,GACpCD,EAAOD,IAAaZ,IAAeU,GAAa3nC,GAAU,KAAOO,EAAMP,QAAU,KAC7E,IAAIknC,GAASW,GAAYtnC,QACzBK,EAENL,EAAQymC,EAAO,GAEf,IAAIjnC,GAAS,EACTkoC,EAAOH,EAAO,GAElBI,EACA,OAASnoC,EAAQC,GAAUC,EAAOD,OAAS+nC,GAAW,CACpD,IAAI5nC,EAAQI,EAAMR,GACdooC,EAAWR,EAAWA,EAASxnC,GAASA,EAG5C,GADAA,EAAS8mC,GAAwB,IAAV9mC,EAAeA,EAAQ,IACxC8nC,EACEX,GAASW,EAAME,GACft8B,EAAS5L,EAAQkoC,EAAUlB,IAC5B,CAEL,IADAY,EAAWD,IACFC,GAAU,CACjB,IAAIO,EAAQN,EAAOD,GACnB,KAAMO,EACEd,GAASc,EAAOD,GAChBt8B,EAASm7B,EAAOa,GAAWM,EAAUlB,IAE3C,SAASiB,EAGTD,GACFA,EAAK31B,KAAK61B,GAEZloC,EAAOqS,KAAKnS,IAGhB,OAAOF,CACT,ECvEI6mC,GAAoBxnC,OAaxB+oC,GAJA,SAA6BloC,GAC3B,OAAO2mC,GAAkB3mC,GAASA,EAAQ,EAC5C,ECXIsC,GAAWnD,GACXgpC,GAAmB9oC,GAEnB+oC,GAAsBjnC,GACtBH,GAAO0B,GAoCX2lC,GAtCe9oC,IAyBiB,SAASsnC,GACvC,IAAIC,EAAa9lC,GAAK6lC,GAClByB,EAAShmC,GAASukC,EAAQuB,IAM9B,OAJAtB,EAAkC,mBAAdA,EAA2BA,OAAarmC,IAE1D6nC,EAAOC,MAEDD,EAAOzoC,QAAUyoC,EAAO,KAAOzB,EAAO,GAC1CsB,GAAiBG,OAAQ7nC,EAAWqmC,GACpC,EACN,4hCCXA,SAAS0B,GAAclF,EAAYp3B,EAAYrE,GAC9C,IAAMwT,EAAOioB,EACb,GAAIjoB,EAAKotB,WACR,OAsBF,SAAoBptB,EAAMnP,EAAYrE,GACrC,GAAIwT,EAAKqtB,cAAgBrtB,EAAK4mB,SAAU,CACvC,IAAM0G,EAAettB,EAAK4mB,SAC1B0G,EAAaC,cAAe,EAC5B,IAAM9oC,EAASmiC,GAAS0G,EAAcz8B,EAAYrE,GAClD,MAAsB,WAAlB+yB,EAAO96B,GACHA,EAEDA,GAkTT,SAAuB+oC,GACtB,GAAIA,EAAmBC,qBAAuBD,EAAmBhO,QAChE,MAAO,CACN7tB,KAAQ67B,EAAmBhO,gBAC3BlxB,KAAQk/B,EAAmBl/B,MAG7B,MAAO,+BACR,CA1TmBo/B,CAAc1tB,EAAKqtB,cAErC,MAAM,IAAInG,MAAM,4BACjB,CAjCSkG,CAAWptB,EAAKotB,WAAYv8B,EAAYrE,GACzC,GAAIwT,EAAKkQ,QACf,OAsCF,SAAiBlQ,EAAMnP,EAAYrE,GAClC,IAAKwT,EAAKkoB,gBAAkBloB,EAAKyoB,YAAczoB,EAAK0oB,cAAgB1oB,EAAK4mB,SACxE,OAAOA,GAAS5mB,EAAK4mB,SAAU/1B,EAAYrE,GAE5C,MAAM,IAAI06B,MAAM,yBACjB,CA3CShX,CAAQlQ,EAAKkQ,QAASrf,EAAYrE,GACnC,GAAIwT,EAAKuM,QACf,OAgDF,SAAiBvM,EAAMnP,EAAYrE,GAClC,IAAKwT,EAAKkoB,gBAAkBloB,EAAKyoB,YAAczoB,EAAK0oB,cAAgB1oB,EAAK4mB,SACxE,OAAOA,GAAS5mB,EAAK4mB,SAAU/1B,EAAYrE,GAE5C,MAAM,IAAI06B,MAAM,yBACjB,CArDS3a,CAAQvM,EAAKuM,QAAS1b,EAAYrE,GACnC,GAAIwT,EAAK2tB,YACf,OAqEF,SAAsB3tB,EAAMnP,EAAYrE,GACvC,GAAIwT,EAAK2oB,QAAU3oB,EAAK4mB,SACvB,OAAOA,GAAS5mB,EAAK4mB,SAAU/1B,EAAYrE,GAE5C,MAAM,IAAI06B,MAAM,8BACjB,CA1ES0G,CAAa5tB,EAAK2tB,YAAa98B,EAAYrE,GAC5C,GAAIwT,EAAK6tB,aACf,OA0EF,SAAqB7tB,EAAMnP,EAAYrE,GACtC,IAAKwT,EAAKkoB,gBAAkBloB,EAAKyoB,aAAezoB,EAAK4mB,SACpD,OAAOA,GAAS5mB,EAAK4mB,SAAU/1B,EAAYrE,GAE5C,MAAM,IAAI06B,MAAM,8BACjB,CA/ES4G,CAAY9tB,EAAK6tB,aAAch9B,EAAYrE,GAC5C,GAAIwT,EAAK+tB,cACf,OAuFF,SAA4B/tB,EAAMnP,EAAYrE,GAC7C,GAAIwT,EAAK+L,eAAiB/L,EAAKrb,OAASqb,EAAK4mB,SAC5C,OAAOA,GAAS5mB,EAAK4mB,SAAU/1B,EAAYrE,GAE5C,MAAM,IAAI06B,MAAM,qCACjB,CA5FS8G,CAAmBhuB,EAAK+tB,cAAel9B,EAAYrE,GAE3D,MAAM,IAAI06B,MAAM,kDACjB,CAuDA,SAAS5jB,GAAOzS,EAAYo9B,EAAWzhC,EAAYmb,GAClD,OAAIsmB,GAAaA,EAAU3qB,QAAU2qB,EAAU3qB,OAAOsjB,SAC9CsH,GAAer9B,EAAYo9B,EAAU3qB,OAAQ2qB,EAAU3qB,OAAOsjB,SAAUp6B,EAAYmb,GAErFA,CACR,CAkCA,SAASif,GAAS5mB,EAAMnP,EAAYrE,GACnC,GAAIwT,EAAK+mB,GACR,OA+BF,SAAY/mB,EAAMnP,EAAYrE,GAC7B,IAAK,IAAI4Q,EAAI,EAAGA,EAAI4C,EAAKxb,OAAQ4Y,IAAK,CAErC,IAAkB,IADAwpB,GAAS5mB,EAAK5C,GAAIvM,EAAYrE,GAE/C,OAAO,EAGT,OAAO,CACR,CAvCSu6B,CAAG/mB,EAAK+mB,GAAIl2B,EAAYrE,GACzB,GAAIwT,EAAKgnB,IACf,OAwDF,SAAahnB,EAAMnP,EAAYrE,GAC9B,IAAK,IAAI4Q,EAAI,EAAGA,EAAI4C,EAAKxb,OAAQ4Y,IAAK,CACrC,IAAM+wB,EAAYvH,GAAS5mB,EAAK5C,GAAIvM,EAAYrE,GAChD,IAAkB,IAAd2hC,EACH,OAAO,EACD,GAAyB,WAArB5O,EAAO4O,GACjB,OAAOA,EAGT,OAAO,CACR,CAlESnH,CAAIhnB,EAAKgnB,IAAKn2B,EAAYrE,GAC3B,GAAIwT,EAAKinB,UACf,OAqFF,SAAmBjnB,EAAMnP,EAAYrE,EAAY+gC,GAChD,IAAMa,EAAKpuB,EAAKouB,GACVjf,EAAQnP,EAAK+L,cACbsiB,EAASruB,EAAKmnB,gBACdxiC,EAAQqb,EAAKrb,MAIb2pC,EAAU,GACVC,EAAmB/hC,EAAWgiC,sBAC/BjB,GAAuE,SAAvDgB,EAAiBE,oCACrCH,EAAQI,gBAAiB,GAErBnB,GAAqE,SAArDgB,EAAiBI,kCACrCL,EAAQM,cAAe,GAGxB,IASIC,EATEC,EAAY,CAAE3f,MAAOA,EAAOre,GAAIi+B,GAAwBl+B,EAAYse,IAE1E2f,EAAUnqC,MAAQ6H,EAAWqC,iBAAiBigC,EAAUh+B,GAAIw9B,EAAS,MACrEQ,EAAUx9B,QAAU9E,EAAW2I,WAAW25B,EAAUh+B,SAEnB,IAAtBg+B,EAAUx9B,SACpB8K,EAAOrJ,KAAK,mDAAqDoc,QAK5C,IAAXkf,KACVQ,EAAa,CACZ1f,MAAOkf,EACPv9B,GAAIi+B,GAAwBl+B,EAAYw9B,KAE9B1pC,MAAQ6H,EAAWqC,iBAAiBggC,EAAW/9B,GAAIw9B,EAAS,MACvEO,EAAWv9B,QAAU9E,EAAW2I,WAAW05B,EAAW/9B,KAEvD,IAAM6iB,EAAYnnB,EAAWwiC,eAAeZ,GAC5C,GAAIza,EACH,OAAOA,EAAUmb,EAAWD,EAAYlqC,EAAO6H,GAGhD,OADA4P,EAAOrJ,KAAK,yCAA2Cq7B,EAAK,uBAAyBjf,IAC9E,CACR,CA/HS8X,CAAUjnB,EAAKinB,UAAWp2B,EAAYrE,EAAYwT,EAAKutB,cAE/D,MAAM,IAAIrG,MAAM,6BACjB,CAKA,SAASgH,GAAer9B,EAAYo+B,EAAYC,EAAe1iC,EAAYmb,GAC1E,GAAIunB,EAAcnI,GACjB,OA2BF,SAAkBl2B,EAAYo+B,EAAYE,EAAgB3iC,EAAY4iC,GACrE,IACiCz6B,EAD7BgT,EAAS,GAAG/S,EAAAC,GACGs6B,GAAc,IAAjC,IAAAv6B,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAmC,CAAA,IAC5Bq6B,EAAYnB,GAAer9B,EAAYo+B,EAD/Bt6B,EAAAhQ,MACiD6H,EAAY4iC,GAC3EznB,EAAS2nB,GAAU3nB,EAAQ0nB,EAASlK,UACpCvtB,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,IACD,OAAO6P,CACR,CAlCS4nB,CAAS1+B,EAAYo+B,EAAYC,EAAcnI,GAAIv6B,EAAYmb,GAChE,GAAIunB,EAAclI,IACxB,OAsDF,SAAmBn2B,EAAYo+B,EAAYE,EAAgB3iC,EAAY4iC,GACtE,IACiC5oB,EAD7BmB,EAAStC,EAAU+pB,GAAU3oB,EAAA5R,GACds6B,GAAc,IAAjC,IAAA1oB,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAAmC,CAAA,IAC5Bq6B,EAAYnB,GAAer9B,EAAYo+B,EAD/BzoB,EAAA7hB,MACiD6H,EAAYmb,GAC3EA,EAAS6nB,GAAiB7nB,EAAQ0nB,EAASlK,UAC3CvtB,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,IACD,OAAO6P,CACR,CA7DS8nB,CAAU5+B,EAAYo+B,EAAYC,EAAclI,IAAKx6B,EAAYmb,GAClE,GAAIunB,EAAcjI,UACxB,OA6HF,SAAyBp2B,EAAYo+B,EAAYC,EAAe1iC,EAAYmb,GAC3E,IAAMymB,EAAKc,EAAcd,GACnBp2B,EAAS,QACoB,IAAxBk3B,EAAcvqC,OAAiD,OAAxBuqC,EAAcvqC,MAC/DqT,EAAOlB,KAAKo4B,EAAcvqC,OAChBe,MAAM2F,QAAQ6jC,EAAcl3B,SACtCA,EAAOlB,KAAI1O,MAAX4P,EAAM03B,GAASR,EAAcl3B,SAE9B,OAAQo2B,GACR,IAAK,gBACJ,OAaF,SAA8BgB,EAAUO,GACvC,IAAIhoB,EAAStC,EAAU+pB,GACnBznB,IACHA,EAASA,EAAOrE,QAAO,SAASssB,GAAO,IACUjpB,EADVE,EAAAhS,GACP86B,GAAiB,IAAhD,IAAA9oB,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAAkD,CAAA,IAAvC66B,EAAgBlpB,EAAAhiB,MAC1B,GAAIirC,EAAME,UAAYF,EAAME,SAASC,UAAYF,EAEhD,OAAO,SAERj4B,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,IACD,OAAO,MAGT,OAAO6P,CACR,CA3BSqoB,CAAqBroB,EAAQ3P,GACrC,IAAK,SACJ,OA2BF,SAAuBo3B,EAAUa,GAChC,IAAItoB,EAAStC,EAAU+pB,GACnBznB,IACHA,EAASA,EAAOrE,QAAO,SAASssB,GAAO,IACJ1d,EADIE,EAAAvd,GACdo7B,GAAU,IAAlC,IAAA7d,EAAAtd,MAAAod,EAAAE,EAAArd,KAAAC,MAAoC,CAAA,IAAzBk7B,EAAShe,EAAAvtB,MACnB,GAAIirC,EAAMthC,OAAS4hC,EAElB,OAAO,SAERt4B,GAAAwa,EAAAva,EAAAD,WAAAwa,EAAAta,IACD,OAAO,MAGT,OAAO6P,CACR,CAzCSwoB,CAAcxoB,EAAQ3P,GAC9B,IAAK,iBACJ,OAyCF,SAA+Bo3B,EAAUgB,GACxC,IAAIzoB,EAAStC,EAAU+pB,GACnBznB,IACHA,EAASA,EAAOrE,QAAO,SAASssB,GAAO,IACJjI,EADIC,EAAA/yB,GACdu7B,GAAU,IAAlC,IAAAxI,EAAA9yB,MAAA6yB,EAAAC,EAAA7yB,KAAAC,MAAoC,CAAA,IAAzBq7B,EAAS1I,EAAAhjC,MACnB,GAAIirC,EAAME,UAAYF,EAAME,SAASQ,gBAAkBD,EAEtD,OAAO,SAERz4B,GAAAgwB,EAAA/vB,EAAAD,WAAAgwB,EAAA9vB,IACD,OAAO,MAGT,OAAO6P,CACR,CAvDS4oB,CAAsB5oB,EAAQ3P,GACtC,IAAK,iBACJ,OAuDF,SAA6BnH,EAAYo+B,EAAYziC,EAAYmb,GAChE,IAAI6oB,EAAe7oB,EACfsnB,EAAW/G,iBACdsI,EAAehkC,EAAWikC,4BAA4B9oB,EAAQsnB,EAAW/G,eAAgBr3B,EAAW/B,OAErG,OAAO0hC,CACR,CA7DSE,CAAoB7/B,EAAYo+B,EAAYziC,EAAYmb,GAChE,QAEC,OADAvL,EAAOrJ,KAAK,yCAA2Cq7B,EAAK,KACrDzmB,EAET,CAlJSgpB,CAAgB9/B,EAAYo+B,EAAYC,EAAcjI,UAAWz6B,EAAYmb,GAErF,MAAM,IAAIuf,MAAM,oCACjB,CAwNA,SAAS6H,GAAwBl+B,EAAYse,GAC5C,IAAIyhB,EAAkB,GAChBC,EAAS1hB,EAAMhX,QAAQ,KAQ7B,OAPI04B,GAAU,IACbD,EAAkBvrB,EAAUxU,IACZ/B,KAAOqgB,EAAM3c,UAAU,EAAGq+B,GAC1CD,EAAgBx/B,IAQlB,SAA0B+d,GACzB,IAAM2hB,EAAW3hB,EAAMhX,QAAQ,KAC/B,GAAI24B,GAAY,EAAG,CAClB,IAAMC,EAAS5hB,EAAMhX,QAAQ,KAC7B,OAAI44B,GAAU,EACNC,SAAS7hB,EAAM3c,UAAUs+B,EAAW,EAAGC,GAAS,KAEhD,EAET,OAAQ,CACT,CAlBwBE,CAAiB9hB,IAEvCyhB,EAAgB9hC,KAAOqgB,EAEjByhB,CACR,yhCC/VA,SAASM,GAAyB1kC,GAA+B,IAAnB2kC,IAAU9oC,UAAA7D,eAAAY,IAAAiD,eAAAA,aACjDqQ,EAAWlM,EAAW4kC,eA+C7B,SAAsC5kC,EAAYkM,EAAUy4B,GAC3D,GAAI5qC,OAAO0F,KAAKyM,GAAUlU,OAAS,EAClC,IAAK,IAAM6sC,KAAc34B,EACxB,GAAKuG,GAAIvG,EAAU24B,GAAnB,CAGA,IAAM//B,EAAUoH,EAAS24B,GAEzB,IAAI//B,EAAQ+1B,cAIZ8F,GADmB77B,EAAQxC,KAAO,CAAEA,KAAMwC,EAAQxC,MAAS,CAAEA,KAAMwC,GACzC9E,EAAY2kC,GAGzC,CA7DCG,CAA6B9kC,EAAYkM,EAAUy4B,EACpD,CAQA,SAASI,GAA6B/kC,GACrC,IAAMglC,EAAY,CACjB94B,SAAUlM,EAAW+H,mBACrB3F,OAAQpC,EAAW44B,iBACnBlb,QAAS1d,EAAW84B,mBAGf5sB,EAAWlM,EAAW4kC,eAuD7B,SAA0C5kC,EAAYkM,EAAU84B,GAC/D,GAAIjrC,OAAO0F,KAAKyM,GAAUlU,OAAS,EAClC,IAAK,IAAM6sC,KAAc34B,EACxB,GAAKuG,GAAIvG,EAAU24B,GAAnB,CAGA,IAAM//B,EAAUoH,EAAS24B,GAEzB,IAAI//B,EAAQ+1B,cAAZ,CAGA,IAAMx2B,EAAaS,EAAQxC,KAAO,CAAEA,KAAMwC,EAAQxC,MAAS,CAAEA,KAAMwC,GAC7D8D,EAAe5I,EAAWqC,iBAAiBgC,GACjD,GAAIS,EAAQuE,YACX,GAAIvE,EAAQ8G,SAAS6T,QAAU3a,EAAQ8G,SAASmd,OAI/C,GAFAkc,GAA0B5gC,EAAY2gC,EAAWhlC,GAE7C9G,MAAM2F,QAAQ+J,GACjB,IAAK,IAAIs8B,EAAW,EAAGA,EAAWt8B,EAAa5Q,OAAQktC,IACtD,IAAK,IAAIC,EAAW,EAAGA,EAAWrgC,EAAQuE,YAAYrR,OAAQmtC,IAC7D9gC,EAAWM,IAAMugC,EACjB7gC,EAAWO,IAAMugC,EACjBF,GAA0B5gC,EAAY2gC,EAAWhlC,QASpD,IAHA,IAAMolC,EAAY,CACjB9iC,KAAM+B,EAAW/B,MAET6iC,EAAW,EAAGA,EAAWrgC,EAAQuE,YAAYrR,OAAQmtC,IAC7DC,EAAUxgC,IAAMugC,EAChBF,GAA0BG,EAAWJ,EAAWhlC,QAIlDilC,GAA0B5gC,EAAY2gC,EAAWhlC,IAIrD,CAhGCqlC,CAAiCrlC,EAAYkM,EAAU84B,GAEvDM,GAA4BtlC,EAAW0+B,UAAWsG,EAAWO,IAG7D,IAAMC,EAAqBC,GAA4BzlC,GAEvDA,EAAW2H,iBAAiBq9B,EAAU94B,UACtClM,EAAW64B,eAAemM,EAAU5iC,QACpCpC,EAAW+4B,gBAAgBiM,EAAUtnB,SAErC,IAGiDvV,EADwCC,EAAAC,GAA9Dq9B,GAAuBF,EAFxBC,GAA4BzlC,KAGL,IAAjD,IAAAoI,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAmD,CAClDm9B,GAD0Bx9B,EAAAhQ,MACW6H,EAAY,UACjDoL,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,IACF,CA2FA,SAASq1B,GAAcnoB,EAAcxY,GAA+B,IAAnB2kC,IAAU9oC,UAAA7D,eAAAY,IAAAiD,eAAAA,aACpDiJ,EAAU9E,EAAW2I,WAAW6P,GACtC,GAAK1T,EAAL,CAIA,IAAMT,EAAawU,EAAUL,GACvB5P,EAAe5I,EAAWqC,iBAAiBgC,GACjD,GAAInL,MAAM2F,QAAQ+J,IAIjB,GAFAg9B,GAAevhC,EAAYrE,EAAY8E,EAAS6/B,GAE5C7/B,EAAQuE,YACX,GAAIvE,EAAQ8G,SAAS6T,QAAU3a,EAAQ8G,SAASmd,MAE/C,IAAK,IAAImc,EAAW,EAAGA,EAAWt8B,EAAa5Q,OAAQktC,IACtD,IAAK,IAAIC,EAAW,EAAGA,EAAWrgC,EAAQuE,YAAYrR,OAAQmtC,IAC7D9gC,EAAWM,IAAMugC,EACjB7gC,EAAWO,IAAMugC,EACjBS,GAAevhC,EAAYrE,EAAY8E,EAAQuE,YAAY87B,GAAWR,QAKxE,IAAK,IAAIQ,EAAW,EAAGA,EAAWrgC,EAAQuE,YAAYrR,OAAQmtC,IAAY,CAKzES,GAJkB,CACjBtjC,KAAMkW,EAAalW,KACnBsC,IAAKugC,GAEoBnlC,EAAY8E,EAAQuE,YAAY87B,GAAWR,QAGjE,QAA8B,IAAnBtgC,EAAWM,IAC5B,IAAK,IAAIugC,EAAW,EAAGA,EAAWt8B,EAAa5Q,OAAQktC,IACtD7gC,EAAWM,IAAMugC,EACjB7gC,EAAWO,IAAM,EACjBghC,GAAevhC,EAAYrE,EAAY8E,EAAS6/B,QAKlDiB,GAAevhC,EAAYrE,EAAY8E,EAAS6/B,QAtChD/0B,EAAOrJ,KAAK,yBAA2BiS,EAAalW,KAwCtD,CAUA,SAASqjC,GAAmBntB,EAAcxY,GAA0B,IAAd6lC,EAAQhqC,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,EAC1DiJ,EAAU9E,EAAW2I,WAAW6P,GACtC,GAAK1T,EAAL,CAIA,IAAMkgC,EAAY,CACjB94B,SAAUlM,EAAW+H,mBACrB3F,OAAQpC,EAAW44B,iBACnBlb,QAAS1d,EAAW84B,mBAEfz0B,EAAawU,EAAUL,GACvB5P,EAAe5I,EAAWqC,iBAAiBgC,GACjD,GAAInL,MAAM2F,QAAQ+J,IAAiB9D,EAAQuE,YAC1C,GAAMvE,EAAQ8G,SAAS6T,QAAU3a,EAAQ8G,SAASmd,MAM3C,CAENkc,GAA0B5gC,EAAY2gC,EAAWhlC,GAEjD,IAAK,IAAIklC,EAAW,EAAGA,EAAWt8B,EAAa5Q,OAAQktC,IACtD,IAAK,IAAIC,EAAW,EAAGA,EAAWrgC,EAAQuE,YAAYrR,OAAQmtC,IAC7D9gC,EAAWM,IAAMugC,EACjB7gC,EAAWO,IAAMugC,EACjBF,GAA0B5gC,EAAY2gC,EAAWhlC,QAZnD,IAAK,IAAImlC,EAAW,EAAGA,EAAWrgC,EAAQuE,YAAYrR,OAAQmtC,IAC7D9gC,EAAWO,IAAMugC,EACjBF,GAA0B5gC,EAAY2gC,EAAWhlC,QAenDilC,GAA0B5gC,EAAY2gC,EAAWhlC,GAGlD,IAAMwlC,EAAqBC,GAA4BzlC,GAEvDA,EAAW2H,iBAAiBq9B,EAAU94B,UACtClM,EAAW64B,eAAemM,EAAU5iC,QACpCpC,EAAW+4B,gBAAgBiM,EAAUtnB,SAGrC,IAIiD1D,EADjDC,EAAA5R,GAD2Bq9B,GAAuBF,EAFxBC,GAA4BzlC,GAEmC6lC,IAExC,IAAjD,IAAA5rB,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAAmD,CAClDm9B,GAD0B3rB,EAAA7hB,MACW6H,EAAY6lC,EAAW,UAC5Dz6B,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,IACGu6B,EAAW,GAEdP,GAA4BtlC,EAAW0+B,UAAWsG,EAAWO,SAjD7D31B,EAAOrJ,KAAK,yBAA2BiS,EAAalW,KAmDtD,CAEA,SAASojC,GAAuBF,EAAoBM,EAAmBD,GACtE,IAAME,EAAoB,GAC1B,GAAIF,EAAW,GAEd,OADAj2B,EAAOrJ,KAAK,+GAAiH2D,KAAKC,UAAU27B,IACrI,GAER,IACsB3rB,EAD8DE,EAAAhS,GAAvE29B,GAAMjsC,OAAO0F,KAAK+lC,GAAqBzrC,OAAO0F,KAAKqmC,KAC1C,IAAtB,IAAAzrB,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAAwB,CAAA,IAAbzM,EAAGoe,EAAAhiB,MACP8tC,EAAoBT,EAAmBzpC,GACvCmqC,EAAmBJ,EAAkB/pC,GACtC48B,EAAQsN,EAAmBC,IAC/BH,EAAkBz7B,KAAK,CAAEhI,KAAMvG,WAEhCqP,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,IACD,OAAOy6B,CACR,CAEA,SAASN,GAA4BzlC,GACpC,IAAM+hC,EAAmB/hC,EAAWgiC,sBAC9BF,EAAU,GAOhB,MAN2D,SAAvDC,EAAiBE,oCACpBH,EAAQI,gBAAiB,GAE+B,SAArDH,EAAiBI,kCACpBL,EAAQM,cAAe,GAEpB31B,GAAQq1B,GACJ,GAED9hC,EAAW6H,kBAAkBi6B,EACrC,CA4HA,SAASqE,GAAYC,EAAU/hC,EAAYlM,EAAO6H,GACjD,IAAIqmC,EAAYD,EAAS/hC,EAAW/B,MAC/B+jC,IACJA,EAAY,IAEb,IAAMC,EAAevsC,OAAOgyB,OAAO,GAAIsa,GASvC,UAR6C,IAAnBhiC,EAAWM,UAAiD,IAAnBN,EAAWO,MAC5D0hC,EAAanuC,QAAUgW,GAAOC,QAAWjW,IAAUgW,GAAOI,UAAYpW,IAAUgW,GAAOo4B,QAGxGD,EAAanuC,MAAQA,EAFrBmuC,EAAanuC,MAAQgW,GAAOC,YAMC,IAAnB/J,EAAWO,IAAqB,CAC1C,IAAM6zB,EAAQp0B,EAAWO,IAAI3K,WAI7B,GAHKosC,EAAU5N,KACd4N,EAAU5N,GAAS,SAEU,IAAnBp0B,EAAWM,IAAqB,CAC1C,IAAM+zB,EAAQr0B,EAAWM,IAAI1K,WACxBosC,EAAU5N,GAAOC,KACrB2N,EAAU5N,GAAOC,GAAS,IAG3B2N,EAAU5N,GAAOC,GAAOvgC,MAAQmuC,EAAanuC,UACvC,CAENkuC,EAAU5N,GAAOtgC,MAAQmuC,EAAanuC,MAEtC,IAAMquC,EAAwB,WAAVruC,EACdsuC,EAAyBzmC,EAAW0mC,oBAAoBriC,EAAYA,EAAWO,QAAU4hC,OACrE,IAAfxmC,GAA8BymC,GACxCzmC,EAAW2mC,uBAAuBtiC,EAAYA,EAAWO,KAAM4hC,SAKjEH,EAAUluC,MAAQmuC,EAAanuC,MAEhCiuC,EAAS/hC,EAAW/B,MAAQ+jC,CAC7B,CAWA,SAASO,GAAuBR,EAAU/hC,EAAYwiC,EAAW1uC,GAChE,IAAIkuC,EAAYD,EAAS/hC,EAAW/B,MAC/B+jC,IACJA,EAAY,IAERA,EAAU76B,SACd66B,EAAU76B,OAAS,IAEf66B,EAAU76B,OAAOq7B,KACrBR,EAAU76B,OAAOq7B,GAAa,IAE/B,IAAMP,EAAevsC,OAAOgyB,OAAO,GAAIsa,GASvC,UAR6C,IAAnBhiC,EAAWM,UAAiD,IAAnBN,EAAWO,MAC5D0hC,EAAa96B,OAAOq7B,GAAW1uC,QAAUgW,GAAOC,QAAWjW,IAAUgW,GAAOI,UAAYpW,IAAUgW,GAAOo4B,QAG1HD,EAAa96B,OAAOq7B,GAAW1uC,MAAQA,EAFvCmuC,EAAa96B,OAAOq7B,GAAW1uC,MAAQgW,GAAOC,YAMjB,IAAnB/J,EAAWO,IAAqB,CAC1C,IAAM6zB,EAAQp0B,EAAWO,IAAI3K,WAI7B,GAHKosC,EAAU5N,KACd4N,EAAU5N,GAAS,SAEU,IAAnBp0B,EAAWM,IAAqB,CAC1C,IAAM+zB,EAAQr0B,EAAWM,IAAI1K,WACxBosC,EAAU5N,GAAOC,KACrB2N,EAAU5N,GAAOC,GAAS,IAEtB2N,EAAU5N,GAAOC,GAAOltB,SAC5B66B,EAAU5N,GAAOC,GAAOltB,OAAS,IAE7B66B,EAAU5N,GAAOC,GAAOltB,OAAOq7B,KACnCR,EAAU5N,GAAOC,GAAOltB,OAAOq7B,GAAa,IAG7CR,EAAU5N,GAAOC,GAAOltB,OAAOq7B,GAAW1uC,MAAQmuC,EAAa96B,OAAOq7B,GAAW1uC,WAG5EkuC,EAAU5N,GAAOjtB,SACrB66B,EAAU5N,GAAOjtB,OAAS,IAEtB66B,EAAU5N,GAAOjtB,OAAOq7B,KAC5BR,EAAU5N,GAAOjtB,OAAOq7B,GAAa,IAEtCR,EAAU5N,GAAOjtB,OAAOq7B,GAAW1uC,MAAQmuC,EAAa96B,OAAOq7B,GAAW1uC,WAI3EkuC,EAAU76B,OAAOq7B,GAAaP,EAAa96B,OAAOq7B,GAEnDT,EAAS/hC,EAAW/B,MAAQ+jC,CAC7B,CAWA,SAASS,GAAsBC,EAAUC,GACxC,IAAMC,EAAY,CACjB3kC,KAAMykC,GAED1C,EAAS0C,EAASp7B,QAAQ,KAQhC,OAPI04B,GAAU,IACb4C,EAAU3kC,KAAOykC,EAAS/gC,UAAU,EAAGq+B,GACvC4C,EAAUriC,IAAM4/B,SAASuC,EAAS/gC,UAAUq+B,EAAS,EAAG0C,EAASp7B,QAAQ,MAAO,KAE7Eq7B,IACHC,EAAUtiC,IAAMqiC,EAAkBriC,KAE5BsiC,CACR,CAYA,SAASC,GAAyBh7B,EAAUi7B,EAAuBC,EAAwBlO,GAC1F,IAAK,IAAMmO,KAAWn7B,EACrB,GAAKuG,GAAIvG,EAAUm7B,GAAnB,CAGA,IAAMviC,EAAUoH,EAASm7B,GAGnBC,EAAe,IADTC,GAAWF,EACKG,GAQ5B,IANyB,IAArB1iC,EAAQub,UACXonB,GAA0B3iC,EAASqiC,EAAuBC,EAAwBC,EAASC,EAAcpO,GAErF,SAAjBp0B,EAAQgG,MAAoC,SAAjBhG,EAAQgG,MACtC48B,GAA0B5iC,EAASqiC,EAAuBE,EAASC,EAAcpO,GAE7D,WAAjBp0B,EAAQgG,KAAmB,CAE9B,IAAI68B,EAAaN,EACbviC,EAAQ8G,SAAS6T,SACpBkoB,GAAc,OAEfC,GAA8B9iC,EAASqiC,EAAuBQ,EAAYL,EAAcpO,GAGzF,GAAIp0B,EAAQuE,YAAa,CAExB,IADA,IAAMA,EAAc,GACXC,EAAM,EAAGA,EAAMxE,EAAQuE,YAAYrR,OAAQsR,IAAO,CAE1DD,EADmBg+B,EAAU,IAAM/9B,EAAM,KACfxE,EAAQuE,YAAYC,GAE/C49B,GAAyB79B,EAAa89B,EAAuBC,EAAwBlO,IAGxF,CAQA,SAAUoM,GAA4B5G,EAAWsG,EAAWrG,EAAckJ,GACzE,IAAMC,EAAoB9C,EAAU5iC,OAAOu8B,GACrCoJ,EAAeF,EAAiBC,GAAsBA,EAAkB3vC,QAAUgW,GAAOI,SAC3Fu5B,IAAsBA,EAAkB3vC,QAAUgW,GAAOC,QAAU05B,EAAkB3vC,QAAUgW,GAAOI,UAE1G,GAAIw5B,GAAerJ,EAAUC,GAAe,CAE3C,GAAID,EAAUC,GAAczyB,SAAU,CAAA,IACiB87B,EADjBC,EAAA5/B,GACfq2B,EAAUC,GAAczyB,UAAQ,IAAtD,IAAA+7B,EAAA3/B,MAAA0/B,EAAAC,EAAA1/B,KAAAC,MAAwD,CAAA,IAA7C1D,EAAOkjC,EAAA7vC,MACb0vC,EACC7C,EAAU94B,SAASpH,GAAS3M,QAAUgW,GAAOC,QAChD+3B,GAAYnB,EAAU94B,SAAU,CAAE5J,KAAMwC,GAAWgjC,EAAkB3vC,OAGtEguC,GAAYnB,EAAU94B,SAAU,CAAE5J,KAAMwC,GAAWgjC,EAAkB3vC,cAEtEiT,GAAA68B,EAAA58B,EAAAD,WAAA68B,EAAA38B,KAGF,GAAIozB,EAAUC,GAAcjhB,QAAS,CAAA,IACgBwqB,EADhBC,EAAA9/B,GACfq2B,EAAUC,GAAcjhB,SAAO,IAApD,IAAAyqB,EAAA7/B,MAAA4/B,EAAAC,EAAA5/B,KAAAC,MAAsD,CAAA,IAA3CoK,EAAMs1B,EAAA/vC,MACZ0vC,EACC7C,EAAUtnB,QAAQ9K,GAAQza,QAAUgW,GAAOC,QAC9C+3B,GAAYnB,EAAUtnB,QAAS,CAAEpb,KAAMsQ,GAAUk1B,EAAkB3vC,OAGpEguC,GAAYnB,EAAUtnB,QAAS,CAAEpb,KAAMsQ,GAAUk1B,EAAkB3vC,cAEpEiT,GAAA+8B,EAAA98B,EAAAD,WAAA+8B,EAAA78B,MAIH,GAAIozB,EAAUC,IAAiBD,EAAUC,GAAcv8B,OAAQ,CAAA,IACZgmC,EADYC,EAAAhgC,GAC1Cq2B,EAAUC,GAAcv8B,QAAM,IAAlD,IAAAimC,EAAA//B,MAAA8/B,EAAAC,EAAA9/B,KAAAC,MAAoD,CAAA,IAAzCrG,EAAKimC,EAAAjwC,MACX4vC,IACCF,EACC7C,EAAU5iC,OAAOD,GAAOhK,QAAUgW,GAAOC,QAC5C+3B,GAAYnB,EAAU5iC,OAAQ,CAAEE,KAAMH,GAAS2lC,EAAkB3vC,OAGlEguC,GAAYnB,EAAU5iC,OAAQ,CAAEE,KAAMH,GAAS2lC,EAAkB3vC,QAGnEmtC,GAA4B5G,EAAWsG,EAAW7iC,EAAO0lC,UACzDz8B,GAAAi9B,EAAAh9B,EAAAD,WAAAi9B,EAAA/8B,KAEH,CAGA,SAASs6B,GAAevhC,EAAYrE,EAAY8E,EAAS6/B,GACxD,IAAI2D,GAAW,EACTC,EAAcvoC,EAAWwoC,eAAenkC,EAAYokC,GAAeC,WAAYC,GAA2B3qB,UAChH,GAAIuqB,EAAYvwC,OAAS,EAAG,CAC3B,IAAMovC,EAAyBpnC,EAAW4oC,2BAC1C,IACC,IACoCC,EADhCC,GAAS,EAAMC,EAAA1gC,GACMkgC,GAAW,IAApC,IAAAQ,EAAAzgC,MAAAugC,EAAAE,EAAAxgC,KAAAC,MAAsC,CAAA,IAA3Bo4B,EAAUiI,EAAA1wC,MAChB6wC,EAAeC,GACnBH,EAASI,GAA2BtI,EAAWnF,WAAYp3B,EAAYrE,GACvE,IAAImpC,GAAU,EACQ,WAAlBpW,EAAO+V,KACVK,GAAU,EACVH,EAAe,CACdlnC,KAAMgnC,EAAOhnC,KACbqD,KAAM2jC,EAAO3jC,OAIf,IAAIikC,EAAgBvwB,EAAUxU,GAgC9B,GA/BIu8B,EAAWnF,WAAWmF,YACzBA,EAAWnF,WAAWmF,WAAWC,cACjCD,EAAWnF,WAAWmF,WAAWC,aAAaI,sBAC9CmI,EAAgBtC,GAAsBlG,EAAWnF,WAAWmF,WAAWC,aAAaI,oBAAqBmI,SAGzE,IAAtBA,EAAcxkC,UAAsD,IAAxBE,EAAQg2B,oBACvDsO,EAAcxkC,IAEtBokC,EAAahT,cAAgBoT,EAAc9mC,KACvCs+B,EAAWnF,WAAWmF,YACzBA,EAAWnF,WAAWmF,WAAWt8B,KACjC0kC,EAAahT,cAAgB4K,EAAWnF,WAAWmF,WAAWt8B,SAG9B,IAAtB8kC,EAAczkC,YACjBykC,EAAczkC,IAEtBqkC,EAAa3kC,WAAa+kC,EAG1BJ,EAAa3oB,SAAW+mB,EAAuBz7B,QAAQi1B,EAAWnF,WAAWmF,WAAWt8B,KAAO,EAE1FqgC,GAAe/D,EAAWyI,aAC9BL,EAAa/S,cAAe,GAIxBj2B,EAAWwM,gBAAgB48B,GAAe,GAAM,GAAM,KAC1Dd,GAAW,GAERa,IAAYb,EACftoC,EAAWspC,mBAAmBF,EAAeJ,GACzCG,IACHb,GAAW,QAEN,IAAKa,IAAYb,EAAU,CACjC,IAAMn8B,EAAMnM,EAAWwM,gBAAgB48B,GAAe,GAAO,GAAO,GAC/D38B,GAAQN,IAASA,EAAI6pB,gBAAkBgT,EAAahT,eACxDh2B,EAAWspC,mBAAmBF,EAAeH,YAG/C79B,GAAA29B,EAAA19B,EAAAD,WAAA29B,EAAAz9B,KACA,MAAOyO,GACRnK,EAAOrJ,KAAK,+BAAiCwT,IAGhD,CAKA,SAASkrB,GAA0B5gC,EAAY2gC,EAAWhlC,GACzDupC,GAA2BllC,EAAY2gC,EAAWhlC,EAAYyoC,GAAee,SAC7ED,GAA2BllC,EAAY2gC,EAAWhlC,EAAYyoC,GAAelC,SAC7EgD,GAA2BllC,EAAY2gC,EAAWhlC,EAAYyoC,GAAegB,aAC9E,CAIA,SAASF,GAA2BllC,EAAY2gC,EAAWhlC,EAAY0pC,GAEtEC,GADoB3pC,EAAWwoC,eAAenkC,EAAYqlC,EAAUf,GAA2B3qB,UAClE3Z,EAAY2gC,EAAWhlC,EAAY0pC,EACjE,CAIA,SAASC,GAAgBC,EAAavlC,EAAY2gC,EAAWhlC,EAAY0pC,GACxE,GAAIE,EAAY5xC,OAAS,EACxB,IACC4xC,EAAYjkC,SAAQ,SAAC81B,EAAYnyB,GAChC,IAAMugC,EAAYX,GAA2BzN,EAAWA,WAAYp3B,EAAYrE,GAEhF,OAAQ0pC,GACR,KAAKjB,GAAee,QACnBM,GAAoBD,EAAWpO,EAAWA,WAAW1b,QAAS1b,EAAY2gC,EAAWhlC,GAAY,GACjG,MACD,KAAKyoC,GAAelC,QACnBuD,GAAoBD,EAAWpO,EAAWA,WAAW/X,QAASrf,EAAY2gC,EAAWhlC,GAAY,GACjG,MACD,KAAKyoC,GAAegB,aACnB,IAAMM,EAgBX,SAAuCH,EAAa7xC,GACnD,IAAMiyC,EAAoBJ,EAAY7xC,GAChCkyC,EAAmBD,EAAkBvO,WAAW0F,YAAYhF,OAAO5c,cAErEwqB,GAAiB,EAOrB,OANAH,EAAYjkC,SAAQ,SAAC81B,EAAYnyB,GAE5BA,EAAMvR,GAAS0jC,EAAWA,WAAW0F,YAAYhF,OAAO5c,gBAAkB0qB,IAC7EF,GAAiB,MAGZA,CACR,CA5B4BG,CAA8BN,EAAatgC,IAqGvE,SAA8BmyB,EAAYjjB,EAAcwsB,EAAWmF,EAAUJ,GAC5E,GAAItO,EAAW0F,YAAYhF,QAAUV,EAAW0F,YAAYhF,OAAO5c,cAAe,CACjF,IAAM6mB,EAAWpB,EAAU94B,SACrB7H,EAAayiC,GAAsBrL,EAAW0F,YAAYhF,OAAO5c,cAAe/G,GAClF6tB,EAAYD,EAAS/hC,EAAW/B,MAKpC,GAJK+jC,IACJA,EAAY,SAGiB,IAAnBhiC,EAAWO,IAAqB,CAC1C,IAAM6zB,EAAQp0B,EAAWO,IAAI3K,WAI7B,GAHKosC,EAAU5N,KACd4N,EAAU5N,GAAS,SAEU,IAAnBp0B,EAAWM,IAAqB,CAC1C,IAAM+zB,EAAQr0B,EAAWM,IAAI1K,WACxBosC,EAAU5N,GAAOC,KACrB2N,EAAU5N,GAAOC,GAAS,IAG3B,IAAM0R,EAAcC,GAAsB5O,EAAY0O,EAAU9D,EAAU5N,GAAOC,GAAOO,WAAYoN,EAAU5N,GAAOC,GAAO4R,kBAAmBP,GAC/I1D,EAAU5N,GAAOC,GAAOO,WAAamR,EAAY5+B,OACjD66B,EAAU5N,GAAOC,GAAO4R,kBAAoBF,EAAYG,kBAClD,CAEN,IAAMH,EAAcC,GAAsB5O,EAAY0O,EAAU9D,EAAU5N,GAAOQ,WAAYoN,EAAU5N,GAAO6R,kBAAmBP,GACjI1D,EAAU5N,GAAOQ,WAAamR,EAAY5+B,OAC1C66B,EAAU5N,GAAO6R,kBAAoBF,EAAYG,mBAE5C,CAEN,IAAMH,EAAcC,GAAsB5O,EAAY0O,EAAU9D,EAAUpN,WAAYoN,EAAUiE,kBAAmBP,GACnH1D,EAAUpN,WAAamR,EAAY5+B,OACnC66B,EAAUiE,kBAAoBF,EAAYG,cAE3CnE,EAAS/hC,EAAW/B,MAAQ+jC,EAE9B,CAzIKmE,CAAqB/O,EAAWA,WAAYp3B,EAAY2gC,EAAW6E,EAAWE,OAO/E,MAAOhwB,GACRnK,EAAOrJ,KAAK,+BAAiCwT,GAGhD,CAmBA,SAAS+vB,GAAoBW,EAAShP,EAAYp3B,EAAY2gC,EAAWhlC,EAAY0qC,GAChFjP,EAAWC,gBACdiP,GAAiBF,EAAShP,EAAYp3B,EAAY2gC,EAAWhlC,EAAY0qC,EAAgBjP,EAAWC,eAAgB,WAEjHD,EAAWS,aACdyO,GAAiBF,EAAShP,EAAYp3B,EAAY2gC,EAAWhlC,EAAY0qC,EAAgBjP,EAAWS,YAAa,UAE9GT,EAAWQ,YAMhB,SAAsCwO,EAAShP,EAAYp3B,EAAY2gC,EAAWhlC,EAAY0qC,GAC7F,IAI4CE,EAJtCC,EAAcH,EAAkBv8B,GAAOq7B,QAAUr7B,GAAOo4B,QACxDuE,EAAeJ,EAAkBv8B,GAAOC,OAASD,GAAOI,SACxDw8B,EAAmBL,EAAkBv8B,GAAOo4B,QAAUp4B,GAAOC,OAAO48B,EAAA3iC,GAEnDozB,EAAWQ,YAAU,IAA5C,IAAA+O,EAAA1iC,MAAAsiC,EAAAI,EAAAziC,KAAAC,MAA8C,CAAA,IACvCyiC,EAAmBnE,GADP8D,EAAAzyC,OAEZ+yC,EAAeC,GAAUnG,EAAU5iC,OAAQ6oC,GAEjD,IAAgB,IAAZR,GACH,GAAIQ,GAAoBC,IAAiBL,GAAcK,IAAiBH,EACvDK,GAAqBpG,EAAWiG,EAAkBJ,EAAY7qC,IAG7EqrC,GAA0BrG,EAAWiG,EAAkBJ,EAAY7qC,QAG/D,GAAIirC,IAAqBP,IAAoBA,GAAkBQ,IAAiBH,GAAmB,CACzFK,GAAqBpG,EAAWiG,EAAkBH,EAAa9qC,IAG9EqrC,GAA0BrG,EAAWiG,EAAkBH,EAAa9qC,WAGtEoL,GAAA4/B,EAAA3/B,EAAAD,WAAA4/B,EAAA1/B,IACF,CA9BEggC,CAA6Bb,EAAShP,EAAYp3B,EAAY2gC,EAAWhlC,EAAY0qC,EAEvF,CA+BA,SAASC,GAAiBF,EAAShP,EAAYp3B,EAAY2gC,EAAWhlC,EAAY0qC,EAAgBa,EAAUC,GAC3G,IAI0BC,EAJpBZ,EAAcH,EAAkBv8B,GAAOq7B,QAAUr7B,GAAOo4B,QACxDuE,EAAeJ,EAAkBv8B,GAAOC,OAASD,GAAOI,SACxDw8B,EAAmBL,EAAkBv8B,GAAOo4B,QAAUp4B,GAAOC,OAC7Ds9B,EAA0B,YAAbF,EAA0BxG,EAAU94B,SAAW84B,EAAUtnB,QAAQiuB,EAAAtjC,GAClEkjC,GAAQ,IAA1B,IAAAI,EAAArjC,MAAAmjC,EAAAE,EAAApjC,KAAAC,MAA4B,CAAA,IACrBojC,EAAc9E,GADP2E,EAAAtzC,MACkCkM,GACzC6mC,EAAeC,GAAUO,EAAWE,GAE1C,GAAI1yC,MAAM2F,QAAQ48B,EAAWjwB,QAAS,CACrC,IACqCqgC,EADrCC,EAAAzjC,GACoBozB,EAAWjwB,QAAM,IAArC,IAAAsgC,EAAAxjC,MAAAujC,EAAAC,EAAAvjC,KAAAC,MAAuC,CAAA,IAA5BrQ,EAAK0zC,EAAA1zC,MAEdyuC,GAAuB8E,EAAWE,EAAazzC,GADhC,IAAZsyC,EACmDI,EAEAC,UAEvD1/B,GAAA0gC,EAAAzgC,EAAAD,WAAA0gC,EAAAxgC,UACqB,IAAZm/B,EACNmB,GAAeV,IAAiBL,GAAcK,IAAiBH,GAClE5E,GAAYuF,EAAWE,EAAaf,EAAY7qC,GAEvC4rC,IAAgBlB,IAAoBA,GAAkBQ,IAAiBH,IACjFgB,GAAoB/G,EAAW4G,EAAad,EAAaY,EAAW1rC,UAErEoL,GAAAugC,EAAAtgC,EAAAD,WAAAugC,EAAArgC,IACF,CA6CA,SAAS+/B,GAA0BrG,EAAW4G,EAAa9rC,EAAOE,GACjE,GAAIA,EAAW0+B,UAAUkN,EAAYtpC,MAAO,CAC3C,IACoC0pC,EAD9BtN,EAAY1+B,EAAW0+B,UAAUkN,EAAYtpC,MAAM2pC,EAAA5jC,GACrCq2B,EAAUt8B,QAAM,IAApC,IAAA6pC,EAAA3jC,MAAA0jC,EAAAC,EAAA1jC,KAAAC,MAAsC,CAAA,IAC/B0jC,EAAkB,CAAE5pC,KADX0pC,EAAA7zC,OAEfguC,GAAYnB,EAAU5iC,OAAQ8pC,EAAiBpsC,GAE/CurC,GAA0BrG,EAAWkH,EAAiBpsC,EAAOE,GAEzDF,IAAUqO,GAAOo4B,QACpB4F,GAA4BD,EAAiBlsC,EAAYyoC,GAAelC,QAASvB,GACvEllC,IAAUqO,GAAOq7B,UAEvBxE,EAAU5iC,OAAOwpC,EAAYtpC,MAAMgM,UAEtCg3B,GAA4BtlC,EAAW0+B,UAAWsG,EAAW4G,EAAYtpC,MAAM,GAEhF6pC,GAA4BD,EAAiBlsC,EAAYyoC,GAAelC,QAASvB,GACjFmH,GAA4BD,EAAiBlsC,EAAYyoC,GAAee,QAASxE,WAElF55B,GAAA6gC,EAAA5gC,EAAAD,WAAA6gC,EAAA3gC,IAAA,IACuC8gC,EADvCC,EAAAhkC,GACqBq2B,EAAUxyB,UAAQ,IAAxC,IAAAmgC,EAAA/jC,MAAA8jC,EAAAC,EAAA9jC,KAAAC,MAA0C,CAEzC8jC,GAAgCtH,EAAW4G,EAAa9rC,EAAOE,EADxC,CAAEsC,KADR8pC,EAAAj0C,OAE0E6sC,EAAU94B,iBACrGd,GAAAihC,EAAAhhC,EAAAD,WAAAihC,EAAA/gC,IAAA,IACqCihC,EADrCC,EAAAnkC,GACoBq2B,EAAUhhB,SAAO,IAAtC,IAAA8uB,EAAAlkC,MAAAikC,EAAAC,EAAAjkC,KAAAC,MAAwC,CAEvC8jC,GAAgCtH,EAAW4G,EAAa9rC,EAAOE,EADxC,CAAEsC,KADTiqC,EAAAp0C,OAE2E6sC,EAAUtnB,gBACrGtS,GAAAohC,EAAAnhC,EAAAD,WAAAohC,EAAAlhC,KAGH,CAGA,SAASghC,GAAgCtH,EAAW4G,EAAa9rC,EAAOE,EAAYysC,EAAUC,GAC7FvG,GAAYuG,EAAcD,EAAU3sC,GAEhCA,IAAUqO,GAAOo4B,SACpB4F,GAA4BM,EAAUzsC,EAAYyoC,GAAelC,QAASvB,GAC1EmH,GAA4BM,EAAUzsC,EAAYyoC,GAAee,QAASxE,IAChEllC,IAAUqO,GAAOq7B,UAE3BD,GAA2BkD,EAAUzH,EAAWhlC,EAAYyoC,GAAee,SAC3E2C,GAA4BM,EAAUzsC,EAAYyoC,GAAee,QAASxE,GAEtEA,EAAU5iC,OAAOwpC,EAAYtpC,MAAMnK,QAAUgW,GAAOI,SACvD43B,GAAYuG,EAAcD,EAAUt+B,GAAOI,UAG3C49B,GAA4BM,EAAUzsC,EAAYyoC,GAAelC,QAASvB,GAG7E,CAGA,SAASmH,GAA4B9nC,EAAYrE,EAAY2sC,EAAS3H,GACrE,IAAM4H,EAAkB5sC,EAAWwoC,eAAenkC,EAAYsoC,EAAShE,GAA2BkE,MAC9FD,EAAgB50C,OAAS,GAC5B2xC,GAAgBiD,EAAiBvoC,EAAY2gC,EAAWhlC,EAAY2sC,EAGtE,CAGA,SAASvB,GAAqBpG,EAAW7iC,EAAOrC,EAAOE,EAAY4rC,GAClE,IAAMkB,EAAY3qC,EAAMG,KACxB,IAAI0iC,EAAU5iC,OAAO0qC,GAWpB,OADA3G,GAAYnB,EAAU5iC,OAAQD,EAAOrC,IAC9B,EAVP,IAAMitC,EAAY/H,EAAU5iC,OAAO0qC,GAAW30C,MAE9C,QAAM40C,IAAc5+B,GAAOo4B,SAAWwG,IAAc5+B,GAAOq7B,WAAa1pC,IAAUqO,GAAOI,UAAYzO,IAAUqO,GAAOC,SACnH2+B,IAAc5+B,GAAOI,UAAYzO,IAAUqO,GAAOo4B,SAClDwG,IAAc5+B,GAAOC,QAAUtO,IAAUqO,GAAOq7B,WAClDrD,GAAYnB,EAAU5iC,OAAQD,EAAOrC,IAC9B,EAOV,CAGA,SAASisC,GAAoB/G,EAAW4G,EAAa9rC,EAAO4rC,EAAW1rC,GACtE,IAAMyI,EAAcmjC,EAAYtpC,KAChC,GAAIopC,EAAUjjC,GAAc,CAC3B,IAAIskC,EAAYrB,EAAUjjC,GAAatQ,WACR,IAApByzC,EAAYhnC,MAElB8mC,EAAUjjC,GAAamjC,EAAYhnC,WACP,IAApBgnC,EAAYjnC,KAAuB+mC,EAAUjjC,GAAamjC,EAAYhnC,KAAKgnC,EAAYjnC,KACjGooC,EAAYrB,EAAUjjC,GAAamjC,EAAYhnC,KAAKgnC,EAAYjnC,KAAKxM,MAKtEguC,GAAYuF,EAAWE,EAAa9rC,EAAOE,MAIvC+sC,IAAc5+B,GAAOo4B,SAAWwG,IAAc5+B,GAAOq7B,WAAa1pC,IAAUqO,GAAOI,UAAYzO,IAAUqO,GAAOC,SACnH2+B,IAAc5+B,GAAOI,UAAYzO,IAAUqO,GAAOo4B,SAClDwG,IAAc5+B,GAAOI,UAAYzO,IAAUqO,GAAOC,QAClD2+B,IAAc5+B,GAAOC,QAAUtO,IAAUqO,GAAOq7B,UAClDrD,GAAYuF,EAAWE,EAAa9rC,EAAOE,QAG5CmmC,GAAYuF,EAAWE,EAAa9rC,EAAOE,EAE7C,CAEA,SAASqqC,GAAsB5O,EAAY0O,EAAU6C,EAAgBzC,EAAeR,GACnF,IAAM9Q,EAAa,CAClBztB,OAAQwhC,EACRzC,eAAeR,IAAyBQ,IAAiB,IAGtD0C,EAAe,KAgBnB,OAfI9C,IACH8C,EAAexR,EAAW0F,YAAYhF,OAAO3wB,SAI1CyhC,GAAiB1C,IACpBtR,EAAWztB,OAASyhC,EACpBhU,EAAWsR,eAAgB,GAIxBR,IACH9Q,EAAWsR,eAAgB,GAGrBtR,CACR,CAGA,SAASkS,GAAU/E,EAAU/hC,GAC5B,IAAIgiC,EAAYD,EAAS/hC,EAAW/B,MAOpC,YAN8B,IAAnB+B,EAAWO,KAAuByhC,IAC5CA,EAAYA,EAAUhiC,EAAWO,IAAI3K,iBACP,IAAnBoK,EAAWM,KAAuB0hC,IAC5CA,EAAYA,EAAUhiC,EAAWM,IAAI1K,cAGnCosC,EACIA,EAAUluC,MAEX,IACR,CAEA,SAASsvC,GAA0B3iC,EAASooC,EAAgB9F,EAAwBC,EAASC,EAAcpO,GAE1G,IAAMhwB,EAASpE,EAAQoE,OAASpE,EAAQoE,MAAM/D,KAAQL,EAAQoE,MAAM/D,KAAOkiC,EAGrE8F,EAAe,YAAc9F,EAAU,IAAMC,EAC7C8F,EAAqB,CAC1BxoB,OAAQyiB,EACR5L,WAAY,CACXmF,WAAY,CACXt8B,GAAI6oC,EACJtM,aAAc,CACb/+B,KAAM,QACNkxB,QAAS,CACRqa,QAXYt9B,EAAcmpB,EAC9BhuB,GAAaoiC,eAAgB,CAAEpkC,MAAOA,KAYnC+3B,oBAAqBoG,GAEtBjN,SAAU,CACTK,UAAW,CACVlb,cAAe8nB,EACfzF,GAAI,kBAOLsL,EAAehhC,SAASm7B,GAC3B6F,EAAehhC,SAASm7B,GAAS/8B,KAAK8iC,GAEtCF,EAAehhC,SAASm7B,GAAW,CAAC+F,GAErChG,EAAuB98B,KAAK6iC,EAC7B,CAEA,SAASzF,GAA0B5iC,EAASooC,EAAgB7F,EAASC,EAAcpO,GAElF,IAAMqU,EAAUzoC,EAAQkc,WAAclc,EAAQkc,WAAalc,EAAQmc,WAC7DusB,EAAiB1oC,EAAQkc,WAAcysB,GAAsBC,GAC7DC,EAAYJ,GAAmBC,EAG/BJ,EAAqB,CAC1BxoB,OAAQyiB,EACR5L,WAAY,CACXmF,WAAY,CACXt8B,GAAI,UAAY+iC,EAAU,IAAMC,EAChCzG,aAAc,CACb/+B,KAAM,QACNkxB,QAAS,CACRqa,QAVYt9B,EAAcmpB,EAC9BhuB,GAAa0iC,sBAAuB,CAAE9iC,KAAMhG,EAAQgG,KAAMyiC,OAAQI,KAW/D1M,oBAAqBoG,GAEtBjN,SAAU,CACTK,UAAW,CACVlb,cAAe8nB,EACfzF,GAAI,aACJzpC,MAAO2M,EAAQgG,UAOhBoiC,EAAehhC,SAASm7B,GAC3B6F,EAAehhC,SAASm7B,GAAS/8B,KAAK8iC,GAEtCF,EAAehhC,SAASm7B,GAAW,CAAC+F,EAEtC,CAEA,SAASxF,GAA8B9iC,EAASooC,EAAgB7F,EAASC,EAAcpO,GAEtF,IAAMhwB,EAASpE,EAAQoE,OAASpE,EAAQoE,MAAM/D,KAAQL,EAAQoE,MAAM/D,KAAOkiC,EAIrE+F,EAAqB,CAC1BxoB,OAAQyiB,EACR5L,WAAY,CACXmF,WAAY,CACXt8B,GAAI,cAAgB+iC,EAAU,IAAMC,EACpCzG,aAAc,CACb/+B,KAAM,UACNkxB,QAAS,CACRqa,QAXYt9B,EAAcmpB,EAC9BhuB,GAAa2iC,oBAAqB,CAAE3kC,MAAOA,KAYxC+3B,oBAAqBoG,GAEtBjN,SAAU,CACTK,UAAW,CACVlb,cAAe8nB,EACfzF,GAAI,oBAKRyH,YAAY,GAGT6D,EAAehhC,SAASm7B,GAC3B6F,EAAehhC,SAASm7B,GAAS/8B,KAAK8iC,GAEtCF,EAAehhC,SAASm7B,GAAW,CAAC+F,EAEtC,CAGA,SAASU,GAAsBxL,EAAWgB,EAAUvnC,GACnD,GAAIumC,EAAUnqC,MACb,GAA+B,iBAApBmqC,EAAUnqC,MACpB,IAAK,IAAIyY,EAAI,EAAGA,EAAI0yB,EAAStrC,OAAQ4Y,IAAK,CACzC,IAAIwyB,EAAQE,EAAS1yB,GACrB,GAAIwyB,EAAM9gC,OAASggC,EAAUnqC,MAC5B,MAAY,SAAR4D,EACIqnC,EAAMthC,KAEPshC,EAAME,SAASvnC,QAGlB,GAA+B,WAA3Bg3B,EAAOuP,EAAUnqC,OAC3B,IAAK,IAAIikC,EAAI,EAAGA,EAAIkH,EAAStrC,OAAQokC,IAAK,CACzC,IAAI2R,EAASzK,EAASlH,GACtB,GAAI2R,EAAOC,WAAa1L,EAAUnqC,MAAM81C,YAAcF,EAAOG,SAAW5L,EAAUnqC,MAAMg2C,SACvF,MAAY,SAARpyC,EACIgyC,EAAOjsC,KAERisC,EAAOzK,SAASvnC,GAK3B,OAAO,IACR,CCpqCA,IAAItB,GAAWnD,GACXgpC,GAAmB9oC,GAEnB+oC,GAAsBjnC,GA0B1B80C,GA3Be12C,IAoBa,SAASsnC,GACnC,IAAIyB,EAAShmC,GAASukC,EAAQuB,IAC9B,OAAQE,EAAOzoC,QAAUyoC,EAAO,KAAOzB,EAAO,GAC1CsB,GAAiBG,GACjB,EACN,4aCLmC,IAEd4N,YAAiBnsC,GAAA3G,EAAA8yC,EAAAnsC,GAAA,IAAAzG,EAAAC,GAAA2yC,GAAA,SAAAA,IAAA,OAAA1yC,OAAA0yC,GAAA5yC,EAAAG,WAAAC,WA8BpC,OA9BoCC,EAAAuyC,IAAAtyC,aAAA5D,MAErC,WAEC,IAAK6D,KAAKC,MAAMiK,aAAgBlK,KAAKC,MAAMqyC,YAActyC,KAAKC,MAAMkK,QACnE,OAAO,KAER,IAAMooC,EAAUvyC,KAAKC,MAAMkK,QAAU,KAAOtJ,EAAAC,0BAAOd,KAAKC,MAAMiK,YAAYf,MACpEiI,EAAQvQ,EAAAC,qBAAKG,UAAU,QAC3BJ,EAAAC,cAACqQ,IAAKrL,KAAM9F,KAAKC,MAAMiK,YAAYpE,QAE/B0sC,EAAUxyC,KAAKC,MAAMkK,QACvBtJ,EAAAC,qBAAKG,UAAU,qDACjBJ,EAAAC,cAAC4N,IACApG,GAAIE,KAAU,uBACdmG,IAAK3O,KAAKC,MAAMiK,YAAYf,KAC5B6M,UAAU,SACV/U,UAAU,uBAETmQ,IAGD,KACGnQ,EAAYC,GAAW,gCAAiClB,KAAKC,MAAMiK,YAAYpE,KACpF,CAAEmM,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QAAUpS,KAAKC,MAAM6D,QAAUqO,GAAOI,SAAUpI,QAAWnK,KAAKC,MAAMkK,UAC7G,OACCtJ,EAAAC,qBAAKG,UAAWA,GACduxC,EACAD,OAEHF,CAAA,EA9B6CxxC,EAAMrB,cCPtC6yC,2aCcmD,IAE5DI,YAAevsC,GAAA3G,EAAAkzC,EAAAvsC,GAAA,IAAAzG,EAAAC,GAAA+yC,GACpB,SAAAA,EAAYxyC,GAAO,IAAAwG,EAEyD,OAFzD9G,OAAA8yC,IAClBhsC,EAAAhH,EAAArB,UAAM6B,IACDyyC,0BAA4BjsC,EAAKisC,0BAA0B7rC,KAAIC,EAAAL,IAAOA,EAkG3E,OAjGA3G,EAAA2yC,IAAA1yC,wBAAA5D,MAED,WACC6D,KAAK0yC,2BAA0B,MAC/B3yC,yBAAA5D,MAED,SAAmBw2C,GAEbhW,EAAQ38B,KAAKC,MAAM2yC,YAAaD,EAAUC,cAC9C5yC,KAAK0yC,+BAIP3yC,gCAAA5D,MACA,SAA0B02C,GAEzB,GAAI31C,MAAM2F,QAAQ7C,KAAKC,MAAM9D,QAAUe,MAAM2F,QAAQ7C,KAAKC,MAAM2yC,YAAYpjC,SAAWxP,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAY/B,OAAQ,CAC7I,IAAM8jB,EAAWC,GAAa/yC,KAAKC,MAAM9D,MAAO6D,KAAKC,MAAM2yC,YAAYpjC,QAClEmtB,EAAQ38B,KAAKC,MAAM9D,MAAO22C,IAC9B9yC,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYyqC,EAAUD,OAG7E9yC,aAAA5D,MAED,WACC,IAAIyQ,EAAe5M,KAAKC,MAAM9D,MAG9B,GAAI6D,KAAKC,MAAM6I,QAAQ0G,QAAUxP,KAAKC,MAAM6I,QAAQ2G,YAAa,CAChE,IAAMwjC,EAAejzC,KAAKC,MAAM6I,QAAQ0G,OAAOG,QAAQ3P,KAAKC,MAAM9D,OAC9D82C,GAAgB,GAAKjzC,KAAKC,MAAM6I,QAAQ2G,YAAYwjC,KACvDrmC,EAAe5M,KAAKC,MAAM6I,QAAQ2G,YAAYwjC,IAgBhD,GAbI,MAAOrmC,EACVA,EAAe,GACmB,WAAxBmqB,EAAOnqB,IAA6BA,EAAaulC,SAC3DvlC,EAAesmC,EAAoBtmC,EAAc5M,KAAKC,MAAM6I,SAClD5L,MAAM2F,QAAQ+J,GAExBA,EAAeA,EAAa9C,KAAK,MACC,kBAAjB8C,IACjBA,EAAeA,EAAa3O,YAG7B2O,EAAe4F,GAAkC5F,GAE7C5M,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAY/B,OAClDpiB,EAAe5M,KAAKC,MAAM+D,WAAWmvC,iBAAiBnzC,KAAKC,MAAMoI,WAAYrI,KAAKC,MAAM6I,QAAS,CAAEsqC,OAAO,EAAMhvB,UAAW,iBACrH,GAAIpkB,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAY2C,WACxD1zB,KAAKC,MAAM6I,QAAQ8G,UAAY5P,KAAKC,MAAM6I,QAAQ8G,SAASC,WAAawjC,GAAU3f,UAAY,CAC/F,IAAM4f,EAAO,IAAIC,KAAK3mC,GAGpBA,EAFE4mC,GAAQF,GACPtzC,KAAKC,MAAMwzC,aACC5yC,EAAAC,cAAC4yC,IAAcv3C,MAAOm3C,EAAMK,IAAI,UAAUC,MAAM,OAAOC,KAAK,UAAUC,KAAK,UAAUC,OAAO,YAE5FlzC,EAAAC,cAAC4yC,IAAcv3C,MAAOm3C,EAAMK,IAAI,UAAUC,MAAM,OAAOC,KAAK,UAAUC,KAAK,UAAUC,OAAO,UAAUC,QAAQ,SAG/G,GAGjB,IAAMC,EAAWpzC,EAAAC,sBAAMG,UAAU,wBAAwBqR,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,UAAW3F,GACtGiL,EAAUo8B,EACd,GAAIj0C,KAAKC,MAAMwzC,aAAc,CAC5B,IAAInhC,GAAW,EACX1F,IACH0F,GAAW,GAEZ,IAAI7P,EAAUwxC,EACVj0C,KAAKC,MAAM6I,QAAQsI,OACtB3O,EACC5B,EAAAC,qBAAKG,UAAW,6BACfJ,EAAAC,qBAAKG,UAAW,8BACfJ,EAAAC,cAACqQ,IAAKrL,KAAM9F,KAAKC,MAAM6I,QAAQsI,QAE/B6iC,IAGJp8B,EACChX,EAAAC,cAACozC,GACAzxC,QAASA,EACT0xC,YAAavnC,EACb0F,SAAUA,IAIb,OACCzR,EAAAC,qBACCG,UAAWC,GAAW,sBAAuB,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,SACnF,UAASI,GAAuBxS,KAAKC,MAAMoI,aAE1CrI,KAAKC,MAAMwzC,aAAe,KAAOzzC,KAAKC,MAAMm0C,YAC5Cv8B,EACDhX,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAc3vC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,mBAGxGuoC,CAAA,EArG4B5xC,EAAMrB,cAkIrBqE,IAVS,SAACC,EAAOC,GAC/B,IAAM9D,EAAQ,CACb9D,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,aAG3D,OADApI,EAAM2yC,YAAc7uC,EAASC,WAAWswC,qBAAqBvwC,EAASsE,WAAYtE,EAAS+E,SACpF7I,CACR,GAEwC,KAAzB4D,CAA+B4uC,4aCrI9C,IAEM8B,YAAgBruC,GAAA3G,EAAAg1C,EAAAruC,GAAA,IAAAzG,EAAAC,GAAA60C,GACrB,SAAAA,EAAYt0C,GAAO,IAAAwG,EAWjB,OAXiB9G,OAAA40C,IAClB9tC,EAAAhH,EAAArB,UAAM6B,IACDu0C,UAAYv0C,EAAM+D,WAAWiL,eAClCxI,EAAKwC,UAAYuJ,GAA0BvS,EAAM6I,QAAS7I,EAAM+D,WAAWywC,qCAC3EhuC,EAAK6B,GAAKkK,GAA0BvS,EAAMoI,YAC1C5B,EAAKgd,QAAS,EACVhd,EAAKxG,MAAM6I,QAAQ8G,WAClBnJ,EAAKxG,MAAM6I,QAAQ8G,SAAS6T,SAC/Bhd,EAAKgd,QAAS,GAEfhd,EAAK4c,aAAe5c,EAAKxG,MAAM6I,QAAQ8G,SAASyT,cAChD5c,EA6FD,OA5FA3G,EAAAy0C,IAAAx0C,mBAAA5D,MAED,SAAa4O,GACZ,IAAI5O,EAAQ4O,EAAIo1B,OAAOhkC,OACC,IAApB6D,KAAKiJ,WAAoB9M,IAC5BA,EAAQA,EAAM6N,UAAU,EAAGhK,KAAKiJ,YAE7BjJ,KAAKyjB,SACRtnB,EAAQqW,GAA2BrW,EAvBV,OAyBL,IAAjBA,EAAMH,aAA8C,IAAtBgE,KAAKqjB,cAAsD,OAAtBrjB,KAAKqjB,eAC3ElnB,EAAQ,MAET6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYlM,MACjE4D,aAAA5D,MAED,WACC,IAAIA,EAAQ6D,KAAKC,MAAM9D,MAAQ6D,KAAKC,MAAM9D,MAAQ,GAC9CsN,GAAY,EAChB,GAAIzJ,KAAKyjB,OAAQ,CAChB,IAAMixB,EAASliC,GAA0BrW,EAnChB,MAoCzBA,EAAQu4C,EAAOv4C,MACfsN,EAAYirC,EAAOjrC,eAGnBA,EAA6B,KAD7BtN,EAAQqW,GAAkCrW,IACxBH,QAAgBG,EAAMH,SAAWgE,KAAKC,MAAM9D,MAAMH,OAErE,IAAMiF,EAAYC,GAAW,uBAAwB,2BAA4B,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QACtHpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,MAEpD6uC,EAAY,KAChB,GAAIlrC,EAAW,CACd,IAAMujC,EAAe,CACpB7jC,KAAM4K,EAAc/T,KAAKw0C,UAAWtlC,GAAa0lC,2BAA4B,CAAEC,eAAgB9qC,KAC/FjE,KAAM4K,GAAuBE,MAC7BopB,cAAeh6B,KAAKC,MAAM6I,QAAQxC,MAEnCquC,EAAa9zC,EAAAC,qBAAKG,UAAU,iCAC1BjB,KAAKC,MAAMwzC,aAAe,KAAOzzC,KAAKC,MAAMm0C,YAC7CvzC,EAAAC,cAAC2xC,IACA3pC,QAAS9I,KAAKC,MAAM6I,QACpBT,WAAYrI,KAAKC,MAAMoI,WACvBrE,WAAYhE,KAAKC,MAAM+D,WACvByvC,aAAczzC,KAAKC,MAAMwzC,+EAG1B5yC,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAc3vC,MAAO,GAAIoG,YAAa8iC,SAExE,CACN,IAAM5iC,EAAkBoI,GAAgCxS,KAAKC,MAAMiK,YAAalK,KAAKC,MAAMwzC,cAC3FkB,EAAa9zC,EAAAC,cAACg0C,GAASz8B,MAClBjO,GACJ2qC,cAA0C,IAA5B/0C,KAAKC,MAAMwzC,aAAwB,MAAQ,KACzDnrC,GAAItI,KAAKsI,GACTgK,SAAWtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACvCyiC,YAAah1C,KAAKC,MAAM6I,QAAQmiB,eAChCgqB,SAAUj1C,KAAKk1C,aAAaruC,KAAK7G,MACjC7D,MAAOA,EACPg5C,UAAWn1C,KAAKC,MAAMm0C,YACtBgB,UAAWp1C,KAAKC,MAAMwzC,aACtBtrC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,SAIhE,IAAI0P,EAAU88B,EACd,GAAI30C,KAAKC,MAAMwzC,aAAc,CAC5B,IAAM37B,EAAYtP,KAAU,mBAAqBxI,KAAKC,MAAMoI,WAAWpK,WACnEqU,GAAW,EACXnW,GAAS6D,KAAKC,MAAM6D,QAAUqO,GAAOI,WACxCD,GAAW,GAEZ,IAAMuD,EACLhV,EAAAC,qBAAKG,UAAU,uBACb8zB,OAAO54B,IAGV0b,EAAWhX,EAAAC,cAAC4N,IACXpG,GAAIwP,EACJnJ,IAAKkH,EACLG,UAAU,SACV/U,UAAU,sBACVgV,QAAS3D,GAERqiC,GAGH,OACC9zC,EAAAC,qBAAKG,UAAWA,EAAW,UAASuR,GAAuBxS,KAAKC,MAAMoI,aACpEwP,EACDhX,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAcnB,aAAUxuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,mBAGlHqqC,CAAA,EAzG6B1zC,EAAMrB,cAoItBqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+B0wC,4aC3IX,IAE7Bc,YAAiBnvC,GAAA3G,EAAA81C,EAAAnvC,GAAA,IAAAzG,EAAAC,GAAA21C,GACtB,SAAAA,EAAYp1C,GAAO,IAAAwG,EAAA9G,OAAA01C,IAClB5uC,EAAAhH,EAAArB,UAAM6B,IACDu0C,UAAYv0C,EAAM+D,WAAWiL,eAClCxI,EAAK6uC,UAAY,GACjB7uC,EAAK8uC,SAAW,GAChB,IAAK,IAAI3gC,EAAI,EAAGA,EAAI3U,EAAM6I,QAAQ0G,OAAOxT,SAAU4Y,EAClDnO,EAAK6uC,UAAUr1C,EAAM6I,QAAQ0G,OAAOoF,IAAM3U,EAAM6I,QAAQ2G,YAAYmF,QAC5B,IAA7B3U,EAAM6I,QAAQkb,aACxBvd,EAAK8uC,SAASt1C,EAAM6I,QAAQ0G,OAAOoF,IAAM3U,EAAM6I,QAAQkb,WAAWpP,IAEnE,OAAAnO,EAgED,OA/DA3G,EAAAu1C,IAAAt1C,cAAA5D,MAED,SAAQ4O,GACP,IACM+nC,EADc9yC,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,cACpCrI,KAAKC,MAAM6I,QAAQ0G,OAAO,GAAMxP,KAAKC,MAAM6I,QAAQ0G,OAAO,GAAKxP,KAAKC,MAAM6I,QAAQ0G,OAAO,GAC3HxP,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYyqC,MAEjE/yC,iBAAA5D,MAED,WACC,IAAIiV,EAAO,KACX,QAA+C,IAApCpR,KAAKu1C,SAASv1C,KAAKC,MAAM9D,OAAwB,CAC3D,IAAMq5C,EAAYx1C,KAAKu1C,SAASv1C,KAAKC,MAAM9D,OAG1CiV,EAFwB,iBAAdokC,GAAoE,SAA1CA,EAAUzf,MAAMyf,EAAUx5C,OAAS,GAEhE6E,EAAAC,cAAC20C,IAAKx0C,UAAU,gBAAgBqX,IAAKk9B,IAEpC30C,EAAAC,qBACPG,UAAU,gBACVqX,IAAKk9B,EACLE,IAAI,KAIP,OAAOtkC,KACPrR,aAAA5D,MAED,WACC,IAAIw5C,EAAW31C,KAAKs1C,UAAUt1C,KAAKC,MAAM9D,YACjB,IAAbw5C,IACVA,EAAW31C,KAAKC,MAAM9D,OAEvB,IAAI6X,EAAS,KACP4hC,EAAa51C,KAAKC,MAAMwzC,aAAe,QAAU,gBAC/B,IAAbkC,IACV3hC,EACCnT,EAAAC,cAACyQ,IACAE,KAAMmkC,EACN5zC,KAAK,QACLwP,QAASxR,KAAKwR,QAAQ3K,KAAK7G,MAC3B0R,WAAY1R,KAAK0R,WAAW7K,KAAK7G,MACjC61C,gBAAiB9hC,EAAc/T,KAAKw0C,UAAWtlC,GAAa4mC,4BAA6B,CAAEC,iBAAkB/1C,KAAKC,MAAM9D,QACxHmW,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,UAErCojC,IAKJ,IAAM10C,EAAYC,GAAW,wBAAyB,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QAAUpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,MAE7J,OACCjF,EAAAC,qBACC,aAAad,KAAKC,MAAM6I,QAAQoE,OAASlN,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAQnJ,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAO,GAC1GlI,UAAWA,EACXqR,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtC,UAASC,GAAuBxS,KAAKC,MAAMoI,aAE1CrI,KAAKC,MAAMwzC,aAAe,KAAOzzC,KAAKC,MAAMm0C,YAC5CpgC,EACDnT,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAc3vC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,mBAGxGmrC,CAAA,EA3E8Bx0C,EAAMrB,cA+FvBqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+BwxC,4aC7F9C,IAEMW,YAAe9vC,GAAA3G,EAAAy2C,EAAA9vC,GAAA,IAAAzG,EAAAC,GAAAs2C,GACpB,SAAAA,EAAY/1C,GAAO,IAAAwG,EAIyC,OAJzC9G,OAAAq2C,IAClBvvC,EAAAhH,EAAArB,UAAM6B,IACDu0C,UAAYv0C,EAAM+D,WAAWiL,eAClCxI,EAAKwC,UAAYuJ,GAA0BvS,EAAM6I,QAAS7I,EAAM+D,WAAWiyC,oCAC3ExvC,EAAK6B,GAAKkK,GAA0B/L,EAAKxG,MAAMoI,YAAY5B,EA4F3D,OA3FA3G,EAAAk2C,IAAAj2C,mBAAA5D,MAED,SAAa4O,GACZ,IAAI5O,EAAQ4O,EAAIo1B,OAAOhkC,OACC,IAApB6D,KAAKiJ,WAAoB9M,IAC5BA,EAAQA,EAAM6N,UAAU,EAAGhK,KAAKiJ,YAE7BjJ,KAAKC,MAAM6I,QAAQ8G,UAAY5P,KAAKC,MAAM6I,QAAQ8G,SAAS6T,SAC9DtnB,EAAQqW,GAA2BrW,EAhBtB,OAkBd6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYlM,MACjE4D,aAAA5D,MAED,WACC,IAAIA,EAAQ6D,KAAKC,MAAM9D,MAAQ6D,KAAKC,MAAM9D,MAAQ,GAC5Cu4C,EAASliC,GAA0BrW,EAvB3B,MAwBdA,EAAQu4C,EAAOv4C,MACf,IAAMsN,EAAYirC,EAAOjrC,UAErBysC,EAAW,KACX9rC,EAAkBoI,GAAgCxS,KAAKC,MAAMiK,YAAalK,KAAKC,MAAMwzC,cACrF0C,GAAwB,EAM5B,GAJI/rC,EAAgBG,OACnB4rC,GAAwB,EACxB/rC,EAAkB,IAEfX,EAAW,CACd,IAAMujC,EAAe,CACpB7jC,KAAM4K,EAAc/T,KAAKw0C,UAAWtlC,GAAa0lC,2BAA4B,CAAEC,eAAgB9qC,KAC/FjE,KAAM4K,GAAuBE,MAC7BopB,cAAeh6B,KAAKC,MAAM6I,QAAQxC,MAEnC8D,EAAkBoI,GAAgCw6B,EAAchtC,KAAKC,MAAMwzC,cAC3EyC,EAAYr1C,EAAAC,yBACXD,EAAAC,cAACs1C,GAAQ/9B,MACJjO,GACJ9B,GAAItI,KAAKsI,GACTgK,YACA0iC,YAAah1C,KAAKC,MAAM6I,QAAQmiB,eAChC9uB,MAAOA,EACPg5C,UAAWn1C,KAAKC,MAAMm0C,YACtBgB,UAAWp1C,KAAKC,MAAMwzC,aACtBtrC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,SAE/DtH,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAcnB,WAAY6D,EAAuBryC,MAAO,GAAIoG,YAAa8iC,UAGjHkJ,EAAYr1C,EAAAC,cAACs1C,GAAQ/9B,MAChBjO,GACJ9B,GAAItI,KAAKsI,GACTgK,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCyiC,YAAah1C,KAAKC,MAAM6I,QAAQmiB,eAChCgqB,SAAUj1C,KAAKk1C,aAAaruC,KAAK7G,MACjC7D,MAAOA,EACPg5C,UAAWn1C,KAAKC,MAAMm0C,YACtBgB,UAAWp1C,KAAKC,MAAMwzC,aACtBtrC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,SAIhE,IAAI0P,EAAUq+B,EACd,GAAIl2C,KAAKC,MAAMwzC,aAAc,CAC5B,IAAM37B,EAAYtP,KAAU,mBAAqBxI,KAAKC,MAAMoI,WAAWpK,WACnEqU,GAAW,EACXnW,GAAS6D,KAAKC,MAAM6D,QAAUqO,GAAOI,WACxCD,GAAW,GAEZ,IAAMuD,EACLhV,EAAAC,qBAAKG,UAAU,uBACb8zB,OAAO54B,IAGV0b,EAAWhX,EAAAC,cAAC4N,IACXpG,GAAIwP,EACJnJ,IAAKkH,EACLG,UAAU,SACV/U,UAAU,sBACVgV,QAAS3D,GAER4jC,GAGH,IAAMj1C,EAAYC,GAAW,sBAAuB,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QAAUpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,MAC3J,OACCjF,EAAAC,qBAAKG,UAAWA,EAAW,UAASuR,GAAuBxS,KAAKC,MAAMoI,aACpEwP,EACDhX,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAcnB,WAAY6D,EAAuBryC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,mBAI3I8rC,CAAA,EAjG4Bn1C,EAAMrB,cAwHrBqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+BmyC,4aC7HE,IAG1CK,YAAkBnwC,GAAA3G,EAAA82C,EAAAnwC,GAAA,IAAAzG,EAAAC,GAAA22C,GACvB,SAAAA,EAAYp2C,GAAO,IAAAwG,EAK+B,OAL/B9G,OAAA02C,IAClB5vC,EAAAhH,EAAArB,UAAM6B,IACDq2C,YAAc7vC,EAAK6vC,YAAYzvC,KAAIC,EAAAL,IACxCA,EAAK8vC,eAAiB9vC,EAAK8vC,eAAe1vC,KAAIC,EAAAL,IAC9CA,EAAK6B,GAAKkK,GAA0B/L,EAAKxG,MAAMoI,YAC/C5B,EAAK+tC,UAAYv0C,EAAM+D,WAAWiL,eAAexI,EA2HjD,OA1HA3G,EAAAu2C,IAAAt2C,kBAAA5D,MAED,SAAY6Z,GACX,IAAIwgC,EAAgBx2C,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YAClE,MAAOmuC,IACVA,EAAgB,GAEjB,IAAMC,EAA2BD,EAAcv4C,WAAYoL,MAAM,KAAK,GACtErJ,KAAKC,MAAM6I,QAAQ6b,UAAY3kB,KAAKC,MAAM6I,QAAQ6b,UAAY3kB,KAAKC,MAAM6I,QAAQ6b,UAAY,EAC7F,IAAM+xB,EAAuB12C,KAAKC,MAAM6I,QAAQ6b,UAAU1mB,WAAYoL,MAAM,KAAK,GAC3EstC,EAAyB,OAAd3gC,EAAqBkkB,OAAOsc,GAAiBx2C,KAAKC,MAAM6I,QAAQ6b,UAAYuV,OAAOsc,GAAiBx2C,KAAKC,MAAM6I,QAAQ6b,UACxI,GAAI+xB,EAAqB,CACxB,IAAIE,EAAmBF,EAAoB16C,OACvCy6C,IACHG,EAAmBH,EAAwBz6C,QAAU06C,EAAoB16C,OAASy6C,EAAwBz6C,OAAS06C,EAAoB16C,QAExIgE,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY6xB,OAAOyc,EAASE,QAAQD,UAEzF52C,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYsuC,MAElE52C,mBAAA5D,MAED,SAAa4O,EAAKiL,GACjB,GAAyB,iBAAdA,EAKX,GACCjL,EAAIo1B,OAAO2W,UAAY/rC,EAAIo1B,OAAO2W,SAASC,WACzCC,SAASjsC,EAAIo1B,OAAOhkC,QAMtB,GAAqE,OAAjE6D,KAAKC,MAAM+D,WAAWwM,gBAAgBxQ,KAAKC,MAAMoI,YAAsB,CAC1E,IAAM2kC,EAAe,CACpBlnC,KAAM,QACNqD,KAAM4K,EAAc/T,KAAKw0C,UAAWtlC,GAAa+nC,sBACjD5uC,WAAYrI,KAAKC,MAAMoI,WACvB2xB,cAAe,kBAEhBh6B,KAAKC,MAAM+D,WAAWspC,mBAAmBttC,KAAKC,MAAMoI,WAAY2kC,QAflE,CAqB4F,OAAjEhtC,KAAKC,MAAM+D,WAAWwM,gBAAgBxQ,KAAKC,MAAMoI,aACG,mBAA/ErI,KAAKC,MAAM+D,WAAWwM,gBAAgBxQ,KAAKC,MAAMoI,YAAY2xB,eAE5Dh6B,KAAKC,MAAM+D,WAAWspC,mBAAmBttC,KAAKC,MAAMoI,WAAY,MAGjE,IAAM6uC,EAAcnsC,EAAIo1B,OAAOhkC,MAC3B,MAAO+6C,GAAuE,KAAhBA,EACjEl3C,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY,MAEjErI,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY6xB,OAAOgd,SAnCxEl3C,KAAKs2C,YAAYtgC,MAsClBjW,qBAAA5D,MAED,WACC,IAAMg7C,EAAYn3C,KAAKC,MAAM6I,QAAQoE,MAAMoX,gBACrCmf,EAAM0T,EAAU/pB,OAAS+pB,EAAU/pB,MAAMqW,IAAM0T,EAAU/pB,MAAMqW,IAAM,IACrE2T,EAAMD,EAAU/pB,OAAS+pB,EAAU/pB,MAAMgqB,IAAMD,EAAU/pB,MAAMgqB,IAAM,MACrEtE,EAAWtP,KAAK6T,MAAM7T,KAAK8T,UAAYF,EAAM3T,EAAM,GAAKA,GAC9DzjC,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYyqC,MACjE/yC,aAAA5D,MAED,WAAS,IAAA2L,OACJ8E,EAAe,GACM,OAArB5M,KAAKC,MAAM9D,YAA8C,IAArB6D,KAAKC,MAAM9D,QAClDyQ,EAAe5M,KAAKC,MAAM9D,OAG3B,IAEImoB,EAFEhS,EAAWtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACvCkD,EAASzV,KAAKC,MAAM6D,QAAUqO,GAAOC,OAEvCqE,GAAIzW,KAAKC,MAAM6I,QAAS,2BAC3Bwb,EAAmBzjB,EAAAC,cAACyQ,IACnBtQ,UAAWC,GAAW,8BAA+B,CAAE+Q,KAAQwD,IAC/DjE,QAASxR,KAAKu2C,eACdjkC,SAAUA,EACVb,KAAK,WACLC,WAAY6lC,GACZC,gBAAgB,SAChBC,iBAAiB,MACjB5B,gBAAiB71C,KAAKC,MAAM6I,QAAQoE,MAAMoX,gBAAgBnb,KAC1DuuC,kBAGF,IAAMz2C,EAAYC,GACjB,yBACA,CAAE,oCAAqCuV,GAAIzW,KAAKC,MAAM6I,QAAS,yBAA2B9I,KAAKC,MAAM6I,QAAQoE,MAAMoX,gBAAkB,MACrI,CAAErS,KAAQwD,GACVzV,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,MAElDsE,EAAkBoI,GAAgCxS,KAAKC,MAAMiK,YAAalK,KAAKC,MAAMwzC,cAC3F,OACC5yC,EAAAC,qBAAKG,UAAWA,EAAW,UAASuR,GAAuBxS,KAAKC,MAAMoI,aACrExH,EAAAC,cAAC62C,GAAWt/B,MACPjO,GACJlC,IAAO,SAACA,GAAG,OAAMJ,EAAK8vC,YAAc1vC,GACpCI,GAAItI,KAAKsI,GACT2sC,SAAUj1C,KAAKk1C,aAAaruC,KAAK7G,MACjCsS,SAAUA,EACVkkB,KAAMx2B,KAAKC,MAAM6I,QAAQ6b,UACzBxoB,MAAOyQ,EACPooC,YAAah1C,KAAKC,MAAM6I,QAAQmiB,eAChC/d,MAAOlN,KAAKC,MAAMm0C,YAClBgB,UAAWp1C,KAAKC,MAAMwzC,aACtBoE,cACA1vC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,MAC9D2vC,aAAc93C,KAAKC,MAAMwzC,cAAiBzzC,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAYsC,eAEzF/O,EACDzjB,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAcnB,aAAUxuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,mBAGlHmsC,CAAA,EAjI+Bx1C,EAAMrB,cAwJxBqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+BwyC,ICrL1C0B,GAAWz8C,GAGX08C,GAAW,QCHXC,GD6BJ,SAAkB97C,GAChB,OAAKA,GAGLA,EAAQ47C,GAAS57C,MACH67C,IAAY77C,KAAU,IA9BpB,uBA+BFA,EAAQ,GAAK,EAAI,GAGxBA,GAAUA,EAAQA,EAAQ,EAPd,IAAVA,EAAcA,EAAQ,CAQjC,MCJA+7C,GAPA,SAAmB/7C,GACjB,IAAIF,EAASg8C,GAAS97C,GAClBg8C,EAAYl8C,EAAS,EAEzB,OAAOA,GAAWA,EAAUk8C,EAAYl8C,EAASk8C,EAAYl8C,EAAU,CACzE,ECjCIm8C,GAAgB98C,GAChB+8C,GAAe78C,GACf88C,GAAY58C,GAGZ68C,GAAY/U,KAAK4T,QAiDrBoB,GAZA,SAAmBj8C,EAAOT,EAAW28C,GACnC,IAAIz8C,EAAkB,MAATO,EAAgB,EAAIA,EAAMP,OACvC,IAAKA,EACH,OAAQ,EAEV,IAAID,EAAqB,MAAb08C,EAAoB,EAAIH,GAAUG,GAI9C,OAHI18C,EAAQ,IACVA,EAAQw8C,GAAUv8C,EAASD,EAAO,IAE7Bq8C,GAAc77C,EAAO87C,GAAav8C,GAAeC,EAC1D,0aC9BqD,gBAEnCmK,GAAA3G,EAAAm5C,EAAAxyC,GAAA,IAAAzG,EAAAC,GAAAg5C,GACjB,SAAAA,EAAYz4C,GAAO,IAAAwG,EAM+C,OAN/C9G,OAAA+4C,IAClBjyC,EAAAhH,EAAArB,UAAM6B,IAED04C,uBAAyBlyC,EAAKkyC,uBAAuB9xC,KAAIC,EAAAL,IAC9DA,EAAKmyC,yBAA2BnyC,EAAKmyC,yBAAyB/xC,KAAIC,EAAAL,IAClEA,EAAKoyC,oBAAsBpyC,EAAKoyC,oBAAoBhyC,KAAIC,EAAAL,IACxDA,EAAKqyC,qBAAuBryC,EAAKqyC,qBAAqBjyC,KAAIC,EAAAL,IAAOA,EAsFjE,OArFA3G,EAAA44C,IAAA34C,6BAAA5D,MAED,SAAuB48C,EAAYC,GAClC,IAAMC,OAAsC,IAAfF,GAA8BA,IAAe5mC,GAAOI,SAC3E2mC,EAAgBl5C,KAAKC,MAAMk5C,yBAAgF,IAAnDn5C,KAAKC,MAAMk5C,mBAAmBH,EAAa1wC,IACtGtI,KAAKC,MAAMk5C,mBAAmBH,EAAa1wC,IAC3C0wC,EAAatxB,UAAW,EAC3B,OAAQuxB,GAAiBC,KACzBn5C,+BAAA5D,MAED,SAAyB8rB,EAAUR,GAClC,IACIrW,EADEgoC,EAAoBp5C,KAAKC,MAAM+D,WAAW+R,cAAcqjC,kBAY9D,OAVIA,GACHA,EAAkB,CACjBtzC,KAAM,mBACNuC,WAAYrI,KAAKC,MAAMoI,WACvB4f,SAAUA,EACVR,WAAYA,IACV,SAAC4xB,GACHjoC,EAAOioC,KAGFjoC,KACPrR,0BAAA5D,MAED,SAAoB8rB,GACnB,IAAMqxB,EAAgBt5C,KAAKC,MAAM+D,WAAW+R,cAAcujC,cACtDA,GACHA,EAAc,CACbxzC,KAAM,gBACNuC,WAAYrI,KAAKC,MAAMoI,WACvB4f,SAAUA,OAGZloB,2BAAA5D,MAED,SAAqB48C,GAAgC,IAAAjxC,OAC9CyxC,EAAgB,GAgCtB,OAjC6C15C,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAG,IAElC8J,SAAQ,SAACqvC,GACtB,IAAME,EAAgBpxC,EAAK6wC,uBAAuBI,EAAYC,GACxDnxB,EAAY,CACjBjR,OAAQoiC,EAAa1wC,GACrBkxC,OAAQN,GAGLF,EAAa5nC,KAChByW,EAAU4xB,YAAcT,EAAa5nC,KAC3B4nC,EAAavxB,aACvBI,EAAU4xB,YAAc3xC,EAAK8wC,yBAAyBI,EAAa1wC,GAAI0wC,EAAavxB,aAGjFuxB,EAAa9rC,QAChB2a,EAAU3a,MAAQ8rC,EAAa9rC,MAAM/D,KACrC0e,EAAU6xB,iBAAmB,SAC7B7xB,EAAUpW,KAAO,SAGdunC,EAAax2C,cAChBqlB,EAAUhS,QAAUmjC,EAAax2C,YAAY2G,MAG1C6vC,EAAarxB,SAAoC,WAAzBqxB,EAAarxB,SACxC4xB,EAAcjrC,KAAK,CAAEqZ,SAAS,IAE/B4xB,EAAcjrC,KAAKuZ,GACfmxB,EAAarxB,SAAoC,UAAzBqxB,EAAarxB,SACxC4xB,EAAcjrC,KAAK,CAAEqZ,SAAS,OAGzB4xB,KACPx5C,aAAA5D,MAED,WACC,IAAMo9C,EAAgB,CACrBI,QAAS35C,KAAK84C,qBAAqB94C,KAAKC,MAAM84C,WAAY/4C,KAAKC,MAAM25C,gBAEtE,OAAQ/4C,EAAAC,qBAAKG,UAAU,mCACtBJ,EAAAC,cAAC+4C,IACAC,OAAQP,EACRQ,WAAY,EACZ/3C,KAAK,KACLg4C,qBAAsBh6C,KAAK64C,2BAG7BH,CAAA,EA7FyB73C,EAAMrB,mbCIW,IAEvBy6C,YAAY/zC,GAAA3G,EAAA06C,EAAA/zC,GAAA,IAAAzG,EAAAC,GAAAu6C,GAChC,SAAAA,EAAYh6C,GAAO,IAAAwG,EAGuC,OAHvC9G,OAAAs6C,IAClBxzC,EAAAhH,EAAArB,UAAM6B,IACDyT,aAAejN,EAAKiN,aAAa7M,KAAIC,EAAAL,IAC1CA,EAAKkN,iBAAmBlN,EAAKkN,iBAAiB9M,KAAIC,EAAAL,IAAOA,EAqDzD,OApDA3G,EAAAm6C,IAAAl6C,uBAAA5D,MAED,SAAiBiX,GAEXA,IACJpT,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYrI,KAAKk6C,qBACtEl6C,KAAKC,MAAM+D,WAAWyH,iBAAiBzL,KAAK0L,iBAC5C1L,KAAKC,MAAM+D,WAAW2H,iBAAiB3L,KAAK4L,mBAE7C7L,mBAAA5D,MAED,WAEC6D,KAAKk6C,oBAAsBr9B,EAAU7c,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,aACvFrI,KAAK0L,gBAAkB1L,KAAKC,MAAM+D,WAAW8H,sBAC7C9L,KAAK4L,cAAgB5L,KAAKC,MAAM+D,WAAW+H,mBAC3C/L,KAAK8T,gBAAgBb,cAAcjT,KAAKC,MAAMsB,MAAOvB,KAAKC,MAAMkG,MAAOnG,KAAK2T,qBAC5E5T,aAAA5D,MAED,WAAS,IAAA2L,OAEFwK,OAA0C,IAAxBtS,KAAKC,MAAMqS,UAA2BtS,KAAKC,MAAMqS,SACnE6nC,EAAkBpmC,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAC3DC,GAAakrC,yBACR34C,EAAasS,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAa0C,mBAC9EjQ,EAAcoS,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAa2C,oBACrF,OAEChR,EAAAC,cAACgS,IAAgB5K,IAAM,SAACA,GAAG,OAAMJ,EAAKgM,gBAAkB5L,GACvDqL,YAAavT,KAAKC,MAAMsT,YACxB9R,WAAYA,EACZE,YAAaA,EACbqC,WAAYhE,KAAKC,MAAM+D,YAEvBnD,EAAAC,cAAC4N,IACApG,GAAIE,8BACJmG,IAAKwrC,EACLnkC,UAAU,OACV/U,UAAU,oCAEVJ,EAAAC,cAACyQ,IACAtQ,UAAU,6BACVwQ,KAAK,QACLC,WAAY2oC,GACZ7oC,QAASxR,KAAK0T,aACdpB,SAAUA,EACVujC,gBAAiBsE,EACjBzC,uBAKJuC,CAAA,EAzDwCp5C,EAAMrB,28CCGhD,IAEqB86C,YAAap0C,GAAA3G,EAAA+6C,EAAAp0C,GAAA,IAAAzG,EAAAC,GAAA46C,GAUjC,SAAAA,EAAYr6C,GAAO,IAAAwG,EAoCkC,OApClC9G,OAAA26C,IAClB7zC,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,CACZy2C,WAAY,KACZC,kBAAkB,GAEnB/zC,EAAKg0C,iBAAmB,GAExBh0C,EAAKi0C,qBAAsB,EAE3Bj0C,EAAKk0C,gBAAkBl0C,EAAKk0C,gBAAgB9zC,KAAIC,EAAAL,IAChDA,EAAKm0C,cAAgBn0C,EAAKm0C,cAAc/zC,KAAIC,EAAAL,IAC5CA,EAAKo0C,+BAAiCp0C,EAAKo0C,+BAA+Bh0C,KAAIC,EAAAL,IAC9EA,EAAKq0C,uBAAyBr0C,EAAKq0C,uBAAuBj0C,KAAIC,EAAAL,IAC9DA,EAAKs0C,eAAiBt0C,EAAKs0C,eAAel0C,KAAIC,EAAAL,IAC9CA,EAAKu0C,oBAAsBv0C,EAAKu0C,oBAAoBn0C,KAAIC,EAAAL,IACxDA,EAAKw0C,eAAiBx0C,EAAKw0C,eAAep0C,KAAIC,EAAAL,IAC9CA,EAAKy0C,YAAcz0C,EAAKy0C,YAAYr0C,KAAIC,EAAAL,IACxCA,EAAK00C,SAAW10C,EAAK00C,SAASt0C,KAAIC,EAAAL,IAClCA,EAAK20C,OAAS30C,EAAK20C,OAAOv0C,KAAIC,EAAAL,IAC9BA,EAAK40C,eAAiB50C,EAAK40C,eAAex0C,KAAIC,EAAAL,IAC9CA,EAAK60C,gBAAkB70C,EAAK60C,gBAAgBz0C,KAAIC,EAAAL,IAChDA,EAAK80C,yBAA2B90C,EAAK80C,yBAAyB10C,KAAIC,EAAAL,IAClEA,EAAK+0C,oBAAsB/0C,EAAK+0C,oBAAoB30C,KAAIC,EAAAL,IACxDA,EAAKg1C,uBAAyBh1C,EAAKg1C,uBAAuB50C,KAAIC,EAAAL,IAC9DA,EAAKi1C,eAAiBj1C,EAAKi1C,eAAe70C,KAAIC,EAAAL,IAC9CA,EAAKk1C,UAAYl1C,EAAKk1C,UAAU90C,KAAIC,EAAAL,IACpCA,EAAKm1C,WAAan1C,EAAKm1C,WAAW/0C,KAAIC,EAAAL,IACtCA,EAAKo1C,aAAep1C,EAAKo1C,aAAah1C,KAAIC,EAAAL,IAEtCxG,EAAMm6B,cAAgBn6B,EAAMm6B,aAAap+B,OAAS,IACrDyK,EAAKq1C,YAAc77C,EAAMm6B,aAAan6B,EAAMm6B,aAAap+B,OAAS,IAGnEyK,EAAKs1C,0BAA4B,oCAAsC97C,EAAM6I,QAAQxC,KACrFrG,EAAM+D,WAAWg4C,aAAa,CAAC,CAAE11C,KAAMG,EAAKs1C,6BAC5Ct1C,EAAKw1C,2BAA2Bh8C,EAAMm6B,cAAc3zB,EAtCpD,OAuCA3G,EAAAw6C,IAAAv6C,wBAAA5D,MAED,WACC,GAAI6D,KAAKC,MAAM6I,QAAQuE,YAAa,CACnC,IAAM6uC,EAAuBl8C,KAAK86C,yBAClC96C,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY6zC,GAAsB,EAAMC,GAAYC,kBAE1Gr8C,yBAAA5D,MAED,WACK6D,KAAKq8C,oBAAoBr8C,KAAKC,MAAMm6B,eACvCp6B,KAAKs8C,8BAENv8C,2BAAA5D,MAED,WACC6D,KAAKC,MAAM+D,WAAWu4C,oBAAoB,CAAEj2C,KAAMtG,KAAK+7C,+BACvDh8C,eAAA5D,MAED,SAASqgD,GACRx8C,KAAKyH,SAAS,CAAE8yC,WAAYiC,OAC5Bz8C,aAAA5D,MAED,SAAOsgD,GAGN,IAFA,IAAI7vC,EAAe5M,KAAKC,MAAM9D,MAC1ByM,GAAO,EACFugC,EAAW,EAAGA,EAAWnpC,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQmtC,IACxE,GAAInpC,KAAKC,MAAM6I,QAAQuE,YAAY87B,GAAU7iC,OAASm2C,EAAKC,OAAQ,CAClE9zC,EAAMugC,EACN,MAGEvgC,GAAO,IACVgE,EAAe0N,EAAO1N,GAAc,SAASjE,GAC5C,OAAOA,EAAIC,MAER6zC,EAAKzmC,YAAc2mC,GAAeC,MACrChwC,EAAaiwC,UAEd78C,KAAK66C,+BAA+BjuC,EAAc,QAEnD7M,0BAAA5D,MAED,SAAoBi+B,GACnB,OAAqC,IAAjCp6B,KAAKy6C,iBAAiBz+C,QAAwC,IAAxBo+B,EAAap+B,QACtDgE,KAAKq8C,oBAAoBjiB,GACjBv5B,EAAAC,0BAGDD,EAAAC,qBAAKG,UAAU,gCAAgCjB,KAAKy6C,iBAAiBrgB,EAAa,QAC1Fr6B,oBAAA5D,MAED,WACC,IAAMwM,EAAM,GACZ,GAAI3I,KAAKC,MAAM6I,QAAQ2iB,WAAY,CAAA,IACkBtf,EADlBC,EAAAC,GACXrM,KAAKC,MAAM6I,QAAQ2iB,YAAU,IAApD,IAAArf,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAsD,CAAA,IAA3CswC,EAAQ3wC,EAAAhQ,MACd,MAAO2gD,GAAiDA,EAASt5B,aACpE7a,EAAI2F,KAAKtO,KAAKC,MAAM+D,WAAWqC,iBAAiB,CAAEC,KAAMw2C,EAASt5B,gBAEjE7a,EAAI2F,KAAKwuC,UAEV1tC,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAEF,OAAO3G,KACP5I,qBAAA5D,MAED,SAAewM,GACd3I,KAAK87C,YAAcnzC,KACnB5I,qCAAA5D,MAED,SAA+ByQ,EAAcmwC,GAC5C,IAAIb,EAAuBtvC,EAM3B,GALI5M,KAAKC,MAAM6I,QAAQuE,cACtB6uC,EAAuBl8C,KAAK86C,uBAAuBluC,IAIhD1P,MAAM2F,QAAQq5C,GACjB,IAAK,IAAI5uC,EAAM,EAAGA,EAAM4uC,EAAqBlgD,OAAQsR,IAAO,CAC3D,IAAMnR,EAAQ+/C,EAAqB5uC,GACnC,GAAIpQ,MAAM2F,QAAQ1G,GACjB,IAAK,IAAI6gD,EAAO,EAAGA,EAAOh9C,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQghD,IAAQ,CACxE,IAAMvqB,EAAazyB,KAAKC,MAAM6I,QAAQuE,YAAY2vC,GAC1B,WAApBvqB,EAAW3jB,MAAsD,cAAjC2jB,EAAW7iB,SAASC,WACvDqsC,EAAqB5uC,GAAK0vC,GAAQhuC,EACjC7S,EAAM6gD,GAAOvqB,EAAYzyB,KAAKC,MAAM+D,iBAGD,WAA5BhE,KAAKC,MAAM6I,QAAQgG,MAA8D,cAAzC9O,KAAKC,MAAM6I,QAAQ8G,SAASC,WAC9EqsC,EAAqB5uC,GAAO0B,EAC3B7S,EAAO6D,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAM+D,aAM1ChE,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY6zC,GACjE,IAAM9hB,EAAel9B,MAAM2F,QAAQk6C,GAAkBA,EAAiB,GACtE/8C,KAAKg7C,oBAAoB5gB,MACzBr6B,6BAAA5D,MAED,SAAuByQ,GACtB,IAAMqwC,EAAgBrwC,GAA8B5M,KAAKC,MAAM9D,MAC/D,IAAKe,MAAM2F,QAAQo6C,GAClB,OAAOA,EAER,IAAK,IAAI/T,EAAW,EAAGA,EAAW+T,EAAcjhD,OAAQktC,IACvD,IAAK,IAAIC,EAAW,EAAGA,EAAWnpC,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQmtC,IAAY,CACpF,IAAM+T,EAAYl9C,KAAKC,MAAM6I,QAAQuE,YAAY87B,GACjD,GAAI+T,EAAUlyB,cAAgB+F,EAAY2D,UAAYwoB,EAAUn4B,iBAA2D,UAAxCm4B,EAAUn4B,gBAAgBoG,UAAuB,CACnI,IAAMpvB,OAAwD,IAAzCmhD,EAAUn4B,gBAAgBsG,WAA6B6xB,EAAUn4B,gBAAgBsG,WAAa6d,EAAWA,EAAW,EACzI+T,EAAc/T,GAAUC,GAAYptC,GAIvC,OAAOkhD,KAGRl9C,iCAAA5D,MACA,SAA2B4hC,GAC1B,GAAI/9B,KAAKq8C,oBAAoBte,GAAY,CACxC,IAAMof,EAAoB,CACzB72C,KAAMtG,KAAK+7C,2BAER5/C,EAAQ6D,KAAKC,MAAM+D,WAAWqC,iBAAiB82C,GAC9ChhD,IACJA,EAAQ,CAAC6D,KAAKo9C,iBACdp9C,KAAKC,MAAM+D,WAAWgvC,oBAAoBmK,EAAmBhhD,GAAO,IAErE6D,KAAKq9C,wBAA0BxgC,EAAU1gB,OAE1C4D,0BAAA5D,MAED,SAAoBi+B,GACnB,OAAQp6B,KAAKC,MAAM6I,QAAQyf,eAAiB+0B,GAAcC,UAAYnjB,EAAap+B,OAAS,KAC5F+D,sBAAA5D,MAED,WACC,OAAO6D,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAYysB,iBACtDz9C,oBAAA5D,MAED,SAAcmU,GACb,OAAOmtC,GAAUz9C,KAAKC,MAAM6I,QAAQuE,aAAa,SAASqwC,GACzD,OAAOA,EAAcp3C,OAASgK,QAE/BvQ,qBAAA5D,MAED,SAAe+sC,EAAUn+B,GACxB,IAAIqvB,EAAep6B,KAAKC,MAAMm6B,aAC9B,GAAIp6B,KAAKC,MAAM6I,QAAQyf,eAAiB+0B,GAAcK,OACrDvjB,EAAe,CAAC8O,QACV,IAAoB,IAAhBn+B,EAAI6yC,UAAoC,IAAhB7yC,EAAI8yC,QAAkB,CAExD,IAAM9hD,EAAQq+B,EAAazqB,QAAQu5B,GAC/BntC,GAAS,EACZq+B,EAAa0jB,OAAO/hD,EAAO,GAE3Bq+B,EAAeA,EAAa3xB,OAAOygC,QAE9B,IAAqB,IAAjBn+B,EAAIgzC,SAAmB,CAKjC,IAJA,IAAMC,EAAS5jB,EAAap+B,OAAS,EAAIo+B,EAAa,GAAK8O,EAErDjsC,GAAO+gD,EAAS9U,EAAW8U,EAAS9U,GAAY,EAChD+U,EAAW,GACRrpC,EAHKopC,EAAS9U,EAAWA,EAAW8U,EAGzBppC,EAAI3X,EAAK2X,IAC5BqpC,EAAS3vC,KAAKsG,GAEfwlB,EAAe6jB,EAEhBj+C,KAAKg7C,oBAAoB5gB,MAI1Br6B,+BAAA5D,MACA,WAA2B,IAAA2L,OACpBq1C,EAAoB,CACzB72C,KAAMtG,KAAK+7C,2BAENtI,EAAezzC,KAAKC,MAAM+D,WAAW2I,WAAW,CAAErG,KAAMtG,KAAKC,MAAM6I,QAAQxC,OAC3E43C,EAAwBl+C,KAAKC,MAAM+D,WAAWqC,iBAAiB82C,GACjEe,GAAyBhhD,MAAM2F,QAAQq7C,KAC1CA,EAAsB,GAAGv0C,SAAQ,SAACw0C,EAAWhV,GAC5C,GAAkB,OAAdgV,IAAuBxhB,EAAQwhB,EAAWr2C,EAAKu1C,wBAAwB,GAAGlU,IAAY,CAGzF,IAAMiV,OAAiC,IAAdD,EAA6B,KAAOA,EAC7Dr2C,EAAK7H,MAAMm6B,aAAazwB,SAAQ,SAACu/B,GAChCphC,EAAK7H,MAAM+D,WAAWgvC,oBAAoB,CAAE1sC,KAAMwB,EAAK7H,MAAM6I,QAAQxC,KAAMqC,IAAKugC,EAAUtgC,IAAKugC,GAAYiV,GAAU,MAElH3K,EAAapmC,YAAY87B,GAAUne,cAAgB+F,EAAYiB,aAClElqB,EAAK7H,MAAM+D,WAAWgvC,oBAAoB,CAAE1sC,KAAMwB,EAAKi0C,0BAA2BpzC,IAAK,EAAGC,IAAKugC,GAAY,UAI9GnpC,KAAKq9C,wBAA0BxgC,EAAUqhC,OAE1Cn+C,0BAAA5D,MAED,SAAoB4hC,GACnB/9B,KAAKC,MAAM+D,WAAWq6C,mBAAmBr+C,KAAKC,MAAMoI,WAAY01B,GAE5D/9B,KAAKC,MAAMsT,aACdvT,KAAKyH,SAAS,CAAE+yC,iBAAwC,IAArBzc,EAAU/hC,SAE9CgE,KAAKi8C,2BAA2Ble,MAChCh+B,qBAAA5D,MAED,WAOC,IANA,IAAMgpB,EAAOnlB,KAAKC,MAAM9D,MAGlBoZ,EAAWvV,KAAKC,MAAMm6B,aAAakkB,MAAK,SAASC,EAAGC,GACzD,OAAOA,EAAID,KAEH3pC,EAAI,EAAGA,EAAIW,EAASvZ,OAAQ4Y,IACpCuQ,EAAK24B,OAAOvoC,EAASX,GAAI,GAEzB5U,KAAKC,MAAM+D,WAAWy6C,sBAAsB,CAAEn4C,KAAMtG,KAAKC,MAAMoI,WAAW/B,KAAMqC,IAAK4M,EAASX,KAG/F5U,KAAK66C,+BAA+B11B,MAGrCplB,gBAAA5D,MACA,SAAU+gD,EAAWtwC,EAAc8xC,EAAcxV,EAAUC,EAAU4P,EAAY4F,GAChF,IAAMC,EAAkB,CACvBt4C,KAAMo4C,EACN/1C,IAAKugC,EACLtgC,IAAKugC,GAGAvsB,EAAmBC,EAAU7c,KAAKC,MAAMoI,YAC1CA,EAAau2C,EAEZD,GAAoB/hC,EAAiBtW,OAASs4C,EAAgBt4C,OAClE+B,EAAarI,KAAKC,MAAM+D,WAAW66C,mBAAmBjiC,EAAkBgiC,IAGzE,IAEIE,EAFEC,EAAY,CAAE3L,OAAO,EAAMsH,oBAAqB16C,KAAK06C,qBACrDnhC,EAAiBvZ,KAAKC,MAAM+D,WAAWwV,oBAEvCwlC,EAAejhD,OAAOgyB,OAAO,GAAImtB,GACjC+B,EAAgBD,EAAa/9C,UAAY+9C,EAAa/9C,UAAY,GACxE,GAAIi8C,EAAUj+B,QAAS,CACtB,IAAME,EAASnf,KAAKC,MAAM+D,WAAWk7C,2BAC/BC,EAAcnwC,EAAkChP,KAAKC,MAAM+D,WAAWqC,iBAAiBgC,GAAa60C,GAAW,GACrH8B,EAAa5tC,KAAOpC,EAA6BmQ,EAChDggC,EAAajC,EAAUj+B,SAmCzB,OAjCIjf,KAAK26C,kBACRmE,EAAej+C,EAAAC,qBAAKG,UAAWC,GAAW,gCAAiC+9C,IAC1Ep+C,EAAAC,cAAC2xC,IACA3pC,QAAS9I,KAAKC,MAAM+D,WAAW2I,WAAWtE,GAC1CA,WAAYA,EACZrE,WAAYhE,KAAKC,MAAM+D,WACvByvC,mBAGQyJ,EAAU94B,YAAcsB,EAAUC,UAAYu3B,EAAU94B,YAAcsB,EAAU05B,SACtFT,EACHG,EAAcj+C,EAAAC,2BAEdg+C,EAAej+C,EAAAC,qBAAKG,UAAWC,GAAW,gCAAiC+9C,IAC1Ep+C,EAAAC,cAAC2xC,IACA3pC,QAAS9I,KAAKC,MAAM+D,WAAW2I,WAAWtE,GAC1CA,WAAYA,EACZrE,WAAYhE,KAAKC,MAAM+D,WACvByvC,mBAGEyJ,EAAU94B,YAAcsB,EAAU05B,UAErCp/C,KAAKy6C,iBAAiBvR,GAAU56B,KAAKzN,EAAAC,qBAAKf,IAAKopC,GAAUtoC,EAAAC,yBAAOyY,EAAewD,kBAAkBmgC,EAAW70C,OAI9G02C,EAAU36B,UAAYsB,EAAUkG,OAChCkzB,EAAej+C,EAAAC,qBAAKG,UAAWC,GAAW,gCAAiC+9C,IACzE1lC,EAAe8lC,cAAcL,EAAc32C,EAAY02C,KAInD,CACNrC,OAAQQ,EAAU52C,KAClBiI,MAAO2uC,EAAU3uC,MACjB9L,QAASq8C,EACT79C,UAAWg+C,EACX9iD,MAAO6D,KAAKC,MAAM+D,WAAWqC,iBAAiBgC,GAC9C8b,UAAW+4B,EAAU/4B,cAEtBpkB,4BAAA5D,MACD,SAAsBkM,EAAY60C,EAAWoC,EAAgBP,GAC5D,IAAID,EAAcQ,EAMlB,OAJIpC,EAAUlyB,cAAgB+F,EAAY/B,SACzC+vB,EAAU36B,UAAY,UACtB06B,EAAc9+C,KAAKC,MAAM+D,WAAWmvC,iBAAiB9qC,EAAY60C,EAAW6B,IAEtED,KACP/+C,yBAAA5D,MAED,SAAmBojD,EAAgBxG,GAClC,YAA0B,IAAfA,GAA8BA,IAAe5mC,GAAOI,UAG7CvS,KAAKC,MAAM+D,WAAWqwC,gBAAgBkL,KACnCptC,GAAOI,YAG7BxS,sBAAA5D,MAIA,SAAgB+sC,GAEf,IAAKlpC,KAAK8D,MAAMy2C,YAA+C,IAAjCv6C,KAAK8D,MAAMy2C,WAAWv+C,OACnD,OAAO,EAGR,IADA,IAAM4Q,EAAe5M,KAAKC,MAAM9D,MACvByY,EAAI,EAAGA,EAAI5U,KAAKw/C,aAAaxjD,OAAQ4Y,IAC7C,IAAK,IAAIu0B,EAAW,EAAGA,EAAWnpC,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQmtC,IAAY,CAEpF,GADkBnpC,KAAKC,MAAM6I,QAAQuE,YAAY87B,GACnC7iC,OAAStG,KAAKw/C,aAAa5qC,GAAI,CAC5C,IAAMzY,EAAQyQ,EAAas8B,GAAUC,GACrC,GAAqB,iBAAVhtC,GAAsBA,EAAMuc,cAAc/I,QAAQ3P,KAAK8D,MAAMy2C,WAAW7hC,gBAAkB,EACpG,OAAO,EAER,OAIH,OAAO,KACP3Y,gBAAA5D,MAED,WACC,IAAIsjD,GAAY,EAChB,GAAIz/C,KAAKC,MAAM6I,QAAQuE,YAAa,CAAA,IACoB2Q,EADpBC,EAAA5R,GACVrM,KAAKC,MAAM6I,QAAQuE,aAAW,IAAvD,IAAA4Q,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAAyD,CACxD,GADoBwR,EAAA7hB,MACL+nB,WAAY,CAC1Bu7B,GAAY,EACZ,cAEDrwC,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,KAEF,OAAOmwC,KACP1/C,iBAAA5D,MAED,SAAWkM,GACNrI,KAAK0/C,oBACR1/C,KAAK0/C,mBAAmBr3C,EAAYrI,KAAK2/C,+BAE1C5/C,mBAAA5D,MAED,WACC,OAAO6D,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,SAC9DpI,0BAAA5D,MAED,SAAoBi+B,GACnB,GAAIA,GAAgBl9B,MAAM2F,QAAQu3B,IAAiBA,EAAap+B,OAAS,EAAG,CAC3E,IAAM4jD,EAAoB5wC,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eAC3EC,GAAa2wC,0BACRC,EAAqB9wC,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eAC5EC,GAAa6wC,2BACRx+C,EAAQ64B,EAAap+B,OAAS,IAAM4jD,EAAoB,IAAME,EAC9D36B,EAAO,GAGP66B,GAAyC,IAA9BhgD,KAAKC,MAAM6I,QAAQ2f,OAAoB,GAAKzoB,KAAKigD,WAF/C,GACE,IAGf9jD,EAAQ6D,KAAKC,MAAM+D,WAAWqC,iBAAiB,CAAEC,KAAMtG,KAAK+7C,4BAClE/7C,KAAK27C,UAAUx2B,EAAMhpB,EAAO,KAAM6D,KAAK+7C,2BAA2B,GAClE,IAAMmE,EAAclgD,KAAKC,MAAM6I,QAAQoE,OAASlN,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAQnJ,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAO,GACjH,OAAQtI,EAAAC,qBAAKG,UAAU,kCACtBJ,EAAAC,qBAAKG,UAAU,qCACdJ,EAAAC,0BAAQS,IAETV,EAAAC,cAACq/C,IACAC,YATiB,EAUjB/qB,QAAS2qB,EACTxoC,KAAM2N,EACNA,KAAM,EACNk7B,UAAWrgD,KAAK+7C,0BAChBmE,WAAYA,EACZI,gBACA/3B,aAAc+0B,GAAcC,SAC5Bp1C,MAAOnI,KAAK67C,eACZ0E,sBAAuBvgD,KAAKC,MAAM6I,QAAQmiB,kBAI7C,OAAO,QACPlrB,+BAAA5D,MAED,SAAyB48C,EAAYyH,GACpCxgD,KAAK2/C,2BAA8Ba,GAAqBA,EAAkBC,yBACvED,EAAkBC,yBAAyB55C,KAAK7G,MAChD,KAEH,IAAM0gD,EAAiBF,GAAqBA,EAAkBG,qBAC3DH,EAAkBG,qBAClB3gD,KAAK+6C,eACF6F,EAAqBJ,GAAqBA,EAAkBI,kBAAqBJ,EAAkBI,kBACtG5xC,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAa2xC,mCAC5EC,GAAkB9gD,KAAK8D,MAAM02C,kBAAoBzB,IAAe5mC,GAAOI,SAGzEwuC,GAAoB,EACxB/gD,KAAK0/C,mBAAsBc,GAAqBA,EAAkBQ,kBAC/DR,EAAkBQ,kBAClBhhD,KAAKC,MAAMmZ,gBACd,IAAM6nC,EAAkBT,GAAqBA,EAAkBS,eAAkBT,EAAkBS,eAChGjyC,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAagyC,gCAMlF,OALInI,IAAe5mC,GAAOI,WACzBwuC,GAAoB,EACpB/gD,KAAK0/C,mBAAqB,MAI1B7+C,EAAAC,qBAAKG,UAAU,mCACdJ,EAAAC,cAACyQ,IACAtQ,UAAU,kCACVqR,SAAUwuC,EACVtvC,QAASkvC,EACT1+C,KAAK,QACLyP,KAAK,QACLC,WAAYyvC,IAEXP,GAEF//C,EAAAC,cAACyQ,IACAtQ,UAAU,+BACVqR,SAAUyuC,EACVvvC,QAASxR,KAAKohD,WAAWv6C,KAAK7G,KAAMA,KAAKC,MAAMoI,YAC/CrG,KAAK,QACLyP,KAAK,QACLC,WAAYC,IAEXsvC,OAIJlhD,0BAAA5D,MAED,SAAoB48C,EAAYyH,GAC/B,IAAIa,EAAa,KAiBjB,OAfIb,GAAqBA,EAAkBc,eAC1CthD,KAAKuhD,oBAAsBf,EAAkBc,aAC7CD,EAAcxgD,EAAAC,qBAAKG,UAAU,mCAC5BJ,EAAAC,cAACyQ,IACAtQ,UAAU,yBACVuQ,QAASxR,KAAKwhD,YAAY36C,KAAK7G,KAAMA,KAAKC,MAAMoI,YAChDrG,KAAK,QACLyP,KAAK,QACLC,WAAY+vC,IAEXjB,EAAkBtzC,SAKfm0C,KACPthD,6BAAA5D,MAED,SAAuB48C,EAAYa,GAClC,IAAI8H,EAAqB,KAYzB,OAXI9H,IACH8H,EAAsB7gD,EAAAC,qBAAKG,UAAU,mCACpCJ,EAAAC,cAAC43C,IACA10C,WAAYhE,KAAKC,MAAM+D,WACvBqE,WAAYrI,KAAKC,MAAMoI,WACvB0wC,WAAYA,EACZa,cAAeA,EACfT,mBAAoBn5C,KAAKC,MAAMi+B,iBAI3BwjB,KACP3hD,kBAAA5D,MAED,SAAYkM,GACPrI,KAAKuhD,qBACRvhD,KAAKuhD,oBAAoBl5C,MAE1BtI,sBAAA5D,MAED,SAAgBgtC,EAAUwY,GACzB,IAAM/0C,EAAe5M,KAAKC,MAAM9D,MAChC,GAAIe,MAAM2F,QAAQ+J,GAAe,CAChC,IAAK,IAAIgI,EAAI,EAAGA,EAAIhI,EAAa5Q,OAAQ4Y,IAAK,CAC7C,IAAMvM,EAAa,CAClB/B,KAAMtG,KAAKC,MAAM6I,QAAQxC,KACzBqC,IAAKiM,EACLhM,IAAKugC,GAEFnpC,KAAKC,MAAM+D,WAAWqwC,gBAAgBhsC,KAAgB8J,GAAOI,UAChEvS,KAAKC,MAAM+D,WAAWgvC,oBAAoB3qC,EAAYs5C,GAGxD3hD,KAAK47C,WAAWzS,GAAYwY,MAE7B5hD,iBAAA5D,MAED,SAAWgtC,GACV,IAAMv8B,EAAe5M,KAAKC,MAAM9D,MAChC,IAAIe,MAAM2F,QAAQ+J,GAiBjB,OAAO,EAhBP,GAA4B,IAAxBA,EAAa5Q,OAChB,OAAO,EAER,IAAK,IAAI4Y,EAAI,EAAGA,EAAIhI,EAAa5Q,OAAQ4Y,IAAK,CAC7C,IAAMvM,EAAa,CAClB/B,KAAMtG,KAAKC,MAAM6I,QAAQxC,KACzBqC,IAAKiM,EACLhM,IAAKugC,GAEN,GAAInpC,KAAKC,MAAM+D,WAAWqwC,gBAAgBhsC,KAAgB8J,GAAOI,WAC3D3F,EAAagI,GAAGu0B,GACpB,OAAO,EAOX,OAAO,KACPppC,kBAAA5D,MAED,SAAYgtC,GACX,IAAMv8B,EAAe5M,KAAKC,MAAM9D,MAChC,IAAIe,MAAM2F,QAAQ+J,GAUjB,OAAO,EATP,GAA4B,IAAxBA,EAAa5Q,OAChB,OAAO,EACP,IACkCmiB,EADlCE,EAAAhS,GACsBO,GAAY,IAAnC,IAAAyR,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAAqC,CACpC,IAA2B,IADT2R,EAAAhiB,MACLgtC,GACZ,OAAO,SAER/5B,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,IAIF,OAAO,KACPvP,kBAAA5D,MAED,SAAY48C,EAAYyH,EAAmB5G,GAC1C,IAAMz0B,EAAO,GACPy8B,EAAa,GACbpC,EAAe,GACrBx/C,KAAKw/C,aAAeA,EAEpB,IAAMQ,EAAUhgD,KAAKigD,WAAW2B,EAAYpC,GACtCY,GAA2C,IAA9BpgD,KAAKC,MAAM6I,QAAQ2f,OAEhC7b,EAAe5M,KAAKC,MAAM9D,MAChC6D,KAAK27C,UAAUx2B,EAAMvY,EAAcmsC,GAEnC,IAeI8I,EAfEC,EAAkB9hD,KAAKC,MAAM6I,QAAQyf,eAAiB+0B,GAAcC,SACvEv9C,KAAK+hD,oBAAoB/hD,KAAKC,MAAMm6B,cACpC,KACC4nB,EAAgB,KAChBpI,EACHoI,EAAgBhiD,KAAKy7C,uBAAuB1C,EAAYa,GAC9C55C,KAAK26C,kBACV36C,KAAKC,MAAMyrB,iBACfs2B,EAAgBhiD,KAAKw7C,oBAAoBzC,EAAYyH,IAG5CxgD,KAAKC,MAAMuoB,gBACrBw5B,EAAgBhiD,KAAKu7C,yBAAyBxC,EAAYyH,IAIvDtmB,OAAOC,UAAUn6B,KAAK87C,cAAgB32B,EAAKnpB,OAASgE,KAAK87C,cAC5D+F,EAAgB7hD,KAAK87C,mBACd97C,KAAK87C,aAGb,IAEImG,EAFE/B,EAAclgD,KAAKC,MAAM6I,QAAQoE,OAASlN,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAQnJ,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAO,GAGzEnJ,KAAK26C,mBAAqB36C,KAAKC,MAAM6I,QAAQyf,eAAiB+0B,GAAcK,SAEnHsE,EAAmBjiD,KAAKC,MAAM6I,QAAQyf,eAAiB+0B,GAAcK,OAAS39C,KAAKi7C,eAAiBj7C,KAAKg7C,qBAG1G,IAAM5H,EACLvyC,EAAAC,cAACq/C,IACAl8B,SAAU29B,EACV19B,WAAYs7B,EACZnqB,QAAS2qB,EACTxoC,KAAM2N,EACNi7B,WAAYA,EACZtE,YAAa+F,EACb1G,SAAUn7C,KAAKm7C,SACfC,OAAQp7C,KAAKo7C,OACb4G,cAAeA,EACfF,gBAAiBA,EACjBzB,UAAWrgD,KAAKC,MAAM6I,QAAQxC,KAC9ByyC,WAAYA,EACZ7uC,YAAalK,KAAKC,MAAM+D,WAAWwM,gBAAgBxQ,KAAKC,MAAMoI,YAC9D8c,KAAMnlB,KAAKC,MAAM6I,QAAQqc,KACzB+6B,WAAYA,EACZlF,oBAAqBiH,EACrB7nB,aAAep6B,KAAKC,MAAMm6B,aAC1B7R,aAAcvoB,KAAKC,MAAM6I,QAAQyf,aACjCpgB,MAAOnI,KAAK67C,eACZ0E,sBAAuBvgD,KAAKC,MAAM6I,QAAQmiB,iBAE5C,OACCpqB,EAAAC,yBACEsyC,MAGHrzC,iBAAA5D,MAED,SAAWylD,EAAYpC,GAEtB,IADA,IAAMQ,EAAU,GACP5f,EAAI,EAAGA,EAAIpgC,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQokC,IAAK,CAC/D,IAAM8c,EAAYl9C,KAAKC,MAAM6I,QAAQuE,YAAY+yB,GAC3C8hB,EAAeliD,KAAKC,MAAM6I,QAAQxC,KAAO85B,EAEzC+hB,EAAWniD,KAAKC,MAAM+D,WAAWqwC,gBAAgB,CAAE/tC,KAAMtG,KAAKC,MAAM6I,QAAQxC,KAAMsC,IAAKw3B,IACvF9tB,EAAW6vC,IAAahwC,GAAOI,UAAY4vC,IAAahwC,GAAOC,OAC/DgwC,EAAelF,EAAUlyB,cAAgB+F,EAAYkC,SAEzDpyB,EAAAC,cAACuhD,IACA/vC,SAAUA,EACVhK,GAAI45C,EACJP,QAAS3hD,KAAK47C,WAAWxb,GACzB6U,SAAUj1C,KAAKsiD,gBAAgBz7C,KAAK7G,KAAMogC,GAC1C+U,UAAW+H,EAAUhwC,MAAM/D,OACtB+zC,EAAUhwC,MAAM/D,KACpB+zC,EAAUn5B,SAAWm5B,EAAUlyB,cAAgB+F,EAAY3e,SAC1D8qC,EAAUj5B,UACb29B,EAAWtzC,KAAK4uC,EAAU52C,MAE3B05C,EAAQ1xC,KAAK,CACZvO,IAAOm9C,EAAU52C,KACjB4G,MAASk1C,EACT7zC,MAAS2uC,EAAU3uC,MACnB/L,YAAgB06C,EAAU16C,YAAc06C,EAAU16C,YAAY2G,KAAO,KACrEgb,YAAa+4B,EAAU/4B,WAAY+4B,EAAU/4B,UAC7CgH,UAAc+xB,EAAUn4B,iBAAmBm4B,EAAUn4B,gBAAgBoG,UAAY+xB,EAAUn4B,gBAAgBoG,UAAY,OACpH+xB,EAAUh5B,YACbs7B,EAAalxC,KAAK4uC,EAAU52C,OAS/B,OAJItG,KAAKC,MAAM6I,QAAQyiB,YAAcvrB,KAAK26C,mBAEzCqF,EAAQ1xC,KAAK,CAAEvO,IAAO,WAAYmN,MAAS,GAAIqB,MAASg0C,GAA6BC,aAAe,IAE9FxC,KACPjgD,gBAAA5D,MAED,SAAUgpB,EAAMvY,EAAcmsC,EAAY0J,EAAU9D,GACnD,GAAKzhD,MAAM2F,QAAQ+J,GAInB,IADA,IAAM8xC,EAAe+D,GAAsBziD,KAAKC,MAAM6I,QAAQxC,KACrD4iC,EAAW,EAAGA,EAAWt8B,EAAa5Q,OAAQktC,IAAY,CAClE,IAAM7T,EAAU,GAEhB,GADAr1B,KAAKy6C,iBAAiBvR,GAAY,GAC9BlpC,KAAKs7C,gBAAgBpS,IAAayV,EAAkB,CACvD,IAAK,IAAIxV,EAAW,EAAGA,EAAWnpC,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQmtC,IAAY,CACpF,IAAM+T,EAAYl9C,KAAKC,MAAM6I,QAAQuE,YAAY87B,GAGjD,GAAI+T,EAAUn5B,SAAWm5B,EAAU94B,YAAcsB,EAAU05B,SAAU,CACpE,IAAM38C,EAAUzC,KAAK0iD,UAAUxF,EAAWtwC,EAAc8xC,EAAcxV,EACrEC,EAAU4P,EAAY4F,GAEnBzB,EAAUn5B,SACbsR,EAAQ/mB,KAAK7L,IAIhB,GAAIzC,KAAKC,MAAM6I,QAAQyiB,YAAcozB,IAAqB3+C,KAAK26C,kBAAmB,CACjF,IAAMgI,EAAO3iD,KAAK07C,eAAegD,EAAcxV,EAAU6P,GACzD1jB,EAAQ/mB,KAAKq0C,GAEdx9B,EAAK7W,KAAK,CACT+mB,QAASA,SAIZt1B,qBAAA5D,MAED,SAAesmD,EAAUvZ,EAAU6P,GAGlC,IAAM6F,EAAkB,CAAEt4C,KAAMm8C,EAAU95C,IAAKugC,GACzCtsB,EAAmBC,EAAU7c,KAAKC,MAAMoI,YAE1CA,EAAau2C,EAEbhiC,EAAiBtW,OAASs4C,EAAgBt4C,OAC7C+B,EAAarI,KAAKC,MAAM+D,WAAW66C,mBAAmBjiC,EAAkBgiC,IAGzE,IAAMgE,EAAgB5iD,KAAKC,MAAM4iD,YAAY3Z,EAAUlpC,KAAKC,MAAM6I,QAAQyiB,UAAWljB,EAAYrI,KAAK46C,eAEhGkI,EACLjiD,EAAAC,qBAAKG,UAAU,4BACdJ,EAAAC,cAACm5C,IACA/sC,MAAO01C,EAAc3iD,MAAMiN,MAC3B3L,MAAOqhD,EAAc3iD,MAAMsB,MAC3B4E,MAAOy8C,EAAc3iD,MAAMkG,MAC3BmM,SAAUymC,IAAe5mC,GAAOI,SAChCvO,WAAYhE,KAAKC,MAAM+D,WACvBqE,WAAYrI,KAAKC,MAAMoI,WACvBkL,YAAavT,KAAKC,MAAMsT,eAG3B,MAAO,CACNmpC,OAAQ,WACRnuC,MAAOg0C,GACP9/C,QAASqgD,QAEV/iD,+BAAA5D,MA7vBD,SAAgC4d,EAAWgpC,GAC1C,IAAMvI,EAAsD,IAAlCzgC,EAAUqgB,aAAap+B,OACjD,OAAI+mD,EAAUvI,mBAAqBA,EAC1B,CAAEA,iBAAkBA,GAErB,OACRF,CAAA,EARyCz5C,EAAMrB,mbAgxBjD86C,GAAcj3C,aAAe,CAC5BmlB,eAAe,EACfkD,gBAAgB,GC/xBgC,IAE5Bs3B,YAAU98C,GAAA3G,EAAAyjD,EAAA98C,GAAA,IAAAzG,EAAAC,GAAAsjD,GAC9B,SAAAA,EAAY/iD,GAAO,IAAAwG,EAIqC,OAJrC9G,OAAAqjD,IAClBv8C,EAAAhH,EAAArB,UAAM6B,IAEDgjD,kBAAoBx8C,EAAKw8C,kBAAkBp8C,KAAIC,EAAAL,IACpDA,EAAKk0C,gBAAkBl0C,EAAKk0C,gBAAgB9zC,KAAIC,EAAAL,IAAOA,EAqCvD,OApCA3G,EAAAkjD,IAAAjjD,wBAAA5D,MAED,WAEC,IAAM+mD,KAAyBz6C,OAAMzI,KAAKC,MAAM6I,QAAQxC,0BAClD68C,EAAwBpvC,EAC7B/T,KAAKC,MAAM+D,WAAWiL,eACtBC,GAAak0C,4BACb,CAAEC,aAAcrjD,KAAKC,MAAMqjD,wBAE5B,OAAOtjD,KAAKC,MAAM+D,WAAWu/C,YAAYL,EAA2BC,MACpEpjD,sBAAA5D,MAED,WACC,OAAO6D,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAYysB,iBACtDz9C,aAAA5D,MAED,WACC,IAAMqnD,EAAiBxjD,KAAKijD,oBAiB5B,OAfCpiD,EAAAC,qBAAKG,UAAU,yBAAyBqR,SAAUtS,KAAKC,MAAMqS,UAC5DzR,EAAAC,0BAAQ0iD,GACR3iD,EAAAC,yBACAD,EAAAC,cAACyQ,IACAtQ,UAAU,gCACVwQ,KAAK,WACLzP,KAAK,QACL0P,WAAY1R,KAAK26C,kBAAoB8G,GAAS9vC,GAC9CH,QAASxR,KAAKC,MAAMwjD,6BACpBnxC,SAAUtS,KAAKC,MAAMqS,UAEpBtS,KAAKC,MAAMqjD,4BAKfN,CAAA,EA1CsCniD,EAAMrB,cCP/BwjD,2aCO4C,IAErDU,YAAiBx9C,GAAA3G,EAAAmkD,EAAAx9C,GAAA,IAAAzG,EAAAC,GAAAgkD,GACtB,SAAAA,EAAYzjD,GAAO,IAAAwG,EAU6B,OAV7B9G,OAAA+jD,IAClBj9C,EAAAhH,EAAArB,UAAM6B,IAED0jD,sBAAwBl9C,EAAKk9C,sBAAsB98C,KAAIC,EAAAL,IAC5DA,EAAKm9C,WAAan9C,EAAKm9C,WAAW/8C,KAAIC,EAAAL,IACtCA,EAAKo9C,UAAYp9C,EAAKo9C,UAAUh9C,KAAIC,EAAAL,IACpCA,EAAKq9C,YAAcr9C,EAAKq9C,YAAYj9C,KAAIC,EAAAL,IACxCA,EAAKs9C,cAAgBt9C,EAAKs9C,cAAcl9C,KAAIC,EAAAL,IAC5CA,EAAKu9C,qBAAuBv9C,EAAKu9C,qBAAqBn9C,KAAIC,EAAAL,IAC1DA,EAAKw9C,cAAgBx9C,EAAKw9C,cAAcp9C,KAAIC,EAAAL,IAC5CA,EAAKy9C,YAAcz9C,EAAKy9C,YAAYr9C,KAAIC,EAAAL,IAAOA,EAsQ/C,OArQA3G,EAAA4jD,IAAA3jD,2BAAA5D,MAED,WACC,IAAIgoD,EAAU,KACd,QAA+C,IAApCnkD,KAAKC,MAAM6I,QAAQgc,cAAgC9kB,KAAKC,MAAM6I,QAAQgc,aAAc,CAC9F,IAAMs/B,EAAapkD,KAAK2jD,wBACxBQ,EACCtjD,EAAAC,qBACCG,UAAU,kCAETmjD,GAMJ,IAAM3hD,EAAW5B,EAAAC,uBAAOgO,KAAK,eAAe7N,UAAU,iCACrDJ,EAAAC,2BACCD,EAAAC,oBAAIG,UAAWC,GAAW,8BAA+B,CAAEoR,SAAYtS,KAAKC,MAAMqS,YACjFzR,EAAAC,wBACEd,KAAKC,MAAMokD,gBAEbxjD,EAAAC,wBACEqjD,MAOL,OACCtjD,EAAAC,yBACE2B,MAKJ1C,4BAAA5D,MACA,WACC,IAAMoZ,EAAWvV,KAAKC,MAAM+D,WAAWsgD,gBAAgBtkD,KAAKC,MAAMoI,YAAYi2C,OACxE1xC,EAAe5M,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YACnEk8C,GACFvkD,KAAKC,MAAMs6B,uBACS,IAApBhlB,EAASvZ,QAAgC,IAAhBuZ,EAAS,KAClCvV,KAAKC,MAAMqS,SAETkyC,GACFxkD,KAAKC,MAAMs6B,uBACS,IAApBhlB,EAASvZ,QAAgBuZ,EAASA,EAASvZ,OAAS,KAAO4Q,EAAa5Q,OAAS,IACjFgE,KAAKC,MAAMqS,SAEP+nB,EAAar6B,KAAKC,MAAM+D,WAAWygD,cAAczkD,KAAKC,MAAMoI,YAAYi2C,OAC1E/oC,EAASvZ,OAAS,GAAKq+B,EAAWr+B,OAAS,GAAKq+B,EAAWxyB,SAAS0N,EAAS,KAChFgvC,GAAa,EACbC,GAAgB,GACNjvC,EAAS,KAAO8kB,EAAWA,EAAWr+B,OAAS,GAAK,GAC9DuoD,GAAa,EACbC,GACExkD,KAAKC,MAAMs6B,uBACS,IAApBhlB,EAASvZ,QAAgBuZ,EAASA,EAASvZ,OAAS,KAAO4Q,EAAa5Q,OAAS,IACjFgE,KAAKC,MAAMqS,UAEHiD,EAAS,KAAO8kB,EAAW,GAAK,IAC1CmqB,GAAgB,GAIjB,IAAME,EAAW3wC,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAay1C,uCAC5EC,EAAU7wC,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAa21C,sCAC3EC,EACLjkD,EAAAC,qBAAKf,IAAI,aACRc,EAAAC,cAACyQ,IACAtQ,UAAU,wBACVuQ,QAASxR,KAAK4jD,WACdtxC,UAAWiyC,EACX9yC,KAAK,QACLC,WAAYqzC,GACZlP,gBAAiB6O,EACjBlN,gBAAgB,OAChBE,iBAED72C,EAAAC,cAACyQ,IACAtQ,UAAU,wBACVuQ,QAASxR,KAAK6jD,UACdvxC,UAAWiyC,EACX9yC,KAAK,QACLC,WAAYszC,GACZnP,gBAAiB+O,EACjBpN,gBAAgB,OAChBE,kBAIGuN,EAAclxC,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAag2C,wCAC/EC,EAAYpxC,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAak2C,0CAyBnF,MAAO,CAACN,EAvBPjkD,EAAAC,qBAAKf,IAAI,gBACRc,EAAAC,cAACyQ,IACAtQ,UAAU,wBACVuQ,QAASxR,KAAK8jD,YACdxxC,UAAWkyC,EACX/yC,KAAK,QACLC,WAAY2zC,GACZxP,gBAAiBoP,EACjBzN,gBAAgB,OAChBE,iBAED72C,EAAAC,cAACyQ,IACAtQ,UAAU,wBACVuQ,QAASxR,KAAK+jD,cACdzxC,UAAWkyC,EACX/yC,KAAK,QACLC,WAAY4zC,GACZzP,gBAAiBsP,EACjB3N,gBAAgB,OAChBE,sBAKH33C,oBAAA5D,MAED,WACC,IAAIopD,EAAa,EACXlrB,EAAar6B,KAAKC,MAAM+D,WAAWygD,cAAczkD,KAAKC,MAAMoI,YAAYi2C,OAI9E,OAHIjkB,GAAcA,EAAWr+B,OAAS,GAAKq+B,EAAWxyB,SAAS,KAC9D09C,EAAalrB,EAAWA,EAAWr+B,OAAS,IAEtCupD,KACPxlD,kBAAA5D,MAED,WACC,IAAMyQ,EAAe5M,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YACnEm9C,EAAW54C,EAAa5Q,OAAS,EAC/Bq+B,EAAar6B,KAAKC,MAAM+D,WAAWygD,cAAczkD,KAAKC,MAAMoI,YAAYi2C,OAI9E,OAHIjkB,GAAcA,EAAWr+B,OAAS,GAAKq+B,EAAWxyB,SAAS+E,EAAa5Q,OAAS,KACpFwpD,EAAWnrB,EAAW,GAAK,GAErBmrB,KACPzlD,iBAAA5D,MAED,SAAW4O,GAOV,IANA,IAAIwK,EAAWvV,KAAKC,MAAM+D,WAAWsgD,gBAAgBtkD,KAAKC,MAAMoI,YAAYi2C,MAAK,SAASC,EAAGC,GAC5F,OAAOD,EAAIC,KAEN5xC,EAAe5M,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YACjEk9C,EAAavlD,KAAKikD,gBAClB5pB,EAAar6B,KAAKC,MAAM+D,WAAWygD,cAAczkD,KAAKC,MAAMoI,YAAYi2C,OACrEmH,EAAWlwC,EAAS,GAAIkwC,EAAWF,EAAYE,IACvD,IAAK,IAAI7wC,EAAI,EAAGA,GAAKW,EAASvZ,OAAS,EAAG4Y,IACzC,GAAKylB,EAAWr+B,OAAS,GAAKuZ,EAAS,GAAKgwC,EAAa,GAA4B,IAAtBlrB,EAAWr+B,OAAc,CACvF,IAAM0pD,EAAcnwC,EAASowC,QACvBC,EAASh5C,EAAa84C,EAAc,GAC1C94C,EAAa84C,EAAc,GAAK94C,EAAa84C,GAC7C94C,EAAa84C,GAAeE,EAC5BrwC,EAASjH,KAAKo3C,EAAc,GAC5B1lD,KAAKC,MAAM+D,WAAW6hD,qBAAqB7lD,KAAKC,MAAMoI,WAAW/B,KAAMo/C,EAAaA,EAAc,GAIjGnwC,EAASvZ,OAAS,GACrBgE,KAAKC,MAAMo7C,eAAe9lC,EAAS,IAEpCvV,KAAKC,MAAM46C,+BAA+BjuC,EAAc2I,MACxDxV,gBAAA5D,MAED,SAAU4O,GACT,IAAMwK,EAAWvV,KAAKC,MAAM+D,WAAWsgD,gBAAgBtkD,KAAKC,MAAMoI,YAAYi2C,MAAK,SAASC,EAAGC,GAC9F,OAAOD,EAAIC,KAEN+G,EAAavlD,KAAKikD,gBAClB5pB,EAAar6B,KAAKC,MAAM+D,WAAWygD,cAAczkD,KAAKC,MAAMoI,YAAYi2C,OAG9E,GAAwB,IAApB/oC,EAASvZ,QAAgBuZ,EAAS,GAAKgwC,EAAY,CAEtD,IADA,IAAM34C,EAAe5M,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YAC9DuM,EAAI,EAAGA,GAAKW,EAASvZ,OAAS,EAAG4Y,IACzC,GAAIylB,EAAWr+B,OAAS,GAAKuZ,EAAS,GAAKgwC,EAAa,EAAG,CAC1D,IAAMG,EAAcnwC,EAASowC,QACvBC,EAASh5C,EAAa84C,EAAc,GAC1C94C,EAAa84C,EAAc,GAAK94C,EAAa84C,GAC7C94C,EAAa84C,GAAeE,EAC5BrwC,EAASjH,KAAKo3C,EAAc,GAC5B1lD,KAAKC,MAAM+D,WAAW6hD,qBAAqB7lD,KAAKC,MAAMoI,WAAW/B,KAAMo/C,EAAaA,EAAc,QAC5F,GAA0B,IAAtBrrB,EAAWr+B,OAAc,CACnC,IAAM0pD,EAAcnwC,EAASowC,QAC7B,GAAoB,IAAhBD,EAAmB,CACtB,IAAME,EAASh5C,EAAa84C,EAAc,GAC1C94C,EAAa84C,EAAc,GAAK94C,EAAa84C,GAC7C94C,EAAa84C,GAAeE,EAC5BrwC,EAASjH,KAAKo3C,EAAc,GAC5B1lD,KAAKC,MAAM+D,WAAW6hD,qBAAqB7lD,KAAKC,MAAMoI,WAAW/B,KAAMo/C,EAAaA,EAAc,IAIrG1lD,KAAKC,MAAMo7C,eAAe9lC,EAAS,IACnCvV,KAAKC,MAAM46C,+BAA+BjuC,EAAc2I,OAEzDxV,kBAAA5D,MAED,SAAY4O,GACX,IAAMwK,EAAWvV,KAAKC,MAAM+D,WAAWsgD,gBAAgBtkD,KAAKC,MAAMoI,YAAYi2C,MAAK,SAASC,EAAGC,GAC9F,OAAOD,EAAIC,KAEN5xC,EAAe5M,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YACjEm9C,EAAWxlD,KAAKkkD,cAEtB,GAAwB,IAApB3uC,EAASvZ,QAAgBuZ,EAASA,EAASvZ,OAAS,KAAO4Q,EAAa5Q,OAAS,EAAG,CACvF,IAAK,IAAI4Y,EAAIW,EAASvZ,OAAS,EAAG4Y,GAAK,EAAGA,IAAK,CAC9C,IAAM8wC,EAAcnwC,EAASmvB,MAC7B,GAAIghB,IAAgBF,EAAU,CAC7B,IAAMI,EAASh5C,EAAa84C,EAAc,GAC1C94C,EAAa84C,EAAc,GAAK94C,EAAa84C,GAC7C94C,EAAa84C,GAAeE,EAC5BrwC,EAASuK,QAAQ4lC,EAAc,GAC/B1lD,KAAKC,MAAM+D,WAAW6hD,qBAAqB7lD,KAAKC,MAAMoI,WAAW/B,KAAMo/C,EAAaA,EAAc,IAGhGnwC,EAASvZ,OAAS,EACrBgE,KAAKC,MAAMo7C,eAAe9lC,EAASA,EAASvZ,OAAS,IAErDgE,KAAKC,MAAMo7C,eAAe9lC,EAAS,IAEpCvV,KAAKC,MAAM46C,+BAA+BjuC,EAAc2I,OAEzDxV,oBAAA5D,MAED,SAAc4O,GAMb,IALA,IAAIwK,EAAWvV,KAAKC,MAAM+D,WAAWsgD,gBAAgBtkD,KAAKC,MAAMoI,YAAYi2C,MAAK,SAASC,EAAGC,GAC5F,OAAOD,EAAIC,KAEN5xC,EAAe5M,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YACjEm9C,EAAWxlD,KAAKkkD,cACb4B,EAAUvwC,EAASA,EAASvZ,OAAS,GAAI8pD,EAAUN,EAAUM,IACrE,IAAK,IAAIlxC,EAAIW,EAASvZ,OAAS,EAAG4Y,GAAK,EAAGA,IAAK,CAC9C,IAAM8wC,EAAcnwC,EAASmvB,MACvBkhB,EAASh5C,EAAa84C,EAAc,GAC1C94C,EAAa84C,EAAc,GAAK94C,EAAa84C,GAC7C94C,EAAa84C,GAAeE,EAC5BrwC,EAASuK,QAAQ4lC,EAAc,GAC/B1lD,KAAKC,MAAM+D,WAAW6hD,qBAAqB7lD,KAAKC,MAAMoI,WAAW/B,KAAMo/C,EAAaA,EAAc,GAGhGnwC,EAASvZ,OAAS,GACrBgE,KAAKC,MAAMo7C,eAAe9lC,EAASA,EAASvZ,OAAS,IAEtDgE,KAAKC,MAAM46C,+BAA+BjuC,EAAc2I,MACxDxV,aAAA5D,MAED,WACC,OACC6D,KAAKC,MAAM8lD,cAAgB/lD,KAAKC,MAAMuoB,cACnC3nB,EAAAC,cAACkiD,IACFl6C,QAAS9I,KAAKC,MAAM6I,QACpB9E,WAAYhE,KAAKC,MAAM+D,WACvBs/C,sBAAuBtjD,KAAKC,MAAMqjD,sBAClCG,6BAA8BzjD,KAAKC,MAAMwjD,6BACzCnxC,SAAUtS,KAAKC,MAAMqS,WAEpBtS,KAAKgkD,2BAETN,CAAA,EAjR8B7iD,EAAMrB,WAoStCkkD,GAAkBrgD,aAAe,CAChCmlB,eAAe,GAGhB,OAOe3kB,IAPS,SAACC,EAAOC,GAAQ,MAAM,CAE7Cw2B,sBAAuBx2B,EAASC,WAAWgiD,wBAAwBjiD,EAASsE,YAC5EmgB,cAAezkB,EAASC,WAAWiiD,iBAAiBliD,EAASsE,YAC7D61B,aAAcn6B,EAASC,WAAWkiD,gBAAgBniD,EAASsE,YAC3D,GAEcxE,CAAyB6/C,4aC1SxC,IAAMyC,GAAe,CAACr2C,EAAKojB,QAASpjB,EAAKsjB,OAAQtjB,EAAKqjB,MAChDizB,YAAWC,GAAA9mD,EAAA6mD,EAAS9L,IAAT,IAAA76C,EAAAC,GAAA0mD,GAChB,SAAAA,EAAYnmD,GAAO,IAAAwG,EAG+B,OAH/B9G,OAAAymD,IAClB3/C,EAAAhH,EAAArB,UAAM6B,IACDqmD,OAAS7/C,EAAK6/C,OAAOz/C,KAAIC,EAAAL,IAC9BA,EAAK+tC,UAAYv0C,EAAM+D,WAAWiL,eAAexI,EAgJjD,OA/IA3G,EAAAsmD,IAAArmD,aAAA5D,MAED,WACC,IAAMoqD,EAAkBvmD,KAAKC,MAAM+D,WAAWwiD,mBAAmBxmD,KAAKC,MAAMoI,YACtEo+C,EAASN,GAAax2C,QAAQ42C,IAAoB,EAAI,KAAO,GAG/DG,EAAe1mD,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,iBACzC,IAAjBq+C,IACVA,EAAe,IAGhB,IAAMvhC,EAAOuhC,EAAaj+C,OAAO,CAACg+C,IAClCzmD,KAAK66C,+BAA+B11B,MACpCplB,eAAA5D,MAED,SAAS2M,EAAST,EAAYk+C,EAAiBI,GAC9C,OAAIR,GAAax2C,QAAQ42C,IAAoB,EACpC1lD,EAAAC,qBAAKG,UAAU,iCACtBJ,EAAAC,cAACu1C,IACAvtC,QAASA,EACTT,WAAYA,EACZrE,WAAYhE,KAAKC,MAAM+D,WACvBowC,YAAauS,EACblT,mBAIK5yC,EAAAC,qBAAKG,UAAU,iCACtBJ,EAAAC,cAACyzC,IACAzrC,QAASA,EACTT,WAAYA,EACZrE,WAAYhE,KAAKC,MAAM+D,WACvBowC,YAAauS,EACblT,sBAGF1zC,eAAA5D,MAED,SAASyQ,EAAcmsC,EAAY6N,GAClC,IAAMzhC,EAAO,GACb,GAAIvY,EACH,IAAK,IAAIs8B,EAAW,EAAGA,EAAWt8B,EAAa5Q,OAAQktC,IAAY,CAClE,IAAM7T,EAAU,GAEZhtB,EAAa,CAAE/B,KAAMtG,KAAKC,MAAM6I,QAAQxC,KAAMqC,IAAKugC,GAEvD,GAAIlpC,KAAKC,MAAMoI,WAAW/B,OAAS+B,EAAW/B,KAAM,CACnD,IAAMsW,EAAmB7e,OAAOgyB,OAAO,GAAI/vB,KAAKC,MAAMoI,YACtDA,EAAarI,KAAKC,MAAM+D,WAAW66C,mBAAmBjiC,EAAkB,CAAEtW,KAAMtG,KAAKC,MAAM6I,QAAQxC,KAAMqC,IAAKugC,IAG/G,IAAMqd,EAAkBvmD,KAAKC,MAAM+D,WAAWwiD,mBAAmBn+C,GAG3Ds+C,OAAsC,IAAjBC,GAAwD,IAAxBA,EAAa5qD,OAAgB,GAAK4qD,EAAa,GAAG15C,MACvG4xC,EAAc9+C,KAAK6mD,SAHT,GAG2Bx+C,EAAYk+C,EAAiBI,GACxEtxB,EAAQ/mB,KAAK,CACZvO,IAAKmpC,EAAW,WAChBwT,OAAQ,QACRj6C,QAASq8C,IAEV35B,EAAK7W,KAAK,CACTvO,IAAKmpC,EACL4d,gBAAiB9mD,KAAKi7C,eAAep0C,KAAK7G,KAAMkpC,GAAU,GAC1D7T,QAASA,EACTp0B,UAAW,mBAId,OAAOkkB,KACPplB,iBAAA5D,MAED,WACC,IAAM6jD,EAAU,GAKhB,OAJAA,EAAQ1xC,KAAK,CACZvO,IAAO,QACPmN,MAAS6G,EAAc/T,KAAKw0C,UAAWtlC,GAAa63C,kBACpDvkD,YAAgB,OACVw9C,KACPjgD,aAAA5D,MAED,WACC,IAYI0lD,EAZE7B,EAAUhgD,KAAKigD,aAEfO,EAAoB,CACzBS,eAAgBltC,EAAc/T,KAAKC,MAAM+D,WAAWiL,eACnDC,GAAa83C,qCACdpG,kBAAmB7sC,EAAc/T,KAAKC,MAAM+D,WAAWiL,eACtDC,GAAa+3C,wCACdjG,kBAAmBhhD,KAAKsmD,QAGnBnhC,EAAOnlB,KAAKknD,SAASlnD,KAAKC,MAAM9D,MAAO6D,KAAKC,MAAM6D,MAAOk8C,GACzDgC,EAAgBhiD,KAAKu7C,yBAAyBv7C,KAAKC,MAAM6D,MAAO08C,GAElEtmB,OAAOC,UAAUn6B,KAAK87C,cAAgB32B,EAAKnpB,OAASgE,KAAK87C,cAC5D+F,EAAgB7hD,KAAK87C,mBACd97C,KAAK87C,aAEb,IAAMoE,EAAclgD,KAAKC,MAAM6I,QAAQoE,OAASlN,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAQnJ,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAO,GAC3GiqC,EACLvyC,EAAAC,cAACq/C,IACA9qB,QAAS2qB,EACTxoC,KAAM2N,EACN22B,YAAa+F,EACbG,cAAeA,EACf3B,UAAWrgD,KAAKC,MAAM6I,QAAQxC,KAC9ByyC,WAAY/4C,KAAKC,MAAM6D,MACvBoG,YAAalK,KAAKC,MAAMiK,YACxBib,KAAMnlB,KAAKC,MAAM6I,QAAQqc,KACzB+6B,WAAYA,EACZ9lB,aAAcp6B,KAAKC,MAAMm6B,aACzB7R,aAAcvoB,KAAKC,MAAM6I,QAAQyf,aACjCyyB,oBAAqBh7C,KAAKg7C,oBAC1B7yC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,MAC9Do4C,sBAAuBvgD,KAAKC,MAAM6I,QAAQmiB,iBAGtCo5B,EAAkBxjD,EAAAC,yBACvBD,EAAAC,qBAAKG,UAAU,yBACbmyC,GAEFvyC,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,eAGrE,OACCrJ,EAAAC,qBAAK,UAAS4H,GAAU1I,KAAKC,MAAMoI,YAAapH,UAAU,2BACxDjB,KAAKC,MAAMm0C,YACZvzC,EAAAC,cAAC4iD,IACAW,eAAgBA,EAChBv7C,QAAS9I,KAAKC,MAAM6I,QACpB9E,WAAYhE,KAAKC,MAAM+D,WACvBqE,WAAYrI,KAAKC,MAAMoI,WACvBgzC,eAAgBr7C,KAAKq7C,eACrBR,+BAAgC76C,KAAK66C,+BACrCvoC,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCwzC,aAAct1C,GAAQzQ,KAAKC,MAAM9D,OACjCmnD,sBAAuB9C,EAAkBS,eACzCwC,6BAA8BzjD,KAAKsmD,cAItCF,CAAA,IAGFA,GAAYe,UAAY,CACvBr+C,QAASs+C,GAAUxrD,OAAOyrD,WAC1Bh/C,WAAY++C,GAAUxrD,OAAOyrD,WAC7BrjD,WAAYojD,GAAUxrD,OAAOyrD,WAC7BjT,YAAagT,GAAUE,QACvBltB,aAAcgtB,GAAU7qD,MACxBuH,MAAOsjD,GAAUG,OACjBprD,MAAOirD,GAAU7qD,MACjB2N,YAAak9C,GAAUxrD,OACvB4sB,cAAe4+B,GAAUI,KACzBtpB,aAAckpB,GAAUxrD,QAGzB,OASeiI,IATS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D+xB,aAAcr2B,EAASC,WAAWsgD,gBAAgBvgD,EAASsE,YAC3DmgB,cAAezkB,EAASC,WAAWiiD,iBAAiBliD,EAASsE,YAC7D61B,aAAcn6B,EAASC,WAAWkiD,gBAAgBniD,EAASsE,YAC3D,GAEcxE,CAAyBuiD,4aCnLxC,IAAMqB,GAAkC,IAAIp5C,OAAO,YAAa,KAE3Cq5C,YAA+BxhD,GAAA3G,EAAAmoD,EAAAxhD,GAAA,IAAAzG,EAAAC,GAAAgoD,GACnD,SAAAA,EAAYznD,GAAO,IAAAwG,EAkDuC,OAlDvC9G,OAAA+nD,IAClBjhD,EAAAhH,EAAArB,UAAM6B,IACDu0C,UAAYv0C,EAAM+D,WAAWiL,eAClCxI,EAAKkhD,YAAc5zC,EAActN,EAAK+tC,UAAWtlC,GAAa04C,yBAC9DnhD,EAAKohD,gBAAkB9zC,EAActN,EAAK+tC,UAAWtlC,GAAa44C,qCAClErhD,EAAKshD,aAAeh0C,EAActN,EAAK+tC,UAAWtlC,GAAa84C,0BAC/DvhD,EAAKwhD,iBAAmB,CACvB3/C,GAAI7B,EAAKshD,aACT/mB,SAAUv6B,EAAKshD,aACf/lB,cAAe,CACdC,kBAAmB,CAClBjB,SAAUjtB,EAActN,EAAK+tC,UAAWtlC,GAAag5C,kCAEtDhmB,kBAAmB,CAClBlB,SAAUv6B,EAAKkhD,YACfvlB,UAAW37B,EAAKohD,mBAInBphD,EAAK0hD,aAAepqD,OAAO0F,KAAKxD,EAAMshC,cACtC96B,EAAK0Y,OAAS1Y,EAAK2hD,mBAAmBnoD,EAAM+D,WAAWk7C,2BAA4Bj/C,EAAM+D,WAAWqkD,oBAAoBlpC,QACxH1Y,EAAKka,UAAY/C,GAAI3d,EAAM+D,WAAWqkD,oBAAqB,YAAa,IACxE5hD,EAAK3C,MAAQ,CACZwkD,cAAe,EACfC,cAAe,EACfC,iBAAkB,EAClBC,mBAAoB,KACpBC,oBAAqB,KACrBC,sBAAuB,KACvBC,iBAAkBniD,EAAK0hD,aAAa,GACpCU,cAAe,EACfC,cAAe,SACfC,oBAAqBtiD,EAAK0Y,OAAO2iB,iBAAiB,GAAGknB,oBAEtDviD,EAAKzC,WAAa/D,EAAM+D,WACxByC,EAAKwiD,oBAAsBxiD,EAAKwiD,oBAAoBpiD,KAAIC,EAAAL,IACxDA,EAAKyiD,iBAAmBziD,EAAKyiD,iBAAiBriD,KAAIC,EAAAL,IAClDA,EAAK0iD,cAAgB1iD,EAAK0iD,cAActiD,KAAIC,EAAAL,IAC5CA,EAAK2iD,cAAgB3iD,EAAK2iD,cAAcviD,KAAIC,EAAAL,IAC5CA,EAAK4iD,iBAAmB5iD,EAAK4iD,iBAAiBxiD,KAAIC,EAAAL,IAClDA,EAAKge,SAAWxkB,EAAMwkB,SAEtBhe,EAAK6iD,kBAAoB7iD,EAAK6iD,kBAAkBziD,KAAIC,EAAAL,IACpDA,EAAK8iD,qBAAuB9iD,EAAK8iD,qBAAqB1iD,KAAIC,EAAAL,IAC1DA,EAAK+iD,qBAAuB/iD,EAAK+iD,qBAAqB3iD,KAAIC,EAAAL,IAC1DA,EAAKgjD,wBAA0BhjD,EAAKgjD,wBAAwB5iD,KAAIC,EAAAL,IAChEA,EAAKijD,kBAAoBjjD,EAAKijD,kBAAkB7iD,KAAIC,EAAAL,IACpDA,EAAKkjD,qBAAuBljD,EAAKkjD,qBAAqB9iD,KAAIC,EAAAL,IAE1DA,EAAKmjD,cAAgBnjD,EAAKmjD,cAAc/iD,KAAIC,EAAAL,IAC5CA,EAAKojD,iBAAmBpjD,EAAKojD,iBAAiBhjD,KAAIC,EAAAL,IAAOA,EAonBzD,OAnnBA3G,EAAA4nD,IAAA3nD,eAAA5D,MAED,SAAS2tD,EAAY/+C,GACpB/K,KAAKyH,SAAS,CACbohD,cAAeiB,EAAW/tD,WAE3BgE,0BAAA5D,MAED,SAAoB4O,GACnB/K,KAAKyH,SAAS,CACbmhD,iBAAkB79C,EAAIg/C,aAAa5tD,MACnCqsD,iBAAkB,OAEnBzoD,uBAAA5D,MAED,SAAiB4O,GAChB,IAAIi/C,EAAc,GAClB,GAAIj/C,EAAIg/C,aAAa5tD,QAAU6D,KAAK+nD,aACnCiC,EAAchqD,KAAKC,MAAM+D,WAAWimD,uCAEpC,IAAK,IAAIluD,EAAQ,EAAGA,EAAQiE,KAAKmf,OAAO2iB,iBAAiB9lC,OAAQD,IAC5DgP,EAAIg/C,aAAa5tD,QAAU6D,KAAKmf,OAAO2iB,iBAAiB/lC,GAAOuM,KAClE0hD,EAAchqD,KAAKmf,OAAO2iB,iBAAiB/lC,GAAOitD,oBAIrDhpD,KAAKyH,SAAS,CACbqhD,cAAe/9C,EAAIg/C,aAAa5tD,MAChCmsD,cAAe,EACfS,oBAAqBiB,OAEtBjqD,wBAAA5D,MAED,SAAkBwM,EAAKoC,EAAKwyB,GAC3Bv9B,KAAKyH,SAAS,CACb6gD,cAAe/qB,EACfgrB,cAAe,OAGhBxoD,2BAAA5D,MAED,SAAqB4O,EAAKwyB,EAAQxhC,GACjC,IAAMqrC,EAAQpnC,KAAK8D,MAAMilD,oBAAoBxrB,GACzCphC,EAAQirC,EAAM9+B,GAIlB,GAHItI,KAAK8D,MAAMglD,gBAAkB9oD,KAAK+nD,cACrC/nD,KAAKC,MAAM+D,WAAWkmD,mCAAmC9iB,GAEtDpnC,KAAKC,MAAMg1C,SAAU,CACxB,IAAMkV,EAA2B,SAAlBnqD,KAAKykB,UAAoD,YAA7BzkB,KAAK8D,MAAMglD,cAA+B,IAAM,GACvF9oD,KAAK6pD,iBAAiBziB,EAAM9+B,MAC/BnM,EAAQguD,EAAQ/iB,EAAM9+B,GAAK6hD,GAE5BnqD,KAAKC,MAAMg1C,SAAS94C,OAErB4D,oBAAA5D,MAED,SAAcqgD,GACbx8C,KAAKyH,SAAS,CAAE2iD,gBAAiB5N,OACjCz8C,wBAAA5D,MAED,SAAkBwM,EAAKoC,EAAKwyB,GAC3Bv9B,KAAKyH,SAAS,CACb8gD,cAAehrB,OAEhBx9B,2BAAA5D,MAED,SAAqB4O,EAAKwyB,EAAQxhC,GACjC,GAAIiE,KAAKC,MAAMg1C,SAAU,CACxB,IAAM7N,EAAQpnC,KAAK8D,MAAMilD,oBAAoB/oD,KAAK8D,MAAMwkD,eAClD6B,EAAQ,IACd,GAAI/iB,EAAM53B,OAAQ,CACjB,IAAMrT,EAAQirC,EAAM53B,OAAO+tB,GAAQphC,MAC7BkuD,EAA+B,iBAAVluD,EAAsBguD,EAAQhuD,EAAQguD,EAAQhuD,EACzE6D,KAAKC,MAAMg1C,SAASoV,QACd,GAAIjjB,EAAMha,MAAO,CACvB,IAAMk9B,EAA6C,iBAA1BljB,EAAMha,MAAMqW,IAAItnC,MAAuBguD,EAAQ/iB,EAAMha,MAAMqW,IAAItnC,MAAQguD,EAAS/iB,EAAMha,MAAMqW,IAAItnC,MACnHqpD,EAA6C,iBAA1Bpe,EAAMha,MAAMgqB,IAAIj7C,MAAuBguD,EAAQ/iB,EAAMha,MAAMgqB,IAAIj7C,MAAQguD,EAAS/iB,EAAMha,MAAMgqB,IAAIj7C,MACzH6D,KAAKC,MAAMg1C,SAAoB,IAAX1X,EAAe+sB,EAAW9E,IAGhDxlD,KAAKyH,SAAS,CACb8gD,cAAehrB,OAEhBx9B,oBAAA5D,MAED,SAAcqgD,GACbx8C,KAAKyH,SAAS,CAAE8iD,gBAAiB/N,OACjCz8C,2BAAA5D,MAED,SAAqBwM,EAAKoC,EAAKwyB,GAC9Bv9B,KAAKyH,SAAS,CACb+gD,iBAAkBjrB,OAEnBx9B,8BAAA5D,MAED,SAAwB4O,EAAKwyB,EAAQxhC,GACpC,IAAIqrC,EACApnC,KAAK8D,MAAM8kD,mBAAqB5oD,KAAK+nD,aACxC3gB,EAAQpnC,KAAKC,MAAM+D,WAAWwmD,4BAA4BjtB,IAE1D6J,EAAQpnC,KAAKC,MAAMshC,aAAavhC,KAAK8D,MAAM8kD,kBAAkBrnB,aAAahE,GAC1Ev9B,KAAKC,MAAM+D,WAAWymD,6BAA6BrjB,IAEpD,IAAMjrC,EAAQirC,EAAMjrC,MAChB6D,KAAKC,MAAMg1C,UACdj1C,KAAKC,MAAMg1C,SAAS94C,MAErB4D,uBAAA5D,MAED,SAAiBqgD,GAChBx8C,KAAKyH,SAAS,CAAEijD,mBAAoBlO,OACpCz8C,oBAAA5D,MAED,SAAci3C,EAAOqJ,GACpB,OAAQrJ,GACR,IAAK,aAEJpzC,KAAKyH,SAAS,CAAEghD,mBAAoBhM,IACpC,MAED,IAAK,cACJz8C,KAAKyH,SAAS,CAAEihD,oBAAqBjM,IACrC,MAED,IAAK,gBACJz8C,KAAKyH,SAAS,CAAEkhD,sBAAuBlM,QAKxC18C,oBAAA5D,MAED,SAAcqb,EAAMilC,GACnB,IAAI3uC,EAAS,EAEb,GAAI0J,EAAKxb,OAAS,EAAG,CAEpB,IADA,IAAM2uD,EAAenzC,EAAK,GAAG6d,QACpB/nB,EAAM,EAAGA,EAAMq9C,EAAa3uD,OAAQsR,IAC5C,GAAIq9C,EAAar9C,GAAKovC,SAAWD,EAAKC,OAAQ,CAC7C5uC,EAASR,EACT,MAIF,IAAMs9C,EAAatwC,EAAO9C,GAAM,SAAS7O,GACxC,OAAOA,EAAI0sB,QAAQvnB,GAAQ3R,SAK5B,OAHIsgD,EAAKzmC,YAAc2mC,GAAeC,MACrCgO,EAAW/N,UAEL+N,EAER,OAAOpzC,KAGRzX,uBAAA5D,MACA,SAAiBirC,GAChB,OAAwD,OAAjDA,EAAMyjB,MAAMpD,OACnB1nD,0BAAA5D,MAED,SAAoB+Q,GACnB,IAAIoF,GAAW,EACXpF,IACHoF,GAAW,GAEZ,IAAMw4C,EACLjqD,EAAAC,sBAAMG,UAAU,8BACdiM,GAGG69C,EACLlqD,EAAAC,cAACozC,GACAzxC,QAASqoD,EACT3W,YAAajnC,EACboF,SAAUA,IASZ,OALCzR,EAAAC,qBAAKG,UAAU,iCACb8pD,MAKHhrD,yBAAA5D,MAED,SAAmB6uD,EAASC,GAC3B,IAyDIC,EACAC,EA1DEC,EAAcr3C,EAAc/T,KAAKw0C,UAAWtlC,GAAam8C,yBACzDC,EAAkBv3C,EAAc/T,KAAKw0C,UAAWtlC,GAAaq8C,qCAC7DC,EAAgBz3C,EAAc/T,KAAKw0C,UAAWtlC,GAAau8C,2BAE3DC,EAAgB,CACrBpjD,GAAI,SACJ04B,SAHqBjtB,EAAc/T,KAAKw0C,UAAWtlC,GAAay8C,kCAIhE3pB,cAAe,CACdC,kBAAmB,CAClBjB,SAAUoqB,EACVhpB,UAAWkpB,GAEZppB,kBAAmB,CAClBlB,SAAUhhC,KAAK2nD,YACfvlB,UAAWpiC,KAAK6nD,iBAEjBvlB,uBAAwB,CACvB,CACCh6B,GAAI,UACJ04B,SAAUwqB,MAMRI,EAAkB,CACvBtjD,GAAI,SACJ0gD,mBAAoB,IAErBgC,EAAQrhD,SAAQ,SAACy9B,GAChB,IAAIykB,EAAQ,CACXvjD,GAAI8+B,EAAM9gC,KACVwlD,0BAA2B,CAC1B,CACCxjD,GAAI,UACJnM,MAAOirC,EAAMthC,QAIZshC,EAAME,SAAS93B,SAClBq8C,EAAMr8C,OAAS,GACf43B,EAAME,SAAS93B,OAAO7F,SAAQ,SAACoiD,GAC9BF,EAAMr8C,OAAOlB,KAAK,CAAEnS,MAAO4vD,QAGzB3kB,EAAME,SAASla,QAClBy+B,EAAMz+B,MAAQ,GACVga,EAAME,SAASla,MAAMqW,MACxBooB,EAAMz+B,MAAMqW,IAAM,CAAEtnC,MAAOirC,EAAME,SAASla,MAAMqW,MAE7C2D,EAAME,SAASla,MAAMgqB,MACxByU,EAAMz+B,MAAMgqB,IAAM,CAAEj7C,MAAOirC,EAAME,SAASla,MAAMgqB,OAGlDwU,EAAgB5C,mBAAmB16C,KAAKu9C,MAKzC,IAAK,IAAI9vD,EAAQ,EAAGA,EAAQkvD,EAAappB,iBAAiB7lC,OAAQD,IACjB,WAA5CkvD,EAAappB,iBAAiB9lC,GAAOuM,KACxC4iD,EAAWnvD,GAGb,IAAK,IAAIA,EAAQ,EAAGA,EAAQkvD,EAAanpB,iBAAiB9lC,OAAQD,IACjB,WAA5CkvD,EAAanpB,iBAAiB/lC,GAAOuM,KACxC6iD,EAAYpvD,GAad,YAVwB,IAAbmvD,EACVD,EAAappB,iBAAiBqpB,GAAYQ,EAE1CT,EAAappB,iBAAiB/hB,QAAQ4rC,QAEd,IAAdP,EACVF,EAAanpB,iBAAiBqpB,GAAaS,EAE3CX,EAAanpB,iBAAiBhiB,QAAQ8rC,GAEhCX,KACPlrD,iCAAA5D,MAGD,WAA6B,IAAA2L,OAEtBghD,EAAgB9oD,KAAKgsD,qBACrBC,EAAe,GACfC,EAAc,GACdjoC,EAAW,CAAC,aAEdkoC,EAAe,KACfC,EAAgB,KACpB,GAAIpsD,KAAK8D,MAAMglD,gBAAkB9oD,KAAK+nD,aAErCoE,EAAensD,KAAKioD,iBACpBmE,EAAgB,CAAE9jD,GAAItI,KAAK+nD,aAAciB,mBAAoBhpD,KAAKC,MAAM+D,WAAWimD,uCAC7E,CAEN,IAAK,IAAIluD,EAAQ,EAAGA,EAAQiE,KAAKmf,OAAO0iB,iBAAiB7lC,OAAQD,IAC5DiE,KAAK8D,MAAMglD,gBAAkB9oD,KAAKmf,OAAO0iB,iBAAiB9lC,GAAOuM,KACpE6jD,EAAensD,KAAKmf,OAAO0iB,iBAAiB9lC,IAG9C,IAAK,IAAIA,EAAQ,EAAGA,EAAQiE,KAAKmf,OAAO2iB,iBAAiB9lC,OAAQD,IAC5DiE,KAAK8D,MAAMglD,gBAAkB9oD,KAAKmf,OAAO2iB,iBAAiB/lC,GAAOuM,KACpE8jD,EAAgBpsD,KAAKmf,OAAO2iB,iBAAiB/lC,IAKhD,GAAIowD,IACHF,EAAa39C,KAAK,CACjBvO,IAAK,YACLmN,MAAOi/C,EAAanqB,cAAcC,kBAAkBjB,SACpDx+B,YAAa2pD,EAAanqB,cAAcC,kBAAkBG,UAC1Dje,WAAW,IAEZ+nC,EAAY59C,KAAK,CAChBvO,IAAK,SACLmN,MAAOi/C,EAAanqB,cAAcE,kBAAkBlB,SACpDx+B,YAAa2pD,EAAanqB,cAAcE,kBAAkBE,YAEvD+pB,EAAanqB,cAAcM,wBAC9B,IAAK,IAAI1tB,EAAI,EAAGA,EAAIu3C,EAAanqB,cAAcM,uBAAuBtmC,OAAQ4Y,IAC7EqP,EAAS3V,KAAK69C,EAAanqB,cAAcM,uBAAuB1tB,GAAGtM,IACnE2jD,EAAa39C,KAAK,CAAEvO,IAAKosD,EAAanqB,cAAcM,uBAAuB1tB,GAAGtM,GAAI4E,MAAOi/C,EAAanqB,cAAcM,uBAAuB1tB,GAAGosB,WAMjJ,IAAIqrB,EAAY,GACZC,EAAkB,GACtB,GAAIF,GAAiBA,EAAcpD,mBAClC,IAAK,IAAIjtD,EAAQ,EAAGA,EAAQqwD,EAAcpD,mBAAmBhtD,OAAQD,IAAS,CAC7E,IAAMqrC,EAAQglB,EAAcpD,mBAAmBjtD,GACzCwwD,EAAe,KAChBvsD,KAAK8D,MAAMsmD,iBAAyD,IAAtCpqD,KAAK8D,MAAMsmD,gBAAgBpuD,QACzDorC,EAAM9+B,GAAGoQ,cAAc/I,QAAQ3P,KAAK8D,MAAMsmD,gBAAgB1xC,gBAAkB,KAChF6zC,EAAaj+C,KAAK,CAAEouC,OAAQ,YAAaj6C,QAASzC,KAAKwsD,oBAAoBplB,EAAM9+B,IAAKnM,MAAOirC,EAAM9+B,KAC/F8+B,EAAM0kB,2BACT9rD,KAAKysD,8BAA8BrlB,EAAOmlB,GAE3CF,EAAU/9C,KAAK,CAAE+mB,QAASk3B,EAAchvB,OAAQxhC,IAC5CA,IAAUiE,KAAK8D,MAAMwkD,gBACxBgE,EAAkBtsD,KAAK0sD,mBAAmBtlB,EAAOklB,KAOrD,IAAIK,EAAgB3sD,KAAK8D,MAAMwkD,cACO,OAAlCtoD,KAAK8D,MAAM2kD,qBAEdkE,GADAN,EAAYrsD,KAAK4pD,cAAcyC,EAAWrsD,KAAK8D,MAAM2kD,qBAC3BmE,WAAU,SAACjkD,GAAG,OAAKA,EAAI40B,SAAWz1B,EAAKhE,MAAMwkD,kBAIxE,IAAIuE,EAAgB7sD,KAAK8D,MAAMykD,cACQ,OAAnCvoD,KAAK8D,MAAM4kD,sBAEdmE,GADAP,EAAkBtsD,KAAK4pD,cAAc0C,EAAiBtsD,KAAK8D,MAAM4kD,sBACjCkE,WAAU,SAACjkD,GAAG,OAAKA,EAAI40B,SAAWz1B,EAAKhE,MAAMykD,kBAG9E,IAAMuE,EAAmB/4C,EAAc/T,KAAKw0C,UAAWtlC,GAAa69C,+BAC9DC,EAAmBj5C,EAAc/T,KAAKw0C,UAAWtlC,GAAa+9C,+BAC9DC,EAAmBtvC,GAAI5d,KAAK2gB,UAAWzR,GAAai+C,oCACzDp5C,EAAc/T,KAAKw0C,UAAWtlC,GAAai+C,sCACtCC,EAAmBxvC,GAAI5d,KAAK2gB,UAAWzR,GAAam+C,oCACzDt5C,EAAc/T,KAAKw0C,UAAWtlC,GAAam+C,sCAE5C,OACCxsD,EAAAC,qBAAKG,UAAU,+CACb6nD,EACDjoD,EAAAC,qBAAKG,UAAU,oCACdJ,EAAAC,cAACq/C,IACA9qB,QAAS42B,EACTz0C,KAAM60C,EACNpoC,SAAUA,EACVC,WAAY,CAAC,aACbi3B,SAAUn7C,KAAKmpD,cACfhkC,KAAMmoC,GACNpN,WAAY4M,EACZvkC,aAAc+0B,GAAcK,OAC5B3C,oBAAqBh7C,KAAKspD,kBAC1BlvB,aAAc,CAACuyB,GACfY,iBAAkBvtD,KAAKupD,qBACvBnO,OAAQp7C,KAAKwtD,cAAc3mD,KAAK7G,KAAM,cACtCmI,MAAOnI,KAAKC,MAAM+D,WAAW+N,WAC7BwuC,sBAAuB2M,KAGzBrsD,EAAAC,qBAAKG,UAAU,oCACdJ,EAAAC,cAACq/C,IACA9qB,QAAS62B,EACT10C,KAAM80C,EACNroC,SAAU,CAAC,UACXC,WAAY,CAAC,UACbi3B,SAAUn7C,KAAKopD,cACfjkC,KAAMmoC,GACNpN,WAAY8M,EACZzkC,aAAc+0B,GAAcK,OAC5B3C,oBAAqBh7C,KAAK0pD,kBAC1BtvB,aAAc,CAACyyB,GACfU,iBAAkBvtD,KAAK2pD,qBACvBvO,OAAQp7C,KAAKwtD,cAAc3mD,KAAK7G,KAAM,eACtCmI,MAAOnI,KAAKC,MAAM+D,WAAW+N,WAC7BwuC,sBAAuB6M,SAM3BrtD,yBAAA5D,MAED,SAAmBirC,EAAOklB,GACzB,IAAMmB,EAAW15C,EAAc/T,KAAKw0C,UACnCtlC,GAAaw+C,sBACRC,EAAW55C,EAAc/T,KAAKw0C,UACnCtlC,GAAa0+C,sBACd,GAAIxmB,EAAM53B,OACT,IAAK,IAAIlC,EAAM,EAAGA,EAAM85B,EAAM53B,OAAOxT,OAAQsR,IAC5CtN,KAAK6tD,aAAazmB,EAAM53B,OAAOlC,GAAKnR,MAAOmR,EAAKg/C,QAEvCllB,EAAMha,QACZga,EAAMha,MAAMqW,KACfzjC,KAAK6tD,aAAaJ,EAAW,KAAOrmB,EAAMha,MAAMqW,IAAItnC,MAAO,EAAGmwD,GAE3DllB,EAAMha,MAAMgqB,KACfp3C,KAAK6tD,aAAaF,EAAW,KAAOvmB,EAAMha,MAAMgqB,IAAIj7C,MAAO,EAAGmwD,IAGhE,OAAOA,KACPvsD,mBAAA5D,MAED,SAAasG,EAAS1G,EAAOuwD,GAC5B,IAAKtsD,KAAK8D,MAAMymD,iBAAyD,IAAtCvqD,KAAK8D,MAAMymD,gBAAgBvuD,QAC1D+4B,OAAOtyB,GAASiW,cACf/I,QAAQ3P,KAAK8D,MAAMymD,gBAAgB7xC,gBAAkB,EAAI,CAC7D,IAAMo1C,EAAe,CAAC,CAAEpR,OAAQ,SAAUj6C,QAASzC,KAAKwsD,oBAAoB/pD,GAAUtG,MAAOsG,IAC7F6pD,EAAgBh+C,KAAK,CAAE+mB,QAASy4B,EAAcvwB,OAAQxhC,QAEvDgE,4BAAA5D,MAED,WACC,GAAI6D,KAAKC,MAAMshC,aAAc,CAC5B,IAAMwsB,EAAahwD,OAAO0F,KAAKzD,KAAKC,MAAMshC,cACpCysB,EAAiBhuD,KAAKiuD,sBAAsBF,GAC5CG,EAAiBluD,KAAKmuD,oBAAoBJ,GAChD,OACCltD,EAAAC,qBAAKG,UAAU,kDACb+sD,EACAE,GAIJ,OAAQrtD,EAAAC,0BAAM,2EAEdf,oCAAA5D,MAED,SAA8BirC,EAAOmlB,GACpC,IAAK,IAAI33C,EAAI,EAAGA,EAAIwyB,EAAM0kB,0BAA0B9vD,OAAQ4Y,IAC3D23C,EAAaj+C,KAAK,CAAEouC,OAAQtV,EAAM0kB,0BAA0Bl3C,GAAGtM,GAC9D7F,QAASzC,KAAKwsD,oBAAoBplB,EAAM0kB,0BAA0Bl3C,GAAGzY,OAAQA,MAAOirC,EAAM0kB,0BAA0Bl3C,GAAGzY,WAEzH4D,4BAAA5D,MAED,SAAsB4xD,GAAY,IAAAvvC,OAC7B4vC,EAAQL,EAAWpuC,KAAI,SAACosC,EAAKhwD,GAAK,MAAM,CAAEI,MAAO4vD,EAAK7+C,MAAOsR,EAAKve,MAAMshC,aAAawqB,GAAK/qB,aAExFqtB,EAAQD,EAAMr4B,MAAM,EAAG,GACvB54B,EAAOixD,EAAMr4B,MAAM,GACzBq4B,EAAQC,EAAM5lD,OAAO,CAAEtM,MAAO6D,KAAK+nD,aAAc76C,MAAOlN,KAAK+nD,cAAgB5qD,GAC7E,IAAM+P,EAASlN,KAAK8D,MAAM8kD,mBAAqB5oD,KAAK+nD,aAAgB/nD,KAAK+nD,aAAe/nD,KAAKC,MAAMshC,aAAavhC,KAAK8D,MAAM8kD,kBAAkB5nB,SACvIvY,EAAS1U,EAAc/T,KAAKw0C,UACjCtlC,GAAao/C,qBACRC,EAAgC,CACrC,aAAcx6C,EAAc/T,KAAKw0C,UAAWtlC,GAAas/C,4BACzD,YAAaz6C,EAAc/T,KAAKw0C,UAAWtlC,GAAau/C,4BAEzD,OACC5tD,EAAAC,qBAAKG,UAAU,yCACdJ,EAAAC,cAAC4tD,IACApmD,GAAI,kDAAoDE,KACxDL,MAAOnI,KAAKC,MAAM+D,WAAW+N,WAC7B7E,MAAOA,EACPkhD,MAAOA,EACPnZ,SAAUj1C,KAAKipD,oBACf0F,gBAAiB,SAACrmD,GAAE,OAAKimD,EAA8BjmD,IACvDsmD,UAAWnmC,QAGd1oB,yBAAA5D,MAED,WAEC,IADA,IAAMiyD,EAAQ,GACLx5C,EAAI,EAAGA,EAAI5U,KAAKmf,OAAO0iB,iBAAiB7lC,OAAQ4Y,IACxDw5C,EAAM9/C,KAAK,CAAEnS,MAAO6D,KAAKmf,OAAO0iB,iBAAiBjtB,GAAGtM,GAAI4E,MAAOlN,KAAKmf,OAAO0iB,iBAAiBjtB,GAAGosB,WAEhG,IAAMqtB,EAAQD,EAAMr4B,MAAM,EAAG,GACvB54B,EAAOixD,EAAMr4B,MAAM,GACnB84B,EAAWR,EAAM5lD,OAAO,CAAEtM,MAAO6D,KAAK+nD,aAAc76C,MAAOlN,KAAK+nD,cAAgB5qD,GAChF+P,EAASlN,KAAK8D,MAAMglD,gBAAkB9oD,KAAK+nD,aAAgB/nD,KAAK+nD,aAAeqG,EAAM,GAAGlhD,MACxFub,EAAS1U,EAAc/T,KAAKw0C,UACjCtlC,GAAao/C,qBACRC,EAAgC,CACrC,aAAcx6C,EAAc/T,KAAKw0C,UAAWtlC,GAAas/C,4BACzD,YAAaz6C,EAAc/T,KAAKw0C,UAAWtlC,GAAau/C,4BAEzD,OACC5tD,EAAAC,qBAAKG,UAAU,sCACdJ,EAAAC,cAAC4tD,IACApmD,GAAI,+CAAiDE,KACrDL,MAAOnI,KAAKC,MAAM+D,WAAW+N,WAC7B7E,MAAOA,EACPkhD,MAAOS,EACP5Z,SAAUj1C,KAAKkpD,iBACfyF,gBAAiB,SAACrmD,GAAE,OAAKimD,EAA8BjmD,IACvDsmD,UAAWnmC,QAGd1oB,0BAAA5D,MAGD,SAAoB4xD,GAAY,IAAAe,OACzB9O,EAAU,GACV+O,EAAiBh7C,EAAc/T,KAAKw0C,UACzCtlC,GAAa8/C,4BACRC,EAAel7C,EAAc/T,KAAKw0C,UACvCtlC,GAAaggD,0BAGdlP,EAAQ1xC,KAAK,CAAEvO,IAAK,WAAYmN,MAAO6hD,EAAgBxgD,MAAO,GAAI4V,WAAW,IAC7E67B,EAAQ1xC,KAAK,CAAEvO,IAAK,SAAUmN,MAAO+hD,EAAc1gD,MAAO,KAC1D,IAAM6kC,EAAQpzC,KAAKmvD,oBAAoBnvD,KAAK8D,MAAM8kD,kBAE9CpxC,EAAO47B,EAAMjuB,KACbiqC,EAAmBpvD,KAAK8D,MAAM0kD,iBACO,OAArCxoD,KAAK8D,MAAM6kD,wBAEdyG,GADA53C,EAAOxX,KAAK4pD,cAAcpyC,EAAMxX,KAAK8D,MAAM6kD,wBACnBiE,WAAU,SAACjkD,GAAG,OAAKA,EAAI40B,SAAWuxB,EAAKhrD,MAAM0kD,qBAEtE,IAAM6G,EAAsBt7C,EAAc/T,KAAKw0C,UAAWtlC,GAAaogD,kCACjEC,EAAsB3xC,GAAI5d,KAAK2gB,UAAWzR,GAAasgD,wBAC5Dz7C,EAAc/T,KAAKw0C,UAAWtlC,GAAasgD,0BAE5C,OACC3uD,EAAAC,qBAAKG,UAAU,wCACdJ,EAAAC,qBAAKG,UAAU,8BACdJ,EAAAC,cAACq/C,IACA9qB,QAAS2qB,EACTxoC,KAAMA,EACNyM,SAAU,CAAC,WAAY,UACvBC,WAAY,CAAC,YACbi3B,SAAUn7C,KAAKqpD,iBACflkC,KAAMmoC,GACNpN,WAAYmP,EACZ9mC,aAAc+0B,GAAcK,OAC5B3C,oBAAqBh7C,KAAKwpD,qBAC1BpvB,aAAc,CAACg1B,GACf7B,iBAAkBvtD,KAAKypD,wBACvBrO,OAAQp7C,KAAKwtD,cAAc3mD,KAAK7G,KAAM,iBACtCmI,MAAOnI,KAAKC,MAAM+D,WAAW+N,WAC7BwuC,sBAAuBgP,KAGzB1uD,EAAAC,qBAAKG,UAAU,mCACbmyC,EAAMqc,mBAIV1vD,0BAAA5D,MAED,SAAoBmlC,GACnB,IAAM8R,EAAQ,CAAEjuB,KAAM,GAAIsqC,cAAgB5uD,EAAAC,2BACpC4uD,EAAqBpuB,IAAathC,KAAK+nD,aAAgB/nD,KAAKC,MAAM+D,WAAWwmD,4BAA8BxqD,KAAKC,MAAMshC,aAAaD,GAAUC,aACnJ,GAAImuB,EACH,IAAK,IAAI3zD,EAAQ,EAAGA,EAAQ2zD,EAAkB1zD,OAAQD,IAAS,CAC9D,IAAM4zD,EAAcD,EAAkB3zD,GAChCs5B,EAAU,GAChB,IAAKr1B,KAAK8D,MAAM4mD,oBAA+D,IAAzC1qD,KAAK8D,MAAM4mD,mBAAmB1uD,QAClE2zD,EAAY3uB,SAAStoB,cAAc/I,QAAQ3P,KAAK8D,MAAM4mD,mBAAmBhyC,gBAAkB,EAAI,CAChG,IAAMk3C,EAAaD,EAAYxuB,cAAgBwuB,EAAYxuB,cAAgBwuB,EAAYE,YACvFx6B,EAAQ/mB,KAAK,CAAEouC,OAAQ,WAAYj6C,QAASzC,KAAKwsD,oBAAoBmD,EAAY3uB,UAAW7kC,MAAOwzD,EAAY3uB,WAC/G3L,EAAQ/mB,KAAK,CAAEouC,OAAQ,SAAUj6C,QAASzC,KAAKwsD,oBAAoBoD,GAAazzD,MAAOyzD,IACvFxc,EAAMjuB,KAAK7W,KAAK,CAAE+mB,QAASA,EAASkI,OAAQxhC,IACxCA,IAAUiE,KAAK8D,MAAM0kD,mBACxBpV,EAAMqc,cACL5uD,EAAAC,qBAAKG,UAAU,iCACdJ,EAAAC,sBAAMG,UAAU,oCAAoC0uD,EAAY3uB,SAAS,KACzEngC,EAAAC,yBACAD,EAAAC,yBACAD,EAAAC,0BAAO6uD,EAAYxlC,SAOzB,OAAOipB,KACPrzC,aAAA5D,MAED,WACC,IAAM2zD,EAAqB9vD,KAAK+vD,6BAC1B7B,EAAiBluD,KAAKgwD,wBACtBC,EAAYl8C,EAAc/T,KAAKw0C,UACpCtlC,GAAaghD,sBACRC,EAAep8C,EAAc/T,KAAKw0C,UACvCtlC,GAAakhD,0BACV3tD,EAAU,KASd,OAPiC,IAA7BzC,KAAK8D,MAAM+kD,cACdpmD,EAAUqtD,EAC6B,IAA7B9vD,KAAK8D,MAAM+kD,gBACrBpmD,EAAUyrD,GAKVrtD,EAAAC,qBAAKG,UAAU,mDACdJ,EAAAC,qBAAKG,UAAU,oDACdJ,EAAAC,cAACuvD,IAAgBpb,SAAUj1C,KAAKswD,SAASzpD,KAAK7G,MAAO6oD,cAAe7oD,KAAK8D,MAAM+kD,eAC9EhoD,EAAAC,cAACyvD,IACAxwD,IAAK,EACLuG,KAAM,+BACNrF,UAAW,+BACXkI,KAAM8mD,IAEPpvD,EAAAC,cAACyvD,IACAxwD,IAAK,EACLuG,KAAM,iCACNrF,UAAW,iCACXkI,KAAMgnD,MAIR1tD,OAGHilD,CAAA,EAvqB2D7mD,EAAMrB,mbCN/B,IAGfgxD,YAAwBtqD,GAAA3G,EAAAixD,EAAAtqD,GAAA,IAAAzG,EAAAC,GAAA8wD,GAAA,SAAAA,IAAA,OAAA7wD,OAAA6wD,GAAA/wD,EAAAG,WAAAC,WAyD3C,OAzD2CC,EAAA0wD,IAAAzwD,sBAAA5D,MAE5C,SAAgBA,EAAO4O,GAClB/K,KAAKC,MAAMg1C,UACdj1C,KAAKC,MAAMg1C,SAAS94C,MAErB4D,2BAAA5D,MAED,WAAuB,IAAAsK,OACtB,GAAIzG,KAAKC,MAAMwwD,aAAc,CAC5B,IAAMC,EAAkB,GAgCxB,OA/BA1wD,KAAKC,MAAMwwD,aAAa9mD,SAAQ,SAACgnD,EAAU50D,GAC1C,IAAM+b,EAAYtP,KAAU,+BACtBqN,EACLhV,EAAAC,qBAAKG,UAAU,uBACb0vD,EAASxmC,MAGZumC,EAAgBpiD,KACfzN,EAAAC,qBAAKG,UAAU,wCAAwClB,IAAK,uBAAyBhE,GACpF8E,EAAAC,cAAC4N,IACApG,GAAIwP,EACJnJ,IAAKkH,EACLG,UAAU,SACV/U,UAAU,uBAEVJ,EAAAC,cAACyQ,IACAtQ,UAAWC,GAAW,6BAA8B,CAAEmtD,MAAUtyD,EAAQ,GAAM,EAC7E60D,SAAY70D,EAAQ,GAAM,KAC3BiG,KAAK,QACLyP,KAAK,WACLD,QAAS/K,EAAKoqD,gBAAgBhqD,KAAKJ,EAAMkqD,EAASx0D,QAElD0E,EAAAC,qBAAKG,UAAU,oCACb0vD,EAAS3vB,iBASfngC,EAAAC,qBAAKG,UAAU,iCACbyvD,GAIJ,OAAQ7vD,EAAAC,6BACRf,aAAA5D,MACD,WACC,IAAM20D,EAAc9wD,KAAK+wD,uBACzB,OACClwD,EAAAC,qBAAKG,UAAU,4CACb6vD,OAGHN,CAAA,EAzDoD3vD,EAAMrB,mbCLY,IAEnDwxD,YAAwB9qD,GAAA3G,EAAAyxD,EAAA9qD,GAAA,IAAAzG,EAAAC,GAAAsxD,GAAA,SAAAA,IAAA,OAAArxD,OAAAqxD,GAAAvxD,EAAAG,WAAAC,WAwB3C,OAxB2CC,EAAAkxD,IAAAjxD,aAAA5D,MAC5C,WACC,IAAM80D,EACLpwD,EAAAC,cAAC4mD,IACA1jD,WAAahE,KAAKC,MAAM+D,WACxBixC,SAAUj1C,KAAKC,MAAMg1C,SACrB1T,aAAcvhC,KAAKC,MAAMshC,aACzB9c,SAAUzkB,KAAKC,MAAMwkB,WAGjBkd,EACL9gC,EAAAC,cAAC0vD,IACAxsD,WAAahE,KAAKC,MAAM+D,WACxBixC,SAAUj1C,KAAKC,MAAMg1C,SACrBwb,aAAczwD,KAAKC,MAAMwwD,eAI3B,OACC5vD,EAAAC,qBAAKG,UAAU,6CACb0gC,EACAsvB,OAGHD,CAAA,EAxBoDnwD,EAAMrB,mbCDG,IAG1C0xD,YAAiBhrD,GAAA3G,EAAA2xD,EAAAhrD,GAAA,IAAAzG,EAAAC,GAAAwxD,GACrC,SAAAA,EAAYjxD,GAAO,IAAAwG,EAQQ,OARR9G,OAAAuxD,IAClBzqD,EAAAhH,EAAArB,UAAM6B,IACD89B,UAAY,GACjBt3B,EAAKg6B,eAAiBxgC,EAAM+D,WAAWqkD,oBACvC5hD,EAAK0qD,eAAiB1qD,EAAK0qD,eAAetqD,KAAIC,EAAAL,IAC9CA,EAAKwuC,SAAWxuC,EAAKwuC,SAASpuC,KAAIC,EAAAL,IAClCA,EAAK2qD,OAAS3qD,EAAK2qD,OAAOvqD,KAAIC,EAAAL,IAC9BA,EAAK4qD,kBAAoB5qD,EAAK4qD,kBAAkBxqD,KAAIC,EAAAL,IACpDA,EAAK6qD,cAAgB,KAAK7qD,EAgH1B,OA9GA3G,EAAAoxD,IAAAnxD,eAAA5D,MAED,SAAS22C,GACR,IAAM32C,EAA6B,iBAAb22C,EAAyBA,EAAWA,EAAS70C,WAC/DszD,EAASvxD,KAAKwxD,OAAOC,YACrBC,EAAkB,EACtB,GAAI1xD,KAAKwxD,OAAOG,oBACfD,EAAkB,EAClB1xD,KAAKwxD,OAAOI,iBAAiBz1D,OACvB,CACN,IAAI01D,EAAS,IACT7xD,KAAKsxD,gBACRtxD,KAAKwxD,OAAOM,UAAU9xD,KAAKsxD,eAC3BC,EAASvxD,KAAKsxD,eAGf,IAAMS,EAAa/xD,KAAKwxD,OAAOQ,QAAQT,EAAOU,MAAMV,EAAOW,GAAK,IAEnB,IAAzC,CAAC,IAAK,IAAK,KAAKviD,QAAQoiD,KAC3BF,EAAS,IAEV7xD,KAAKwxD,OAAOI,iBAAiBC,EAAS11D,GAEvC6D,KAAKmyD,cAAch2D,EAAOo1D,EAAQG,GAElC,IAAMU,EAAYpyD,KAAKwxD,OAAOa,WAC9BryD,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY+pD,GAAW,GAC5EpyD,KAAKsxD,cAAgBtxD,KAAKwxD,OAAOC,eACjC1xD,wBAAA5D,MAED,SAAkB4hC,GACjB/9B,KAAK+9B,UAAYA,KACjBh+B,aAAA5D,MAED,SAAOq1D,EAAQzmD,GACd/K,KAAKsxD,cAAgBE,EAAOC,YAC5B,IAAM/K,EAAe1mD,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YACjEyqC,EAAW9yC,KAAKwxD,OAAOa,WACvBC,EAAetyD,KAAKuyD,0BAA4BxnD,GAAO/K,KAAKuyD,yBAAyBC,SAASznD,EAAI0nD,eAEnG91B,EAAQ+pB,EAAc5T,IAAcwf,GACxCtyD,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYyqC,EAAUwf,MAE5EvyD,qBAAA5D,MAED,SAAeq1D,EAAQ/6B,GACtBz2B,KAAKwxD,OAASA,KACdzxD,oBAAA5D,MAGD,SAAcA,EAAOo1D,EAAQG,GAE5B,GAAqB,iBAAVv1D,EAAoB,CAC9B,IAAMu2D,EAAav2D,EAAMwT,QAAQ,KACjC,IAAoB,IAAhB+iD,EAAmB,CACtB,IAAM30B,EAAY,CAAEigB,OAAQ,CAAEiU,KAAMV,EAAOU,KAAMC,GAAIX,EAAOW,GAAKQ,EAAahB,EAAkB,GAC/FiB,KAAM,CAAEV,KAAMV,EAAOU,KAAMC,GAAIX,EAAOW,GAAKQ,EAAahB,IAEzD,YADA1xD,KAAKqxD,kBAAkB,CAACtzB,KAO1B,IADA,IAAM60B,EAAY5yD,KAAKwxD,OAAOoB,YACrB72D,EAAQ,EAAGA,EAAQ62D,EAAW72D,IAAS,CAC/C,IACM82D,EADO7yD,KAAKwxD,OAAOQ,QAAQj2D,GACR4T,QAAQ,KACjC,IAAqB,IAAjBkjD,EAAoB,CACvB,IAAM90B,EAAY,CAAEigB,OAAQ,CAAEiU,KAAMl2D,EAAOm2D,GAAIW,EAAc,GAC5DF,KAAM,CAAEV,KAAMl2D,EAAOm2D,GAAIW,IAE1B,YADA7yD,KAAKqxD,kBAAkB,CAACtzB,KAK1B,IAAM+0B,EAAkB,CAAE9U,OAAQ,CAAEiU,KAAMV,EAAOU,KAAMC,GAAIX,EAAOW,GAAK/1D,EAAMH,OAAS01D,GACrFiB,KAAM,CAAEV,KAAMV,EAAOU,KAAMC,GAAIX,EAAOW,GAAK/1D,EAAMH,OAAS01D,IAC3D1xD,KAAKqxD,kBAAkB,CAACyB,OAExB/yD,aAAA5D,MAED,WAAS,IAAA2L,OACFirD,EAAkBh/C,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAC3DC,GAAa8jD,0BAEd,OACCnyD,EAAAC,qBAAKG,UAAU,iCACdJ,EAAAC,cAACmyD,IACAnqD,QAAS9I,KAAKC,MAAM6I,QACpBT,WAAYrI,KAAKC,MAAMoI,WACvBrE,WAAYhE,KAAKC,MAAM+D,WACvBkvD,SAAS,EACT/B,eAAgBnxD,KAAKmxD,eACrBgC,eAAgBnzD,KAAK+9B,UACrBszB,kBAAmBrxD,KAAKqxD,kBACxBD,OAAQpxD,KAAKoxD,OACbzqD,OAAQ,GACRosD,gBAAiBA,IAElBlyD,EAAAC,qBAAKoH,IAAM,SAACA,GAAG,OAAMJ,EAAKyqD,yBAA2BrqD,IACpDrH,EAAAC,cAACkwD,IACAhtD,WAAYhE,KAAKC,MAAM+D,WACvBixC,SAAUj1C,KAAKi1C,SACf1T,aAAcvhC,KAAKygC,eAAeY,mBAClCovB,aAAczwD,KAAKygC,eAAekB,UAClCld,SAAUzkB,KAAKC,MAAM6I,QAAQ2b,iBAKjCysC,CAAA,EAzH6CrwD,EAAMrB,mbCDO,ICPxD4zD,MDwDWC,YA/COntD,GAAA3G,EAAA+zD,EAAAptD,GAAA,IAAAzG,EAAAC,GAAA4zD,GACrB,SAAAA,EAAYrzD,GAAO,IAAAwG,EAG+B,OAH/B9G,OAAA2zD,IAClB7sD,EAAAhH,EAAArB,UAAM6B,IACDq5C,cAAgBr5C,EAAM+D,WAAW+R,cAAcujC,eAAkB,WAAA,OAAM,MAC5E7yC,EAAK+tC,UAAYv0C,EAAM+D,WAAWiL,eAAexI,EAoCjD,OAnCA3G,EAAAwzD,IAAAvzD,aAAA5D,MACD,WAAS,IAAA2L,OACR,OACCjH,EAAAC,qBAAKG,UAAU,gCACdJ,EAAAC,qBAAKG,UAAU,yCACbjB,KAAKC,MAAMykB,eAAkB7jB,EAAAC,cAACyQ,IAC9BtQ,UAAU,WACV6E,KAAK,SACL9D,KAAK,QACLyP,KAAK,QACLC,WAAY6hD,GACZ7b,eACA7B,gBAAiB9hC,EAAc/T,KAAKw0C,UAAWtlC,GAAaskD,2BAC5DhiD,QAAS,YACc1J,EAAKwxC,cAAc,CACxCxzC,KAAM,qBACNuC,WAAYP,EAAK7H,MAAM6I,QAAQ0O,MAAQ,MAElB1P,EAAK7H,MAAM6I,QAAQ0O,MAAQ1P,EAAK7H,MAAM6I,QAAQ0O,KAAKi8C,eACxE3rD,EAAK7H,MAAM+D,WAAW0vD,mBAAmB5rD,EAAK7H,MAAM6I,QAAQ0O,KAAKi8C,kBAG7D5yD,EAAAC,cAACyQ,IACPzL,KAAK,SACL7E,UAAU,WACVe,KAAK,QACLyP,KAAK,QACLimC,eACAhmC,WAAYiiD,GACZ9d,gBAAiB9hC,EAAc/T,KAAKw0C,UAAWtlC,GAAa0kD,2BAC5DpiD,QAAS,WAAA,OAAM1J,EAAK7H,MAAM+D,WAAW2a,gCAKzC20C,CAAA,EAxC6BzyD,EAAMrB,YCFrC,SAASmK,GAAQgtB,EAAKrnB,GACrB,IAAK,IAAID,EAAIsnB,EAAI36B,OAAQ4Y,EAAI,EAAGA,EAAIvF,IAAKuF,EACxCtF,EAAEqnB,EAAI/hB,GAER,CAeA,SAASi/C,GAAWrC,EAAQsC,EAAWC,GACtC,IAGIC,EAHAC,EAAMzC,EAAOC,YACbyC,EAAQH,EAASvC,EAAQyC,GACzBE,EAAQD,EAGN,YAAaj+B,KAAKi+B,EAAM3M,UAC7B2M,EAAQC,EAAQ,CAAEn3D,MAAOi3D,EAAI/B,GAAIj1D,IAAKg3D,EAAI/B,GAAI3K,OAAQ,GAAIzjD,MAAOowD,EAAMpwD,MACtE7C,UAA4B,MAAjBizD,EAAM3M,OAAiB,cAAgB,OAE/CyM,IACJA,EAAU,IAEXA,EAAQ1lD,KAAK6lD,GAEb,IAAIC,EA8BL,SAAwBF,EAAOF,GAC9B,IAAIK,EAAQ,GACRr3D,EAAQk3D,EAAM3M,OAClB,SAAS+M,EAASC,GACiB,IAA9BA,EAAIC,YAAYx3D,EAAO,IA9D7B,SAAuB25B,EAAKviB,GAC3B,IAAKlX,MAAMW,UAAU8R,QAAS,CAE7B,IADA,IAAIiF,EAAI+hB,EAAI36B,OACL4Y,KACN,GAAI+hB,EAAI/hB,KAAOR,EACd,OAAO,EAGT,OAAO,EAER,OAA8B,IAAvBuiB,EAAIhnB,QAAQyE,EACpB,CAmD0CqgD,CAAcJ,EAAOE,IAC5DF,EAAM/lD,KAAKimD,GAIb,SAASG,EAAkBC,GAC1BhrD,GAAQirD,GAAiBN,GACzB3qD,GAAQkrD,GAAiBP,GAG1B,GAAIN,EAAS,CACZ,IAAIc,EAAMd,EAAQtvB,MACdqwB,EAAO,GAOX,IALiB,aAAbD,EAAIhvD,KACPivD,EAAOD,EAAIvN,OACY,eAAbuN,EAAIhvD,OACdivD,EAAO,IAAMD,EAAIvN,QAEF,OAATwN,GAAiBf,EAAQh4D,QAC/B+4D,EAAOA,EAAKf,EAAQtvB,MAAM6iB,QAEd,OAATwN,GACHL,IAGF,OAAOL,CACR,CA7DsBW,CAAed,EAAOF,GAG3C,OAFAI,EAAe9V,OAER,CAAE/0C,KAAM6qD,EACdp+B,KAAMo9B,GAAW6B,IAAIhB,EAAIhC,KAAMiC,EAAMl3D,OACrCk4D,GAAI9B,GAAW6B,IAAIhB,EAAIhC,KAAMiC,EAAMj3D,KACrC,CAEA,SAASk4D,GAAW3D,GACnB,OAAOqC,GAAWrC,EAAQqD,GAAiB,SAASxlD,EAAG4kD,GACtD,OAAO5kD,EAAE+lD,WAAWnB,KAEtB,CAGA,ICxDIb,GD0DAyB,GAFiB,qKAEgBxrD,MAAM,KAUvCurD,GARiB,mgBAQgBvrD,MAAM,KAAKS,KAAK,OACnDT,MAAM,KC/DR,SAASM,GAAQgtB,EAAKrnB,GACrB,IAAK,IAAID,EAAIsnB,EAAI36B,OAAQ4Y,EAAI,EAAGA,EAAIvF,IAAKuF,EACxCtF,EAAEqnB,EAAI/hB,GAER,CAeA,SAASi/C,GAAWrC,EAAQsC,EAAWC,GACtC,IAGIC,EAHAC,EAAMzC,EAAOC,YACbyC,EAAQH,EAASvC,EAAQyC,GACzBE,EAAQD,EAGN,YAAaj+B,KAAKi+B,EAAM3M,UAC7B2M,EAAQC,EAAQ,CAAEn3D,MAAOi3D,EAAI/B,GAAIj1D,IAAKg3D,EAAI/B,GAAI3K,OAAQ,GAAIzjD,MAAOowD,EAAMpwD,MACtE7C,UAA4B,MAAjBizD,EAAM3M,OAAiB,SAAW,OAE1CyM,IACJA,EAAU,IAEXA,EAAQ1lD,KAAK6lD,GAEb,IAAIC,EAgEL,SAAwBF,EAAOF,GAC9B,IAAIK,EAAQ,GACRr3D,EAAQk3D,EAAM3M,OAClB,SAAS+M,EAASC,GACiB,IAA9BA,EAAIC,YAAYx3D,EAAO,IAhG7B,SAAuB25B,EAAKviB,GAC3B,IAAKlX,MAAMW,UAAU8R,QAAS,CAE7B,IADA,IAAIiF,EAAI+hB,EAAI36B,OACL4Y,KACN,GAAI+hB,EAAI/hB,KAAOR,EACd,OAAO,EAGT,OAAO,EAER,OAA8B,IAAvBuiB,EAAIhnB,QAAQyE,EACpB,CAqF0CqgD,CAAcJ,EAAOE,IAC5DF,EAAM/lD,KAAKimD,GAIb,SAASG,EAAkBC,GAC1BhrD,GAAQ0rD,GAAYf,GACpB3qD,GAAQ2rD,GAAYhB,GAGrB,GAAIN,EAAS,CACZ,IAAIc,EAAMd,EAAQtvB,MACdqwB,EAAO,GAOX,IALiB,aAAbD,EAAIhvD,KACPivD,EAAOD,EAAIvN,OACY,eAAbuN,EAAIhvD,OACdivD,EAAO,IAAMD,EAAIvN,QAEF,OAATwN,GAAiBf,EAAQh4D,QAC/B+4D,EAAOA,EAAKf,EAAQtvB,MAAM6iB,QAEd,OAATwN,GACHL,IAGF,OAAOL,CACR,CA/FsBW,CAAed,EAAOF,GAG3C,OAFAI,EAAe9V,OAER,CAAE/0C,KAAM6qD,EACdp+B,KAAMo9B,GAAW6B,IAAIhB,EAAIhC,KAAMiC,EAAMl3D,OACrCk4D,GAAI9B,GAAW6B,IAAIhB,EAAIhC,KAAMiC,EAAMj3D,KACrC,CAEA,SAASs4D,GAAM/D,GACd,OAAOqC,GAAWrC,EAAQ8D,GAAY,SAASjmD,EAAG4kD,GACjD,OAAO5kD,EAAE+lD,WAAWnB,KAEtB,CAEA,ICpDIb,GDuDAkC,GAHY,6KAGWjsD,MAAM,KA6C7BgsD,GA3CY,0lKA2CWhsD,MAAM,KC5FjC,IAAMmsD,GAAe,2kEAwB6BnsD,MAAM,KAExD,SAASosD,GAASjE,EAAQ1rB,GACzB,OAOD,SAAoB0rB,EAAQkE,EAAU3B,EAAUjuB,GAE/C,IAAImuB,EAAMzC,EAAOC,YACbyC,EAAQH,EAASvC,EAAQyC,GAC7B,GAAK,yBAA0Bh+B,KAAKi+B,EAAMpuD,MACzC,OAAO,KAERouD,EAAMpwD,MAAQsvD,GAAWuC,UAAUnE,EAAOoE,UAAW1B,EAAMpwD,OAAOA,MAG3D,aAAcmyB,KAAKi+B,EAAM3M,QAGrB2M,EAAMj3D,IAAMg3D,EAAI/B,KAC1BgC,EAAMj3D,IAAMg3D,EAAI/B,GAChBgC,EAAM3M,OAAS2M,EAAM3M,OAAOxxB,MAAM,EAAGk+B,EAAI/B,GAAKgC,EAAMl3D,QAJpDk3D,EAAQ,CAAEl3D,MAAOi3D,EAAI/B,GAAIj1D,IAAKg3D,EAAI/B,GAAI3K,OAAQ,GAAIzjD,MAAOowD,EAAMpwD,MAC9DgC,KAAuB,MAAjBouD,EAAM3M,OAAiB,WAAa,MAM5C,MAAO,CAAEh+C,KAAMssD,GAAmB3B,EAAOwB,GACxC1/B,KAAMo9B,GAAW6B,IAAIhB,EAAIhC,KAAMiC,EAAMl3D,OACrCk4D,GAAI9B,GAAW6B,IAAIhB,EAAIhC,KAAMiC,EAAMj3D,KACrC,CA5BQ42D,CAAWrC,EAAQgE,IACzB,SAASnmD,EAAG4kD,GACX,OAAO5kD,EAAE+lD,WAAWnB,KAGvB,CAyBA,SAAS4B,GAAmB3B,EAAOwB,EAAU5vB,GAI5C,IAHA,IAAIuuB,EAAQ,GACRr3D,EAAQk3D,EAAM3M,OAETuO,EAAO,EAAGA,EAAOJ,EAAS15D,OAAQ85D,IACG,IAAzCJ,EAASI,GAAMtB,YAAYx3D,EAAO,KAAgD,IAAnCq3D,EAAM1kD,QAAQ+lD,EAASI,KACzEzB,EAAM/lD,KAAKonD,EAASI,IAItB,OAAOzB,CACR,CAGA,SAAS0B,KAER,IAAIL,EAAW,2kEAwBmCrsD,MAAM,KAEpD2sD,EAAgB,qBAChBC,EAAU,KACVC,EAAe,SACfC,EAAa,UAEbC,EAAiB,mBAErB,SAASC,EAAaC,EAAQxyD,GAC7B,IAAIouD,EAAKoE,EAAO7/B,OAChB,GAAW,MAAPy7B,GAAcpuD,EAAMyyD,YAEvB,OADAD,EAAOE,YACA,OAGR,GAAW,MAAPtE,EAEH,OA6BF,SAAqB/H,EAAOmM,EAAQxyD,GACnC,IAAI2yB,EACAx5B,GAAM,EACV,UAAyC,KAA1Bw5B,EAAO6/B,EAAO7/B,SAC5B,GAAIA,IAAS0zB,EAAO,CACnBltD,GAAM,EACN,MAGEA,IACH6G,EAAM2yD,SAAW,MAxCjBC,CAAYxE,EAAIoE,EAAQxyD,GACjB,SAGR,GAAW,MAAPouD,EAEH,OAuCF,SAAuB/H,EAAOmM,EAAQxyD,GACrC,IAAI2yB,EACAx5B,GAAM,EACV,UAAyC,KAA1Bw5B,EAAO6/B,EAAO7/B,SAC5B,GAAIA,IAAS0zB,EAAO,CACnBltD,GAAM,EACN,MAGEA,IACH6G,EAAM2yD,SAAW,MAlDjBE,CAAczE,EAAIoE,EAAQxyD,GACnB,WAGR,GAAIkyD,EAAc//B,KAAKi8B,GACtB,OAAO,KAGR,GAAI+D,EAAQhgC,KAAKi8B,GAEhB,OADAoE,EAAOM,SAASV,GACT,SAER,GAAIE,EAAengC,KAAKi8B,GAEvB,OADAoE,EAAOM,SAASR,GACT,WAGRE,EAAOM,SAAST,GAChB,IAAIlC,EAAMqC,EAAOO,UACjB,OAA+B,IAA3BnB,EAAS/lD,QAAQskD,GACb,UAED,WAmCR,MAAO,CACN6C,WAAY,WACX,MAAO,CAAEL,SAAU,OAGpBvC,MAAO,SAASoC,EAAQxyD,GACvB,OAAIwyD,EAAOS,WACH,MAEKjzD,EAAM2yD,UAAYJ,GAAcC,EAAQxyD,IAItDkzD,cAAe,KAEjB,i8CC/KA,IAAIC,GAAK,KACa,oBAAXlwD,aAAsD,IAArBA,OAAOmwD,YAClDD,GAAKE,QAAQ,cACbA,QAAQ,mCACRA,QAAQ,wCACRA,QAAQ,wCACRA,QAAQ,yCACRA,QAAQ,yCACRA,QAAQ,kCACRA,QAAQ,2BACRA,QAAQ,iCACRA,QAAQ,uBHpCT,SAAkBF,IACjB7D,GAAa6D,GACFG,eAAe,OAAQ,SAAUjC,GAC7C,CGkCCkC,CAAeJ,IFrChB,SAAkBA,IACjB7D,GAAa6D,GACFG,eAAe,OAAQ,IAAK7B,GACxC,CEmCC+B,CAAUL,IDpCX,SAAkBA,IACjB7D,GAAa6D,GACFG,eAAe,OAAQ,OAAQ3B,IAC1CrC,GAAW2C,WAAW,OAAQA,IAC9B3C,GAAWmE,WAAW,cAAe,OACtC,CCgCCC,CAAaP,KAId,IAMMhE,YAAiB/sD,GAAA3G,EAAA0zD,EAAA/sD,GAAA,IAAAzG,EAAAC,GAAAuzD,GACtB,SAAAA,EAAYhzD,GAAO,IAAAwG,EAmChB,OAnCgB9G,OAAAszD,IAClBxsD,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,CACZ2zD,uBAAuB,EACvBC,sBAAsB,GAGvBjxD,EAAKkxD,SAAW,GAChBlxD,EAAKg6B,eAAiBh6B,EAAKxG,MAAM+D,WAAWqkD,oBAC5C5hD,EAAKmxD,eAAiBnxD,EAAKmxD,eAAe/wD,KAAIC,EAAAL,IAC9CA,EAAKoxD,YAAcpxD,EAAKoxD,YAAYhxD,KAAIC,EAAAL,IACxCA,EAAKqxD,wBAA0BrxD,EAAKqxD,wBAAwBjxD,KAAIC,EAAAL,IAChEA,EAAKsxD,sBAAwBtxD,EAAKsxD,sBAAsBlxD,KAAIC,EAAAL,IAC5DA,EAAKgxD,sBAAwBhxD,EAAKgxD,sBAAsB5wD,KAAIC,EAAAL,IAC5DA,EAAK0qD,eAAiB1qD,EAAK0qD,eAAetqD,KAAIC,EAAAL,IAC9CA,EAAKuxD,WAAavxD,EAAKuxD,WAAWnxD,KAAIC,EAAAL,IACtCA,EAAKwxD,iBAAmBxxD,EAAKwxD,iBAAiBpxD,KAAIC,EAAAL,IAClDA,EAAKyxD,WAAazxD,EAAKyxD,WAAWrxD,KAAIC,EAAAL,IACtCA,EAAK0xD,cAAgB1xD,EAAK0xD,cAActxD,KAAIC,EAAAL,IAE5CA,EAAKyuC,aAAe,SAACsc,EAAQh6C,EAAMs7B,GAIlC,GAAI51C,MAAM2F,QAAQ2U,EAAKrO,OAA8B,IAArBqO,EAAKrO,KAAKnN,QAAwC,IAAxBwb,EAAKrO,KAAK,GAAGnN,QAAgByK,EAAKxG,MAAMoxD,kBAAmB,CAEpH,IAAM+G,EAAU5gD,EAAK6gD,QAAQ,GAAGr8D,OAAS,EAAK,CAAEi2D,KAAMz6C,EAAKwe,KAAKi8B,KAAMC,GAAI16C,EAAKwe,KAAKk8B,GAAK,GAAM,CAAED,KAAMz6C,EAAK09C,GAAGjD,KAAMC,GAAI16C,EAAK09C,GAAGhD,GAAK,GACtIzrD,EAAKxG,MAAMoxD,kBAAkB,CAAC,CAAErT,OAAQoa,EAAQzF,KAAMyF,KAEnD3xD,EAAK3C,MAAMw0D,eACd7xD,EAAKgB,SAAS,CACb6wD,aAAc,OAEf7xD,EAAKxG,MAAM+D,WAAWspC,mBAAmB7mC,EAAKxG,MAAMoI,WAAY4kC,MAEhExmC,EAmSF,OAhSD3G,EAAAmzD,IAAAlzD,yBAAA5D,MACA,SAAmBw2C,GAAW,IAAA7qC,OAE5B9H,KAAKC,MAAMkzD,gBACXnzD,KAAKC,MAAMkzD,eAAen3D,OAAS,IAClC2gC,EAAQgW,EAAUwgB,eAAgBnzD,KAAKC,MAAMkzD,iBAC9CnzD,KAAKwxD,SAELxxD,KAAKC,MAAMkzD,eAAexpD,SAAQ,SAAC4L,GAClCzN,EAAK0pD,OAAO+G,aAAahjD,EAASyoC,OAAQzoC,EAASo9C,SAEpD3yD,KAAKwxD,OAAOgH,YAIdz4D,2BAAA5D,MACA,WACK6D,KAAK23D,UAAYV,IACpBA,GAAGG,eAAe,OAAQp3D,KAAKC,MAAM6I,QAAQ2b,SAAUzkB,KAAK23D,aAI9D53D,uBAAA5D,MACA,WACC,IAE0BgQ,EAFpBssD,EAAU,GACgDrsD,EAAAC,GAAjDrM,KAAKC,MAAM+D,WAAWk7C,4BACX,IAA1B,IAAA9yC,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA4B,CAAA,IAAjB46B,EAAKj7B,EAAAhQ,MACfs8D,EAAQnqD,KAAK84B,EAAM9gC,aACnB8I,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,IACD,OAAOmpD,KAGR14D,iBAAA5D,MACA,SAAWq1D,EAAQ1rB,GAClB,IAAI2yB,EAAU,GACVxE,EAAMzC,EAAOC,YACbyC,EAAQ1C,EAAO4D,WAAWnB,GAC9B,GAAIj0D,KAAK23D,SAAU,CAElBc,EAAUz4D,KAAK23D,SAASnG,EAAQ1rB,GAKhC,IADA,IAAIjoB,EAAa7d,KAAKi4D,mBACbrjD,EAAI,EAAGA,EAAIiJ,EAAW7hB,SAAU4Y,EAAG,CAC3C,IAAM0S,EAAYzJ,EAAWjJ,IACkB,IAA3C0S,EAAUktC,YAAYN,EAAM3M,OAAQ,KAAiD,IAArCkR,EAAQlvD,KAAKoG,QAAQ2X,IAE7C,MAAjB4sC,EAAM3M,QAAiC,OAAf2M,EAAMpuD,OADxC2yD,EAAQlvD,KAAKuW,QAAQwH,IAMxB,OAAOmxC,KAIR14D,qBAAA5D,MACA,SAAeq1D,EAAQ/6B,GACtBz2B,KAAKwxD,OAASA,EAEd,IAAMkH,EAAgB14D,KAAK24D,oBAAuB34D,KAAK24D,oBAAoBC,YAAc,EACnFC,EAAeH,EAAe,EAAKA,EA3GzB,IAES,GA2GrB/xD,EAAU3G,KAAKC,MAAM6I,QAAQG,UAC9Bu6B,KAAKC,IAAKzjC,KAAKC,MAAM6I,QAAQG,UAAY4vD,EA7G5B,GAEI,KACA,IA4GpBlyD,EAAS3G,KAAKC,MAAM6I,QAAQqc,KA/GZ,GA+G+BnlB,KAAKC,MAAM6I,QAAQqc,KAAOxe,EACzEA,EAAS3G,KAAKC,MAAM0G,OAAS3G,KAAKC,MAAM0G,OAASA,EACjD3G,KAAKwxD,OAAOsH,QAAQ,KAAMt1B,KAAK4T,IAAI5T,KAAK6T,MAAM1wC,GA9G1B,MAgHpB3G,KAAK23D,SAAWnG,EAAOuH,UAAU,CAAE9G,KAAM,EAAGC,GAAI,GAAK,QAMrD,IAAIztC,EAAWzkB,KAAKC,MAAM6I,QAAQ2b,SAClC,OAAQzkB,KAAKC,MAAM6I,QAAQ2b,UAC3B,IAAK,cACJA,EAAW,MACX,MACD,IAAK,gBACJA,EAAW,SACX,MACD,IAAK,cACJA,EAAW,IAIRwyC,IACHA,GAAGG,eAAe,OAAQ3yC,EAAUzkB,KAAKg4D,YAGtCh4D,KAAKC,MAAMkxD,gBACdnxD,KAAKC,MAAMkxD,eAAeK,EAAQ/6B,MAEnC12B,4BAAA5D,MAED,WAEC6D,KAAKk6C,oBAAsBl6C,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YAC7ErI,KAAKg5D,eAAiBh5D,KAAKC,MAAM+D,WAAWwM,gBAAgBxQ,KAAKC,MAAMoI,YACvErI,KAAKi5D,aAAej5D,KAAKC,MAAM+D,WAAWqwC,gBAAgBr0C,KAAKC,MAAMoI,YACrErI,KAAKyH,SAAS,CAAEgwD,uBAAuB,OACvC13D,4BAAA5D,MACD,WACC6D,KAAKyH,SAAS,CAAEgwD,uBAAuB,OACvC13D,8BAAA5D,MACD,WAEC6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYrI,KAAKk6C,qBACtEl6C,KAAKC,MAAM+D,WAAWspC,mBAAmBttC,KAAKC,MAAMoI,WAAYrI,KAAKg5D,gBACrEh5D,KAAKC,MAAM+D,WAAWk1D,mBAAmBl5D,KAAKC,MAAMoI,WAAYrI,KAAKi5D,cACrEj5D,KAAK+3D,2BACLh4D,qBAAA5D,MAED,WAAiB,IAAAqiB,OAChBxe,KAAKyH,SAAS,CACb6wD,aAAc,KACdZ,sBAAsB,IAEvB,IAAMn/B,EAAUv4B,KAAKC,MAAM+D,WAAWuT,aACtCvX,KAAKC,MAAM+D,WAAW+R,cAAcojD,kBAAkBn5D,KAAKC,MAAM+D,WAAYhE,KAAKC,MAAMoI,WAAYrI,KAAKC,MAAM9D,MAAOo8B,GAAS,SAAC6gC,GAC/H56C,EAAKve,MAAM+D,WAAWspC,mBAAmB9uB,EAAKve,MAAMoI,WAAY+wD,GAChE56C,EAAK/W,SAAS,CACb6wD,aAAcc,EAAStzD,KACvB4xD,sBAAsB,IAEvBl5C,EAAKgzC,OAAO35C,QAAQwhD,MAAMC,aAE3Bv5D,kBAAA5D,MAED,WACC,MAAwE,mBAA1D6D,KAAKC,MAAM+D,WAAW+R,cAAcojD,qBAClDp5D,oBAAA5D,MAED,SAAcq1D,EAAQzmD,GAErB,GAAiB,UAAbA,EAAIwuD,MACHv5D,KAAKC,MAAMkzD,gBAAkBnzD,KAAKC,MAAMkzD,eAAen3D,OAAS,GAAKgE,KAAKC,MAAMoxD,kBAAmB,CACtG,IAAM+G,EAAS,CAAEnG,KAAMjyD,KAAKC,MAAMkzD,eAAe,GAAGnV,OAAOiU,KAAO,EAAGC,GAAI,GACzElyD,KAAKC,MAAMoxD,kBAAkB,CAAC,CAAErT,OAAQoa,EAAQzF,KAAMyF,SAGxDr4D,iBAAA5D,MAED,SAAWq1D,EAAQzmD,GAClB,GAAI/K,KAAKC,MAAMmxD,OAEdpxD,KAAKC,MAAMmxD,OAAOI,EAAQzmD,OACpB,CACN,IAAM+nC,EAAW9yC,KAAKwxD,OAAOa,WAEvBC,EAAevnD,GAAOA,EAAI0nD,eAAiB1nD,EAAI0nD,cAAc+G,UAAUhH,SAAS,gCACtFxyD,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYyqC,EAAUwf,OAE5EvyD,yBAAA5D,MAED,WAIC,OAAO6D,KAAKC,MAAMizD,SAAWlzD,KAAKC,MAAMsT,aAAevT,KAAKygC,eAAeY,oBAAsBtjC,OAAO0F,KAAKzD,KAAKygC,eAAeY,oBAAoBrlC,OAAS,KAC9J+D,aAAA5D,MAED,WAAS,IAAA2yD,OACJ5kD,EAAclK,KAAKC,MAAMiK,YACvBuvD,EAAevvD,EAAeA,EAAYpE,KAAO4K,GAAuBgpD,KAC1ED,IAAgB/oD,GAAuBipD,UAC1CzvD,EAAc,MAGf,IAAM0vD,EAAS55D,KAAKC,MAAM6D,QAAUqO,GAAOI,SAAY,WAAaknD,EAC9DjlB,EAAYx0C,KAAKC,MAAM+D,WAAWiL,eAElC+E,EAAShU,KAAK65D,qBACnBh5D,EAAAC,cAACyQ,IAAOE,KAAK,QAAQzP,KAAK,QACzBf,UAAU,+BACVqR,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCf,QAASxR,KAAKy3D,sBACd/lD,WAAYooD,GACZjkB,gBAAiB9hC,EAAcygC,EAAWtlC,GAAa6qD,qCACvDviB,gBAAgB,QAChBE,iBAEC,KAEC4gB,EAAe,KACft4D,KAAK8D,MAAMw0D,eACdA,EACCz3D,EAAAC,qBAAKG,UAAU,qBACdJ,EAAAC,cAACqQ,IAAKrL,KAAM9F,KAAK8D,MAAMw0D,aAAcr3D,wCAASwH,OAAgCzI,KAAK8D,MAAMw0D,kBAI5F,IAAM0B,EAAgBh6D,KAAK8D,MAAM4zD,qBAAuB3jD,EAAcygC,EAAWtlC,GAAa+qD,6BAC3FlmD,EAAcygC,EAAWtlC,GAAagrD,2BACnCC,EAAen6D,KAAK63D,eAAiB73D,KAAKC,MAAMk6D,aACrDt5D,EAAAC,qBAAKG,UAAU,iCAAiCqR,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,UACrF1R,EAAAC,cAACyQ,IAAOtQ,UAAU,eAAewQ,KAAK,QAAQD,QAASxR,KAAK43D,eAAgBtlD,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,UAAYvS,KAAK8D,MAAM4zD,sBACvIsC,GAED1B,GAEA,KACG8B,EAAgB,CACrBC,KAAMr6D,KAAKC,MAAM6I,QAAQ2b,SACzBuwB,YAAah1C,KAAKC,MAAM6I,QAAQmiB,eAChC2uC,MAAOA,EAAQ,UACf3lB,SAAWj0C,KAAKC,MAAM6D,QAAUqO,GAAOI,UAAY,WACnD+nD,UAAW,CAAE,aAAc,gBAC3BC,aAAa,EACbC,aAAa,GAER/4D,EAAasS,EAAcygC,EAAWtlC,GAAa0C,mBACnDjQ,EAAcoS,EAAcygC,EAAWtlC,GAAa2C,oBACpD4oD,EAAiB1mD,EAAcygC,EAAWtlC,GAAawrD,0BAEvD5oD,EAAS9R,KAAK8D,MAAM2zD,sBAAyB52D,EAAAC,cAAC0F,IACnDzE,cAAe/B,KAAK83D,wBACpBj2D,UAAW7B,KAAK+3D,sBAChB/vD,KAAMhI,KAAK8D,MAAM2zD,sBACjBh2D,WAAYA,EACZE,YAAaA,EACbJ,MAAOk5D,EACPtyD,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,OAE9DtH,EAAAC,yBACCD,EAAAC,cAACowD,IACApoD,QAAS9I,KAAKC,MAAM6I,QACpB9E,WAAYhE,KAAKC,MAAM+D,WACvBqE,WAAYrI,KAAKC,MAAMoI,eAGT,KAEXpH,EAAYC,mCAAUuH,OAAiCgxD,GAC5D,CAAE,6BAA8Bz5D,KAAKC,MAAM6I,QAAQX,QAAUnI,KAAKC,MAAM+D,WAAW+N,aAE9E4oD,EAAkB95D,EAAAC,qBAAKG,UAAU,wCACrC+S,EACAmmD,GAGE1xC,EAASkyC,EAET36D,KAAKC,MAAM8yD,kBACdtqC,EAAU5nB,EAAAC,qBAAKG,UAAU,gCACxBJ,EAAAC,qBAAKG,UAAU,+BAA+BjB,KAAKC,MAAM8yD,iBACxD4H,IAIH,IAAIC,EAAe,KACnB,GAAI56D,KAAKC,MAAM6I,QAAQ4b,eAAgB,CACtC,IAAMm2C,EAAkB76D,KAAKC,MAAM+D,WAAW0a,uBAAyBd,GAAI5d,KAAM,oCACjF46D,EAAgB/5D,EAAAC,cAACwyD,IAChBxqD,QAAS9I,KAAKC,MAAM6I,QACpB9E,WAAYhE,KAAKC,MAAM+D,WACvB0gB,gBAAiBm2C,IAInB,OACCh6D,EAAAC,qBAAKG,UAAU,wCACbjB,KAAKC,MAAMm0C,YACXtiC,EACDjR,EAAAC,qBAAKG,UAAU,+BACbwnB,EACAmyC,EACD/5D,EAAAC,qBAAKoH,IAAM,SAACA,GAAG,OAAM4mD,EAAK6J,oBAAsBzwD,GAAO,UAASsK,GAAuBxS,KAAKC,MAAMoI,YACjGpH,UAAWA,GAEXJ,EAAAC,cAACsyD,IACAlrD,IAAO,SAACA,GAAG,OAAM4mD,EAAKgM,WAAa5yD,GACnC49B,QAASs0B,EACTnlB,SAAUj1C,KAAKk1C,aACf6lB,UAAW/6D,KAAKm4D,cAChB/G,OAAQpxD,KAAKk4D,WACb/G,eAAgBnxD,KAAKmxD,eACrBh1D,MAAO6D,KAAKC,MAAM9D,QAEnB0E,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAaA,EAAaC,QAASnK,KAAKC,MAAMwzC,sBAK9Fwf,CAAA,EAvU8BpyD,EAAMrB,WAiWtCyzD,GAAkB5vD,aAAe,CAChC6vD,SAAS,EACTiH,cAAc,GAGf,OAMet2D,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+BovD,4aCtZc,IAEtD+H,YAAe90D,GAAA3G,EAAAy7D,EAAA90D,GAAA,IAAAzG,EAAAC,GAAAs7D,GACpB,SAAAA,EAAY/6D,GAAO,IAAAwG,EAEyC,OAFzC9G,OAAAq7D,IAClBv0D,EAAAhH,EAAArB,UAAM6B,IACDqI,GAAKkK,GAA0B/L,EAAKxG,MAAMoI,YAAY5B,EAyC3D,OAxCA3G,EAAAk7D,IAAAj7D,mBAAA5D,MAED,SAAa4O,GACZ/K,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY0C,EAAIo1B,OAAOhkC,UAC5E4D,aAAA5D,MAED,WACC,IAAM8+D,KAAyBxyD,OAAMzI,KAAKC,MAAM6I,QAAQxC,8BAClD40D,KAAyBzyD,OAAMzI,KAAKC,MAAM6I,QAAQxC,8BAElD60D,EAA2BpnD,EAAc/T,KAAKw0C,UAAWtlC,GAAaksD,uBACtEC,EAA2BtnD,EAAc/T,KAAKw0C,UAAWtlC,GAAaosD,uBAEtEC,EAAoBv7D,KAAKC,MAAM+D,WAAWu/C,YAAY0X,EAA2BE,GACjFK,EAAoBx7D,KAAKC,MAAM+D,WAAWu/C,YAAY2X,EAA2BG,GACjFl/D,EAAQ6D,KAAKC,MAAM9D,MAAQ6D,KAAKC,MAAM9D,MAAQ,GAC9C8E,EAAYC,GAAW,sBAAuB,2BAA4B,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QACrHpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,MAClDsE,EAAkBoI,GAAgCxS,KAAKC,MAAMiK,YAAalK,KAAKC,MAAMwzC,cAC3F,OACC5yC,EAAAC,qBAAKG,UAAWA,EAAW,UAASuR,GAAuBxS,KAAKC,MAAMoI,aACrExH,EAAAC,cAACm2B,QACAp2B,EAAAC,cAAC26D,GAAapjD,MACTjO,GACJ2qC,aAAa,MACbzsC,GAAItI,KAAKsI,GACTgK,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCyiC,YAAah1C,KAAKC,MAAM6I,QAAQmiB,eAChCgqB,SAAUj1C,KAAKk1C,aAAaruC,KAAK7G,MACjC7D,MAAOA,EACPg5C,UAAWn1C,KAAKC,MAAMm0C,YACtBgB,UAAWp1C,KAAKC,MAAMwzC,aACtBtrC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,MAC9DsvC,iBAAiB,MACjB8jB,kBAAmBA,EACnBC,kBAAmBA,MAGrB36D,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAcnB,aAAUxuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,mBAElH8wD,CAAA,EA5C4Bn6D,EAAMrB,cAgErBqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+Bm3D,4aClEV,IAE9BU,YAAgBx1D,GAAA3G,EAAAm8D,EAAAx1D,GAAA,IAAAzG,EAAAC,GAAAg8D,GACrB,SAAAA,EAAYz7D,GAAO,IAAAwG,EAOlB,GAPkB9G,OAAA+7D,IAClBj1D,EAAAhH,EAAArB,UAAM6B,IACDqI,GAAKkK,GAA0B/L,EAAKxG,MAAMoI,YAC/C5B,EAAKk1D,cAAgBl1D,EAAKk1D,cAAc90D,KAAIC,EAAAL,IAC5CA,EAAKyuC,aAAezuC,EAAKyuC,aAAaruC,KAAIC,EAAAL,IAE1CA,EAAKtK,MAAQ8D,EAAM9D,MACdsK,EAAKtK,MAEH,CACN,IAAMm3C,EAAOsoB,GAAMn1D,EAAKtK,MAAOs1C,GAAqB,IAAI8B,MACpDC,GAAQF,KACX7sC,EAAKtK,MAAQo1C,GAAO+B,EAAM7sC,EAAKk1D,uBAJhCl1D,EAAKtK,MAAQ,GAMb,OAAAsK,EAiDD,OA9CD3G,EAAA47D,IAAA37D,oBAAA5D,MAGA,WACC,IAAI6oB,EAAahlB,KAAKC,MAAM6I,QAAQkc,YAAcysB,GAElD,OADAzsB,EAAaA,EAAW5W,QAAQ,KAAM,KAAKA,QAAQ,KAAM,QAEzDrO,mBAAA5D,MAED,SAAa4O,GACZ,IAAI8wD,EAAiB,KAGrB,GAFA77D,KAAK7D,MAAQ,GAET4O,EAAIo1B,OAAOhkC,MAAO,CACrB6D,KAAK7D,MAAQ4O,EAAIo1B,OAAOhkC,MACxB,IAAMm3C,EAAOsoB,GAAM7wD,EAAIo1B,OAAOhkC,MAAO6D,KAAK27D,gBAAiB,IAAIpoB,MAE9DsoB,EADGroB,GAAQF,GACM/B,GAAO+B,EAAM7B,IAEb1mC,EAAIo1B,OAAOhkC,MAG9B6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYwzD,MACjE97D,aAAA5D,MAED,WACC,IAAM8E,EAAYC,GAAW,uBAAwB,2BAA4B,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QACtHpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,MAClDsE,EAAkBoI,GAAgCxS,KAAKC,MAAMiK,YAAalK,KAAKC,MAAMwzC,cAC3F,OACC5yC,EAAAC,qBAAKG,UAAWA,EAAW,UAASuR,GAAuBxS,KAAKC,MAAMoI,aACrExH,EAAAC,cAACg0C,GAASz8B,MACLjO,GACJ2qC,aAAa,MACbzsC,GAAItI,KAAKsI,GACTgK,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCyiC,YAAah1C,KAAKC,MAAM6I,QAAQmiB,eAChCgqB,SAAUj1C,KAAKk1C,aAAaruC,KAAK7G,MACjC7D,MAAO6D,KAAK7D,MACZg5C,UAAWn1C,KAAKC,MAAMm0C,YACtBgB,UAAWp1C,KAAKC,MAAMwzC,aACtBtrC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,SAE/DtH,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAcnB,aAAUxuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,mBAGlHwxD,CAAA,EAhE6B76D,EAAMrB,cAoFtBqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+B63D,4aCrF4B,IAEpEI,YAAgB51D,GAAA3G,EAAAu8D,EAAA51D,GAAA,IAAAzG,EAAAC,GAAAo8D,GACrB,SAAAA,EAAY77D,GAAO,IAAAwG,EAKlB,GALkB9G,OAAAm8D,IAClBr1D,EAAAhH,EAAArB,UAAM6B,IACDqI,GAAKkK,GAA0BvS,EAAMoI,YAE1C5B,EAAKtK,MAAQ8D,EAAM9D,MACdsK,EAAKtK,MAEH,CACN,IAAMm3C,EAAOsoB,GAAMn1D,EAAKtK,MAAO,eAAgB,IAAIo3C,MAC/CC,GAAQF,KACX7sC,EAAKtK,MAAQo1C,GAAO+B,EAAM7sC,EAAKs1D,uBAJhCt1D,EAAKtK,MAAQ,GASmC,OADjDsK,EAAKs1D,cAAgBt1D,EAAKs1D,cAAcl1D,KAAIC,EAAAL,IAC5CA,EAAKyuC,aAAezuC,EAAKyuC,aAAaruC,KAAIC,EAAAL,IAAOA,EA6CjD,OA5CA3G,EAAAg8D,IAAA/7D,oBAAA5D,MAED,WAEC,OADmB6D,KAAKC,MAAM6I,QAAQmc,YAAcysB,MAEpD3xC,mBAAA5D,MAED,SAAa4O,GACZ,IAAI8wD,EAAiB,KAGrB,GAFA77D,KAAK7D,MAAQ,GAET4O,EAAIo1B,OAAOhkC,MAAO,CACrB6D,KAAK7D,MAAQ4O,EAAIo1B,OAAOhkC,MACxB,IAAM6/D,EAAOJ,GAAM7wD,EAAIo1B,OAAOhkC,MAAO6D,KAAK+7D,gBAAiB,IAAIxoB,MAE9DsoB,EADGroB,GAAQwoB,GACMzqB,GAAOyqB,EAAM,gBAEbjxD,EAAIo1B,OAAOhkC,MAG9B6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYwzD,MACjE97D,aAAA5D,MAED,WACC,IAAM8E,EAAYC,GAAW,uBAAwB,2BAA4B,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QACtHpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,MAClDsE,EAAkBoI,GAAgCxS,KAAKC,MAAMiK,YAAalK,KAAKC,MAAMwzC,cAC3F,OACC5yC,EAAAC,qBAAKG,UAAWA,EAAW,UAASuR,GAAuBxS,KAAKC,MAAMoI,aACrExH,EAAAC,cAACg0C,GAASz8B,MACLjO,GACJ2qC,aAAa,MACbzsC,GAAItI,KAAKsI,GACTgK,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCyiC,YAAah1C,KAAKC,MAAM6I,QAAQmiB,eAChCgqB,SAAUj1C,KAAKk1C,aAAaruC,KAAK7G,MACjC7D,MAAO6D,KAAK7D,MACZg5C,UAAWn1C,KAAKC,MAAMm0C,YACtBgB,UAAWp1C,KAAKC,MAAMwzC,aACtBtrC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,SAE/DtH,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAcnB,aAAUxuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,mBAGlH4xD,CAAA,EA7D6Bj7D,EAAMrB,cAiFtBqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+Bi4D,4aCjFL,IAEnCG,YAAe/1D,GAAA3G,EAAA08D,EAAA/1D,GAAA,IAAAzG,EAAAC,GAAAu8D,GAEpB,SAAAA,EAAYh8D,GAAO,IAAAwG,EAEyC,OAFzC9G,OAAAs8D,IAClBx1D,EAAAhH,EAAArB,UAAM6B,IACDqI,GAAKkK,GAA0B/L,EAAKxG,MAAMoI,YAAY5B,EAsD3D,OArDA3G,EAAAm8D,IAAAl8D,mBAAA5D,MAED,SAAaA,GACZ6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYlM,MACjE4D,aAAA5D,MAED,WACC,IAAM+Q,EAAQlN,KAAKC,MAAM6I,QAAQoE,MAAQlN,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAO,GACnE2O,EAAYtP,KAAU,YAAcxI,KAAKC,MAAM6I,QAAQxC,KACzDuP,EAAU,GACV7V,KAAKC,MAAM6I,QAAQtG,aAAiBxC,KAAKC,MAAM6D,QAAUqO,GAAOI,UAAYvS,KAAKC,MAAM6D,QAAUqO,GAAOC,SAAYpS,KAAKC,MAAMwzC,eAClI59B,EACChV,EAAAC,0BAAQd,KAAKC,MAAM6I,QAAQtG,YAAY2G,MAGpCnJ,KAAKC,MAAM6I,QAAQtG,YAAY8O,OAClCtR,KAAKC,MAAM6I,QAAQtG,YAAY8O,KAAKjJ,WAAarI,KAAKC,MAAMoI,aAG9D,IAAM6zD,EAAczrD,GAAQoF,GAAW,GACtChV,EAAAC,cAAC4N,IACApG,GAAIwP,EACJnJ,IAAKkH,EACLvE,KAAMtR,KAAKC,MAAM6I,QAAQtG,YAAY8O,KAAOtR,KAAKC,MAAM6I,QAAQtG,YAAY8O,KAAO,KAClFwE,mBAAoB9V,KAAKC,MAAM+D,WAAW+R,cAAcD,mBACxDE,UAAU,SACV/U,UAAU,sBACViV,uBAEArV,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAaC,YAAanV,UAAU,8CAG5Ck7D,EACLt7D,EAAAC,sBAAMG,UAAU,6BACdiM,GAGH,OACCrM,EAAAC,qBAAKG,UAAWC,GAAW,sBAAuB,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QAAUpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,MACxJ,UAAS0M,GAAuBxS,KAAKC,MAAMoI,aAE3CxH,EAAAC,cAACuhD,IACA/vC,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCjK,GAAItI,KAAKsI,GACT6sC,UAAWgnB,EACXlnB,SAAUj1C,KAAKk1C,aAAaruC,KAAK7G,MACjC2hD,QAASya,QAAQp8D,KAAKC,MAAM9D,OAC5Bi5C,UAAWp1C,KAAKC,MAAMwzC,eAEtByoB,EACDr7D,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAc3vC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAM+D,WAAWwM,gBAAgBxQ,KAAKC,MAAMoI,mBAG9I4zD,CAAA,EA1D4Bp7D,EAAMrB,cA6ErBqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+Bo4D,4aClFc,IAGtDI,YAAan2D,GAAA3G,EAAA88D,EAAAn2D,GAAA,IAAAzG,EAAAC,GAAA28D,GAClB,SAAAA,EAAYp8D,GAAO,IAAAwG,EAEyC,OAFzC9G,OAAA08D,IAClB51D,EAAAhH,EAAArB,UAAM6B,IACDqI,GAAKkK,GAA0B/L,EAAKxG,MAAMoI,YAAY5B,EAoC3D,OAnCA3G,EAAAu8D,IAAAt8D,mBAAA5D,MAGD,SAAaA,GACZ6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYlM,MACjE4D,aAAA5D,MAED,WACC,IAAMmgE,KAAkB7zD,OAAMzI,KAAKC,MAAM6I,QAAQxC,yBAC3Ci2D,KAAmB9zD,OAAMzI,KAAKC,MAAM6I,QAAQxC,0BAE5Ck2D,EAAqBzoD,EAAc/T,KAAKw0C,UAAWtlC,GAAautD,iBAChEC,EAAsB3oD,EAAc/T,KAAKw0C,UAAWtlC,GAAaytD,kBAEjEC,EAAU58D,KAAKC,MAAM+D,WAAWu/C,YAAY+Y,EAAoBE,GAChEK,EAAW78D,KAAKC,MAAM+D,WAAWu/C,YAAYgZ,EAAqBG,GAClE16D,EAAOhC,KAAKC,MAAMwzC,aAAe,KAAO,KACxCqpB,EAAiBj8D,EAAAC,cAACi8D,IACvBz0D,GAAItI,KAAKsI,GACTtG,KAAMA,EACNsQ,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCyqD,QAASZ,QAAQp8D,KAAKC,MAAM9D,OAC5B8gE,OAAQL,EACRM,OAAQL,EACRM,SAAUn9D,KAAKk1C,aAAaruC,KAAK7G,MACjCm1C,UAAWn1C,KAAKC,MAAMwzC,aAAe,KAAOzzC,KAAKC,MAAMm0C,cAElDnzC,EAAYC,GAAW,oBAAqB,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QAAUpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,MACzJ,OACCjF,EAAAC,qBAAKG,UAAWA,EAAW,UAASuR,GAAuBxS,KAAKC,MAAMoI,aACpEy0D,EACDj8D,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAc3vC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,mBAIxGmyD,CAAA,EAvC0Bx7D,EAAMrB,cA2DnBqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+Bw4D,4aC3DU,IAIlDe,YAAkBl3D,GAAA3G,EAAA69D,EAAAl3D,GAAA,IAAAzG,EAAAC,GAAA09D,GACvB,SAAAA,EAAYn9D,GAAO,IAAAwG,EAIyD,OAJzD9G,OAAAy9D,IAClB32D,EAAAhH,EAAArB,UAAM6B,IACDsI,KAAOC,KACZ/B,EAAKyuC,aAAezuC,EAAKyuC,aAAaruC,KAAIC,EAAAL,IAC1CA,EAAKisC,0BAA4BjsC,EAAKisC,0BAA0B7rC,KAAIC,EAAAL,IAAOA,EAoG3E,OAnGA3G,EAAAs9D,IAAAr9D,wBAAA5D,MAED,WACC6D,KAAK0yC,2BAA0B,MAC/B3yC,yBAAA5D,MAED,SAAmBw2C,GAEbhW,EAAQ38B,KAAKC,MAAM2yC,YAAaD,EAAUC,cAC9C5yC,KAAK0yC,+BAIP3yC,gCAAA5D,MACA,SAA0B02C,GAEzB,GAAI31C,MAAM2F,QAAQ7C,KAAKC,MAAM9D,OAAQ,CACpC,IAAM22C,EAAWC,GAAa/yC,KAAKC,MAAM9D,MAAO6D,KAAKC,MAAM2yC,YAAYpjC,QAClEmtB,EAAQ38B,KAAKC,MAAM9D,MAAO22C,IAC9B9yC,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYyqC,EAAUD,OAG7E9yC,mBAAA5D,MAED,SAAa4vD,EAAKpK,GACjB,IAAInyC,EAASxP,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YAC3D,MAAOmH,IACVA,EAAS,IAEV,IAAMzT,EAAQyT,EAAOG,QAAQo8C,GACzBpK,GAAW5lD,EAAQ,IAEtByT,EAASA,EAAO/G,OAAO,CAACsjD,MAEnBpK,GAAY5lD,GAAS,GAE1ByT,EAAOsuC,OAAO/hD,EAAO,GAEtB,IAAMs8B,EAAY7oB,EAAO/G,SACzBzI,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYgwB,MACjEt4B,aAAA5D,MAED,WAEC,IAAMsZ,EAASzV,KAAKC,MAAM6D,QAAUqO,GAAOC,OACvCxF,EAAe5M,KAAKC,MAAM9D,MAC1B,MAAOyQ,IACVA,EAAe,IAGhB,IADA,IAAMywD,EAAa,GACVzoD,EAAI,EAAGA,EAAI5U,KAAKC,MAAM6I,QAAQ0G,OAAOxT,OAAQ4Y,IAAK,CAC1D,IAAMm3C,EAAM/rD,KAAKC,MAAM6I,QAAQ0G,OAAOoF,GAChCtC,EAAWtS,KAAKC,MAAM6D,QAAUqO,GAAOI,WAAavS,KAAKC,MAAM2yC,YAAYpjC,OAAO3H,SAASkkD,GAC7FmQ,EAAc,KAClB,GAAIh/D,MAAM2F,QAAQ7C,KAAKC,MAAM6I,QAAQoiB,cAAgBza,GAAQzQ,KAAKC,MAAM6I,QAAQoiB,WAAWtW,MAAQ5U,KAAKC,MAAMwzC,aAAc,CAC3H,IAAM59B,EACLhV,EAAAC,0BAAQd,KAAKC,MAAM6I,QAAQoiB,WAAWtW,IAEvCsnD,EAAer7D,EAAAC,cAAC4N,IACfpG,cAAEG,OAAazI,KAAKuI,UAAIE,OAAImM,GAC5BjG,IAAKkH,EACLG,UAAU,SACV/U,UAAU,sBACViV,sBACAD,QAASR,GAAUnD,GAEnBzR,EAAAC,cAACw8D,IAAchrD,SAAUA,EAAUrR,UAAU,8CAG/C,IAAMqH,EAAK,CACVhC,KAAMtG,KAAKC,MAAMoI,WAAW/B,KAC5BqC,IAAKiM,GAEA+sC,EAAW/0C,EAAa+C,QAAQo8C,IAAQ,EAC9CsR,EAAW/uD,KAAKzN,EAAAC,qBAAKG,UAAU,wCAAwClB,IAAKyS,GAA0BlK,EAAItI,KAAKuI,OAC9G1H,EAAAC,cAACuhD,IACA/vC,SAAUA,EACVhK,GAAIkK,GAA0BlK,EAAItI,KAAKuI,MACvCxI,IAAKgsD,EAAMn3C,EACXugC,UAAWn1C,KAAKC,MAAM6I,QAAQ2G,YAAYmF,GAC1CqgC,SAAUj1C,KAAKk1C,aAAaruC,KAAK7G,KAAM+rD,GACvCpK,QAASA,IAETua,IAGH,OACCr7D,EAAAC,8BACCD,EAAAC,4BACEd,KAAKC,MAAMm0C,aAEbvzC,EAAAC,qBAAKG,UAAWC,GAAW,yBAA0B,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,SAAW,UAASI,GAAuBxS,KAAKC,MAAMoI,aAChJxH,EAAAC,qBAAKG,UAAWC,GAAW,mCAAoClB,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,OACpHu3D,GAEFx8D,EAAAC,cAACuxC,IAAkBloC,QAASnK,KAAKC,MAAMwzC,aAAc3vC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,oBAIzGkzD,CAAA,EAzG+Bv8D,EAAMrB,cAqIxBqE,IAVS,SAACC,EAAOC,GAC/B,IAAM9D,EAAQ,CACb9D,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,aAG3D,OADApI,EAAM2yC,YAAc7uC,EAASC,WAAWswC,qBAAqBvwC,EAASsE,WAAYtE,EAAS+E,SACpF7I,CACR,GAEwC,KAAzB4D,CAA+Bu5D,o8CCvIO,IAG/CG,YAAer3D,GAAA3G,EAAAg+D,EAAAr3D,GAAA,IAAAzG,EAAAC,GAAA69D,GACpB,SAAAA,EAAYt9D,GAAO,IAAAwG,EAIyD,OAJzD9G,OAAA49D,IAClB92D,EAAAhH,EAAArB,UAAM6B,IACDsI,KAAOC,KACZ/B,EAAKyuC,aAAezuC,EAAKyuC,aAAaruC,KAAIC,EAAAL,IAC1CA,EAAKisC,0BAA4BjsC,EAAKisC,0BAA0B7rC,KAAIC,EAAAL,IAAOA,EAqM3E,OApMA3G,EAAAy9D,IAAAx9D,wBAAA5D,MAED,WACC6D,KAAK0yC,2BAA0B,EAAMyJ,GAAYC,cACjD,IAAM2P,EAAM/rD,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YAC9DrI,KAAKw9D,gCAAgCzR,QACL,IAArB/rD,KAAKC,MAAM9D,OAA8C,OAArB6D,KAAKC,MAAM9D,OACzD6D,KAAKy9D,sBAAsBz9D,KAAKC,MAAM9D,MAAO6D,KAAK09D,sBAAsB3oC,OAAO/0B,KAAKC,MAAM9D,YAE3F4D,yBAAA5D,MAED,SAAmBw2C,GAEbhW,EAAQ38B,KAAKC,MAAM2yC,YAAaD,EAAUC,cAC9C5yC,KAAK0yC,iCAE0B,IAArB1yC,KAAKC,MAAM9D,OAA8C,OAArB6D,KAAKC,MAAM9D,OACzD6D,KAAKy9D,sBAAsBz9D,KAAKC,MAAM9D,MAAO6D,KAAK09D,sBAAsB3oC,OAAO/0B,KAAKC,MAAM9D,YAI5F4D,sCAAA5D,MAOA,SAAgCwhE,GAC/B,GAAI39D,KAAKC,MAAM6I,QAAQ6T,eAAgB,CACtC,IAAMihD,EAAW59D,KAAKC,MAAM2yC,YACtBxI,EAAWpqC,KAAKC,MAAM+D,WAAW44B,iBAIvC58B,KAAKC,MAAM+D,WAAW65D,iBAEtB,IAAK,IAAIjpD,EAAI,EAAGA,EAAIgpD,EAASpuD,OAAOxT,OAAQ4Y,IAAK,CAChD,IAAMm3C,EAAM6R,EAASpuD,OAAOoF,GAE5BkpD,GAA4B1zB,EAAU,CAAE9jC,KAAQylD,GADlC6R,EAASpuD,OAAOoF,KAAO+oD,EAAcxrD,GAAOo4B,QAAUp4B,GAAOI,SACbw5C,GAG/D/rD,KAAKC,MAAM+D,WAAW64B,eAAeuN,GlC+TxC,SAA8C2zB,EAAU/5D,GAOvD,IANA,IAAMglC,EAAY,CACjB94B,SAAUlM,EAAW+H,mBACrB3F,OAAQpC,EAAW44B,iBACnBlb,QAAS1d,EAAW84B,mBAGZloB,EAAI,EAAGA,EAAImpD,EAAS/hE,OAAQ4Y,IAAK,CACzC,IAAM9Q,EAAQE,EAAWyO,cAAc,CAAEnM,KAAQy3D,EAASnpD,KAC1Dy6B,GAA0BrG,EAAW,CAAE1iC,KAAQy3D,EAASnpD,IAAM9Q,EAAOE,GAGtEA,EAAW2H,iBAAiBq9B,EAAU94B,UACtClM,EAAW64B,eAAemM,EAAU5iC,QACpCpC,EAAW+4B,gBAAgBiM,EAAUtnB,QAEtC,CkC3UGo8C,CAAqDF,EAASpuD,OAAQxP,KAAKC,MAAM+D,gBAElFjE,uBAAA5D,MAED,SAAiB4vD,GAChB,OAAO/rD,KAAKC,MAAM6I,QAAQ6T,eAAiB3c,KAAKC,MAAM6I,QAAQ6T,eAAeovC,GAAO,QAGrFhsD,gCAAA5D,MACA,SAA0B02C,EAAmBmrB,GAC5C,GAAyB,OAArBh+D,KAAKC,MAAM9D,YAA8C,IAArB6D,KAAKC,MAAM9D,QACjD6D,KAAKC,MAAM2yC,YAAYpjC,OAAO3H,SAAS7H,KAAKC,MAAM9D,OAAQ,CAC3D,IAAIknB,EAAe,KAEfrjB,KAAKC,MAAM6I,QAAQ8G,UAAY5P,KAAKC,MAAM6I,QAAQ8G,SAASyT,cAAgBrjB,KAAKC,MAAM2yC,YAAYpjC,OAAO3H,SAAS7H,KAAKC,MAAM6I,QAAQ8G,SAASyT,gBACjJA,EAAerjB,KAAKC,MAAM6I,QAAQ8G,SAASyT,cAE5CrjB,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYgb,EAAcwvB,EAAmBmrB,OAEnGj+D,yBAAA5D,MAED,SAAmBwhE,GAClB,MAA6C,YAAzC39D,KAAKC,MAAM6I,QAAQ8G,SAASC,SACP,SAAhB8tD,EAC2C,YAAzC39D,KAAKC,MAAM6I,QAAQ8G,SAASC,UACQ,SAAzC7P,KAAKC,MAAM6I,QAAQ8G,SAASC,UACa,WAAzC7P,KAAKC,MAAM6I,QAAQ8G,SAASC,SAC1BqqB,OAAOyjC,GAERA,KACP59D,mBAAA5D,MAED,SAAa4O,GACZ,IAAMkzD,EAASj+D,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YAC3D61D,EAASl+D,KAAKm+D,mBAAmBpzD,GACvC/K,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY61D,GAE7DD,IAAWC,GACdl+D,KAAKw9D,gCAAgCU,MAEtCn+D,4BAAA5D,MAED,SAAsBiiE,GACrB,IAAM/zB,EAAYrqC,KAAKC,MAAMo+D,YAC7B,SAAIh0B,GAAaA,EAAU+zB,IAAe/zB,EAAU+zB,GAAYjiE,QACxDkuC,EAAU+zB,GAAYjiE,QAAUgW,GAAOI,YAKhDxS,4BAAA5D,MAOA,SAAsB4vD,EAAKuS,GAC1B,GAAI,MAAOvS,GAAuCuS,GAAgBt+D,KAAKC,MAAM6D,QAAUqO,GAAOI,SAAU,CACvG,IACIgsD,EADEz1D,EAAU9I,KAAKC,MAAM+D,WAAW2I,WAAW3M,KAAKC,MAAMoI,YAEtDgb,EAAerjB,KAAKC,MAAM6I,QAAQ8G,SAASyT,aACjD,GAAIA,IAAiBrjB,KAAK09D,sBAAsBr6C,GAC/Ck7C,EAAoBl7C,MACd,CAAA,IACiClX,EADjCC,EAAAC,GACmBvD,EAAQ0G,QAAM,IAAvC,IAAApD,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAyC,CAAA,IAA9B4xD,EAAUjyD,EAAAhQ,MACpB,GAAIiiE,IAAerS,IAAQ/rD,KAAK09D,sBAAsBU,GAAa,CAClEG,EAAoBH,EACpB,cAEDhvD,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAEEivD,GACHv+D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYk2D,OAGnEx+D,aAAA5D,MAED,WACC,IAAMmW,EAAWtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACvCkD,EAASzV,KAAKC,MAAM6D,QAAUqO,GAAOC,OACtCpS,KAAKC,MAAM6I,QAAQ0G,QAA6C,aAAnCxP,KAAKC,MAAM6I,QAAQkiB,cACpDhrB,KAAKC,MAAM6I,QAAQ0G,OAAS,EAAC,GAAM,GACnCxP,KAAKC,MAAM6I,QAAQ2G,YAAc,CAAC,OAAQ,UAK3C,IAHA,IAAMrN,EAAU,GAEVw7D,EAAW59D,KAAKC,MAAM2yC,YACnBh+B,EAAI,EAAGA,EAAIgpD,EAASpuD,OAAOxT,OAAQ4Y,IAAK,CAChD,IAAIsnD,EAAc,KAClB,GAAIh/D,MAAM2F,QAAQ7C,KAAKC,MAAM6I,QAAQoiB,cAAgBza,GAAQzQ,KAAKC,MAAM6I,QAAQoiB,WAAWtW,MAAQ5U,KAAKC,MAAMwzC,aAAc,CAC3H,IAAM59B,EACLhV,EAAAC,0BAAOd,KAAKC,MAAM6I,QAAQoiB,WAAWtW,IAEtCsnD,EACCr7D,EAAAC,cAAC4N,IACApG,cAAEG,OAAazI,KAAKuI,UAAIE,OAAImM,GAC5BjG,IAAKkH,EACLG,UAAU,SACV/U,UAAU,sBACViV,sBACAD,QAASR,GAAUnD,GAEnBzR,EAAAC,cAACw8D,IAAchrD,SAAUA,EAAUrR,UAAU,8CAIhD,IAAM0gD,EAAUic,EAASpuD,OAAOoF,KAAO5U,KAAKC,MAAM9D,MAE5C4vD,EAAgD,YAAzC/rD,KAAKC,MAAM6I,QAAQ8G,SAASC,SAA0BklB,OAAO6oC,EAASpuD,OAAOoF,IAAMgpD,EAASpuD,OAAOoF,GAE1G0pD,EAAet+D,KAAK09D,sBAAsB3R,GAC1CyS,EAAgBx+D,KAAKy+D,iBAAiB1S,GACtCzjD,EAAK,CACVhC,KAAMtG,KAAKC,MAAMoI,WAAW/B,KAC5BqC,IAAKiM,GAENxS,EAAQkM,KACPzN,EAAAC,qBAAKf,IAAK6U,EAAG3T,UAAU,6BACtBJ,EAAAC,qBAAKG,UAAU,+BACdJ,EAAAC,cAAC49D,IACA3+D,IAAK6U,EACLtM,GAAIkK,GAA0BlK,EAAItI,KAAKuI,MACvC+J,SAAUA,GAAYgsD,EACtBnpB,UAAWyoB,EAASnuD,YAAYmF,GAChCzY,MAAO4vD,EACP9W,SAAUj1C,KAAKk1C,aACfyM,QAASA,IAETua,GAEDsC,IAKJ,OACC39D,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAMoI,YACnEpH,UAAWC,GAAW,uBAAwB,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,UAEpFvR,EAAAC,qBACCG,UAAWC,GAAW,gCAAiClB,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,KAC7G,CAAE64D,WAAc3+D,KAAKC,MAAM6I,QAAQ8a,cAAgBqN,EAAaC,WAAa5e,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,UAEnHnQ,GAEFvB,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,YAAaC,QAASnK,KAAKC,MAAMwzC,oBAGvG8pB,CAAA,EA1M4B18D,EAAMrB,cAqOrBqE,IARS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpDg2D,YAAat6D,EAASC,WAAW46D,sBAAsB76D,EAASsE,YAChE6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1DuqC,YAAa7uC,EAASC,WAAWswC,qBAAqBvwC,EAASsE,WAAYtE,EAAS+E,SACpF,GAEuC,KAAzBjF,CAA+B05D,o8CC1Oc,IAEtDsB,YAAQ34D,GAAA3G,EAAAs/D,EAAA34D,GAAA,IAAAzG,EAAAC,GAAAm/D,GACb,SAAAA,EAAY5+D,GAAO,IAAAwG,EAKlB,GALkB9G,OAAAk/D,IAClBp4D,EAAAhH,EAAArB,UAAM6B,IACDu0C,UAAYv0C,EAAM+D,WAAWiL,eAClCxI,EAAKq4D,WAAa,MAClBr4D,EAAKs4D,0BAA2B,EAC5BtuD,GAAQxQ,EAAM2yC,aAAc,CAE/B,IAAMosB,KAA4Bv2D,OAAMhC,EAAKxG,MAAM6I,QAAQxC,+BACrD24D,EAA8BlrD,EAActN,EAAK+tC,UAAWtlC,GAAagwD,wBAC/Ez4D,EAAKq4D,WAAa7+D,EAAM+D,WAAWu/C,YAAYyb,EAA8BC,GAEzEx4D,EAAKq4D,aAAeG,IACvBx4D,EAAKs4D,0BAA2B,QAEvB9+D,EAAM6I,QAAQmiB,iBAExBxkB,EAAKq4D,WAAa7+D,EAAM6I,QAAQmiB,gBAS0C,OAP3ExkB,EAAK6B,GAAKkK,GAA0B/L,EAAKxG,MAAMoI,YAC/C5B,EAAKyuC,aAAezuC,EAAKyuC,aAAaruC,KAAIC,EAAAL,IAC1CA,EAAK04D,oBAAsB14D,EAAK04D,oBAAoBt4D,KAAIC,EAAAL,IACxDA,EAAK24D,oBAAsB34D,EAAK24D,oBAAoBv4D,KAAIC,EAAAL,IACxDA,EAAK44D,uBAAyB54D,EAAK44D,uBAAuBx4D,KAAIC,EAAAL,IAC9DA,EAAK64D,iBAAmB74D,EAAK64D,iBAAiBz4D,KAAIC,EAAAL,IAClDA,EAAK84D,sBAAwB94D,EAAK84D,sBAAsB14D,KAAIC,EAAAL,IAC5DA,EAAKisC,0BAA4BjsC,EAAKisC,0BAA0B7rC,KAAIC,EAAAL,IAAOA,EAiN3E,OAhNA3G,EAAA++D,IAAA9+D,wBAAA5D,MAED,WACC6D,KAAK0yC,2BAA0B,EAAMyJ,GAAYC,iBACjDr8C,yBAAA5D,MAED,SAAmBw2C,GAEbhW,EAAQ38B,KAAKC,MAAM2yC,YAAaD,EAAUC,cAC9C5yC,KAAK0yC,+BAEN3yC,wBAAA5D,MAED,SAAkB2pC,EAAS+mB,GAC1B,IAAM1wD,EAAQ6S,EAAkC69C,EAAe7sD,KAAKC,MAAM6I,SACtE02D,EAAiB15B,EAAQtD,MAAK,SAASi9B,GAC1C,OAAOA,EAAOtjE,QAAUA,KAczB,OAT8C,QAH9CqjE,OAA2C,IAAnBA,EAAiC,KAAOA,IAGVrjE,GAE7B6D,KAAKC,MAAM6I,QAAQyc,sBAC3Ci6C,EAAiB,CAChBrjE,MAAOA,EACP+Q,MAAO/Q,IAIFqjE,KACPz/D,6BAAA5D,MAED,SAAuB0wD,GACtB,IAAM/mB,EAAU,GAMhB,GAJAA,EAAQx3B,KAAK,CACZnS,MAAO,GACP+Q,MAAOlN,KAAK8+D,aAET5hE,MAAM2F,QAAQ7C,KAAKC,MAAM2yC,aAAc,CAAA,IACKzmC,EADLC,EAAAC,GACjBrM,KAAKC,MAAM2yC,aAAW,IAA/C,IAAAxmC,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAiD,CAAA,IAAtCkzD,EAAUvzD,EAAAhQ,MACpB2pC,EAAQx3B,KAAK,CACZnS,MAAOujE,EACPxyD,MAAOwyD,WAERtwD,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAGF,MAAO,CACNw2B,QAASA,EACT05B,eAHsBx/D,KAAK2/D,kBAAkB75B,EAAS+mB,OAKvD9sD,4BAAA5D,MAED,SAAsB0wD,GACrB,IAAM/mB,EAAU,GAEhBA,EAAQx3B,KAAK,CACZnS,MAAO,GACP+Q,MAAOlN,KAAK8+D,aACV,IACuC9gD,EADvCC,EAAA5R,GACiBrM,KAAKC,MAAM2yC,aAAW,IAA1C,IAAA30B,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAA4C,CAAA,IAAjC46B,EAAKppB,EAAA7hB,MACf2pC,EAAQx3B,KAAK,CACZnS,MAAOirC,EAAM9gC,KACb4G,MAAOk6B,EAAM9gC,cAEd8I,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,IAED,MAAO,CACNw2B,QAASA,EACT05B,eAHsBx/D,KAAK2/D,kBAAkB75B,EAAS+mB,OAKvD9sD,uBAAA5D,MAED,SAAiB0wD,GAGhB,IAFA,IAAM/mB,EAAU,GAEP1F,EAAI,EAAGA,EAAIpgC,KAAKC,MAAM2yC,YAAYpjC,OAAOxT,OAAQokC,IACzD0F,EAAQx3B,KAAK,CACZnS,MAAO6D,KAAKC,MAAM2yC,YAAYpjC,OAAO4wB,GACrClzB,MAAOlN,KAAKC,MAAM2yC,YAAYnjC,YAAY2wB,KAI5C,MAAO,CACN0F,QAASA,EACT05B,eAHsBx/D,KAAK2/D,kBAAkB75B,EAAS+mB,OAMxD9sD,gCAAA5D,MACA,SAA0B02C,EAAmBmrB,GAE5C,GAAIh+D,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAYiB,aAAoC,OAArBhyB,KAAKC,MAAM9D,YAA8C,IAArB6D,KAAKC,MAAM9D,QAC/G6D,KAAKC,MAAM2yC,YAAYpjC,OAAO3H,SAAS7H,KAAKC,MAAM9D,OAAQ,CAC3D,IAAIknB,EAAe,KAEfrjB,KAAKC,MAAM6I,QAAQ8G,UAAY5P,KAAKC,MAAM6I,QAAQ8G,SAASyT,cAAgBrjB,KAAKC,MAAM2yC,YAAYpjC,OAAO3H,SAAS7H,KAAKC,MAAM6I,QAAQ8G,SAASyT,cACjJA,EAAerjB,KAAKC,MAAM6I,QAAQ8G,SAASyT,aACjCrjB,KAAKC,MAAM6I,QAAQyc,oBAAsBvlB,KAAKC,MAAM9D,QAC9DknB,EAAerjB,KAAKC,MAAM9D,OAE3B6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYgb,EAAcwvB,EAAmBmrB,OAEnGj+D,mBAAA5D,MAED,SAAa4O,GACZ,IAAI5O,EAAQ6D,KAAKC,MAAMwzC,aAAe1oC,EAAIo1B,OAAOhkC,MAAQ4O,EAAIg/C,aAAa5tD,MACtE6D,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAYmB,eAClD/1B,EAAQ6S,EAAiC7S,EAAO6D,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAM+D,aAEhFhE,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYlM,MACjE4D,0BAAA5D,MAED,SAAoB4O,GACnB,IAAI5O,EAAQ4O,EAAIg/C,cAAgBh/C,EAAIg/C,aAAa5tD,MAAQ4O,EAAIg/C,aAAa5tD,MAAQ,GAC9E6D,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAYmB,eAClD/1B,EAAQ6S,EAAiC7S,EAAO6D,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAM+D,aAEhFhE,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYlM,MAGlE4D,0BAAA5D,MACA,SAAoB4O,GACnB,GAAY,OAARA,EAAc,CACjB,IAAM5O,EAAQ4O,EACd/K,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYlM,OAElE4D,aAAA5D,MAED,WACC,IAAIyjE,EAEHA,EADG5/D,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAY8uC,aACvC7/D,KAAKq/D,uBAAuBr/D,KAAKC,MAAM9D,OACxC6D,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAYmB,aAC9ClyB,KAAKu/D,sBAAsBv/D,KAAKC,MAAM9D,OAEtC6D,KAAKs/D,iBAAiBt/D,KAAKC,MAAM9D,OAG7C,IAAMoyD,EAAgC,CACrC,aAAcx6C,EAAc/T,KAAKw0C,UAAWtlC,GAAas/C,4BACzD,YAAaz6C,EAAc/T,KAAKw0C,UAAWtlC,GAAau/C,4BAGrDqR,EAAoB,KAClB11D,EAAkBoI,GAAgCxS,KAAKC,MAAMiK,YAAalK,KAAKC,MAAMwzC,cAC3F,GAAIzzC,KAAKC,MAAMwzC,aAAc,CAC5B,IAAM3N,EAAU,GACV/H,EAAY6hC,EAASJ,gBAAkBI,EAASJ,eAAerjE,MAAQyjE,EAASJ,eAAerjE,MAAQ,GACxGyjE,EAASJ,gBAEb15B,EAAQx3B,KAAKzN,EAAAC,cAACi/D,IAAW52D,KAAMnJ,KAAK8+D,WAAY/+D,IAAKC,KAAKsI,GAAInM,MAAM,MACpE,IACoCgiB,EADpCE,EAAAhS,GACoBuzD,EAAS95B,SAAO,IAArC,IAAAznB,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAAuC,CAAA,IAA5BizD,EAAMthD,EAAAhiB,MAChB2pC,EAAQx3B,KAAKzN,EAAAC,cAACi/D,IAAW52D,KAAMs2D,EAAOvyD,MAAOnN,IAAKC,KAAKsI,GAAK,IAAMm3D,EAAOtjE,MAAOA,MAAOsjE,EAAOtjE,gBAC9FiT,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,IACDwwD,EAAqBj/D,EAAAC,cAACk/D,IACrB13D,GAAItI,KAAKsI,GACT8sC,aACA6qB,UACA9qB,UAAWn1C,KAAKC,MAAM6I,QAAQoE,MAAQlN,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAO,GACtEmJ,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,UAAYvS,KAAK++D,yBACvD9pB,SAAUj1C,KAAKk1C,aACf/4C,MAAO4hC,EACP51B,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,OAE5D29B,QAGHg6B,EADU9/D,KAAKC,MAAM6I,QAAQyc,mBACR1kB,EAAAC,cAACo/D,GAAQ7nD,MACzBjO,GACJ+1D,UAAWngE,KAAKC,MAAM6I,QAAQoE,MAAQlN,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAO,GACtEb,MAAEG,OAAK+J,GAAuBxS,KAAKC,MAAMoI,yBACzCiK,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,UAAYvS,KAAK++D,yBACvD/pB,YAAa4qB,EAASJ,eAAetyD,MACrC68C,aAAc6V,EAASJ,eAAetyD,MACtCkhD,MAAOwR,EAAS95B,QAChBmP,SAAUj1C,KAAKm/D,oBACfiB,cAAepgE,KAAKo/D,oBACpBj3D,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,MAC9DwmD,gBAAiB,SAACrmD,GAAE,OAAKimD,EAA8BjmD,IACvDsmD,UAAW5uD,KAAKC,MAAMm0C,eAGFvzC,EAAAC,cAAC4tD,GAAQr2C,MACzBjO,GACJ9B,MAAEG,OAAK+J,GAAuBxS,KAAKC,MAAMoI,yBACzCiK,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,UAAYvS,KAAK++D,yBACvDj5D,KAAK,UACLsoD,MAAOwR,EAAS95B,QAChBmP,SAAUj1C,KAAKk1C,aACf6U,aAAc6V,EAASJ,eACvBtyD,MAAOlN,KAAK8+D,WACZ32D,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,MAC9DwmD,gBAAiB,SAACrmD,GAAE,OAAKimD,EAA8BjmD,IACvDsmD,UAAW5uD,KAAKC,MAAMm0C,eAIxB,OACCvzC,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAMoI,YAC/CpH,UAAWC,GAAW,sBAAuB,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QAAUpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,OAEnJg6D,EACDj/D,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,YAAaC,QAASnK,KAAKC,MAAMwzC,aAAcnB,oBAGrHusB,CAAA,EA3OqBh+D,EAAMrB,cAgRdqE,IAhBS,SAACC,EAAOC,GAC/B,IAAM9D,EAAQ,CACb9D,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,aAS3D,OAPItE,EAAS+E,QAAQkiB,cAAgB+F,EAAY8uC,aAChD5/D,EAAM2yC,YAAc7uC,EAASC,WAAWq8D,4BAC9Bt8D,EAAS+E,QAAQkiB,cAAgB+F,EAAYmB,aACvDjyB,EAAM2yC,YAAc7uC,EAASC,WAAWob,2BAA2Brb,EAASsE,YAE5EpI,EAAM2yC,YAAc7uC,EAASC,WAAWswC,qBAAqBvwC,EAASsE,WAAYtE,EAAS+E,SAErF7I,CACR,GAEwC,KAAzB4D,CAA+Bg7D,4aCpRc,IAGtDyB,YAAkBp6D,GAAA3G,EAAA+gE,EAAAp6D,GAAA,IAAAzG,EAAAC,GAAA4gE,GACvB,SAAAA,EAAYrgE,GAAO,IAAAwG,EAUhB,OAVgB9G,OAAA2gE,IAClB75D,EAAAhH,EAAArB,UAAM6B,IACDu0C,UAAYv0C,EAAM+D,WAAWiL,eAClCxI,EAAKk5D,kBAAoBl5D,EAAKk5D,kBAAkB94D,KAAIC,EAAAL,IACpDA,EAAK64D,iBAAmB74D,EAAK64D,iBAAiBz4D,KAAIC,EAAAL,IAClDA,EAAK85D,eAAiB95D,EAAK85D,eAAe15D,KAAIC,EAAAL,IAC9CA,EAAKisC,0BAA4BjsC,EAAKisC,0BAA0B7rC,KAAIC,EAAAL,IACpEA,EAAK+5D,gBAAkB/5D,EAAK+5D,gBAAgB35D,KAAIC,EAAAL,IAChDA,EAAK3C,MAAQ,CACZ28D,cAAc,GACbh6D,EA8IF,OA7IA3G,EAAAwgE,IAAAvgE,wBAAA5D,MAED,WACC6D,KAAK0yC,2BAA0B,MAC/B3yC,yBAAA5D,MAED,SAAmBw2C,GAEbhW,EAAQ38B,KAAKC,MAAM2yC,YAAaD,EAAUC,cAC9C5yC,KAAK0yC,4BAEN1yC,KAAKwgE,gBAAgB7tB,MAGtB5yC,sBAAA5D,MAGA,SAAgBw2C,IACVhW,EAAQ38B,KAAKC,MAAM2yC,YAAYpjC,OAAQmjC,EAAUC,YAAYpjC,SAAWxP,KAAK8D,MAAM28D,aACvFzgE,KAAKyH,SAAS,CACbg5D,cAAc,IAEJzgE,KAAK8D,MAAM28D,cACtBzgE,KAAKyH,SAAS,CACbg5D,cAAc,OAGhB1gE,wBAAA5D,MAED,SAAkB2pC,EAAS46B,GAC1B,IAAMlxD,EAASR,EAAkC0xD,EAAgB1gE,KAAKC,MAAM6I,SACtE63D,EAAkB,GAMxB,OALInxD,GACHA,EAAO7F,SAAQ,SAACxN,GAAK,OAAKwkE,EAAgBryD,KAAKw3B,EAAQtD,MAAK,SAASi9B,GACpE,OAAOA,EAAOn3D,KAAOnM,SAGhBwkE,KACP5gE,uBAAA5D,MAED,SAAiBukE,GAEhB,IADA,IAAM56B,EAAU,GACP1F,EAAI,EAAGA,EAAIpgC,KAAKC,MAAM2yC,YAAYpjC,OAAOxT,OAAQokC,IACzD0F,EAAQx3B,KAAK,CACZhG,GAAItI,KAAKC,MAAM2yC,YAAYpjC,OAAO4wB,GAClClzB,MAAOlN,KAAKC,MAAM2yC,YAAYnjC,YAAY2wB,KAI5C,MAAO,CACN0F,QAASA,EACT66B,gBAHuB3gE,KAAK2/D,kBAAkB75B,EAAS46B,OAOzD3gE,gCAAA5D,MACA,SAA0B02C,GACzB,IAAIxa,EAAY0a,GAAa/yC,KAAKC,MAAM9D,MAAO6D,KAAKC,MAAM2yC,YAAYpjC,QACjEmtB,EAAQtE,EAAWr4B,KAAKC,MAAM9D,SAE9BsU,GAAQ4nB,IACPr4B,KAAKC,MAAM6I,QAAQ8G,UAAY5P,KAAKC,MAAM6I,QAAQ8G,SAASyT,eAC9DgV,EAAY0a,GAAa/yC,KAAKC,MAAM6I,QAAQ8G,SAASyT,aAAcrjB,KAAKC,MAAM2yC,YAAYpjC,SAG5FxP,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYgwB,EAAWwa,OAE7E9yC,qBAAA5D,MAED,SAAe4O,GAEd,IADA,IAAMkyC,EAAgB,GACbroC,EAAI,EAAGA,EAAI7J,EAAI61D,cAAc5kE,OAAQ4Y,IAC7CqoC,EAAc3uC,KAAKvD,EAAI61D,cAAchsD,GAAGtM,IAEzCtI,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY40C,MACjEl9C,aAAA5D,MAED,WACC,IAAM0kE,EAAsB7gE,KAAKs/D,iBAAiBt/D,KAAKC,MAAM9D,OAE7D,IAAK6D,KAAK8D,MAAM28D,aACf,OAAO,KAGR,IAAMlS,EAAgC,CACrC,aAAcx6C,EAAc/T,KAAKw0C,UAAWtlC,GAAas/C,4BACzD,YAAaz6C,EAAc/T,KAAKw0C,UAAWtlC,GAAau/C,2BACxD,YAAa16C,EAAc/T,KAAKw0C,UAAWtlC,GAAa4xD,2BACxD,kBAAmB/sD,EAAc/T,KAAKw0C,UAAWtlC,GAAa6xD,kCAGzDC,KAAqBv4D,OAAMzI,KAAKC,MAAM6I,QAAQxC,0CAC9C26D,EAAoBltD,EAAc/T,KAAKw0C,UAAWtlC,GAAagyD,kCAC/DC,KAA+B14D,OAAMzI,KAAKC,MAAM6I,QAAQxC,qDACxD86D,EAA8BrtD,EAAc/T,KAAKw0C,UAAWtlC,GAAamyD,6CAE3En0D,EAAQ,GAEXA,EADkD,IAA/C2zD,EAAoBF,gBAAgB3kE,OAC/BgE,KAAKC,MAAM+D,WAAWu/C,YAAYyd,EAAuBC,GAEzDjhE,KAAKC,MAAM+D,WAAWu/C,YAAY4d,EAAiCC,GAE5E,IAAMh3D,EAAkBoI,GAAgCxS,KAAKC,MAAMiK,YAAalK,KAAKC,MAAMwzC,cAEvFqsB,EAAoB,KA6BxB,OA3BCA,EADG9/D,KAAKC,MAAM6I,QAAQob,WACDrjB,EAAAC,cAACwgE,GAAqBjpD,MACtCjO,GACJ9B,MAAEG,OAAK+J,GAAuBxS,KAAKC,MAAMoI,uCACzCiK,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCo8C,gBAAiB,SAACrmD,GAAE,OAAKimD,EAA8BjmD,IACvD8lD,MAAOyS,EAAoB/6B,QAC3By7B,qBAAsBV,EAAoBF,gBAC1C1rB,SAAUj1C,KAAKugE,eACfvrB,YAAa9nC,EACb0hD,UAAW5uD,KAAKC,MAAMwzC,aAAe,KAAOzzC,KAAKC,MAAMm0C,YACvDjsC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,SAG1CtH,EAAAC,cAAC0gE,GAAWnpD,MAC5BjO,GACJ9B,MAAEG,OAAK+J,GAAuBxS,KAAKC,MAAMoI,4BACzCiK,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCo8C,gBAAiB,SAACrmD,GAAE,OAAKimD,EAA8BjmD,IACvD8lD,MAAOyS,EAAoB/6B,QAC3B86B,cAAeC,EAAoBF,gBACnC1rB,SAAUj1C,KAAKugE,eACfrzD,MAAOA,EACP0hD,UAAW5uD,KAAKC,MAAMwzC,aAAe,KAAOzzC,KAAKC,MAAMm0C,YACvDjsC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,SAK/DtH,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAMoI,YAC/CpH,UAAWC,GAAW,sBAAuB,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QAAUpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,OAEnJg6D,EACDj/D,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOwuC,aAAUpoC,YAAalK,KAAKC,MAAMiK,YAAaC,QAASnK,KAAKC,MAAMwzC,oBAGjH6sB,CAAA,EAzJ+Bz/D,EAAMrB,cAkLxBqE,IAVS,SAACC,EAAOC,GAO/B,MANc,CACb5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1DuqC,YAAa7uC,EAASC,WAAWswC,qBAAqBvwC,EAASsE,WAAYtE,EAAS+E,SAGtF,GAEwC,KAAzBjF,CAA+By8D,4aCrLkB,IAE1DmB,YAAmBv7D,GAAA3G,EAAAkiE,EAAAv7D,GAAA,IAAAzG,EAAAC,GAAA+hE,GACxB,SAAAA,EAAYxhE,GAAO,IAAAwG,EAIuC,OAJvC9G,OAAA8hE,IAClBh7D,EAAAhH,EAAArB,UAAM6B,IACDq/D,iBAAmB74D,EAAK64D,iBAAiBz4D,KAAIC,EAAAL,IAClDA,EAAKisC,0BAA4BjsC,EAAKisC,0BAA0B7rC,KAAIC,EAAAL,IACpEA,EAAKi7D,iBAAmBj7D,EAAKi7D,iBAAiB76D,KAAIC,EAAAL,IAAOA,EAsFzD,OArFA3G,EAAA2hE,IAAA1hE,wBAAA5D,MAED,WACC6D,KAAK0yC,2BAA0B,EAAMyJ,GAAYC,iBACjDr8C,yBAAA5D,MAED,SAAmBw2C,GAEbhW,EAAQ38B,KAAKC,MAAM2yC,YAAaD,EAAUC,cAC9C5yC,KAAK0yC,+BAIP3yC,gCAAA5D,MACA,SAA0B02C,EAAmBmrB,GAC5C,IAAM3lC,EAAY0a,GAAa/yC,KAAKC,MAAM9D,MAAO6D,KAAKC,MAAM2yC,YAAYpjC,QACnEmtB,EAAQtE,EAAWr4B,KAAKC,MAAM9D,QAClC6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAYgwB,EAAWwa,EAAmBmrB,MAEhGj+D,uBAAA5D,MAED,SAAiBoZ,GAEhB,IADA,IAAM0nC,EAAgB,GACbroC,EAAI,EAAGA,EAAIW,EAASvZ,OAAQ4Y,IAAK,CACzC,IAAMzY,EAAQ6D,KAAKC,MAAM2yC,YAAYpjC,OAAO+F,EAASX,IACrDqoC,EAAc3uC,KAAKnS,GAEpB6D,KAAKC,MAAM+D,WAAWgvC,oBAAoBhzC,KAAKC,MAAMoI,WAAY40C,MACjEl9C,uBAAA5D,MAED,SAAiBukE,GAMhB,IALA,IAAMiB,EAAe,CACpB77B,QAAS,GACTvwB,SAAU,IAGFX,EAAI,EAAGA,EAAI5U,KAAKC,MAAM2yC,YAAYpjC,OAAOxT,OAAQ4Y,IAAK,EACgB,IAA9D8rD,EAAe/wD,QAAQ3P,KAAKC,MAAM2yC,YAAYpjC,OAAOoF,KAEpE+sD,EAAapsD,SAASjH,KAAKsG,GAE5B,IAAMygB,EAAU,GAChBA,EAAQ/mB,KAAK,CACZouC,OAAQ,eACR54C,MAAO9D,KAAKC,MAAM6D,MAClBrB,QAASzC,KAAKC,MAAM2yC,YAAYnjC,YAAYmF,KAG7C+sD,EAAa77B,QAAQx3B,KAAK,CAAErN,UAAW,YAAao0B,QAASA,EAAS/iB,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,WAE7G,OAAOovD,KACP5hE,aAAA5D,MAED,WACC,IAAIyQ,EAAe5M,KAAKC,MAAM9D,MAC1B,MAAOyQ,IACVA,EAAe,IAEhB,IAAM+0D,EAAe3hE,KAAKs/D,iBAAiB1yD,GACrCuY,EAAOnlB,KAAKC,MAAM6I,QAAQqc,KAAOnlB,KAAKC,MAAM6I,QAAQqc,KAAO,IAC3D+6B,EAAclgD,KAAKC,MAAM6I,QAAQoE,OAASlN,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAQnJ,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAO,GAEjH,OACCtI,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAMoI,YACnEpH,UAAWC,GAAW,2BAA4B,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QACvFpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,OAEvD9F,KAAKC,MAAMm0C,YACZvzC,EAAAC,cAACq/C,IACA9qB,QAAS,CAAC,CAAEt1B,IAAO,eAAgBmN,MAAS,KAC5CiY,KAAMA,EACN3N,KAAMmqD,EAAa77B,QACnBua,UAAWrgD,KAAKC,MAAM6I,QAAQxC,KAC9B45C,WAAYA,EACZ9lB,aAAcunC,EAAapsD,SAC3BylC,oBAAqBh7C,KAAK0hE,iBAC1BE,cACAxhB,YAAY,EACZj4C,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,MAC9Do4C,sBAAuBvgD,KAAKC,MAAM6I,QAAQmiB,iBAE3CpqB,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,YAAaC,QAASnK,KAAKC,MAAMwzC,oBAIvGguB,CAAA,EA3FgC5gE,EAAMrB,cAiHzBqE,IAPS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1DuqC,YAAa7uC,EAASC,WAAWswC,qBAAqBvwC,EAASsE,WAAYtE,EAAS+E,SACpF,GAEuC,KAAzBjF,CAA+B49D,4aC7G9C,IAEMI,YAAoBxb,GAAA9mD,EAAAsiE,EAASvnB,IAAT,IAAA76C,EAAAC,GAAAmiE,GAEzB,SAAAA,EAAY5hE,GAAO,IAAAwG,EAIoG,OAJpG9G,OAAAkiE,IAClBp7D,EAAAhH,EAAArB,UAAM6B,IACDu0C,UAAYv0C,EAAM+D,WAAWiL,eAClCxI,EAAKg9C,6BAA+Bh9C,EAAK26C,WAAWv6C,KAAIC,EAAAL,GAAOA,EAAKxG,MAAMoI,YAC1E5B,EAAK68C,sBAAwBt0C,EAA4BvI,EAAK+tC,UAAWtlC,GAAagyC,gCAAgCz6C,EAkItH,OAjIA3G,EAAA+hE,IAAA9hE,eAAA5D,MAED,SAASyQ,EAAcmsC,GACtB,IAAM5zB,EAAO,GACb,GAAIvY,EACH,IAAK,IAAIs8B,EAAW,EAAGA,EAAWt8B,EAAa5Q,OAAQktC,IAAY,CAClE,IAAM7T,EAAU,GAGV1sB,OAA2C,IAA9B3I,KAAKC,MAAMoI,WAAWM,IACtC,CAAEA,IAAK3I,KAAKC,MAAMoI,WAAWM,IAAK5M,MAAOmtC,GACzC,CAAEvgC,IAAKugC,GACJ7gC,EAAatK,OAAOgyB,OAAO,GAAI/vB,KAAKC,MAAMoI,WAAYM,GACtDG,EAAU/K,OAAOgyB,OAAO,GAAI/vB,KAAKC,MAAM6I,SAC7C,GAAIA,EAAQmW,QAAS,CACpB,IAAME,EAASnf,KAAKC,MAAM+D,WAAWk7C,2BAC/B/iD,EAAQ6S,EAAkChP,KAAKC,MAAM+D,WAAWqC,iBAAiBgC,GAAaS,GAAS,GACvGsI,EAAOpC,EAA6BmQ,EACzChjB,EAAO2M,EAAQmW,SAChBnW,EAAQsI,KAAOA,EAEhB,IAAM0tC,EACLj+C,EAAAC,qBAAKG,UAAU,iCACdJ,EAAAC,cAAC2xC,IACA3pC,QAASA,EACTT,WAAYA,EACZrE,WAAYhE,KAAKC,MAAM+D,WACvByvC,mBAIHpe,EAAQ/mB,KAAK,CACZvO,IAAKmpC,EAAW,WAChBwT,OAAQ,QACRj6C,QAASq8C,IAEV35B,EAAK7W,KAAK,CACTvO,IAAKmpC,EACL4d,gBAAiB9mD,KAAKi7C,eAAep0C,KAAK7G,KAAMkpC,GAAU,GAC1D7T,QAASA,EACTp0B,UAAW,4BAId,OAAOkkB,KAGRplB,yBAAA5D,MAKA,SAAmB2lE,EAAmBjjD,GACrC,GAAIijD,GAAqBjjD,EAAe,CACvC7e,KAAK66C,+BAA+BinB,EAAmBjjD,GACvD,IAAMi9B,EAAcj9B,EAAcA,EAAc7iB,OAAS,GACzDgE,KAAKq7C,eAAeS,OAErB/7C,iBAAA5D,MAED,WACC,IAAM6jD,EAAU,GAMhB,OALAA,EAAQ1xC,KAAK,CACZvO,IAAO,QACPmN,MAAS8B,EAA4BhP,KAAKw0C,UACzCtlC,GAAa6yD,+BACdv/D,YAAgB,OACVw9C,KACPjgD,aAAA5D,MAED,WACC,IAQI0lD,EARE7B,EAAUhgD,KAAKigD,aAEfO,EAAoB,CACzBC,yBAA0BzgD,KAAKgiE,oBAG1B78C,EAAOnlB,KAAKknD,SAASlnD,KAAKC,MAAM9D,MAAO6D,KAAKC,MAAM6D,OAClDk+C,EAAgBhiD,KAAKu7C,yBAAyBv7C,KAAKC,MAAM6D,MAAO08C,GAElEtmB,OAAOC,UAAUn6B,KAAK87C,cAAgB32B,EAAKnpB,OAASgE,KAAK87C,cAC5D+F,EAAgB7hD,KAAK87C,mBACd97C,KAAK87C,aAEb,IAAMoE,EAAclgD,KAAKC,MAAM6I,QAAQoE,OAASlN,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAQnJ,KAAKC,MAAM6I,QAAQoE,MAAM/D,KAAO,GAC3GiqC,EACLvyC,EAAAC,cAACq/C,IACA9qB,QAAS2qB,EACTxoC,KAAM2N,EACN22B,YAAa+F,EACbG,cAAeA,EACf3B,UAAWrgD,KAAKC,MAAM6I,QAAQxC,KAC9ByyC,WAAY/4C,KAAKC,MAAM6D,MACvBoG,YAAalK,KAAKC,MAAMiK,YACxBib,KAAMnlB,KAAKC,MAAM6I,QAAQqc,KACzB+6B,WAAYA,EACZ9lB,aAAcp6B,KAAKC,MAAMm6B,aACzB7R,aAAcvoB,KAAKC,MAAM6I,QAAQyf,aACjCyyB,oBAAqBh7C,KAAKg7C,oBAC1B7yC,MAAOnI,KAAKC,MAAM+D,WAAW+N,YAAc/R,KAAKC,MAAM6I,QAAQX,MAC9Do4C,sBAAuBvgD,KAAKC,MAAM6I,QAAQmiB,iBAGtCxoB,EACL5B,EAAAC,yBACCD,EAAAC,qBAAKG,UAAU,kCACbmyC,GAEFvyC,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,eAItE,OACCrJ,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAMoI,YAAapH,UAAU,4BACrEjB,KAAKC,MAAMm0C,YACZvzC,EAAAC,cAAC4iD,IACAW,eAAgB5hD,EAChBqG,QAAS9I,KAAKC,MAAM6I,QACpB9E,WAAYhE,KAAKC,MAAM+D,WACvBqE,WAAYrI,KAAKC,MAAMoI,WACvBgzC,eAAgBr7C,KAAKq7C,eACrBR,+BAAgC76C,KAAK66C,+BACrCvoC,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCwzC,aAAct1C,GAAQzQ,KAAKC,MAAM9D,OACjCmnD,sBAAuBtjD,KAAKsjD,sBAC5BG,6BAA8BzjD,KAAKyjD,oCAItCoe,CAAA,IAGFA,GAAqB1a,UAAY,CAChCr+C,QAASs+C,GAAUxrD,OAAOyrD,WAC1Bh/C,WAAY++C,GAAUxrD,OAAOyrD,WAC7BrjD,WAAYojD,GAAUxrD,OAAOyrD,WAC7BjT,YAAagT,GAAUE,QACvBluC,gBAAiBguC,GAAUzqD,KAAK0qD,WAChCjtB,aAAcgtB,GAAU7qD,MACxBuH,MAAOsjD,GAAUG,OACjBprD,MAAOirD,GAAU7qD,MACjB2N,YAAak9C,GAAUxrD,OACvB4sB,cAAe4+B,GAAUI,KACzBtpB,aAAckpB,GAAUxrD,QAIzB,OASeiI,IATS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D+xB,aAAcr2B,EAASC,WAAWsgD,gBAAgBvgD,EAASsE,YAC3DmgB,cAAezkB,EAASC,WAAWiiD,iBAAiBliD,EAASsE,YAC7D61B,aAAcn6B,EAASC,WAAWkiD,gBAAgBniD,EAASsE,YAC3D,GAEuC,KAAzBxE,CAA+Bg+D,4aC7KU,IAIlDI,YAAsB/7D,GAAA3G,EAAA0iE,EAAA/7D,GAAA,IAAAzG,EAAAC,GAAAuiE,GAC3B,SAAAA,EAAYhiE,GAAO,IAAAwG,EAGmE,OAHnE9G,OAAAsiE,IAClBx7D,EAAAhH,EAAArB,UAAM6B,IACDiiE,eAAiB,IAAI3oD,GAAe9S,EAAKxG,MAAM+D,YACpDyC,EAAKy7D,eAAezoD,aAAahT,EAAKxG,MAAMmZ,gBAAiB3S,EAAKxG,MAAM4iD,aAAap8C,EAyHrF,OAtHD3G,EAAAmiE,IAAAliE,wBAAA5D,MAMA,SAAkBgmE,GACjB,IAAK,IAAIvtD,EAAI,EAAGA,EAAI5U,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQ4Y,IAC1D,GAAI5U,KAAKC,MAAM6I,QAAQuE,YAAYuH,GAAGtO,OAAS67D,EAC9C,OAAOniE,KAAKC,MAAM6I,QAAQuE,YAAYuH,GAGxC,OAAO,QAGR7U,sBAAA5D,MAMA,SAAgBgmE,GACf,IAAK,IAAIvtD,EAAI,EAAGA,EAAI5U,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQ4Y,IAC1D,GAAI5U,KAAKC,MAAM6I,QAAQuE,YAAYuH,GAAGtO,OAAS67D,EAC9C,OAAOvtD,EAGT,OAAO,QAGR7U,eAAA5D,MAMA,SAASimE,GAER,IADA,IAAMz5D,EAAM,GACHwC,EAAI,EAAGA,EAAIi3D,EAAapmE,OAAQmP,IAAK,CAC7C,IAAMrC,EAAU9I,KAAKqiE,kBAAkBD,EAAaj3D,IACpD,GAAIrC,GAAWA,EAAQib,QAAS,CAC/B,IAAM66B,EAAkB,CACvBt4C,KAAMtG,KAAKC,MAAM6I,QAAQxC,KACzBsC,IAAK5I,KAAKsiE,gBAAgBF,EAAaj3D,KAElCyR,EAAmBC,EAAU7c,KAAKC,MAAMoI,YAE1CA,EAAau2C,EACbhiC,EAAiBtW,OAASs4C,EAAgBt4C,OAC7C+B,EAAarI,KAAKC,MAAM+D,WAAW66C,mBAAmBjiC,EAAkBgiC,IAEzEj2C,EAAI2F,KAAKtO,KAAKkiE,eAAenlD,kBAAkBjU,EAAST,KAG1D,OAAOM,KAGR5I,oBAAA5D,MAKA,WACC,IAAM+T,EAAW,GAEjB,GAAIhT,MAAM2F,QAAQ7C,KAAKC,MAAM6I,QAAQ6f,QAEpC,IADA,IAAMA,EAAS3oB,KAAKC,MAAM6I,QAAQ6f,OACzB/T,EAAI,EAAGA,EAAI+T,EAAO3sB,OAAQ4Y,IAC9B1X,MAAM2F,QAAQ8lB,EAAO/T,KACxB1E,EAAS5B,KAAKtO,KAAKuiE,SAAS55C,EAAO/T,UAKrC,IAAK,IAAIA,EAAI,EAAGA,EAAI5U,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQ4Y,IAC1D,GAAI5U,KAAKC,MAAM6I,QAAQuE,YAAYuH,GAAGmP,QAAS,CAC9C,IAAM66B,EAAkB,CACvBt4C,KAAMtG,KAAKC,MAAM6I,QAAQxC,KACzBsC,IAAK5I,KAAKsiE,gBAAgBtiE,KAAKC,MAAM6I,QAAQuE,YAAYuH,GAAGtO,OAEvDsW,EAAmBC,EAAU7c,KAAKC,MAAMoI,YAE1CA,EAAau2C,EACbhiC,EAAiBtW,OAASs4C,EAAgBt4C,OAC7C+B,EAAarI,KAAKC,MAAM+D,WAAW66C,mBAAmBjiC,EAAkBgiC,IAEzE1uC,EAAS5B,KAAK,CAACtO,KAAKkiE,eAAenlD,kBAAkB/c,KAAKC,MAAM6I,QAAQuE,YAAYuH,GAAIvM,KAI3F,OAAO6H,KACPnQ,wBAAA5D,MAED,SAAkB+T,GAEjB,IADA,IAAMiV,EAAO,GACJvQ,EAAI,EAAGA,EAAI1E,EAASlU,OAAQ4Y,IAAK,CAEzC,IADA,IAAMjM,EAAM,GACHy3B,EAAI,EAAGA,EAAIlwB,EAAS0E,GAAG5Y,OAAQokC,IACvCz3B,EAAI2F,KAAKzN,EAAAC,oBAAIf,KAAM,EAAI6U,GAAKwrB,EAAGn/B,UAAU,mCAAkCJ,EAAAC,yBAAMoP,EAAS0E,GAAGwrB,MAE9Fjb,EAAK7W,KAAKzN,EAAAC,oBAAIf,IAAK,EAAI6U,GAAIjM,IAG5B,OAAQ9H,EAAAC,uBAAOgO,KAAK,gBAAejO,EAAAC,2BAAQqkB,OAC3CplB,aAAA5D,MAED,WACC,IAAM+T,EAAWlQ,KAAKwiE,kBAAkBxiE,KAAKiuB,iBAE7C,OACCptB,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAMoI,YACnEpH,UAAWC,GAAW,8BAA+B,CAAE+Q,KAAQjS,KAAKC,MAAM6D,QAAUqO,GAAOC,QAC1FpS,KAAKC,MAAMiK,YAAclK,KAAKC,MAAMiK,YAAYpE,KAAO,OAEvDoK,EACDrP,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,YAAaC,SAAS,SAG5F83D,CAAA,EA7HmCphE,EAAMrB,cAkJ5BqE,IANS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D,GAEuC,KAAzBxE,CAA+Bo+D,IC7K1CQ,GAAWnnE,MCAXonE,GAAcpnE,GACdqnE,GDSJ,SAAoBC,EAAY9mE,GAC9B,IAAIG,EAAS,GAMb,OALAwmE,GAASG,GAAY,SAASzmE,EAAOJ,EAAO6mE,GACtC9mE,EAAUK,EAAOJ,EAAO6mE,IAC1B3mE,EAAOqS,KAAKnS,MAGTF,CACT,EChBIo8C,GAAe38C,GACfmH,GAAUvF,GACVulE,GCmBJ,SAAgB/mE,GACd,GAAwB,mBAAbA,EACT,MAAM,IAAIu6B,UAxBQ,uBA0BpB,OAAO,WACL,IAAIysC,EAAOjjE,UACX,OAAQijE,EAAK9mE,QACX,KAAK,EAAG,OAAQF,EAAUsC,KAAK4B,MAC/B,KAAK,EAAG,OAAQlE,EAAUsC,KAAK4B,KAAM8iE,EAAK,IAC1C,KAAK,EAAG,OAAQhnE,EAAUsC,KAAK4B,KAAM8iE,EAAK,GAAIA,EAAK,IACnD,KAAK,EAAG,OAAQhnE,EAAUsC,KAAK4B,KAAM8iE,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE9D,OAAQhnE,EAAU8D,MAAMI,KAAM8iE,GAElC,MDQAC,GALA,SAAgBH,EAAY9mE,GAE1B,OADW+G,GAAQ+/D,GAAcF,GAAcC,IACnCC,EAAYC,GAAOxqB,GAAav8C,IAC9C,k8CEf2D,IAErDknE,YAAqB3c,GAAA9mD,EAAAyjE,EAAS1oB,IAAT,IAAA76C,EAAAC,GAAAsjE,GAC1B,SAAAA,EAAY/iE,GAAO,IAAAwG,EAQoG,OARpG9G,OAAAqjE,IAClBv8D,EAAAhH,EAAArB,UAAM6B,IACDu0C,UAAYv0C,EAAM+D,WAAWiL,eAClCxI,EAAKw8D,WAAax8D,EAAKw8D,WAAWp8D,KAAIC,EAAAL,IACtCA,EAAKy8D,cAAgBz8D,EAAKy8D,cAAcr8D,KAAIC,EAAAL,IAC5CA,EAAK22C,cAAgB32C,EAAK22C,cAAcv2C,KAAIC,EAAAL,IAC5CA,EAAK08D,WAAa18D,EAAK08D,WAAWt8D,KAAIC,EAAAL,IACtCA,EAAKg9C,6BAA+Bh9C,EAAK26C,WAAWv6C,KAAIC,EAAAL,GAAOA,EAAKxG,MAAMoI,YAC1E5B,EAAK68C,sBAAwBt0C,EAA4BvI,EAAK+tC,UAAWtlC,GAAagyC,gCAAgCz6C,EA+JtH,OA9JA3G,EAAAkjE,IAAAjjE,iBAAA5D,MAED,SAAWinE,GACV,IAAM53C,EAAWxrB,KAAKC,MAAM6I,QAAQ0iB,SACpC,OAAOiyB,GAAUz9C,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,aAAa,SAASM,GACxF,OAAOA,EAAI6iB,KAAc43C,QAE1BrjE,iBAAA5D,MAED,SAAWknE,EAAarkD,GAGvB,IAFA,IAAMskD,EAAU,GACVv2C,EAAQ/sB,KAAKC,MAAM6I,QAAQ8G,SAASmd,MACjCnY,EAAI,EAAGA,EAAIyuD,EAAYrnE,OAAQ4Y,IAAK,CAC5C,IAAMwuD,EAAaC,EAAYzuD,GAI/B,GAAI5U,KAAKmjE,WAAWC,GAAc,EAAG,CACpC,IAAM3c,EAAS5pC,EAAU7c,KAAKC,MAAM6I,QAAQ2iB,YAGxCsB,EAEH05B,EAAO3mC,QAAQsjD,GAGf3c,EAAOzmD,KAAKC,MAAM6I,QAAQ0iB,UAAY43C,EAEvCE,EAAQh1D,KAAKm4C,IAIf,IAAMthC,EAAOnlB,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YAAYI,OAAO66D,GAClFtjE,KAAK66C,+BAA+B11B,MACpCplB,oBAAA5D,MAED,SAAcknE,EAAarkD,GAE1B,IAAMmG,EAAOnlB,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YACzDmjB,EAAWxrB,KAAKC,MAAM6I,QAAQ0iB,SAE9B83C,EAAUC,GAAOp+C,GAAM,SAAS4mC,GACrC,OAAOsX,EAAY1zD,QAAQo8C,EAAIvgC,KAAc,KAE9CxrB,KAAK66C,+BAA+ByoB,MAGrCvjE,oBAAA5D,MAIA,SAAcirC,GACb,IAAMz+B,EAAM,GAEZ,GAAI3I,KAAKC,MAAM9D,OAASirC,EAEvB,IADA,IAAMo8B,EAAkBx0D,EAAiChP,KAAKC,MAAM6I,SAC3D8L,EAAI,EAAGA,EAAI5U,KAAKC,MAAM9D,MAAMH,OAAQ4Y,IAAK,CAEjD,GADmB5U,KAAKC,MAAM9D,MAAMyY,GAAG4uD,KACpBp8B,GAASpnC,KAAKC,MAAM9D,MAAMyY,KAAOwyB,EACnD,OAAOpnC,KAAKC,MAAM9D,MAAMyY,GAK3B,IAAK,IAAItH,EAAM,EAAGA,EAAMtN,KAAKC,MAAM6I,QAAQuE,YAAYrR,OAAQsR,IAAO,CACrE,IAAMmlB,EAAazyB,KAAKC,MAAM6I,QAAQuE,YAAYC,GAClD,GAAImlB,EAAW3jB,OAASkB,EAAUC,OACjCtH,EAAI2F,KAAK84B,QACH,GAAI3U,EAAW3jB,OAASkB,EAAUyzD,WACxC96D,EAAI2F,KAAKU,EAAkCo4B,EAAO3U,GAAYrkB,QAAQ,IAAK,WACrE,QAAoC,IAAzBqkB,EAAWjO,UAC5B7b,EAAI2F,KAAKU,EAA2ByjB,EAAY2U,EAAOpnC,KAAKC,MAAM+D,WAAWk7C,kCACvE,QAA6C,IAAlCl/C,KAAKC,MAAM6I,QAAQ2iB,WAA4B,CAChE,IAAIi4C,EAAkBp2D,EAElBtN,KAAKC,MAAM6I,QAAQuE,YAAYrR,SAAWgE,KAAKC,MAAM6I,QAAQ2iB,WAAWzvB,SAC3E0nE,GAAmB,GAEpB,IAAMC,EAAkB3jE,KAAKC,MAAM6I,QAAQ2iB,WAAWi4C,GAClD1jE,KAAKC,MAAM6I,QAAQuE,YAAYq2D,GAAiB9zD,SAASC,WAAaC,EAAKC,UAC9EpH,EAAI2F,KAAK,IACCq1D,GAAmBA,EAAgBngD,aAE7C7a,EAAI2F,KAAKtO,KAAKC,MAAM+D,WAAWqC,iBAAiB,CAAEC,KAAMq9D,EAAgBngD,gBAExE7a,EAAI2F,KAAKq1D,QAEAlxC,EAAW7iB,UAAY6iB,EAAW7iB,SAASyT,aAEjDoP,EAAW7iB,SAASyT,aAAaG,aACpC7a,EAAI2F,KAAKtO,KAAKC,MAAM+D,WAAWqC,iBAAiB,CAAEC,KAAMmsB,EAAW7iB,SAASyT,aAAaG,gBAEzF7a,EAAI2F,KAAKmkB,EAAW7iB,SAASyT,cAG9B1a,EAAI2F,KAAK,MAGX,OAAO3F,KAGR5I,yBAAA5D,MAKA,SAAmB2lE,EAAmBjjD,GACrC,GAAIijD,GAAqBjjD,EAAe,CACvC,IACqC1S,EAD/By3D,EAAmB,GAAGx3D,EAAAC,GACRy1D,GAAiB,IAArC,IAAA11D,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAuC,CAAA,IAA5B46B,EAAKj7B,EAAAhQ,MACfynE,EAAiBt1D,KAAKtO,KAAKo9C,cAAchW,WACzCh4B,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,IACDtP,KAAK66C,+BAA+B+oB,EAAkB/kD,GACtD,IAAMi9B,EAAcj9B,EAAcA,EAAc7iB,OAAS,GACzDgE,KAAKq7C,eAAeS,OAErB/7C,aAAA5D,MAED,WACC,IAAMqkD,EAAoB,CACzBC,yBAA0BzgD,KAAKgiE,oBAG1BpoB,EAAgB55C,KAAKC,MAAM6I,SAAW9I,KAAKC,MAAM6I,QAAQ1G,QACzDgxC,EAAQpzC,KAAKk7C,YAAYl7C,KAAKC,MAAM6D,MAAO08C,EAAmB5G,GAC9Dn3C,EACL5B,EAAAC,yBACCD,EAAAC,qBAAKG,UAAU,uCACbmyC,GAEFvyC,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,eAGhEuwC,EAAmBz6C,KAAK6jE,oBAAoB7jE,KAAKC,MAAMm6B,cAE7D,OACCv5B,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAMoI,YACnEpH,UAAU,uCAEVJ,EAAAC,qBAAKG,UAAU,+BACdJ,EAAAC,cAAC4iD,IACAW,eAAgB5hD,EAChBqG,QAAS9I,KAAKC,MAAM6I,QACpB9E,WAAYhE,KAAKC,MAAM+D,WACvBqE,WAAYrI,KAAKC,MAAMoI,WACvBgzC,eAAgBr7C,KAAKq7C,eACrBR,+BAAgC76C,KAAK66C,+BACrCvoC,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCwzC,aAAct1C,GAAQzQ,KAAKC,MAAM9D,OACjCmnD,sBAAuBtjD,KAAKsjD,sBAC5BG,6BAA8BzjD,KAAKyjD,gCAGrC5iD,EAAAC,yBACE25C,QAIJuoB,CAAA,IAGFA,GAAsB7b,UAAY,CACjCtE,YAAauE,GAAUzqD,KACvBmM,QAASs+C,GAAUxrD,OAAOyrD,WAC1Bh/C,WAAY++C,GAAUxrD,OAAOyrD,WAC7BrjD,WAAYojD,GAAUxrD,OAAOyrD,WAC7BjuC,gBAAiBguC,GAAUzqD,KAAK0qD,WAChC9zC,YAAa6zC,GAAUI,KACvBptB,aAAcgtB,GAAU7qD,MACxBuH,MAAOsjD,GAAUG,OACjBprD,MAAOirD,GAAU7qD,MACjB2N,YAAak9C,GAAUxrD,OACvB4sB,cAAe4+B,GAAUI,KACzBtpB,aAAckpB,GAAUxrD,QAIzB,OASeiI,IATS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D+xB,aAAcr2B,EAASC,WAAWsgD,gBAAgBvgD,EAASsE,YAC3DmgB,cAAezkB,EAASC,WAAWiiD,iBAAiBliD,EAASsE,YAC7D61B,aAAcn6B,EAASC,WAAWkiD,gBAAgBniD,EAASsE,YAC3D,GAEuC,KAAzBxE,CAA+Bm/D,4aC1Ma,IAGrDc,YAA0Bzd,GAAA9mD,EAAAukE,EAASxpB,IAAT,IAAA76C,EAAAC,GAAAokE,GAE/B,SAAAA,EAAY7jE,GAAO,IAAAwG,EAGc,OAHd9G,OAAAmkE,IAClBr9D,EAAAhH,EAAArB,UAAM6B,IACDqmD,OAAS7/C,EAAK6/C,OAAOz/C,KAAIC,EAAAL,IAC9BA,EAAKi0C,qBAAsB,EAAKj0C,EAsDhC,OArDA3G,EAAAgkE,IAAA/jE,aAAA5D,MAED,WACC,IAAMsqD,EAASzmD,KAAKo9C,gBACdj4B,EAAOnlB,KAAKC,MAAM+D,WAAWqC,iBAAiBrG,KAAKC,MAAMoI,YAAYI,OAAO,CAACg+C,IACnFzmD,KAAK66C,+BAA+B11B,MACpCplB,aAAA5D,MAED,WACC,IAAMqkD,EAAoB,CACzBS,eAAgBltC,EAAc/T,KAAKC,MAAM+D,WAAWiL,eACnDC,GAAa83C,qCACdpG,kBAAmB7sC,EAAc/T,KAAKC,MAAM+D,WAAWiL,eACtDC,GAAa+3C,wCACdjG,kBAAmBhhD,KAAKsmD,QAGnB1M,EAAgB55C,KAAKC,MAAM6I,SAAW9I,KAAKC,MAAM6I,QAAQ1G,QACzDgxC,EAAQpzC,KAAKk7C,YAAYl7C,KAAKC,MAAM6D,MAAO08C,EAAmB5G,GAE9DyK,EAAkBxjD,EAAAC,yBACvBD,EAAAC,qBAAKG,UAAU,yCACbmyC,GAEFvyC,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,eAG/DuwC,EAAmBz6C,KAAK6jE,oBAAoB7jE,KAAKC,MAAMm6B,cAC7D,OACCv5B,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAMoI,YACnEpH,UAAU,0BAEVJ,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAMoI,YACnEpH,UAAU,4BAEVJ,EAAAC,cAAC4iD,IACAW,eAAgBA,EAChBv7C,QAAS9I,KAAKC,MAAM6I,QACpB9E,WAAYhE,KAAKC,MAAM+D,WACvBqE,WAAYrI,KAAKC,MAAMoI,WACvBgzC,eAAgBr7C,KAAKq7C,eACrBR,+BAAgC76C,KAAK66C,+BACrCvoC,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCwzC,aAAct1C,GAAQzQ,KAAKC,MAAM9D,OACjCmnD,sBAAuB9C,EAAkBS,eACzCwC,6BAA8BzjD,KAAKsmD,UAGrCzlD,EAAAC,yBACE25C,QAIJqpB,CAAA,IAGFA,GAA2B3c,UAAY,CACtCtE,YAAauE,GAAUzqD,KACvBmM,QAASs+C,GAAUxrD,OAAOyrD,WAC1Bh/C,WAAY++C,GAAUxrD,OAAOyrD,WAC7BrjD,WAAYojD,GAAUxrD,OAAOyrD,WAC7B9zC,YAAa6zC,GAAUI,KACvBptB,aAAcgtB,GAAU7qD,MACxBuH,MAAOsjD,GAAUG,OACjBprD,MAAOirD,GAAU7qD,MACjB2N,YAAak9C,GAAUxrD,OACvB4sB,cAAe4+B,GAAUI,KACzBtpB,aAAckpB,GAAUxrD,QAGzB,OASeiI,IATS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D+xB,aAAcr2B,EAASC,WAAWsgD,gBAAgBvgD,EAASsE,YAC3DmgB,cAAezkB,EAASC,WAAWiiD,iBAAiBliD,EAASsE,YAC7D61B,aAAcn6B,EAASC,WAAWkiD,gBAAgBniD,EAASsE,YAC3D,GAEuC,KAAzBxE,CAA+BigE,4aCtFa,IAGrDC,YAAoB1d,GAAA9mD,EAAAwkE,EAASzpB,IAAT,IAAA76C,EAAAC,GAAAqkE,GACzB,SAAAA,EAAY9jE,GAAO,IAAAwG,EAIqD,OAJrD9G,OAAAokE,IAClBt9D,EAAAhH,EAAArB,UAAM6B,IACDu0C,UAAYv0C,EAAM+D,WAAWiL,eAClCxI,EAAK66C,aAAe76C,EAAK66C,aAAaz6C,KAAIC,EAAAL,IAC1CA,EAAK6yC,cAAgB7yC,EAAKxG,MAAM+D,WAAW+R,cAAcujC,cAAc7yC,EAqDvE,OApDA3G,EAAAikE,IAAAhkE,mBAAA5D,MAED,WACK6D,KAAKs5C,eACRt5C,KAAKs5C,cAAc,CAClBxzC,KAAM,OACNuC,WAAYrI,KAAKC,MAAMoI,gBAGzBtI,aAAA5D,MAED,WACC,IAAM6nE,KAAgBv7D,OAAMzI,KAAKC,MAAM6I,QAAQxC,2BACzC29D,EAAmBlwD,EAAc/T,KAAKw0C,UAAWtlC,GAAag1D,iCAC9D9vC,EAAcp0B,KAAKC,MAAM+D,WAAWu/C,YAAYygB,EAAkBC,GAElEzjB,EAAoBxgD,KAAKs5C,cAAgB,CAC9CgI,aAActhD,KAAKshD,aACnBp0C,MAAOknB,GACJ,KAEEwlB,EAAgB55C,KAAKC,MAAM6I,SAAW9I,KAAKC,MAAM6I,QAAQ1G,QACzDgxC,EAAQpzC,KAAKk7C,YAAYl7C,KAAKC,MAAM6D,MAAO08C,EAAmB5G,GAC9Dn3C,EACL5B,EAAAC,yBACCD,EAAAC,qBAAKG,UAAU,uCACbmyC,GAEFvyC,EAAAC,cAACuxC,IAAkBvuC,MAAO9D,KAAKC,MAAM6D,MAAOoG,YAAalK,KAAKC,MAAMiK,eAGtE,OACCrJ,EAAAC,qBAAK,UAAS0R,GAAuBxS,KAAKC,MAAM6I,QAAS9I,KAAKC,MAAMoI,YACnEpH,UAAU,qCAETjB,KAAKC,MAAMm0C,YACZvzC,EAAAC,qBAAKG,UAAU,6BACdJ,EAAAC,cAAC4iD,IACAW,eAAgB5hD,EAChBqG,QAAS9I,KAAKC,MAAM6I,QACpB9E,WAAYhE,KAAKC,MAAM+D,WACvBqE,WAAYrI,KAAKC,MAAMoI,WACvBgzC,eAAgBr7C,KAAKq7C,eACrBR,+BAAgC76C,KAAK66C,+BACrCvoC,SAAUtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SACtCwzC,aAAct1C,GAAQzQ,KAAKC,MAAM9D,OACjCmnD,sBAAuBlvB,EACvBqvB,6BAA8BzjD,KAAKshD,qBAKvCyiB,CAAA,IAGFA,GAAqB5c,UAAY,CAChCtE,YAAauE,GAAUzqD,KACvBmM,QAASs+C,GAAUxrD,OAAOyrD,WAC1Bh/C,WAAY++C,GAAUxrD,OAAOyrD,WAC7BrjD,WAAYojD,GAAUxrD,OAAOyrD,WAC7BjT,YAAagT,GAAUE,QACvB/zC,YAAa6zC,GAAUI,KACvBptB,aAAcgtB,GAAU7qD,MACxBuH,MAAOsjD,GAAUG,OACjBprD,MAAOirD,GAAU7qD,MACjB2N,YAAak9C,GAAUxrD,OACvB4sB,cAAe4+B,GAAUI,KACzBtpB,aAAckpB,GAAUxrD,OACxB8vB,eAAgB07B,GAAUI,MAI3B,OAUe3jD,IAVS,SAACC,EAAOC,GAAQ,MAAM,CAC7C5H,MAAO4H,EAASC,WAAWqC,iBAAiBtC,EAASsE,YACrDvE,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD6B,YAAanG,EAASC,WAAWwM,gBAAgBzM,EAASsE,YAC1D+xB,aAAcr2B,EAASC,WAAWsgD,gBAAgBvgD,EAASsE,YAC3DmgB,cAAezkB,EAASC,WAAWiiD,iBAAiBliD,EAASsE,YAC7D61B,aAAcn6B,EAASC,WAAWkiD,gBAAgBniD,EAASsE,YAC3DqjB,eAAgB3nB,EAASC,WAAWmgE,kBAAkBpgE,EAASsE,YAC/D,GAEuC,KAAzBxE,CAA+BkgE,4aC1Fc,IAEtDK,YAAWl+D,GAAA3G,EAAA6kE,EAAAl+D,GAAA,IAAAzG,EAAAC,GAAA0kE,GAChB,SAAAA,EAAYnkE,GAAO,IAAAwG,EAGE,OAHF9G,OAAAykE,IAClB39D,EAAAhH,EAAArB,UAAM6B,IACD0Z,cAAgB,IAAIhB,GAAclS,EAAKxG,MAAM+D,YAClDyC,EAAK8B,KAAOC,KAAQ/B,EAuFpB,OAtFA3G,EAAAskE,IAAArkE,aAAA5D,MAED,WACC,GAAI6D,KAAKC,MAAM6I,QAAQkiB,cAAgB+F,EAAY3e,OAClD,OAAO,KAER,IAGIlF,EACA1K,EAECqT,EAuBAwuD,EA7BC5uD,EAASzV,KAAKC,MAAM6D,QAAUqO,GAAOC,OACrCE,EAAWtS,KAAKC,MAAM6D,QAAUqO,GAAOI,SAIzCvS,KAAKC,MAAM6I,QAAQoE,QAA6C,IAApClN,KAAKC,MAAM6I,QAAQ6a,eAE9C3jB,KAAKC,MAAM6I,QAAQtG,cAAgBiO,GAAQzQ,KAAKC,MAAM6I,QAAQtG,YAAY2G,QAC5B,aAA7CnJ,KAAKC,MAAM6I,QAAQtG,YAAYoT,UAClCpT,EAAc3B,EAAAC,qBAAKG,UAAU,kCAAkCjB,KAAKC,MAAM6I,QAAQtG,YAAY2G,OAI1FnJ,KAAKC,MAAM6I,QAAQtG,YAAY8O,OAClCtR,KAAKC,MAAM6I,QAAQtG,YAAY8O,KAAKjJ,WAAarI,KAAKC,MAAMoI,YAE7DwN,EAAWhV,EAAAC,cAAC4N,IACXpG,MAAEG,OAAKzI,KAAKuI,wBAAIE,OAAkBzI,KAAKC,MAAM6I,QAAQxC,MACrDqI,IAAK3O,KAAKC,MAAM6I,QAAQtG,YAAY2G,KACpCmI,KAAMtR,KAAKC,MAAM6I,QAAQtG,YAAY8O,KAAOtR,KAAKC,MAAM6I,QAAQtG,YAAY8O,KAAO,KAClFwE,mBAAoB9V,KAAKC,MAAM+D,WAAW+R,cAAcD,mBACxDE,UAAU,SACVC,QAASR,GAAUnD,EACnB4D,uBAEArV,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAaC,YAAanV,UAAU,gDAK/CjB,KAAKC,MAAM6I,QAAQ0c,mBAAqBxlB,KAAKC,MAAM6I,QAAQub,SAC9DggD,EACCxjE,EAAAC,sBAAMG,UAAU,wBACd8S,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAao1D,2BAGzDtkE,KAAKC,MAAM6I,QAAQ0c,mBAAuB,aAAcxlB,KAAKC,MAAM6I,UAC9Eu7D,EACCxjE,EAAAC,sBAAMG,UAAU,wBACd8S,EAAc/T,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAaq1D,4BAIrEr3D,EACCrM,EAAAC,qBAAKG,UAAWC,GAAW,6BAA8B,CAAE,iBAA6C,IAA5BlB,KAAKC,MAAMwzC,gBACtF5yC,EAAAC,uBAAOG,UAAU,4BAA4BjB,KAAKC,MAAM6I,QAAQoE,MAAM/D,MACrEk7D,EACAxuD,IAIJ,IAAMe,EAAS5W,KAAK2Z,cAAc8D,eAAe,EAAGzd,KAAKC,MAAM6I,QAAQ8N,QAEjE3V,EAAYC,GAAW,0BAA2B,CAAE+Q,KAAQwD,IAOlE,OAAIzV,KAAKC,MAAMukE,mBAAmB38D,SAAS7H,KAAKC,MAAM6I,QAAQkiB,aAE5DnqB,EAAAC,qBAAK,UAAS,iBAAmBd,KAAKC,MAAM6I,QAAQxC,KACnDrF,UAAWA,EAAWqR,SAAUA,GAE/BpF,EACA1K,GAKH3B,EAAAC,qBAAK,UAAS,iBAAmBd,KAAKC,MAAM6I,QAAQxC,KACnDrF,UAAWA,EAAWqR,SAAUA,GAE/BpF,EACA1K,EACAxC,KAAKC,MAAMsxB,WACX3a,OAGHwtD,CAAA,EA3FwBvjE,EAAMrB,cA4GjBqE,IAJS,SAACC,EAAOC,GAAQ,MAAM,CAC7CD,MAAOC,EAASC,WAAWqwC,gBAAgBtwC,EAASsE,YACpD,GAEuC,KAAzBxE,CAA+BugE,IChFxCI,GAAqB,CAC1BzzC,EAAYY,YACZZ,EAAY3e,OACZ2e,EAAYwC,UACZxC,EAAYsC,YACZtC,EAAY0zC,QACZ1zC,EAAYiC,cACZjC,EAAYU,SACZV,EAAYsB,UACZtB,EAAY0C,UACZ1C,EAAY2zC,WACZ3zC,EAAY4zC,KACZ5zC,EAAY6zC,OACZ7zC,EAAYa,aACZb,EAAYc,cACZd,EAAY2D,SACZ3D,EAAYysB,cACZzsB,EAAY2C,UACZ3C,EAAYoB,WACZpB,EAAY8zC,KACZ9zC,EAAYiB,YACZjB,EAAY+zC,YACZ/zC,EAAY8uC,aACZ9uC,EAAYmB,cAGP6yC,GAAgB,CACrBh0C,EAAY4zC,KACZ5zC,EAAYysB,cACZzsB,EAAYa,aACZb,EAAYc,cACZd,EAAYkD,eACZlD,EAAYmD,qBAGQ3a,cAEpB,SAAAA,EAAYvV,GAAYrE,OAAA4Z,GACvBvZ,KAAKuT,cAAcvP,GAAa4Z,GAAI5Z,EAAWgiC,sBAAuB,eAAe,GACrFhmC,KAAKgE,WAAaA,EAClBhE,KAAK2Z,cAAgB,IAAIhB,GAAc3Y,KAAKgE,YAqS5C,OApSAlE,EAAAyZ,IAAAxZ,mBAAA5D,MAED,SAAaid,EAAiBnE,GAC7BjV,KAAKiV,UAAYA,EACjBjV,KAAKoZ,gBAAkBA,KACvBrZ,qBAAA5D,MAED,SAAeoX,GACdvT,KAAKuT,YAAcA,KAGpBxT,wBAAA5D,MAKA,SAAkB2M,EAAST,EAAY02C,GAEtC,GADe/+C,KAAKgE,WAAWqwC,gBAAgBhsC,KAAgB8J,GAAOC,OAErE,OAAO,KAGR,IAAMmf,EAAavxB,KAAKq/C,cAAcv2C,EAAST,EAAY02C,GACrD99C,EAAY6H,EAAQ7H,UAAY6H,EAAQ7H,UAAY,GAO1D,OAAIujE,GAAmB38D,SAASiB,EAAQkiB,aAChCuG,EAIP1wB,EAAAC,qBAAKf,IAAK,mBAAqB+I,EAAQxC,KAAM,UAAS,mBAAqBwC,EAAQxC,KAClFrF,UAAWC,GAAW,0BAA2BD,IAEjDJ,EAAAC,cAACsjE,IACArkE,IAAK,aAAe+I,EAAQxC,KAC5BtC,WAAYhE,KAAKgE,WACjBqE,WAAYA,EACZS,QAASA,EACTyoB,WAAYA,EACZizC,mBAAoBA,GACpB/wB,aAAgBsxB,GAAcl9D,SAASiB,EAAQkiB,mBAKnDjrB,oBAAA5D,MACA,SAAc2M,EAAST,EAAY02C,GAClC,IAAKj2C,IAAYT,EAChB,OAAO,KAGR,IAqBI28D,EArBEn8B,EAAar2B,GAAuBnK,GACpCoN,EAASzV,KAAKgE,WAAWqwC,gBAAgBhsC,KAAgB8J,GAAOC,OAChEwE,EAAS5W,KAAK2Z,cAAc8D,eAAe,EAAG3U,EAAQ8N,QACtD3W,EAAQ,GAmBd,OAlBAA,EAAMF,IAAM8oC,EACZ5oC,EAAM6I,QAAUA,EAChB7I,EAAM+D,WAAahE,KAAKgE,WACxB/D,EAAMoI,WAAaA,EACnBpI,EAAMm0C,YACLvzC,EAAAC,cAACsjE,IACArkE,IAAK,aAAe+I,EAAQxC,KAC5BtC,WAAYhE,KAAKgE,WACjBqE,WAAYA,EACZS,QAASA,EACT07D,mBAAoBA,GACpB/wB,aAAgBsxB,GAAcl9D,SAASiB,EAAQkiB,eAG7C+zB,IACH9+C,EAAMwzC,aAAesL,EAAU3L,OAGxBtqC,EAAQkiB,aAChB,KAAM+F,EAAY3e,OACjB,OAAO,KACR,KAAM2e,EAAYsB,UACjB2yC,EAAkBnkE,EAAAC,cAACyzC,GAAqBt0C,GACxC,MACD,KAAM8wB,EAAY2D,SAGlB,KAAM3D,EAAY2C,UACjBsxC,EAAkBnkE,EAAAC,cAAC2xC,GAAoBxyC,GACvC,MACD,KAAM8wB,EAAYU,SACjBuzC,EAAkBnkE,EAAAC,cAACk1C,GAAoB/1C,GACvC,MACD,KAAM8wB,EAAY6zC,OACjBI,EAAkBnkE,EAAAC,cAACu7D,GAAkBp8D,GACrC,MACD,KAAM8wB,EAAY4zC,KACjBK,EAAkBnkE,EAAAC,cAACslD,GAAgBnmD,GACnC,MACD,KAAM8wB,EAAYoB,WACjB6yC,EAAkBnkE,EAAAC,cAACmyD,GAAiB56C,MAC/BpY,GACJsT,YAAavT,KAAKuT,eAEnB,MACD,KAAMwd,EAAY8zC,KACjBG,EAAkBnkE,EAAAC,cAACmyD,GAAiB56C,MAC/BpY,GACJizD,SAAS,EACTiH,cAAc,EACd5mD,YAAavT,KAAKuT,eAEnB,MACD,KAAMwd,EAAY2zC,WACjBM,EAAkBnkE,EAAAC,cAACu0C,GACdp1C,GAEL,MACD,KAAM8wB,EAAYiC,cACjBgyC,EAAkBnkE,EAAAC,cAACk6D,GAAoB/6D,GACvC,MACD,KAAM8wB,EAAYsC,YAClB,KAAMtC,EAAY0zC,QACjBO,EAAkBnkE,EAAAC,cAACu1C,GAAuBp2C,GAC1C,MACD,KAAM8wB,EAAYwC,UACjByxC,EAAkBnkE,EAAAC,cAAC46D,GAAqBz7D,GACxC,MACD,KAAM8wB,EAAY0C,UACjBuxC,EAAkBnkE,EAAAC,cAACg7D,GAAqB77D,GACxC,MACD,KAAM8wB,EAAYkC,SACjB+xC,EAAkBnkE,EAAAC,cAACm7D,GAAoBh8D,GACvC,MACD,KAAM8wB,EAAYY,YAIhBqzC,EAHIjmB,EAGcl+C,EAAAC,cAAC2xC,GAAoBxyC,GAFrBY,EAAAC,cAACs8D,GAAuBn9D,GAI3C,MACD,KAAM8wB,EAAYC,SACjBg0C,EAAkBnkE,EAAAC,cAACy8D,GAAoBt9D,GACvC,MACD,KAAM8wB,EAAYiB,YAClB,KAAMjB,EAAY8uC,aACjBmF,EAAkBnkE,EAAAC,cAAC4tD,GAAQr2C,MACtBpY,GACJsT,YAAavT,KAAKuT,eAEnB,MACD,KAAMwd,EAAY+zC,YACjBE,EAAkBnkE,EAAAC,cAACw/D,GAAuBrgE,GAC1C,MACD,KAAM8wB,EAAYmB,aAEhB8yC,GADIjmB,GAAcA,GAAaA,EAAUrE,oBACvB75C,EAAAC,cAAC4tD,GAAQr2C,MACtBpY,GACJsT,YAAavT,KAAKuT,eAGD1S,EAAAC,cAAC2xC,GAAoBxyC,GAExC,MACD,KAAM8wB,EAAYa,aAIhBozC,EAHIjmB,EAGcl+C,EAAAC,cAAC2xC,GAAoBxyC,GAFrBY,EAAAC,cAAC2gE,GAAwBxhE,GAI5C,MACD,KAAM8wB,EAAYc,cAQhBmzC,EAPIjmB,EAOcl+C,EAAAC,cAAC2xC,GAAoBxyC,GANrBY,EAAAC,cAAC+gE,GAAoBxpD,MAClCpY,GACJmZ,gBAAiBpZ,KAAKoZ,gBACtB7F,YAAavT,KAAKuT,eAKpB,MACD,KAAMwd,EAAYkD,eAShB+wC,EARIjmB,EAQcl+C,EAAAC,cAAC2xC,GAAoBxyC,GAPrBY,EAAAC,cAACkiE,GAAqB3qD,MACnCpY,GACJ4iD,YAAa7iD,KAAKiV,UAClBmE,gBAAiBpZ,KAAKoZ,gBACtB7F,YAAavT,KAAKuT,eAKpB,MACD,KAAMwd,EAAYmD,oBAQhB8wC,EAPIjmB,EAOcl+C,EAAAC,cAAC2xC,GAAoBxyC,GANrBY,EAAAC,cAACgjE,GAA0BzrD,MACxCpY,GACJ4iD,YAAa7iD,KAAKiV,UAClB1B,YAAavT,KAAKuT,eAKpB,MACD,KAAMwd,EAAYysB,cAQhBwnB,EAPIjmB,EAOcl+C,EAAAC,cAAC2xC,GAAoBxyC,GANrBY,EAAAC,cAACijE,GAAoB1rD,MAClCpY,GACJ4iD,YAAa7iD,KAAKiV,UAClB1B,YAAavT,KAAKuT,eAKpB,MACD,KAAMwd,EAAY/B,OACjBg2C,EACCnkE,EAAAC,qBAAKG,UAAU,yBAAyBlB,IAAK8oC,GAC3C7oC,KAAKgE,WAAWmvC,iBAAiB9qC,EAAYS,EAASi2C,IAGzD,MACD,KAAMhuB,EAAY0D,gBACjBuwC,EAAkBnkE,EAAAC,cAACmhE,GAAsB5pD,MACpCpY,GACJ4iD,YAAa7iD,KAAKiV,UAClBmE,gBAAiBpZ,KAAKoZ,gBACtB7F,YAAavT,KAAKuT,eAEnB,MACD,QACCyxD,EAAkBnkE,EAAAC,cAAC2xC,GAAoBxyC,GASxC,GAAIukE,GAAmB38D,SAASiB,EAAQkiB,aAAc,CACrD,GAAI+zB,EAEH,OAAOimB,EAER,IAAM/jE,EAAY6H,EAAQ7H,UAAY6H,EAAQ7H,UAAY,GAC1D,OACCJ,EAAAC,qBAAKf,IAAK,mBAAqB+I,EAAQxC,KAAM,UAAS,mBAAqBwC,EAAQxC,KAClFrF,UAAWC,GACV,0BACA,CAAE+Q,KAAQwD,EAAQmB,OAAUH,GAAI3N,EAAS,2BACzC7H,IAGA+jE,EACApuD,GAIJ,OAAOouD,KAGRjlE,wBAAA5D,MASA,SAAkB+qB,EAAUI,GAAgE,IAArDnf,IAAKtI,UAAA7D,eAAAY,IAAAiD,eAAAA,aAAS0tB,EAAa1tB,UAAA7D,eAAAY,IAAAiD,aAAAA,aAAGu1B,GAAepG,OACnF,IAAK9H,EACJ,OAAO,KAER,IAAMqQ,EAAUxN,GAAYyN,gBAAgB,KAAMtQ,EAASrJ,WAAYqJ,EAAS+9C,cAAe/9C,EAASH,SACxG,GAAIwQ,GAAWA,EAAQjP,kBAAmB,CACzC,IAEIkB,EAFEnD,EAAe,IAAI3F,GAAawG,EAASvG,WACzCuP,EAAOqH,EAAQjP,kBAAkB6H,aAAa7I,GAEhD4I,EAAKrgB,aAAeC,EAAKC,WAAawnB,EAAQnN,oBACjDZ,EAAe+N,EAAQnN,kBAAkBgG,aAAaF,EAAKrK,aAE5D,IAAM4H,EAAiB,CACtBtlB,MAAOA,EACPolB,cAAeA,GAGhB,OADgB+C,GAAYiH,EAAQjP,kBAAmBhB,EAAW,KAAMkC,EAAcnD,EAAc,KAAM,KAAM,KAAMoH,GAGvH,OAAO,SACPlU,CAAA,IC/WF,SAAS6kB,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAE/C,GAD0B,CAAC,iBAAkB,kBAAmB,uBAC1C2L,QAAQ22B,EAAUx9B,QAAQkiB,cAAgB,EAAG,CAClE,IAAMllB,EAAOwd,EAAOgjB,EAAUnqC,OAC9B,MAAgB,cAAT2J,GAAiC,SAATA,GAAmBivB,OAAOuR,EAAUnqC,OAAOH,OAAS,EAGpF,OADA4X,EAAOrJ,KAAK,4EAA8E+7B,EAAUx9B,QAAQkiB,cACrG,CACR,yhCCNA,SAASoT,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAE/C,GAD0B,CAAC,aACL2L,QAAQ22B,EAAUx9B,QAAQkiB,cAAgB,EAAG,CAClE,IAAMk6C,EAAkBlhE,EAAWk7C,2BACnC,IAAKgmB,EACJ,OAAO,EAER,IAEmC/4D,EAF/Bg5D,GAAe,EACnB/4D,EAAAC,GACoB64D,GAAe,IAAnC,IAAA94D,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAqC,CAAA,IAA1B46B,EAAKj7B,EAAAhQ,MACf,GAAIipE,EAAuB9+B,EAAUnqC,MAAOirC,GAAQ,CACnD+9B,GAAe,EACf,cAGF/1D,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,IACA,IAAK61D,EAAc,CAClB,IAC2CnnD,EADrCqnD,EAkBT,SAAgC/+B,EAAWtiC,GAC1C,IAAMqhE,EAAoB,GAE1B,QAA6C,IAAlC/+B,EAAUx9B,QAAQg2B,YAA6B,CACzD,IAAMlxB,EAAW5J,EAAWqC,iBAAiB,CAAEC,KAAMggC,EAAUh+B,GAAGhC,KAAMqC,IAAK29B,EAAUh+B,GAAGK,MACtFzL,MAAM2F,QAAQ+K,IACjBA,EAASjE,SAAQ,SAACxN,EAAOmR,GACpBA,IAAQg5B,EAAUx9B,QAAQg2B,cACV96B,EAAW2I,WAAW,CAAErG,KAAMggC,EAAUh+B,GAAGhC,KAAMsC,IAAK0E,IAC1DwB,OAASkB,EAAUC,QACjCo1D,EAAkB/2D,KAAKnS,OAM5B,OAAOkpE,CACR,CAnC6BC,CAAuBh/B,EAAWtiC,GAAYia,EAAA5R,GAC9Cg5D,GAAiB,IAA3C,IAAApnD,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAA6C,CAAA,IAAlC+4D,EAAWvnD,EAAA7hB,MACrB,GAAIwgC,EAAQ2J,EAAUnqC,MAAOopE,GAAc,CAC1CJ,GAAe,EACf,cAED/1D,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,KAEF,OAAO61D,EAGR,OADAvxD,EAAOrJ,KAAK,4EAA8E+7B,EAAUx9B,QAAQkiB,cACrG,CACR,CC9BA,SAASoT,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IAAMkhE,EAAkBlhE,EAAWk7C,2BACnC,IAAKgmB,EACJ,OAAO,EAGR,IAAMl6C,EAAcsb,EAAUx9B,QAAQkiB,YACtC,OAAQA,GACR,IAAK,gBACL,IAAK,eACJ,GAAI9tB,MAAM2F,QAAQyjC,EAAUnqC,aAAiD,IAAhCmqC,EAAUx9B,QAAQsb,UAA2B,CACzF,GAAIkiB,EAAUnqC,MAAMH,OAAS,EAAG,CAC/B,IAAIwpE,GAAW,EAIf,OAHAl/B,EAAUnqC,MAAMwN,SAAQ,SAACkrB,GACxB2wC,EAAWA,QAAmE,IAAhDC,GAAeP,EAAiBrwC,MAExD2wC,EAER,OAAO,EAER,YAAmE,IAArDC,GAAeP,EAAiB5+B,EAAUnqC,OAEzD,QAEC,OADAyX,EAAOrJ,KAAK,6EAA+EygB,IACpF,EAET,CAGA,SAASy6C,GAAeza,EAAS5jB,GAEhC,QACE,MAAOA,IAA2C32B,GAAQ22B,KAExD4jB,EAAQxoB,MAAK,SAASkjC,GACvB,OAAON,EAAuBh+B,EAAOs+B,KAGzC,CC9DA,IAAIjnE,GAAWnD,OCAXqqE,GDYJ,SAAoB/pE,EAAQqE,GAC1B,OAAOxB,GAASwB,GAAO,SAASF,GAC9B,OAAOnE,EAAOmE,KAElB,ECfI0D,GAAOjI,OCDPoqE,GAActqE,GACdg+B,GAAc99B,GACdqqE,GAAWnqE,EACX48C,GAAYh7C,GACZkS,GDyBJ,SAAgB5T,GACd,OAAiB,MAAVA,EAAiB,GAAK+pE,GAAW/pE,EAAQ6H,GAAK7H,GACvD,ECxBI28C,GAAY/U,KAAK4T,WAgCrB,SAAkBwrB,EAAYzmE,EAAOs8C,EAAWrf,GAC9CwpC,EAAatpC,GAAYspC,GAAcA,EAAapzD,GAAOozD,GAC3DnqB,EAAaA,IAAcrf,EAASkf,GAAUG,GAAa,EAE3D,IAAIz8C,EAAS4mE,EAAW5mE,OAIxB,OAHIy8C,EAAY,IACdA,EAAYF,GAAUv8C,EAASy8C,EAAW,IAErCotB,GAASjD,GACXnqB,GAAaz8C,GAAU4mE,EAAWjzD,QAAQxT,EAAOs8C,IAAc,IAC7Dz8C,GAAU4pE,GAAYhD,EAAYzmE,EAAOs8C,IAAc,CAChE,EC3BA,SAASra,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAE/C,GAD4B,CAAC,WAAY,cAAe,iBAChC2L,QAAQ22B,EAAUx9B,QAAQkiB,aAAe,EAAG,CACnE,IAAM86C,EAAQ/uC,EAAUuP,EAAUnqC,OAClC,QAA0B,IAAfkqC,EACV,OAAQy/B,GACR,IAAK,YACJ,OAAO,EACR,IAAK,SACL,IAAK,SACJ,OAAOC,GAASz/B,EAAUnqC,MAAOkqC,EAAWlqC,OAC7C,QAEC,OADAyX,EAAOrJ,KAAK,6DAA+D+7B,EAAU3f,MAAQ,yBAA2Bm/C,IACjH,OAEF,QAAqB,IAAV3pE,EACjB,OAAQ2pE,GACR,IAAK,YACJ,OAAO,EACR,IAAK,SACL,IAAK,SACJ,OAAOC,GAASz/B,EAAUnqC,MAAOA,GAClC,QAEC,OADAyX,EAAOrJ,KAAK,6DAA+D+7B,EAAU3f,MAAQ,yBAA2Bm/C,IACjH,EAGT,MAAM,IAAIpnC,MAAM,2DAGjB,OADA9qB,EAAOrJ,KAAK,wEAA0E+7B,EAAUx9B,QAAQkiB,cACjG,CACR,CChCA,SAASoT,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,GAAsC,kBAAlCsiC,EAAUx9B,QAAQkiB,YAAiC,CACtD,IAAM86C,EAAQ/uC,EAAUuP,EAAUnqC,OAClC,GAAIkqC,EAAY,CACf,GAAwB,OAApBC,EAAUnqC,OAAuC,OAArBkqC,EAAWlqC,MAC1C,OAAOmqC,EAAUnqC,QAAUkqC,EAAWlqC,MAEvC,OAAQ2pE,GACR,IAAK,YACL,IAAK,UACL,IAAK,SACJ,OAAOx/B,EAAUnqC,QAAUkqC,EAAWlqC,MACvC,IAAK,SACJ,OAAOmqC,EAAUnqC,MAAM+pB,SAAWmgB,EAAWlqC,MAAM+pB,OACpD,IAAK,SACJ,OAAOhY,KAAKC,UAAUm4B,EAAUnqC,SAAW+R,KAAKC,UAAUk4B,EAAWlqC,OACtE,QAEC,OADAyX,EAAOrJ,KAAK,2DAA6D+7B,EAAU3f,MAAQ,yBAA2Bm/C,IAC/G,QAEF,QAAqB,IAAV3pE,EAAuB,CACxC,GAAwB,OAApBmqC,EAAUnqC,OAA4B,OAAVA,EAC/B,OAAOmqC,EAAUnqC,QAAUA,EAE5B,OAAQ2pE,GACR,IAAK,YACL,IAAK,UACL,IAAK,SACJ,OAAOx/B,EAAUnqC,QAAUA,EAC5B,IAAK,SACJ,OAAOmqC,EAAUnqC,MAAM+pB,SAAW/pB,EAAM8B,WAAWioB,OACpD,IAAK,SACJ,OAAOhY,KAAKC,UAAUm4B,EAAUnqC,SAAW+R,KAAKC,UAAUhS,GAC3D,QAEC,OADAyX,EAAOrJ,KAAK,2DAA6D+7B,EAAU3f,MAAQ,yBAA2Bm/C,IAC/G,GAGT,MAAM,IAAIpnC,MAAM,yDAGjB,OADA9qB,EAAOrJ,KAAK,sEAAwE+7B,EAAUx9B,QAAQkiB,cAC/F,CACR,CC3CA,SAASoT,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IAAM8hE,EAAQ/uC,EAAUuP,EAAUnqC,OAClC,OAAQ2pE,GACR,IAAK,YACL,IAAK,SACJ,QAA0B,IAAfz/B,EACV,MAAgC,iBAArBA,EAAWlqC,OAGfmqC,EAAUnqC,MAAQkqC,EAAWlqC,MAC9B,QAAqB,IAAVA,EACjB,OAAc,OAAVA,GAGGmqC,EAAUnqC,MAAQA,EAE1B,MAAM,IAAIuiC,MAAM,gEACjB,IAAK,SACJ,OAAwB,OAApB4H,EAAUnqC,OAAuC,OAArBkqC,EAAWlqC,OAA4B,OAAVA,EAI9D,QAEC,OADAyX,EAAOrJ,KAAK,gEAAkE+7B,EAAU3f,MAAQ,yBAA2Bm/C,IACpH,EAET,CCzBA,SAAS1nC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IAAM+hC,EAAmB/hC,EAAWgiC,sBAC9B8/B,EAAQ/uC,EAAUuP,EAAUnqC,OAClC,OAAQ2pE,GACR,IAAK,YACJ,OAAO,EACR,IAAK,UACJ,OAAO,EACR,IAAK,SACJ,OAAO//B,EAAiBigC,WAA+C,IAAlC1/B,EAAUnqC,MAAM+pB,OAAOlqB,OAA0C,IAA3BsqC,EAAUnqC,MAAMH,OAC5F,IAAK,SACJ,OAA2B,OAApBsqC,EAAUnqC,MAClB,IAAK,SACJ,OAA2B,OAApBmqC,EAAUnqC,OAAmD,IAA3BmqC,EAAUnqC,MAAMH,OAC1D,QAEC,OADA4X,EAAOrJ,KAAK,4DAA8D+7B,EAAU3f,MAAQ,yBAA2Bm/C,IAChH,EAET,CCnBA,SAAS1nC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IAAM+hC,EAAmB/hC,EAAWgiC,sBAC9B8/B,EAAQ/uC,EAAUuP,EAAUnqC,OAClC,OAAQ2pE,GACR,IAAK,YACJ,OAAO,EACR,IAAK,UACJ,OAAO,EACR,IAAK,SACJ,OAAO//B,EAAiBigC,WAA+C,IAAlC1/B,EAAUnqC,MAAM+pB,OAAOlqB,OAA0C,IAA3BsqC,EAAUnqC,MAAMH,OAC5F,IAAK,SACJ,OAA2B,OAApBsqC,EAAUnqC,MAClB,IAAK,SACJ,OAA2B,OAApBmqC,EAAUnqC,OAAoD,IAA3BmqC,EAAUnqC,MAAMH,OAC3D,QAEC,OADA4X,EAAOrJ,KAAK,+DAAiE+7B,EAAU3f,MAAQ,yBAA2Bm/C,IACnH,EAET,CCjBA,SAAS1nC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IAAM8hE,EAAQ/uC,EAAUuP,EAAUnqC,OAClC,OAAQ2pE,GACR,IAAK,YACL,IAAK,SACJ,QAA0B,IAAfz/B,EACV,MAAgC,iBAArBA,EAAWlqC,OAGfmqC,EAAUnqC,MAAQkqC,EAAWlqC,MAC9B,QAAqB,IAAVA,EACjB,OAAc,OAAVA,GAGGmqC,EAAUnqC,MAAQA,EAE1B,MAAM,IAAIuiC,MAAM,6DACjB,IAAK,SACJ,OAAwB,OAApB4H,EAAUnqC,OAAuC,OAArBkqC,EAAWlqC,OAA4B,OAAVA,EAI9D,QAEC,OADAyX,EAAOrJ,KAAK,6DAA+D+7B,EAAU3f,MAAQ,yBAA2Bm/C,IACjH,EAET,CC1BA,SAAS1nC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IAAM8hE,EAAQ/uC,EAAUuP,EAAUnqC,OAC9B8pE,EAAS,GACb,GAAI,MAAO5/B,EACV4/B,EAAS5/B,EAAWlqC,UACd,IAAI,MAAOA,EAIjB,OADAyX,EAAOrJ,KAAK,4DAA8D+7B,EAAU3f,MAAQ,mDACrF,EAHPs/C,EAAS9pE,EAKV,MAAiB,WAAb2pE,GAAsC,cAAbA,EAEd,IAAIz3D,OAAO43D,GACZhwC,KAAKqQ,EAAUnqC,QAE7ByX,EAAOrJ,KAAK,4DAA8D+7B,EAAU3f,MAAQ,yBAA2Bm/C,IAChH,EACR,CCjBA,SAAS1nC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAE/C,GAD4B,CAAC,WAAY,cAAe,iBAChC2L,QAAQ22B,EAAUx9B,QAAQkiB,aAAe,EAAG,CACnE,IAAM86C,EAAQ/uC,EAAUuP,EAAUnqC,OAClC,QAA0B,IAAfkqC,EACV,OAAQy/B,GACR,IAAK,YACJ,OAAO,EACR,IAAK,SACL,IAAK,SACJ,OAAQC,GAASz/B,EAAUnqC,MAAOkqC,EAAWlqC,OAC9C,QAEC,OADAyX,EAAOrJ,KAAK,gEAAkE+7B,EAAU3f,MAAQ,yBAA2Bm/C,IACpH,OAEF,QAAqB,IAAV3pE,EACjB,OAAQ2pE,GACR,IAAK,YACJ,OAAO,EACR,IAAK,SACL,IAAK,SACJ,OAAQC,GAASz/B,EAAUnqC,MAAOA,GACnC,QAEC,OADAyX,EAAOrJ,KAAK,gEAAkE+7B,EAAU3f,MAAQ,yBAA2Bm/C,IACpH,EAGT,MAAM,IAAIpnC,MAAM,8DAGjB,OADA9qB,EAAOrJ,KAAK,2EAA6E+7B,EAAUx9B,QAAQkiB,cACpG,CACR,CCjCA,SAASoT,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,GAAsC,kBAAlCsiC,EAAUx9B,QAAQkiB,YAAiC,CACtD,IAAM86C,EAAQ/uC,EAAUuP,EAAUnqC,OAClC,GAAIkqC,EAAY,CACf,GAAwB,OAApBC,EAAUnqC,OAAuC,OAArBkqC,EAAWlqC,MAC1C,OAAOmqC,EAAUnqC,QAAUkqC,EAAWlqC,MAEvC,OAAQ2pE,GACR,IAAK,YACL,IAAK,UACL,IAAK,SACJ,OAAOx/B,EAAUnqC,QAAUkqC,EAAWlqC,MACvC,IAAK,SACJ,OAAOmqC,EAAUnqC,MAAM+pB,SAAWmgB,EAAWlqC,MAAM+pB,OACpD,IAAK,SACJ,OAAOhY,KAAKC,UAAUm4B,EAAUnqC,SAAW+R,KAAKC,UAAUk4B,EAAWlqC,OACtE,QAEC,OADAyX,EAAOrJ,KAAK,8DAAgE+7B,EAAU3f,MAAQ,yBAA2Bm/C,IAClH,QAEF,QAAqB,IAAV3pE,EAAuB,CACxC,GAAwB,OAApBmqC,EAAUnqC,OAA4B,OAAVA,EAC/B,OAAOmqC,EAAUnqC,QAAUA,EAE5B,OAAQ2pE,GACR,IAAK,YACL,IAAK,UACL,IAAK,SACJ,OAAOx/B,EAAUnqC,QAAUA,EAC5B,IAAK,SACJ,OAAOmqC,EAAUnqC,MAAM+pB,SAAW/pB,EAAM+pB,OACzC,IAAK,SACJ,OAAOhY,KAAKC,UAAUm4B,EAAUnqC,SAAW+R,KAAKC,UAAUhS,GAC3D,QAEC,OADAyX,EAAOrJ,KAAK,8DAAgE+7B,EAAU3f,MAAQ,yBAA2Bm/C,IAClH,GAGT,MAAM,IAAIpnC,MAAM,4DAGjB,OADA9qB,EAAOrJ,KAAK,yEAA2E+7B,EAAUx9B,QAAQkiB,cAClG,CACR,CCzCA,SAASoT,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IAAM8hE,EAAQ/uC,EAAUuP,EAAUnqC,OAC9B8pE,EAAS,GACb,GAAI,MAAO5/B,EACV4/B,EAAS5/B,EAAWlqC,UACd,IAAI,MAAOA,EAIjB,OADAyX,EAAOrJ,KAAK,+DAAiE+7B,EAAU3f,MAAQ,mDACxF,EAHPs/C,EAAS9pE,EAKV,MAAiB,WAAb2pE,GAAsC,cAAbA,GAEd,IAAIz3D,OAAO43D,GACXhwC,KAAKqQ,EAAUnqC,QAE9ByX,EAAOrJ,KAAK,+DAAiE+7B,EAAU3f,MAAQ,yBAA2Bm/C,IACnH,EACR,CChBA,SAAS1nC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,GAAIsiC,EAAUnqC,MAAO,CAEpB,IAAM+pE,EAA4B,SAAV/pE,EAAoB,eAAiBs1C,GACvD6B,EAAOsoB,GAAMt1B,EAAUnqC,MAAO+pE,EAAgB,IAAI3yB,MACxD,OAAOC,GAAQF,GAEhB,OAAO,CACR,CCFA,SAASlV,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAChB,WAA3BsiC,EAAUx9B,QAAQgG,MACrB8E,EAAOrJ,KAAK,oEAEb,IAAM+8B,EAAWtjC,EAAWk7C,2BACxB/e,EAAS,KACb,GAAIkG,SAAiF,OAArBA,EAAWlqC,MAC1C,WAA5BkqC,EAAWv9B,QAAQgG,OACtBqxB,EAAS2R,GAAsBzL,EAAYiB,EAAU,SAEvC,OAAXnH,IACHA,EAASkG,EAAWlqC,WAEf,IAAIA,QAGV,OAAO,EAFPgkC,EAAShkC,EAIV,QAAKmrC,IAG0B,iBAApBhB,EAAUnqC,OAAiD,WAA3B46B,EAAOuP,EAAUnqC,OAC3C21C,GAAsBxL,EAAWgB,EAAU,UACtCnH,QACgB,IAApBmG,EAAUnqC,OAC3ByX,EAAOrJ,KAAK,8CAA6CwsB,EAAUuP,EAAUnqC,SAEvE,GACR,CC3BA,SAASiiC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAChB,WAA3BsiC,EAAUx9B,QAAQgG,MACrB8E,EAAOrJ,KAAK,uEAEb,IAAM+8B,EAAWtjC,EAAWk7C,2BACxB/e,EAAS,KACb,GAAIkG,SAAiF,OAArBA,EAAWlqC,MAC1C,WAA5BkqC,EAAWv9B,QAAQgG,OACtBqxB,EAAS2R,GAAsBzL,EAAYiB,EAAU,SAEvC,OAAXnH,IACHA,EAASkG,EAAWlqC,WAEf,IAAIA,QAGV,OAAO,EAFPgkC,EAAShkC,EAIV,QAAKmrC,IAG0B,iBAApBhB,EAAUnqC,OAAiD,WAA3B46B,EAAOuP,EAAUnqC,OAC3C21C,GAAsBxL,EAAWgB,EAAU,UACtCnH,QACgB,IAApBmG,EAAUnqC,OAC3ByX,EAAOrJ,KAAK,iDAAgDwsB,EAAUuP,EAAUnqC,SAE1E,GACR,CC5BA,SAASiiC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAChB,WAA3BsiC,EAAUx9B,QAAQgG,MACrB8E,EAAOrJ,KAAK,2EAEb,IAAM+8B,EAAWtjC,EAAWk7C,2BACxB/e,EAAS,KACb,GAAIkG,SAAiF,OAArBA,EAAWlqC,MAC1C,WAA5BkqC,EAAWv9B,QAAQgG,OACtBqxB,EAAS2R,GAAsBzL,EAAYiB,EAAU,YAEvC,OAAXnH,IACHA,EAASkG,EAAWlqC,WAEf,IAAIA,QAGV,OAAO,EAFPgkC,EAAShkC,EAIV,QAAKmrC,IAG0B,iBAApBhB,EAAUnqC,OAAiD,WAA3B46B,EAAOuP,EAAUnqC,OAC3C21C,GAAsBxL,EAAWgB,EAAU,aACtCnH,QACgB,IAApBmG,EAAUnqC,OAC3ByX,EAAOrJ,KAAK,qDAAoDwsB,EAAUuP,EAAUnqC,SAE9E,GACR,CC5BA,SAASiiC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAChB,WAA3BsiC,EAAUx9B,QAAQgG,MACrB8E,EAAOrJ,KAAK,8EAEb,IAAM+8B,EAAWtjC,EAAWk7C,2BACxB/e,EAAS,KACb,GAAIkG,SAAiF,OAArBA,EAAWlqC,MAC1C,WAA5BkqC,EAAWv9B,QAAQgG,OACtBqxB,EAAS2R,GAAsBzL,EAAYiB,EAAU,YAEvC,OAAXnH,IACHA,EAASkG,EAAWlqC,WAEf,IAAIA,QAGV,OAAO,EAFPgkC,EAAShkC,EAIV,QAAKmrC,IAG0B,iBAApBhB,EAAUnqC,OAAiD,WAA3B46B,EAAOuP,EAAUnqC,OAC3C21C,GAAsBxL,EAAWgB,EAAU,aACtCnH,QACgB,IAApBmG,EAAUnqC,OAC3ByX,EAAOrJ,KAAK,wDAAuDwsB,EAAUuP,EAAUnqC,SAEjF,GACR,CC5BA,SAASiiC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAChB,WAA3BsiC,EAAUx9B,QAAQgG,MACrB8E,EAAOrJ,KAAK,oEAEb,IAAM+8B,EAAWtjC,EAAWk7C,2BACxB/e,EAAS,KACb,GAAIkG,SAAiF,OAArBA,EAAWlqC,MAC1C,WAA5BkqC,EAAWv9B,QAAQgG,OACtBqxB,EAAS2R,GAAsBzL,EAAYiB,EAAU,kBAEvC,OAAXnH,IACHA,EAASkG,EAAWlqC,WAEf,IAAIA,QAGV,OAAO,EAFPgkC,EAAShkC,EAIV,QAAKmrC,IAG0B,iBAApBhB,EAAUnqC,OAAiD,WAA3B46B,EAAOuP,EAAUnqC,OAC3C21C,GAAsBxL,EAAWgB,EAAU,mBACtCnH,QAEgB,IAApBmG,EAAUnqC,OAC3ByX,EAAOrJ,KAAK,8CAA6CwsB,EAAUuP,EAAUnqC,SAEvE,GACR,CC7BA,SAASiiC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAChB,WAA3BsiC,EAAUx9B,QAAQgG,MACrB8E,EAAOrJ,KAAK,oEAEb,IAAM+8B,EAAWtjC,EAAWk7C,2BACxB/e,EAAS,KACb,GAAIkG,SAAiF,OAArBA,EAAWlqC,MAC1C,WAA5BkqC,EAAWv9B,QAAQgG,OACtBqxB,EAAS2R,GAAsBzL,EAAYiB,EAAU,kBAEvC,OAAXnH,IACHA,EAASkG,EAAWlqC,WAEf,IAAIA,QAGV,OAAO,EAFPgkC,EAAShkC,EAIV,QAAKmrC,IAG0B,iBAApBhB,EAAUnqC,OAAiD,WAA3B46B,EAAOuP,EAAUnqC,OAC3C21C,GAAsBxL,EAAWgB,EAAU,mBACtCnH,QACgB,IAApBmG,EAAUnqC,OAC3ByX,EAAOrJ,KAAK,8CAA6CwsB,EAAUuP,EAAUnqC,SAEvE,GACR,CCrCA,SAASiiC,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IACImiE,EADAC,EAAejqE,EAUnB,OARIkqC,IACH+/B,EAAe//B,EAAWlqC,OAEI,iBAApBmqC,EAAUnqC,OAAsBe,MAAM2F,QAAQyjC,EAAUnqC,OAClEgqE,EAAc7/B,EAAUnqC,MAAMH,YACO,IAApBsqC,EAAUnqC,OAA6C,OAApBmqC,EAAUnqC,QAC9DgqE,EAAc,GAEa,iBAAjBC,GAAoD,iBAAhBD,EACvCA,IAAgBC,GAExBxyD,EAAOrJ,KAAK,iEAAmE+7B,EAAU3f,QAClF,EACR,CChBA,SAASyX,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IACImiE,EADAC,EAAejqE,EAUnB,OARIkqC,IACH+/B,EAAe//B,EAAWlqC,OAEI,iBAApBmqC,EAAUnqC,OAAsBe,MAAM2F,QAAQyjC,EAAUnqC,OAClEgqE,EAAc7/B,EAAUnqC,MAAMH,YACO,IAApBsqC,EAAUnqC,OAA6C,OAApBmqC,EAAUnqC,QAC9DgqE,EAAc,GAEa,iBAAjBC,GAAoD,iBAAhBD,EACvCA,EAAcC,GAEtBxyD,EAAOrJ,KAAK,mEAAqE+7B,EAAU3f,QACpF,EACR,CChBA,SAASyX,GAASkI,EAAWD,EAAYlqC,EAAO6H,GAC/C,IACImiE,EADAC,EAAejqE,EAUnB,OARIkqC,IACH+/B,EAAe//B,EAAWlqC,OAEI,iBAApBmqC,EAAUnqC,OAAsBe,MAAM2F,QAAQyjC,EAAUnqC,OAClEgqE,EAAc7/B,EAAUnqC,MAAMH,YACO,IAApBsqC,EAAUnqC,OAA6C,OAApBmqC,EAAUnqC,QAC9DgqE,EAAc,GAEa,iBAAjBC,GAAoD,iBAAhBD,EACvCA,EAAcC,GAEtBxyD,EAAOrJ,KAAK,sEAAwE+7B,EAAU3f,QACvF,EACR,yhCCOA,SAAS0/C,GAAgBC,GACxB,IAAMC,EAAM,GA0BZ,GAzBAA,EAAqB,aAAIC,GACzBD,EAAqB,aAAIE,GACzBF,EAAsB,cAAIG,GAC1BH,EAAiB,SAAI/T,GACrB+T,EAAe,OAAII,GACnBJ,EAAoB,YAAIK,GACxBL,EAAgB,QAAIM,GACpBN,EAAmB,WAAIO,GACvBP,EAAiB,SAAIQ,GACrBR,EAAgB,QAAIS,GACpBT,EAAoB,YAAIU,GACxBV,EAAkB,UAAIW,GACtBX,EAAmB,WAAIY,GACvBZ,EAAmB,WAAIa,GACvBb,EAAqB,aAAIc,GACzBd,EAAwB,gBAAIe,GAC5Bf,EAA4B,oBAAIgB,GAChChB,EAA+B,uBAAIiB,GACnCjB,EAAqB,aAAIkB,GACzBlB,EAAwB,gBAAImB,GAC5BnB,EAAqB,aAAIoB,GACzBpB,EAAuB,eAAIqB,GAC3BrB,EAA0B,kBAAIsB,GAG1B3qE,MAAM2F,QAAQyjE,GAAY,CAAA,IACCn6D,EADDC,EAAAC,GACRi6D,GAAS,IAA9B,IAAAl6D,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAgC,CAAA,IAArBs7D,EAAM37D,EAAAhQ,MACZ2rE,GAA+B,mBAAdA,EAAOliC,IAAgD,mBAApBkiC,EAAO1pC,SAC9DmoC,EAAIuB,EAAOliC,MAAQkiC,EAAO1pC,SAE1BxqB,EAAOrJ,KAAK,yEAEb6E,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAEF,OAAOi3D,CACR,6hCChDqBwB,cAEpB,SAAAA,IAAcpoE,OAAAooE,GACb/nE,KAAKgoE,gBAAkB,IAAIhtC,GAC3Bh7B,KAAKioE,SAAW,CACfC,iBAAkB,KAClBC,kBAAmB,KACnB7wD,cAAe,KACfgiC,cAAe,KACfF,kBAAmB,KACnBgvB,mBAAoB,KACpBtyD,mBAAoB,MAErB9V,KAAK+lC,iBAAmB,GACxB/lC,KAAKqoE,mBAAqB,GAC1BroE,KAAKsoE,mBAAqB,GAC1BtoE,KAAKmrC,sBAAwB,GAC7BnrC,KAAKorC,uBAAyB,GAC9BprC,KAAKuoE,kBAAoB,GACzBvoE,KAAKwoE,wBAA0B,GAC/BxoE,KAAKyoE,uBAAyB,GAC9BzoE,KAAK0oE,8BAAgC,GACrC1oE,KAAK0iC,UAAY,GACjB1iC,KAAKkQ,SAAW,GAChBlQ,KAAK0hB,QAAU,GACf1hB,KAAK2oE,eAAiB,GACtB3oE,KAAK4oE,qBAAuB,GAC5B5oE,KAAK6oE,yBAA0B,EAC/B7oE,KAAK8oE,aAAe,IAAIC,GACxB/oE,KAAKgpE,uBAAyB,GAC9BhpE,KAAKkiE,eAAiB,IAAI3oD,GAAevZ,MACzCA,KAAKipE,eAAiB,GACtBjpE,KAAKkpE,gBAAiB,EACtBlpE,KAAKmpE,uBAAyB,EAC9BnpE,KAAKopE,aAAe/C,KACpBrmE,KAAKugC,uBAAyB,GAC9BvgC,KAAKqpE,uBAAyB,GAC9BrpE,KAAKspE,6BAA+B,GACpCtpE,KAAKupE,mBAAqB,GAo4D1B,OAn4DAzpE,EAAAioE,IAAAhoE,eAAA5D,MAED,WACC,OAAO6D,KAAKgoE,gBAAgBwB,cAC5BzpE,gBAAA5D,MAED,SAAU6iB,GACThf,KAAKgoE,gBAAgB5rC,UAAUpd,MAC/Bjf,kBAAA5D,MAED,WACC,OAAO6D,KAAKioE,YACZloE,kBAAA5D,MAED,SAAYstE,GACXzpE,KAAKioE,SAAWlqE,OAAOgyB,OAAO/vB,KAAKioE,SAAUwB,GACzCzpE,KAAKioE,SAASE,oBAAsBnoE,KAAK6oE,0BAC5C7oE,KAAKioE,SAASE,kBAAkBnoE,MAEhCA,KAAK6oE,yBAA0B,MAEhC9oE,sBAAA5D,MAED,SAAgB2sE,GACf9oE,KAAK8oE,aAAeA,KACpB/oE,sBAAA5D,MAED,WACC,OAAO6D,KAAK8oE,gBACZ/oE,oBAAA5D,MAED,SAAc6tB,GACbhqB,KAAKgqB,WAAaA,KAClBjqB,oBAAA5D,MAED,WACC,OAAO6D,KAAKgqB,cACZjqB,eAAA5D,MAED,SAASgM,GACRnI,KAAKmI,MAAQA,KACbpI,eAAA5D,MAED,WACC,OAAO6D,KAAKmI,SACZpI,0BAAA5D,MAED,SAAoB29C,GACnB95C,KAAK+lC,iBAAmB+T,KACxB/5C,0BAAA5D,MAED,WACC,OAAO6D,KAAK+lC,oBACZhmC,2BAAA5D,MAED,WACC,MAA+C,cAAxC6D,KAAK+lC,iBAAiBxY,iBAC7BxtB,kBAAA5D,MAED,SAAY+qB,GACX,IAAMqG,EAAgB3P,GAAI5d,KAAKgmC,sBAAuB,iBAChD0jC,EAAe9rD,GAAI5d,KAAKgmC,sBAAuB,gBAC/C2jC,EAAW1yC,GAAK2yC,SAAS1iD,EAAUqG,EAAem8C,GACxD1pE,KAAK6pE,QAAQF,MAKd5pE,cAAA5D,MACA,SAAQ+jB,EAAMgd,GAKb,GAJAl9B,KAAKkgB,KAAOA,EAEZlgB,KAAKw0C,UAAYtX,EAEbl9B,KAAKkgB,KAAM,CACdlgB,KAAKkQ,SAAW,GAChBlQ,KAAK2L,iBAAiB,IACtB3L,KAAKyL,iBAAiB,IACtBzL,KAAKkpE,gBAAiB,EACtBlpE,KAAKmpE,uBAAyB,EAC9BnpE,KAAK8pE,qBAEL,IAMIlyC,EANE1nB,EAAW,InF7DpB,SAAuBA,EAAUwR,EAASioD,GACzC,GAAIA,EAASttD,QAAS,CAAA,IACgBlQ,EADhBC,EAAAC,GACAs9D,EAASttD,SAAO,IAArC,IAAAjQ,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MACCuyB,GAAY7uB,EAAUwR,EADNvV,EAAAhQ,aAEhBiT,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAEH,CmFwDGy6D,CAAiC75D,EAAUlQ,KAAK0hB,QAAS1hB,KAAKkgB,MAC9DlgB,KAAKg8C,aAAa9rC,GAClBlQ,KAAKgqE,sBAAsB95D,GAC3BlQ,KAAK69D,iBACLoM,GAAwCjqE,KAAKkQ,SAAUlQ,KAAKmrC,sBAAuBnrC,KAAKorC,uBAAwBlO,GAEhH,IAAI7mB,EAAiB,GAwBrB,GAvBIrW,KAAKkgB,KAAK1I,OACbogB,EAAkB53B,KAAKkgB,KAAK1I,KAAKogB,gBACjCvhB,EAAiBrW,KAAKkgB,KAAK1I,KAAKmgB,oBAAsBuyC,GAAO,GAAIlqE,KAAKkgB,KAAK1I,KAAKigB,kBAAmBz3B,KAAKkgB,KAAK1I,KAAKmgB,qBAC/G33B,KAAKkgB,KAAK1I,KAAKigB,mBAGnBz3B,KAAK69B,mBAAmBjG,GACxB53B,KAAKuL,kBAAkB8K,GAAgB,GAIvCrW,KAAKmqE,sBAILnqE,KAAKmqE,qBAAoB,GAGzBnqE,KAAKoqE,0BACLpqE,KAAKqqE,6BAELrqE,KAAKqc,QAAUrc,KAAKkgB,KAAK7D,SAEpB5L,GAAQzQ,KAAKqc,WAAa5L,GAAQzQ,KAAKqc,QAAQ,GAAGxH,MAAO,CAE7D,IAAMy1D,EAAqBtqE,KAAKqc,QAAQ,GAAGxH,KAAKiG,QAAO,SAAChG,GAAG,OAAKA,EAAIrS,QAAQuY,WAAaC,EAASC,aAC9FovD,EAAmBtuE,QACtBgE,KAAKgoE,gBAAgBjiE,aAAaukE,EAAmB,GAAGv1D,OAK1D/U,KAAK6F,SAAS7F,KAAKkgB,KAAKhT,WAEzBnN,cAAA5D,MAED,WACC,OAAO6D,KAAKkgB,QACZngB,kBAAA5D,MAED,SAAY4D,EAAKsjB,GAChB,OAAIrjB,KAAKkgB,MAAQlgB,KAAKkgB,KAAKS,WACnB3gB,KAAKkgB,KAAKS,UAAU5gB,GAAOC,KAAKkgB,KAAKS,UAAU5gB,GAEhDsjB,KACPtjB,iBAAA5D,MAED,SAAWo8B,GACVv4B,KAAKu4B,QAAUA,KACfx4B,iBAAA5D,MAED,WACC,OAAO6D,KAAKu4B,WACZx4B,yBAAA5D,MAED,WASC,GARA6D,KAAKqoE,mBAAqB,CAAEn4D,SAAU,GAAI8vB,KAAM,IAChDhgC,KAAKsoE,mBAAqB,CAAEp4D,SAAU,GAAI8vB,KAAM,IAChDhgC,KAAKmrC,sBAAwB,CAAEj7B,SAAU,GAAI8vB,KAAM,IACnDhgC,KAAKuoE,kBAAoB,CAAEr4D,SAAU,GAAI8vB,KAAM,IAC/ChgC,KAAKwoE,wBAA0B,CAAEt4D,SAAU,GAAI8vB,KAAM,IACrDhgC,KAAKyoE,uBAAyB,CAAEv4D,SAAU,GAAI8vB,KAAM,IACpDhgC,KAAK0oE,8BAAgC,CAAEx4D,SAAU,GAAI8vB,KAAM,IAEvDhgC,KAAKkgB,KAAKiX,WAAY,CAAA,IACmBhrB,EADnBC,EAAAC,GACDrM,KAAKkgB,KAAKiX,YAAU,IAA5C,IAAA/qB,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA8C,CAAA,IAAnCiyB,EAAStyB,EAAAhQ,MACfsiC,EAAU1a,QACbgmD,GAAmC/pE,KAAKqoE,mBAAoB5pC,EAAWgO,GAAee,SAC5E/O,EAAU/W,QACpBqiD,GAAmC/pE,KAAKsoE,mBAAoB7pC,EAAWgO,GAAelC,SAC5E9L,EAAUmG,WACpBmlC,GAAmC/pE,KAAKmrC,sBAAuB1M,EAAWgO,GAAeC,YAC/EjO,EAAU3jB,OACpBivD,GAAmC/pE,KAAKuoE,kBAAmB9pC,EAAWgO,GAAe89B,QAC3E9rC,EAAU0G,YACpB4kC,GAAmC/pE,KAAKwoE,wBAAyB/pC,EAAWgO,GAAegB,cACjFhP,EAAU4G,aACpB0kC,GAAmC/pE,KAAKyoE,uBAAwBhqC,EAAWgO,GAAe+9B,aAChF/rC,EAAU8G,cACpBwkC,GAAmC/pE,KAAK0oE,8BAA+BjqC,EAAWgO,GAAeg+B,oBAEjG72D,EAAOC,KAAK,uBAAyB3F,KAAKC,UAAUswB,WAErDrvB,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,SAIHvP,qBAAA5D,MAOA,SAAekM,EAAYsoC,EAAS+5B,GACnC,IAAIC,EACJ,OAAQh6B,GACR,KAAKlE,GAAee,QACnBm9B,EAAuB3qE,KAAKqoE,mBAAmBqC,GAC/C,MACD,KAAKj+B,GAAelC,QACnBogC,EAAuB3qE,KAAKsoE,mBAAmBoC,GAC/C,MACD,KAAKj+B,GAAegB,aACnBk9B,EAAuB3qE,KAAKwoE,wBAAwBkC,GACpD,MACD,KAAKj+B,GAAe+9B,YACnBG,EAAuB3qE,KAAKyoE,uBAAuBiC,GACnD,MACD,KAAKj+B,GAAeg+B,mBACnBE,EAAuB3qE,KAAK0oE,8BAA8BgC,GAC1D,MACD,KAAKj+B,GAAeC,WACnBi+B,EAAuB3qE,KAAKmrC,sBAAsBu/B,GAOnD,IAAIE,EAAU,GACd,IAAK,IAAMC,KAAgBF,EAC1B,GAAKl0D,GAAIk0D,EAAsBE,GAA/B,CAKA,IAAMC,EAASb,GAAqCY,GAEhDC,EAAOxkE,OAAS+B,EAAW/B,MAAQwkE,EAAOliE,MAAQP,EAAWO,MAChEgiE,EAAUA,EAAQniE,OAAOkiE,EAAqBE,KAGhD,OAAOD,KACP7qE,+BAAA5D,MAED,WACC,OAAO6D,KAAKorC,0BAGbrrC,wBAAA5D,MAQA,SAAkBkM,GAEjB,MAA0B,iBAAfA,EACH,CACN/B,KAAM+B,GAIDrI,KAAK+qE,wBAAwB1iE,MACpCtI,8BAAA5D,MAED,SAAwBkM,GAGtB,IAAIu2C,EAFL,OAAIv2C,QAAwC,IAAnBA,EAAWO,UAAiD,IAAnBP,EAAWM,UAGvC,IAA1BN,EAAWA,aACrBu2C,EAAkB5+C,KAAK+qE,wBAAwB1iE,EAAWA,aAEpD,CACN/B,KAAM+B,EAAW/B,KACjBqC,IAAKN,EAAWO,IAChBP,WAAYu2C,IAEHv2C,QACgB,IAAnBA,EAAWO,UACQ,IAAnBP,EAAWM,UACe,IAA1BN,EAAWA,WACX,CACN/B,KAAM+B,EAAW/B,KACjBqC,IAAKN,EAAWM,IAChBC,IAAKP,EAAWO,IAChBP,WAAYrI,KAAK+qE,wBAAwB1iE,EAAWA,aAG/CA,KAIRtI,gCAAA5D,MACA,SAA0BkM,EAAY2iE,GACrC,YAAqC,IAA1B3iE,EAAWA,WACdrI,KAAK8c,0BAA0BzU,EAAWA,WAAY2iE,SAE3B,IAAxBA,EAAgBriE,MAC1BN,EAAWM,IAAMqiE,EAAgBriE,UAEC,IAAxBqiE,EAAgBpiE,MAC1BP,EAAWO,IAAMoiE,EAAgBpiE,KAE3BP,MAIRtI,yBAAA5D,MACA,SAAmBkM,EAAYu2C,GAC9B,YAAqC,IAA1Bv2C,EAAWA,WACdrI,KAAK6+C,mBAAmBx2C,EAAWA,WAAYu2C,IAEvDv2C,EAAWA,WAAau2C,EACjBv2C,MAIRtI,qBAAA5D,MACA,WACC6D,KAAK0iC,UAAY,GACjB1iC,KAAK0iC,UAAU6G,IAAmB,CAAEr5B,SAAU,GAAI9J,OAAQ,GAAIsb,QAAS,IjFnWzE,SAAwBghB,EAAWinC,EAAUsB,GAC5C,GAAItB,EAASttD,QAAS,CAAA,IACgBlQ,EADhBC,EAAAC,GACAs9D,EAASttD,SAAO,IAArC,IAAAjQ,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MACCuyB,GAAY2D,EADIv2B,EAAAhQ,MACe8uE,SAC/B77D,GAAAhD,EAAAiD,EAAAD,WAAAhD,EAAAkD,KAGH,CiF6VE47D,CAAelrE,KAAK0iC,UAAW1iC,KAAKkgB,KAAMqpB,OAC1CxpC,0BAAA5D,MAED,SAAoBgvE,GACnB,IAAK,IAAM9/B,KAAWrrC,KAAKkQ,SAC1B,GAAKuG,GAAIzW,KAAKkQ,SAAUm7B,GAAxB,CAGA,IAAMviC,EAAU9I,KAAKkQ,SAASm7B,GACxBhjC,EAAa,CAAE/B,KAAMwC,EAAQxC,MAC/BsG,EAAe5M,KAAKqG,iBAAiBgC,GAErC8iE,EACC,MAAOv+D,QAA8F,IAA9BA,EAAa4W,eACvF5W,EAAe5M,KAAKqG,iBAAiB,CAAEC,KAAMsG,EAAa4W,eAC1DxjB,KAAKgzC,oBAAoB3qC,EAAYuE,GAAc,EAAMuvC,GAAYC,eAEpC,mBAAxBtzC,EAAQkiB,cAA8D,IAA1BliB,EAAQ0f,gBAAwD,IAA7B1f,EAAQ4f,kBACjG9b,EAAe5M,KAAKorE,mBAAmBx+D,EAAc9D,GACrD9I,KAAKgzC,oBAAoB3qC,EAAYuE,GAAc,EAAMuvC,GAAYC,oBAC/B,IAArBtzC,EAAQ8G,eAAqE,IAAlC9G,EAAQ8G,SAASyT,mBACpD,IAAjBzW,GACRA,EAAe9D,EAAQ8G,SAASyT,aAG5BrU,EAA8ClG,KACjD8D,EAAeoC,EAA4ClG,EAAQ8G,SAAS6T,OAAQ3a,EAAQuE,YAAaT,IAG1G5M,KAAKgzC,oBAAoB3qC,EAAYuE,GAAc,EAAMuvC,GAAYC,eACnC,oBAAxBtzC,EAAQkiB,eACbpe,GAAiB1P,MAAM2F,QAAQ+J,IAAyC,IAAxBA,EAAa5Q,SAC7DkB,MAAM2F,QAAQiG,EAAQ2iB,aACzBzrB,KAAKgzC,oBAAoB3qC,EAAYS,EAAQ2iB,YAAY,EAAM0wB,GAAYC,kBAK/Er8C,yBAAA5D,MAED,SAAmByQ,EAAc9D,GAMhC,IALA,IAAMqW,EAASnf,KAAKk/C,2BACdmsB,EAAcrrE,KAAKsrE,sBAAsBxiE,GAEzC+E,EAAU,GAAGpF,OAAOmE,GAEjBgI,EAAI,EAAGA,EAAIuK,EAAOnjB,OAAQ4Y,IAAK,CACvC,IAAMjM,EAAM,GAEZ,IAAoB,IADD3I,KAAKurE,cAAcpsD,EAAOvK,GAAGtO,KAAMsG,GAC/B,CACtB,IAAK,IAAI4+D,EAAI,EAAGA,EAAI1iE,EAAQuE,YAAYrR,OAAQwvE,IAC/C,GAAIA,IAAM1iE,EAAQ0iB,SAAU,CAC3B,IAAM6+B,EAAaghB,EAAc,CAAEl5B,SAAUhzB,EAAOvK,GAAGs9B,OAAQD,WAAY9yB,EAAOvK,GAAGo9B,UAAa7yB,EAAOvK,GAAGtO,KAC5GqC,EAAI2F,KAAK+7C,QAET1hD,EAAI2F,KAAKtO,KAAKyrE,2BAA2BD,EAAGrsD,EAAOvK,GAAGtO,KAAM6Y,EAAQrW,IAGtE+E,EAAQS,KAAK3F,IAGf,OAAOkF,KAGR9N,4BAAA5D,MAMA,SAAsB2M,GACrB,GAAIA,EAAQgG,OAASkB,EAAUC,QAAUnH,EAAQ8G,SAASC,WAAaC,EAAKC,UAC3E,OAAO,EAER,GAAkD,UAA9Cf,EAAqBlG,EAAQuE,aAChC,IAAK,IAAMg+B,KAAWviC,EAAQuE,YAC7B,GAAIoJ,GAAI3N,EAAQuE,YAAag+B,GAAU,CACtC,IAAM5Y,EAAa3pB,EAAQuE,YAAYg+B,GACvC,GAAI5Y,EAAW3jB,OAASkB,EAAUC,QAAUwiB,EAAW7iB,SAASC,WAAaC,EAAKC,UACjF,OAAO,EAKX,OAAO,KAGRhQ,8BAAA5D,MAKA,WACC,IAAK,IAAMkvC,KAAWrrC,KAAKkQ,SAC1B,GAAIuG,GAAIzW,KAAKkQ,SAAUm7B,GAAU,CAChC,IAAMviC,EAAU9I,KAAKkQ,SAASm7B,GAC9B,GAAIrrC,KAAKsrE,sBAAsBxiE,GAC9B,OAAO,EAIV,OAAO,KACP/I,iCAAA5D,MAED,SAA2ByM,EAAK8iE,EAAWvsD,EAAQrW,GAClD,IAAIijD,EACEt5B,EAAa3pB,EAAQuE,YAAYzE,GAyBvC,MAxBmD,cAA/CoG,EAAqByjB,EAAWjO,WACnCunC,EAAM/8C,EAA2ByjB,EAAYi5C,EAAWvsD,GACa,cAA3DnQ,EAAqByjB,EAAW7iB,SAASyT,eACnD0oC,EAAMt5B,EAAW7iB,SAASyT,cAClBG,eACPuoC,EAAM/rD,KAAKqG,iBAAiB,CAAEC,KAAMylD,EAAIvoC,gBAGzCuoC,EADUt5B,EAAWjjB,OACfijB,EAAWjjB,OAAO,GACmB,WAAjCijB,EAAW7iB,SAASC,SACxB,GACqC,YAAjC4iB,EAAW7iB,SAASC,WAEa,SAAjC4iB,EAAW7iB,SAASC,SACxB4iB,EAAWjjB,OAAO,GACmB,YAAjCijB,EAAW7iB,SAASC,UACQ,SAAjC4iB,EAAW7iB,SAASC,UACa,WAAjC4iB,EAAW7iB,SAASC,SACnB,EACqC,cAAjC4iB,EAAW7iB,SAASC,SACxB,GAEA,MAEAk8C,KACPhsD,oBAAA5D,MAED,SAAcuvE,EAAW9+D,GACxB,IAAK,IAAIgI,EAAI,EAAGA,EAAIhI,EAAa5Q,OAAQ4Y,IACxC,GAAIhI,EAAagI,GAAG,KAAO82D,EAC1B,OAAO92D,EAGT,OAAQ,KACR7U,iBAAA5D,MAED,WACC,OAAO6D,KAAKqc,WACZtc,mBAAA5D,MAED,WACC,OAAO6D,KAAKw0C,aACZz0C,wBAAA5D,MAED,SAAkBmM,EAAIqjE,GACrB3rE,KAAKipE,eAAe36D,KAAK,CAAEhG,GAAMA,EAAIsjE,aAAgBD,OACrD5rE,wBAAA5D,MAED,WACC,OAAO6D,KAAKipE,kBACZlpE,4BAAA5D,MAED,WACC,OAAO6D,KAAKkpE,kBACZnpE,+BAAA5D,MAED,SAAyB8d,GACxBja,KAAKkpE,eAAiBjvD,KACtBla,qCAAA5D,MAED,WACC6D,KAAKmpE,4BACLppE,qCAAA5D,MAED,WACC6D,KAAKmpE,4BACLppE,yBAAA5D,MAED,WACC,OAAO6D,KAAKmpE,uBAAyB,KAGtCppE,eAAA5D,MAIA,WACC,OAAO6D,KAAKgoE,gBAAgB6D,cAG7B9rE,eAAA5D,MAIA,SAASoF,GACR,OAAOvB,KAAKgoE,gBAAgBniE,SAAStE,MAGtCxB,sBAAA5D,MAIA,SAAgB2vE,GACf9rE,KAAKopE,aAAe/C,GAAgByF,MAGrC/rE,qBAAA5D,MAKA,SAAeypC,GACd,OAAI5lC,KAAKopE,aACDppE,KAAKopE,aAAaxjC,GAEnB,QAGR7lC,sBAAA5D,MAGA,WACC,OAAO6D,KAAKopE,gBAGbrpE,yBAAA5D,MAIA,WACC,OAAO6D,KAAKgoE,gBAAgB+D,qBAAqBC,WAGlDjsE,+BAAA5D,MAIA,WACC,OAAO6D,KAAKgoE,gBAAgB+D,qBAAqB5sD,UAGlDpf,gCAAA5D,MAIA,WACC,OAAO6D,KAAKgoE,gBAAgB+D,qBAAqBE,eAGlDlsE,iCAAA5D,MAMA,SAA2BkM,GAC1B,IAAI8W,EAASnf,KAAKk/C,2BAKlB,OAJI72C,IACH8W,EAASnf,KAAKksE,qBAAqB7jE,EAAY8W,GAC/CA,E3EhQH,SAA0B9W,EAAYkgE,EAAmBvkE,EAAYmb,GAEpE,IAAI6oB,EAAe7oB,EACnB,GAAIopD,GAAqBrrE,MAAM2F,QAAQ0lE,EAAkBlgE,EAAW/B,OACnE,IAEC,IADA,IAAM6lE,EAAO5D,EAAkBlgE,EAAW/B,MACjCsO,EAAI,EAAGA,EAAIu3D,EAAKnwE,OAAQ4Y,IAChCozB,EAAekF,GAAoB7kC,EAAYkgE,EAAkBlgE,EAAW/B,MAAMsO,GAAG6qB,WAAYz7B,EAAYgkC,GAE7G,MAAOjqB,GACRnK,EAAOrJ,KAAK,0CAA4ClC,EAAW/B,KAAO,MAAQyX,GAGpF,OAAOiqB,CACR,C2EkPYiiC,CAAgC5hE,EAAYrI,KAAKuoE,kBAAkBr4D,SAAUlQ,KAAMmf,IAEtFA,KAGRpf,2BAAA5D,MAQA,SAAqBkM,EAAY8W,GAChC,IAAKnf,KAAKipE,iBAAmB5gE,EAC5B,OAAO8W,EAER,IAGgDnB,EAH1CouD,EAAkB/jE,EAAW/B,KAE/B8X,EAAkB,GAAGH,EAAA5R,GACIrM,KAAKipE,gBAAc,IAAhD,IAAAhrD,EAAA3R,MAAA0R,EAAAC,EAAA1R,KAAAC,MAAkD,CAAA,IACG2R,EAD1CkuD,EAAcruD,EAAA7hB,MAAAkiB,EAAAhS,GACCggE,EAAeT,cAAY,IAApD,IAAAvtD,EAAA/R,MAAA6R,EAAAE,EAAA9R,KAAAC,MAAsD,CACrD,GAAI4/D,IADgBjuD,EAAAhiB,MACesQ,YAAa,CAC/C2R,EAAkBiuD,EAAeT,aACjC,cAEDx8D,GAAAiP,EAAAhP,EAAAD,WAAAiP,EAAA/O,YAEFF,GAAA6O,EAAA5O,EAAAD,WAAA6O,EAAA3O,IACA,IAAMg9D,EAAYluD,EAAgBuB,KAAI,SAASvL,GAC9C,OAAOA,EAAK3H,eAEb,OAAOzM,KAAKioC,4BAA4B9oB,EAAQmtD,EAAWF,MAG5DrsE,kCAAA5D,MAQA,SAA4BowE,EAAYD,EAAWE,GAClD,IACC,IACkC9iD,EAD5B+iD,EAAa,GAAG7iD,EAAAvd,GACGigE,GAAS,IAAlC,IAAA1iD,EAAAtd,MAAAod,EAAAE,EAAArd,KAAAC,MAAoC,CAAA,IAAzBkgE,EAAUhjD,EAAAvtB,MACpB,GAAIuwE,IAAeF,EAAU,CAC5B,IAAM1jE,EAAU9I,KAAK2M,WAAW,CAAErG,KAAMomE,IAElCrwC,EAAYr8B,KAAKqG,iBAAiB,CAAEC,KAAMomE,IAChD,GAAIxvE,MAAM2F,QAAQw5B,GAAY,CAAA,IACK8C,EADLC,EAAA/yB,GACJgwB,GAAS,IAAlC,IAAA+C,EAAA9yB,MAAA6yB,EAAAC,EAAA7yB,KAAAC,MAAoC,CAAA,IAAzBmgE,EAAUxtC,EAAAhjC,MACpB,GAAIe,MAAM2F,QAAQ8pE,GAAa,CAE9B,IAAMC,EAAW59D,EAAiClG,GAC9C8jE,GAAY,GAAKA,EAAWD,EAAW3wE,QAC1CywE,EAAWn+D,KAAKU,EAAkC29D,EAAWC,GAAW9jE,SAIzE2jE,EAAWn+D,KAAKU,EAAkC29D,EAAY7jE,WAE/DsG,GAAAgwB,EAAA/vB,EAAAD,WAAAgwB,EAAA9vB,UAGDm9D,EAAWn+D,KAAKU,EAAkCqtB,EAAWvzB,YAG/DsG,GAAAwa,EAAAva,EAAAD,WAAAwa,EAAAta,IACD,IAAMu9D,EAAiB3vE,MAAM84B,KAAK,IAAI4J,IAAI6sC,IAI1C,OAHuBF,EAAWzxD,QAAO,SAASssB,GACjD,OAA+C,IAAxCylC,EAAel9D,QAAQy3B,EAAM9gC,SAGpC,MAAOyX,GACRnK,EAAOrJ,KAAK,mCAAqCwT,GAElD,OAAOwuD,KAGRxsE,yBAAA5D,MAMA,SAAmB2wE,GAClB,IAAMb,EAAc,GACd9sD,EAAS,GACf,GAAI2tD,EAAmB,CACtB,IAAId,EAAUnvD,EAAUiwD,GAEnB5vE,MAAM2F,QAAQmpE,KAClBA,EAAU,CAACA,IAGZ,IAAK,IAAI5rC,EAAI,EAAGA,EAAI4rC,EAAQhwE,OAAQokC,IAC9B4rC,EAAQ5rC,GAAG95B,OACf0lE,EAAQ5rC,GAAG95B,KAAO85B,EAAEniC,YAErB+tE,EAAQ5rC,GAAG9yB,IAAM8yB,EAElB,IAC4B4L,EAD5BC,EAAA5/B,GACqB2/D,GAAO,IAAA,IAAAe,aAAE,IAAnB76B,EAAMlG,EAAA7vC,MACV6wE,EAAkBhB,EAAQlxD,QAAO,SAASmyD,GAC/C,OAAOA,EAAa3mE,OAAS4rC,EAAO5rC,QAErC,GAAI0mE,GAAmBA,EAAgBhxE,OAAS,EAC/C,IAAK,IAAIokC,EAAI,EAAGA,EAAI4sC,EAAgBhxE,OAAQokC,IAC3C4sC,EAAgB5sC,GAAG95B,KAAO0mE,EAAgB5sC,GAAG95B,KAAO,IAAM0mE,EAAgB5sC,GAAG9yB,KANhF,IAAA2+B,EAAA3/B,MAAA0/B,EAAAC,EAAA1/B,KAAAC,MAAAugE,UAWA39D,GAAA68B,EAAA58B,EAAAD,WAAA68B,EAAA38B,IAAA,IAC4B48B,EAD5BC,EAAA9/B,GACqB2/D,GAAO,IAA5B,IAAA7/B,EAAA7/B,MAAA4/B,EAAAC,EAAA5/B,KAAAC,MAA8B,CAAA,IAAnB0lC,EAAMhG,EAAA/vC,MAEhB,GADA8vE,EAAY39D,KAAK4jC,EAAO5rC,MACpB4rC,EAAO/yB,OAAQ,CAAA,IACeitB,EADfC,EAAAhgC,GACE6lC,EAAO/yB,QAAM,IAAjC,IAAAktB,EAAA//B,MAAA8/B,EAAAC,EAAA9/B,KAAAC,MAAmC,CAAA,IAAxB46B,EAAKgF,EAAAjwC,MACfirC,EAAM8K,OAASA,EAAO5rC,KACtB8gC,EAAM4K,SAAW5K,EAAM9gC,KACvB6Y,EAAO7Q,KAAK84B,UACZh4B,GAAAi9B,EAAAh9B,EAAAD,WAAAi9B,EAAA/8B,aAEFF,GAAA+8B,EAAA98B,EAAAD,WAAA+8B,EAAA78B,KAQF,QAJoC,IAAzBtP,KAAKktE,kBAEfltE,KAAKktE,gBAAkBltE,KAAKmtE,2BAEzBntE,KAAKktE,gBAAiB,CAAA,IACCrgC,EADDE,EAAA1gC,GACL8S,GAAM,IAA1B,IAAA4tB,EAAAzgC,MAAAugC,EAAAE,EAAAxgC,KAAAC,MAA4B,CAAA,IAAjB46B,EAAKyF,EAAA1wC,MACfirC,EAAM9gC,KAAO8gC,EAAM8K,OAAS,IAAM9K,EAAM4K,gBACxC5iC,GAAA29B,EAAA19B,EAAAD,WAAA29B,EAAAz9B,KAIFtP,KAAKgoE,gBAAgBnqC,mBAAmB,CAAEmuC,QAASc,EAAmB3tD,OAAQA,EAAQ8sD,YAAaA,OAGpGlsE,oBAAA5D,MAOA,SAAckM,GACb4hE,GAA6B5hE,EAAYrI,OADNH,UAAA7D,eAAAY,IAAAiD,eAAAA,iBAIpCE,+BAAA5D,MAKA,WACC8tE,GAAwCjqE,OADNH,UAAA7D,eAAAY,IAAAiD,eAAAA,iBAMnCE,sBAAA5D,MACA,SAAgBqgB,GACf,IAAMnU,EAAarI,KAAKgY,kBAAkBwE,GAC1C,OAAOxc,KAAKgoE,gBAAgB1jB,gBAAgBj8C,MAC5CtI,yBAAA5D,MAED,SAAmBqgB,EAAcuhB,GAChC,IAAM11B,EAAarI,KAAKgY,kBAAkBwE,GAC1Cxc,KAAKgoE,gBAAgB3pB,mBAAmBh2C,EAAY01B,GACpD/9B,KAAKotE,yBAAyB/kE,EAAY01B,MAC1Ch+B,wBAAA5D,MAED,SAAkBqgB,GACjB,IAAMnU,EAAarI,KAAKgY,kBAAkBwE,GAC1Cxc,KAAKgoE,gBAAgB18D,kBAAkBjD,MAGxCtI,+BAAA5D,MAKA,SAAyBq+B,GAEpBt9B,MAAM2F,QAAQ23B,IACjBx6B,KAAKgoE,gBAAgBqF,yBAAyB7yC,MAIhDz6B,+BAAA5D,MAIA,WACC,OAAO6D,KAAKgoE,gBAAgBsF,8BAG7BvtE,8BAAA5D,MAKA,SAAwBkM,GACvB,IAAMmyB,EAAcx6B,KAAKstE,2BACzB,QACCpwE,MAAM2F,QAAQ23B,IACXA,EAAY+yC,MAAK,SAACC,GAAE,OAAK7wC,EAAQ6wC,EAAInlE,SAS1CtI,8BAAA5D,MAQA,SAAwBqgB,EAAcixD,GACrC,IAAMplE,EAAarI,KAAKgY,kBAAkBwE,GACpC/P,EAAcpE,EAAW/B,KAI/B,GAHKtG,KAAKupE,mBAAmB98D,KAC5BzM,KAAKupE,mBAAmB98D,GAAe,IAEpCytB,OAAOC,UAAU9xB,EAAWM,KAC/B,MAAM,IAAI+1B,MAAM,iGAoBhB1+B,KAAKupE,mBAAmB98D,GAAaghE,SAAWA,KAIlD1tE,iCAAA5D,MAKA,SAA2BqgB,GAC1B,IAAMnU,EAAarI,KAAKgY,kBAAkBwE,GACpC/P,EAAcpE,EAAW/B,KAC/B,GAAI4zB,OAAOC,UAAU9xB,EAAWM,KAC/B,MAAM,IAAI+1B,MAAM,iGAeN1+B,KAAKupE,mBAAmB98D,WAC3BzM,KAAKupE,mBAAmB98D,MAEhC1M,+BAAA5D,MAED,SAAyBqgB,EAAckxD,GACtC,IACMjhE,EADazM,KAAKgY,kBAAkBwE,GACXlW,KAC3BtG,KAAKupE,mBAAmB98D,IAiB3BzM,KAAKupE,mBAAmB98D,GAAaghE,SAASC,MAMhD3tE,wBAAA5D,MAEA,SAAkBskC,GACjBzgC,KAAKugC,uBAAyBF,GAAkBI,MAChD1gC,wBAAA5D,MAED,WACC,OAAO6D,KAAKugC,0BAGbxgC,gCAAA5D,MACA,WACC,OAAO6D,KAAKqpE,0BACZtpE,mCAAA5D,MAED,SAA6B2kC,GAC5B,IAAM/kC,EAAQiE,KAAKqpE,uBAAuB15D,QAAQmxB,IACnC,IAAX/kC,EACHiE,KAAKqpE,uBAAuBvrB,OAAO,EAAG,EAAGhd,IAGzC9gC,KAAKqpE,uBAAuBvrB,OAAO/hD,EAAO,GAC1CiE,KAAKqpE,uBAAuBvpD,QAAQghB,OAItC/gC,kCAAA5D,MACA,WACC6D,KAAKqpE,uBAAyB,MAC9BtpE,sCAAA5D,MAED,WACC,OAAO6D,KAAKspE,gCACZvpE,yCAAA5D,MAED,SAAmComC,GAClC,IAAMxmC,EAAQiE,KAAKspE,6BAA6B35D,QAAQ4yB,IACzC,IAAXxmC,EACHiE,KAAKspE,6BAA6BxrB,OAAO,EAAG,EAAGvb,IAG/CviC,KAAKspE,6BAA6BxrB,OAAO/hD,EAAO,GAChDiE,KAAKspE,6BAA6BxpD,QAAQyiB,OAE3CxiC,wCAAA5D,MAED,WACC6D,KAAKspE,6BAA+B,MAGrCvpE,2BAAA5D,MAOA,SAAqBkM,EAAYslE,GAChC,IAAMC,EAAmB5tE,KAAKgoE,gBAAgB1zB,qBAAqBjsC,GACnE,GAAInL,MAAM2F,QAAQ+qE,GAAmB,CAIpC,IAHA,IAAMC,EAAa,CACnBA,OAAoB,GACpBA,YAAyB,IAAGC,WAAAxgE,GAE3BugE,EAAWr+D,OAAOlB,KAAKs/D,EAAiBtgE,IACxC,IAAIJ,EAAQ0gE,EAAiBtgE,GACvBvR,EAAQ4xE,EAAQn+D,OAAOo9C,WAAU,SAASzwD,GAC/C,OAAOA,IAAUyxE,EAAiBtgE,MAE/BvR,GAAS,IACZmR,EAAQygE,EAAQl+D,YAAY1T,IAE7B8xE,EAAWp+D,YAAYnB,KAAKpB,IATpBI,EAAM,EAAGA,EAAMsgE,EAAiB5xE,OAAQsR,IAAKwgE,EAAAxgE,GAWtD,OAAOugE,EAER,OAAOF,KAGR5tE,0BAAA5D,MAGA,SAAoBqgB,EAAcrgB,EAAO02C,EAAmB/sC,GAC3D,IAAMuC,EAAarI,KAAKgY,kBAAkBwE,GACpCuxD,EAAe/tE,KAAKqG,iBAAiBgC,GAM3C,QALqB,IAAVlM,EACV6D,KAAKu8C,oBAAoBl0C,GAEzBrI,KAAKgoE,gBAAgBh1B,oBAAoB3qC,EAAYlM,G3EttBxD,SAAyBqgB,EAAcxY,GACtC,IAAI/H,GAAS,EAEb,IADgB+H,EAAW2I,WAAW6P,GAGrC,OADA5I,EAAOrJ,KAAK,yBAA2BiS,EAAalW,MAC7CrK,EAER,IAAM+xE,EAAmBhqE,EAAWwoC,eAAehwB,EAAciwB,GAAe+9B,YAAa79B,GAA2B3qB,UACxH,GAAIgsD,EAAiBhyE,OAAS,EAC7B,IAAI,IACsC0tB,EADtCE,EAAAvd,GACsB2hE,GAAgB,IAAzC,IAAApkD,EAAAtd,MAAAod,EAAAE,EAAArd,KAAAC,MAEC,KADAvQ,EAASixC,GADWxjB,EAAAvtB,MAC2BsjC,WAAYjjB,EAAcxY,IAExE,OAAO/H,QAERmT,GAAAwa,EAAAva,EAAAD,WAAAwa,EAAAta,KACA,MAAOyO,GACRnK,EAAOrJ,KAAK,+BAAiCwT,GAG/C,OAAO9hB,CACR,C2EmsBOguE,CAA+BztD,EAAcxc,OASlD,GALAiqE,GAAkCztD,EAAcxc,MAC3C6yC,GACJo3B,GAA6BztD,EAAcxc,MAAM,GAG9CA,KAAKioE,SAASC,iBAAkB,CACnC,IAAM+F,EAAiBjuE,KAAKkuE,wBAAwB7lE,EAAYlM,GAC1Dqb,EAAO,CACZZ,OAAQu3D,GAAQC,gBAChB10C,SAAUrxB,EACVlM,MAAO8xE,QAEY,IAATnoE,IACV0R,EAAK1R,KAAOA,GAEb9F,KAAKioE,SAASC,iBAAiB1wD,SAlB/BxX,KAAKgoE,gBAAgBh1B,oBAAoB3qC,EAAY0lE,MAsBvDhuE,uBAAA5D,MASA,SAAiBqgB,EAAcspB,EAASziB,GACvC,IAAMhb,EAAarI,KAAKgY,kBAAkBwE,GACpC6xD,EAAgBruE,KAAKgoE,gBAAgB3hE,iBAAiBgC,GACxDimE,EAAgBjrD,EAGd+iB,EAAeN,IAAYA,EAAQj5B,sBAAwBi5B,EAAQM,cACnEF,EAAiBJ,IAAYA,EAAQj5B,sBAAwBi5B,EAAQI,gBACrEqoC,EAAuBzoC,GAAWA,EAAQyoC,qBAChD,GAAInoC,GAAgBF,GAAkBqoC,EAAsB,CAE3D,IAAMC,EAAexuE,KAAKq0C,gBAAgBhsC,GACpC2iB,EAAchrB,KAAKyuE,eAAepmE,GACxC,GACEmmE,IAAiBr8D,GAAOI,UAAY2zB,GACpCsoC,IAAiBr8D,GAAOC,QAAUg0B,GAClCpb,IAAgB+F,EAAY3e,QAAUm8D,EAEvC,OAAOD,EAIR,GADAA,EAAgBt/D,EAAmBq/D,GAC/BnxE,MAAM2F,QAAQyrE,GACjB,IAAK,IAAI3gE,EAAS,EAAGA,EAAS2gE,EAActyE,OAAQ2R,IAAU,CAC7D,IAAMC,EAAW0gE,EAAc3gE,GAC/B,GAAIzQ,MAAM2F,QAAQ+K,GACjB,IAAK,IAAIE,EAAS,EAAGA,EAASF,EAAS5R,OAAQ8R,IAAU,CACxD,IAAMP,EAAgB,CACrBjH,KAAM+B,EAAW/B,KACjBqC,IAAKgF,EACL/E,IAAKkF,GAEA4gE,EAAa1uE,KAAKq0C,gBAAgB9mC,GAClCohE,EAAY3uE,KAAKyuE,eAAelhE,IAEpCmhE,IAAev8D,GAAOI,UAAY2zB,GAClCwoC,IAAev8D,GAAOC,QAAUg0B,GAChCuoC,IAAc59C,EAAY3e,QAAUm8D,KAErCD,EAAc3gE,GAAQG,GAAU,OAMrC,OAAIg4B,IAAuC,IAA5BA,EAAQ8oC,gBACf5uE,KAAKkuE,wBAAwB7lE,EAAYimE,GAE1CA,EAGR,OAAIxoC,IAAuC,IAA5BA,EAAQ8oC,gBACf5uE,KAAKkuE,wBAAwB7lE,EAAYgmE,GAE1CA,KACPtuE,0BAAA5D,MAED,SAAoBqgB,GACnB,IAAMnU,EAAarI,KAAKgY,kBAAkBwE,GAC1Cxc,KAAKgoE,gBAAgBzrB,oBAAoBl0C,MAG1CtI,8BAAA5D,MACA,SAAwBkM,EAAYgmE,GACnC,IAAMvlE,EAAU9I,KAAK2M,WAAWtE,GAChC,GAAI2G,EAA8ClG,GAAU,CAC3D,IAAM+lE,EAAU/lE,EAAQwiB,eAA2C,WAA1BxiB,EAAQwiB,cAEjD,OADwBtc,EAA4ClG,EAAQ8G,SAAS6T,OAAQ3a,EAAQuE,YAAaghE,EAAeQ,GAGlI,OAAOR,KAGRtuE,wBAAA5D,MASA,SAAkB2pC,GACjB,IAAMzvB,EAAiBrW,KAAKgoE,gBAAgBn8D,oBACxCijE,EAAez4D,EACnB,GAAIyvB,IAAYA,EAAQj5B,sBAAwBi5B,EAAQM,cAAgBN,EAAQI,gBAAkBJ,EAAQyoC,sBAAuB,CAChI,IAAMQ,EAAiB,GACvB,IAAK,IAAMC,KAAW34D,EACrB,GAAKI,GAAIJ,EAAgB24D,GAAzB,CAGA,IAAMV,EAAgBtuE,KAAKqG,iBAAiB,CAAEC,KAAM0oE,GAAWlpC,QAElC,IAAlBwoC,IACVS,EAAeC,GAAWV,GAG5BQ,EAAeC,EAIhB,GAAIjpC,IAAuC,IAA5BA,EAAQ8oC,gBACtB,IAAK,IAAMt+D,KAAaw+D,EACvB,GAAKr4D,GAAIq4D,EAAcx+D,GAAvB,CAIA,IAAMjI,EAAarI,KAAKgY,kBAAkB1H,GACpC+9D,EAAgBruE,KAAKgoE,gBAAgB3hE,iBAAiBgC,GAC5DymE,EAAax+D,GAAatQ,KAAKkuE,wBAAwB7lE,EAAYgmE,GAIrE,OAAOS,KACP/uE,wBAAA5D,MAED,SAAkBqT,EAAQy/D,GAAa,IAAAxoE,OAChCyoE,EAAWryD,EAAUrN,GAG3B,GAAIA,EAAQ,CACX,IAAMU,EAAWlQ,KAAK4oC,cACtB7qC,OAAO0F,KAAKyrE,GAAUvlE,SAAQ,SAAC+0C,GAC9B,GAAI1vC,EAA8CkB,EAASwuC,IAAgB,CAC1E,IAAMywB,EAAgB3/D,EAAOkvC,GACvB51C,EAAUoH,EAASwuC,GACnB0wB,EAAkBpgE,EAA4ClG,EAAQ8G,SAAS6T,OAAQ3a,EAAQuE,YAAa8hE,GAClHD,EAASxwB,GAAgB0wB,MAO5B,GAFApvE,KAAKgoE,gBAAgBz8D,kBAAkB2jE,GAEnCD,EAAa,CAGhB,IAAMI,EAA2B,GAC5B5+D,GAAQy+D,KACZnxE,OAAO0F,KAAKyrE,GAAUvlE,SAAQ,SAAC+0C,I3En2BnC,SAAoCliC,EAAcxY,EAAYqrE,GAE7D,IADgBrrE,EAAW2I,WAAW6P,GAGrC,OADA5I,EAAOrJ,KAAK,yBAA2BiS,EAAalW,MAC7C,KAER,IAAMimC,EAAcvoC,EAAWwoC,eAAehwB,EAAciwB,GAAeg+B,mBAAoB99B,GAA2B3qB,UAC1H,GAAIuqB,EAAYvwC,OAAS,EACxB,IAAI,IACiCmjC,EADjCC,EAAA/yB,GACsBkgC,GAAW,IAApC,IAAAnN,EAAA9yB,MAAA6yB,EAAAC,EAAA7yB,KAAAC,MAAsC,CAAA,IAA3Bo4B,EAAUzF,EAAAhjC,MACdqnB,EAAeohB,EAAWnF,WAAW8F,cAAchiB,cAEnDC,KAAgB6rD,GACNniC,GAA2BtI,EAAWnF,WAAYjjB,EAAcxY,KAG9EqrE,EAAyB7rD,GAAgBohB,EAAWnF,WAAW8F,cAAcppC,cAG/EiT,GAAAgwB,EAAA/vB,EAAAD,WAAAgwB,EAAA9vB,KACA,MAAOyO,GACRnK,EAAOrJ,KAAK,+BAAiCwT,GAIhD,C2E60BKksD,CAFmB,CAAE3jE,KAAMo4C,GAE2Bj4C,EAAM4oE,MAExD5+D,GAAQ4+D,IACZtxE,OAAO0F,KAAK4rE,GAA0B1lE,SAAQ,SAAC6Z,GAC9C,KAAMA,KAAgB0rD,GAAW,CAEhC,IAAMpmE,EAAUrC,EAAKkG,WAAW,CAAErG,KAAMkd,IACpCxU,EAA8ClG,KACjDumE,EAAyB7rD,GACzBxU,EAA4ClG,EAAQ8G,SAAS6T,OAAQ3a,EAAQuE,YAAagiE,EAAyB7rD,KAEpH/c,EAAKuhE,gBAAgBh1B,oBAAoB,CAAE1sC,KAAMkd,GAAgB6rD,EAAyB7rD,SAQ/FymD,GAA4CjqE,MACxCA,KAAKioE,SAASC,kBACjBloE,KAAKioE,SAASC,iBACb,CACCtxD,OAAQu3D,GAAQmB,oBAMpBvvE,uBAAA5D,MAKA,SAAiB09B,GAChB75B,KAAKgoE,gBAAgBr8D,iBAAiBkuB,MAGvC95B,yBAAA5D,MAMA,SAAmBqgB,EAAc1Y,GAChC,IAAMuE,EAAarI,KAAKgY,kBAAkBwE,GAC1Cxc,KAAKgoE,gBAAgB9O,mBAAmB7wD,EAAYvE,MACpD/D,sBAAA5D,MACD,SAAgBkM,GACf,IAAMvE,EAAQ9D,KAAKgoE,gBAAgB3zB,gBAAgBhsC,GACnD,OAAOvE,EAAQA,EAAM3H,MAAQ,MAC7B4D,uBAAA5D,MACD,WACC,OAAO6D,KAAKgoE,gBAAgBj8D,sBAG7BhM,4BAAA5D,MAOA,SAAsBkM,GACrB,IAAMvE,EAAQ9D,KAAKgoE,gBAAgB3zB,gBAAgBhsC,GACnD,OAAOvE,EAAQA,EAAM0L,OAAS,MAG/BzP,iCAAA5D,MAMA,SAA2BkM,GAC1B,IAAMvE,EAAQ9D,KAAKgoE,gBAAgB3zB,gBAAgBhsC,GACnD,OAAOvE,EAAQA,EAAMm5B,WAAa,MAGnCl9B,qBAAA5D,MAKA,SAAe09B,GACd75B,KAAKgoE,gBAAgBnrC,eAAehD,MAGrC95B,uBAAA5D,MAIA,SAAiBoe,EAASzW,GACzB9D,KAAKgoE,gBAAgBuH,iBAAiBh1D,EAASzW,MAC/C/D,oBAAA5D,MACD,SAAcoe,GACb,OAAOva,KAAKgoE,gBAAgBv1D,cAAc8H,MAC1Cxa,qBAAA5D,MACD,WACC,OAAO6D,KAAKgoE,gBAAgBprC,oBAC5B78B,2BAAA5D,MACD,WACC6D,KAAKgoE,gBAAgBwH,qBAAqB,SAC1CzvE,yBAAA5D,MACD,SAAmB4+B,GAClB/6B,KAAKgoE,gBAAgBwH,qBAAqBz0C,MAC1Ch7B,yBAAA5D,MACD,WACC,OAAO6D,KAAKgoE,gBAAgByH,wBAA0B,QAIvD1vE,sBAAA5D,MAKA,SAAgB09B,GACf75B,KAAKgoE,gBAAgBjrC,gBAAgBlD,MAGtC95B,wBAAA5D,MAIA,SAAkB2mB,EAAUhf,GAC3B9D,KAAKgoE,gBAAgB0H,kBAAkB5sD,EAAUhf,MAGlD/D,qBAAA5D,MAGA,SAAe2mB,GACd,OAAO9iB,KAAKgoE,gBAAgBjwD,eAAe+K,MAC3C/iB,sBAAA5D,MAED,WACC,OAAO6D,KAAKgoE,gBAAgBlrC,qBAG7B/8B,gBAAA5D,MAGA,SAAU2mB,GACT,OAAO9iB,KAAK0hB,QAAQoB,EAASxc,SAG9BvG,uBAAA5D,MAIA,SAAiBmd,GAChBtZ,KAAKgoE,gBAAgBv8D,iBAAiB6N,MAGvCvZ,sBAAA5D,MASA,SAAgBqgB,GAA6F,IAA/EmzD,EAAmB9vE,UAAA7D,eAAAY,IAAAiD,cAAAA,aAAU+vE,EAAa/vE,UAAA7D,eAAAY,IAAAiD,cAAAA,aAAUgwE,IAAkBhwE,UAAA7D,eAAAY,IAAAiD,eAAAA,aAC7FwI,EAAarI,KAAKgY,kBAAkBwE,GAE1C,GAAImzD,EAAqB,CACxB,IAAMnB,EAAexuE,KAAKq0C,gBAAgBhsC,GACpC2iB,EAAchrB,KAAKyuE,eAAepmE,GACxC,GAAImmE,IAAiBr8D,GAAOI,UAAYi8D,IAAiBr8D,GAAOC,QAAU4Y,IAAgB+F,EAAY3e,OACrG,OAAO,KAGT,IAAM4kB,EAAUh3B,KAAKgoE,gBAAgBx3D,gBAAgBnI,EAAYrI,KAAKw0C,WACtE,OAAIo7B,GACC54C,GAAWA,EAAQlxB,OAAS4K,GAAuBipD,SAKpDkW,GACC74C,IAAY84C,EAAY94C,EAAQiD,gBAAkBjD,EAAQiD,aALtD,KASFjD,KAGRj3B,uBAAA5D,MASA,SAAiB4zE,EAAkBJ,EAAqBC,GAA0C,IAA3BC,IAAkBhwE,UAAA7D,eAAAY,IAAAiD,eAAAA,aACpFyZ,EAAWtZ,KAAKgoE,gBAAgBznD,mBAQpC,OANIsvD,IACHv2D,EAAWtZ,KAAKgwE,qBAAqB12D,KAElCy2D,GAAoBJ,KACvBr2D,EAAWtZ,KAAKiwE,gBAAgB32D,EAAUy2D,EAAkBJ,EAAqBC,IAE3Et2D,KACPvZ,0BAAA5D,MAED,WACC,OAAO6D,KAAKugB,kBAAiB,GAAO,GAAO,GAAO,MAClDxgB,+BAAA5D,MAED,WACC,IAAMmd,EAAWtZ,KAAKgoE,gBAAgBznD,mBAChC2vD,EAAmBlwE,KAAKmwE,yBAAyB72D,GAEvD,OADiBtZ,KAAKowE,4BAA4BF,MAElDnwE,sBAAA5D,MAED,SAAgBmd,EAAUy2D,EAAkBJ,EAAqBC,GAChE,IAAMS,EAAmB,GACnBC,EAAmB,GACzB,IAAK,IAAMC,KAAYj3D,EACtB,GAAK7C,GAAI6C,EAAUi3D,GAAnB,CAKA,IAAMC,EAAexwE,KAAKwQ,gBAAgB,CAAElK,KAAMiqE,GAAYZ,EAAqBC,GAC/EY,GAAgBA,EAAarnE,OAC5B4mE,EACHO,EAAiBhiE,KAAK,CACrB8L,OAAQm2D,EACRv2C,cAAew2C,EAAax2C,cAC5Bl0B,KAAM0qE,EAAa1qE,KACnBqD,KAAMqnE,EAAarnE,OAGpBknE,EAAiBE,GAAYC,GAIhC,OAAIT,EACIO,EAEDD,KAGRtwE,2BAAA5D,MACA,SAAqBmd,GAGpB,OADyBtZ,KAAKywE,cAAcn3D,GADpB,SAACo3D,GAAW,OAAMZ,EAAYY,EAAYz2C,eAAiBy2C,EAAYz2C,mBAKhGl6B,+BAAA5D,MACA,SAAyBmd,GAGxB,OADyBtZ,KAAKywE,cAAcn3D,GADpB,SAACo3D,GAAW,OAA8B,IAAzBA,EAAYrsD,eAKtDtkB,kCAAA5D,MACA,SAA4Bmd,GAAU,IAAAxR,OAOrC,OADyB9H,KAAKywE,cAAcn3D,GALpB,SAACo3D,EAAaroE,GACrC,IAAMmmE,EAAe1mE,EAAKusC,gBAAgBhsC,GACpC2iB,EAAcljB,EAAK2mE,eAAepmE,GACxC,OAAOmmE,IAAiBr8D,GAAOC,QAAUo8D,IAAiBr8D,GAAOI,UAAYyY,IAAgB+F,EAAY3e,aAO3GrS,oBAAA5D,MACA,SAAcmd,EAAUmlB,GACvB,IAAM4xC,EAAmB,GAqCzB,OApCuBtyE,OAAO0F,KAAK6V,GACpB3P,SAAQ,SAAC4mE,GACvB,IAAMI,EAAiBr3D,EAASi3D,GAChC,GAAII,EAAexnE,MAAQs1B,EAAUkyC,EAAgBA,EAAetoE,YACnEgoE,EAAiBE,GAAYI,OAE7B,IAAK,IAAMpzC,KAAUozC,EACpB,GAAKl6D,GAAIk6D,EAAgBpzC,GAAzB,CAGA,IAAMC,EAAamzC,EAAepzC,GAClC,GAAIC,GAAcA,EAAWr0B,MAAQs1B,EAAUjB,EAAYA,EAAWn1B,iBAC3B,IAA/BgoE,EAAiBE,KAC3BF,EAAiBE,GAAY,IAE9BF,EAAiBE,GAAUhzC,GAAUC,OAErC,IAAK,IAAMC,KAAUD,EACpB,GAAK/mB,GAAI+mB,EAAYC,GAArB,CAGA,IAAMC,EAAaF,EAAWC,GAC1BC,GAAcA,EAAWv0B,MAAQs1B,EAAUf,EAAYA,EAAWr1B,mBAC3B,IAA/BgoE,EAAiBE,KAC3BF,EAAiBE,GAAY,SAEoB,IAAvCF,EAAiBE,GAAUhzC,KACrC8yC,EAAiBE,GAAUhzC,GAAU,IAEtC8yC,EAAiBE,GAAUhzC,GAAQE,GAAUC,QAO5C2yC,KACPtwE,yBAAA5D,MAED,SAAmBqgB,EAAcwa,GAChC,IAAM3uB,EAAarI,KAAKgY,kBAAkBwE,GACtCwa,GAA4B,SAAjBA,EAAQlxB,KACtB9F,KAAKgoE,gBAAgB16B,mBAAmBjlC,EAAY2uB,GAEpDh3B,KAAKgoE,gBAAgB4I,kBAAkBvoE,MAExCtI,4BAAA5D,MAED,SAAsBqgB,GACrB,IAAMnU,EAAarI,KAAKgY,kBAAkBwE,GACtClD,EAAWtZ,KAAKgoE,gBAAgBznD,mBAC9BhQ,EAAa+I,EAASjR,EAAW/B,MACvC,QAA0B,IAAfiK,EAA4B,CACtC,QAAAsgE,IAAAC,EAAuB/yE,OAAO0F,KAAK8M,GAAWsgE,EAAAC,EAAA90E,OAAA60E,IAAE,CAA3C,IAAM3nC,EAAQ4nC,EAAAD,GACZE,EAAYvoC,SAASU,EAAU,IACjC6nC,IAAc1oE,EAAWM,WACrB2Q,EAASjR,EAAW/B,MAAMyqE,GACvBA,EAAY1oE,EAAWM,MACjC2Q,EAAWtZ,KAAKgxE,iBAAiB13D,EAAUjR,EAAW/B,KAAMyqE,EAAWA,EAAY,IAGrF/wE,KAAKyL,iBAAiB6N,OAEvBvZ,2BAAA5D,MAED,SAAqBsQ,EAAag5C,EAAUwrB,GAC3C,IAAI33D,EAAWtZ,KAAKgoE,gBAAgBznD,mBAC9BhQ,EAAa+I,EAAS7M,GAC5B,QAA0B,IAAf8D,EAA4B,CACtC,IAAM2gE,EAAmB3gE,EAAWk1C,GAC9B0rB,EAAoB5gE,EAAW0gE,GACrC,QAAgC,IAArBC,QAAiE,IAAtBC,EAAmC,EACxF73D,EAAWtZ,KAAKgxE,iBAAiB13D,EAAU7M,EAAag5C,EAAUwrB,IAEzDxkE,GAAag5C,GAAY,GAClC,QAAA2rB,IAAAC,EAAwBtzE,OAAO0F,KAAK0tE,GAAkBC,EAAAC,EAAAr1E,OAAAo1E,IAAE,CAAnD,IAAME,EAASD,EAAAD,GACnB93D,EAAS7M,GAAag5C,GAAU6rB,GAAaH,EAAkBG,cAE1B,IAArBJ,EACjB53D,EAAWtZ,KAAKgxE,iBAAiB13D,EAAU7M,EAAag5C,EAAUwrB,QAC3B,IAAtBE,IACjB73D,EAAWtZ,KAAKgxE,iBAAiB13D,EAAU7M,EAAawkE,EAAWxrB,IAEpEzlD,KAAKyL,iBAAiB6N,OAEvBvZ,uBAAA5D,MAED,SAAiBmd,EAAU7M,EAAa8kE,EAASC,GAGhD,OAFAl4D,EAAS7M,GAAa+kE,GAASl4D,EAAS7M,GAAa8kE,UAC9Cj4D,EAAS7M,GAAa8kE,GACtBj4D,KAORvZ,mBAAA5D,MACA,SAAa+T,GAAU,IAAAsO,OACtBtO,EAASvG,SAAQ,SAACb,QACkB,IAAxBA,EAAQg2B,cAGbroB,GAAI+H,EAAKtO,SAAUpH,EAAQxC,OAAUmQ,GAAI+H,EAAKtO,SAAUpH,EAAQxC,OAASwC,EAAQkiB,cAAgB+F,EAAY/B,UACjHxQ,EAAKtO,SAASpH,EAAQxC,MAAQwC,GAG/B0V,EAAKtO,SAASpH,EAAQ+1B,eAAe/1B,EAAQg2B,aAAeh2B,QAG9D/I,iBAAA5D,MAED,SAAWkM,GACV,IAAMS,EAAU9I,KAAKkQ,SAAS7H,EAAW/B,MAEzC,QAA8B,IAAnB+B,EAAWO,KAAuBE,EAAS,CACrD,IAAM2pB,EAAazyB,KAAKkQ,SAAS7H,EAAW/B,MAAM+B,EAAWO,IAAI3K,YACjE,GAAIw0B,EACH,OAAOA,EAGT,OAAO3pB,KACP/I,yBAAA5D,MAED,SAAmBkM,GAClB,IAAMS,EAAU9I,KAAK2M,WAAWtE,GAChC,YAAgC,IAArBS,EAAQ8G,SACX9G,EAAQ8G,SAASC,SAElB,QACP9P,8BAAA5D,MAED,SAAwBkM,EAAYopE,GACnC,IAAM3oE,EAAU9I,KAAK2M,WAAWtE,GAC3BnL,MAAM2F,QAAQ4uE,IAAe3oE,GAIlCA,EAAQ0G,OAASiiE,EAAU9xD,KAAI,SAAC+xD,GAAQ,OAAKA,EAASv1E,SACtD2M,EAAQ2G,YAAcgiE,EAAU9xD,KAAI,SAAC+xD,GACpC,OAAKA,EAASxkE,MAGPwkE,EAASxkE,MAFRwkE,EAASv1E,UANjByX,EAAOrJ,KAAK,wBAAyB,IAAIm0B,MAAM,0EAUhD3+B,kBAAA5D,MAED,WACC,OAAO6D,KAAKkQ,YACZnQ,2BAAA5D,MAED,SAAqBw1E,GACpB3xE,KAAKgoE,gBAAgBvtC,qBAAqBk3C,MAC1C5xE,2BAAA5D,MAED,WACC,OAAO6D,KAAKgoE,gBAAgB/jE,0BAG7BlE,yCAAA5D,MAKA,SAAmCoe,EAASq3D,GAC3C5xE,KAAKgoE,gBAAgBrtC,mCAAmCpgB,EAASq3D,MAGlE7xE,yCAAA5D,MAGA,SAAmCoe,GAClC,OAAOva,KAAKgoE,gBAAgBt1D,mCAAmC6H,MAC/Dxa,iBAAA5D,MAED,SAAWkM,GACV,IAAMS,EAAU9I,KAAK2M,WAAWtE,GAChC,GAAIS,EAAS,CACZ,IAAMub,EAAWvb,EAAQub,SACzB,OAAQA,IAAuB,EAEhC,OAAO,KACPtkB,gBAAA5D,MAED,SAAUkM,GACT,IAAMS,EAAU9I,KAAK2M,WAAWtE,GAChC,GAAIS,EAAS,CACZ,IAAM2E,EAAU3E,EAAQ2E,QACxB,OAAQA,IAAqB,EAE9B,OAAO,KACP1N,qBAAA5D,MAED,SAAekM,GACd,QAA0B,IAAfA,EACV,OAAO,KAER,IAAMS,EAAU9I,KAAK2M,WAAWtE,GAChC,OAAIS,EACIA,EAAQkiB,YAET,QAGRjrB,0BAAA5D,MACA,SAAoBkM,EAAYy2B,GAC/B,OAAO9+B,KAAKkQ,SAAS7H,EAAW/B,MAAMw4B,GAAa/a,WACnDhkB,6BAAA5D,MAED,SAAuBkM,EAAYy2B,EAAa3iC,GAC/C6D,KAAKkQ,SAAS7H,EAAW/B,MAAMw4B,GAAa/a,QAAU5nB,KAGvD4D,4BAAA5D,MAGA,SAAsB+T,GACrB,IAAMjE,EAAkB,GACxBiE,EAASvG,SAAQ,SAACb,GACbA,EAAQk2B,sBAC4C,IAA5C/yB,EAAgBnD,EAAQk2B,kBAClC/yB,EAAgBnD,EAAQk2B,gBAAkB,SAER,IAAxBl2B,EAAQg2B,aAClB7yB,EAAgBnD,EAAQk2B,gBAAgB1wB,KAAKxF,EAAQxC,UAIxDtG,KAAK6xE,wBAAwB5lE,MAC7BlM,8BAAA5D,MACD,SAAwBysE,GACvB5oE,KAAK4oE,qBAAuBA,KAC5B7oE,8BAAA5D,MACD,SAAwBoe,GACvB,OAAOva,KAAK4oE,qBAAqBruD,MAElCxa,kCAAA5D,MACA,SAA4BkM,EAAY5F,QACR,IAApB4F,EAAW/B,OACrBtG,KAAKgpE,uBAAuB3gE,EAAW/B,MAAQ7D,MAEhD1C,+BAAA5D,MACD,SAAyBkM,GAExB,IAAMmmE,EAAexuE,KAAKq0C,gBAAgBhsC,GAC1C,OAAImmE,IAAiBr8D,GAAOI,UAAYi8D,IAAiBr8D,GAAOC,OACxD,KAEDpS,KAAKgpE,uBAAuB3gE,EAAW/B,SAE/CvG,0BAAA5D,MACA,SAAoBkM,EAAY6E,EAAO4kE,GACtC,IAAMhpE,EAAU9I,KAAK2M,WAAWtE,GAC5BS,IACHA,EAAQ2E,SAAU,EAClB3E,EAAQmE,aAAeC,MAIzBnN,oBAAA5D,MAMA,SAAckM,EAAY6e,EAAUI,GACnC,IAAMiG,EAAgB3P,GAAI5d,KAAKgmC,sBAAuB,iBAChDl9B,EAAU9I,KAAKkiE,eAAe6P,kBAAkB7qD,EAAUI,EAAWtnB,KAAK+R,WAAYwb,GACtFrd,EAAW,GAKjB,OAFA65D,GAAgC75D,EAAUpH,EADjB9I,KAAK2M,WAAWtE,GAAYgS,kBAErDra,KAAKg8C,aAAa9rC,GACXlQ,KAAKkiE,eAAenlD,kBAAkBjU,EAAST,MAGvDtI,wBAAA5D,MAIA,WACC,OAAO6D,KAAKkiE,kBAGbniE,wBAAA5D,MAIA,SAAkBwsE,GACjB3oE,KAAK2oE,eAAiBA,KAGvB5oE,uBAAA5D,MAMA,SAAiBkM,EAAYS,EAASi2C,GACrC,GAAIj2C,EAAQoc,gBAAiB,CAAA,IACgB0pB,EADhBI,EAAA3iC,GACHrM,KAAK2oE,gBAAc,IAA5C,IAAA35B,EAAA1iC,MAAAsiC,EAAAI,EAAAziC,KAAAC,MAA8C,CAAA,IAAnCwlE,EAAUpjC,EAAAzyC,MACpB,GAAI61E,EAAW1pE,OAASQ,EAAQoc,gBAC/B,IACC,OAAO,IAAI8sD,EAAW3pE,EAAYrI,KAAM8I,EAAQ0O,KAAMunC,GAAWkzB,gBAChE,MAAOl0D,GAER,OADAnK,EAAOrJ,KAAK,yCAA2CwT,GAChD,WAGT3O,GAAA4/B,EAAA3/B,EAAAD,WAAA4/B,EAAA1/B,KAEF,MAAO,6BAA+BxG,EAAQoc,mBAO/CnlB,uCAAA5D,MAIA,WAIC,YAH2G,IAA7D6D,KAAKgmC,sBAAsBksC,8BACtElyE,KAAKgmC,sBAAsBksC,8BAC3B,QAIJnyE,wCAAA5D,MAIA,WAIC,YAH6G,IAA9D6D,KAAKgmC,sBAAsBmsC,+BACvEnyE,KAAKgmC,sBAAsBmsC,+BAC3B,OAIJpyE,8BAAA5D,MAGA,WAA0B,IAAA2yD,OACF/wD,OAAO0F,KAAKzD,KAAKkQ,UACzBvG,SAAQ,SAACk1B,GACvB,IAAM/1B,EAAUgmD,EAAK5+C,SAAS2uB,GAC9B,GAAI/1B,EAAQ8G,UAAY9G,EAAQ8G,SAASC,WAAaC,EAAKC,YAAc+/D,EAAYhnE,EAAQ0f,eAAgB,CAC5G,IAAMngB,EAAa,CAAE/B,KAAMwC,EAAQxC,MACnCwoD,EAAKsjB,iBAAiB/pE,EAAYS,EAAQ0f,sBAM7CzoB,uBAAA5D,MAKA,SAAiBkM,EAAYqf,GAC5B1nB,KAAKgoE,gBAAgBoK,iBAAiB/pE,EAAYqf,MAGnD3nB,uBAAA5D,MAKA,SAAiBkM,GAChB,OAAOrI,KAAKgoE,gBAAgB/hB,iBAAiB59C,MAG9CtI,wBAAA5D,MAKA,SAAkBkM,EAAYqf,GAC7B1nB,KAAKgoE,gBAAgBqK,kBAAkBhqE,EAAYqf,MAGpD3nB,wBAAA5D,MAKA,SAAkBkM,GACjB,OAAOrI,KAAKgoE,gBAAgB7D,kBAAkB97D,MAG/CtI,oBAAA5D,MAMA,SAAcqgB,GACb,IAAMnU,EAAarI,KAAKgY,kBAAkBwE,GAC1C,OAAOxc,KAAKgoE,gBAAgBvjB,cAAcp8C,MAC1CtI,uBAAA5D,MAED,SAAiBqgB,EAAc81D,GAC9B,IAAMjqE,EAAarI,KAAKgY,kBAAkBwE,GACpC5P,EAAe5M,KAAKqG,iBAAiBmW,GACrC6d,EAAai4C,EAAch0B,OACTt+C,KAAKuyE,wBAAwBl4C,EAAYztB,IAEhE5M,KAAKgoE,gBAAgBwK,iBAAiBnqE,EAAYgyB,MAEnDt6B,sBAAA5D,MAED,SAAgBqgB,GACf,IAAMnU,EAAarI,KAAKgY,kBAAkBwE,GAC1Cxc,KAAKgoE,gBAAgByK,gBAAgBpqE,MAGtCtI,iCAAA5D,MAGA,WAA6B,IAAAu2E,OACL30E,OAAO0F,KAAKzD,KAAKkQ,UACzBvG,SAAQ,SAACk1B,GACvB,IAAM/1B,EAAU4pE,EAAKxiE,SAAS2uB,GACxBx2B,EAAa,CAAE/B,KAAMwC,EAAQxC,MAC9BwpE,EAAYhnE,EAAQ1G,UACxB0G,EAAQ1G,QAAQuH,SAAQ,SAACqK,GACxB0+D,EAAKC,sBAAsBtqE,EAAY2L,EAAO1L,GAAI0L,EAAO0T,UAAW,MAGlE5e,EAAQuE,aACXqlE,EAAKE,qCAAqCvqE,EAAYS,EAAQuE,mBAKjEtN,2CAAA5D,MACA,SAAqCygB,EAAkBvP,GAAa,IAAAwlE,OACnExlE,EAAY1D,SAAQ,SAACb,GACpB,IAAMuN,EAAiBw8D,EAAKxsE,iBAAiBuW,GAExCkzD,EAAYhnE,EAAQ1G,UACxBiU,EAAe1M,SAAQ,SAACxN,EAAO22E,GAC9B,IAAMzqE,EAAa,CAAE/B,KAAMsW,EAAiBtW,KAAMqC,IAAKmqE,EAAUlqE,IAAKE,EAAQg2B,aAC9Eh2B,EAAQ1G,QAAQuH,SAAQ,SAACqK,GACxB6+D,EAAKF,sBAAsBtqE,EAAY2L,EAAO1L,GAAI0L,EAAO0T,UAAW,eAOzE3nB,4BAAA5D,MAMA,SAAsBkM,EAAY4f,EAAUP,GAC3C1nB,KAAKgoE,gBAAgB2K,sBAAsBtqE,EAAY4f,EAAUP,MAGlE3nB,sBAAA5D,MAKA,SAAgBkM,GACf,OAAOrI,KAAKgoE,gBAAgB9hB,gBAAgB79C,MAG7CtI,4BAAA5D,MAMA,SAAsBkM,EAAY4f,GACjC,OAAOjoB,KAAKgoE,gBAAgB+K,sBAAsB1qE,EAAY4f,MAG/DloB,8BAAA5D,MAOA,SAAwBk+B,EAAYztB,GACnC,IAAI4mC,GAAU,EACVnZ,GAAcztB,EAAa5Q,OAAS,EAOtCw3C,KANsBnZ,EAAWtE,MAAM,GAAGpW,KAAI,SAASpT,EAAGqI,GAC1D,OAAOrI,EAAI8tB,EAAWzlB,MAEao+D,OAAM,SAAC72E,GAAK,OAAe,IAAVA,QAC/Bk+B,EAAWxyB,SAAS,KAAOwyB,EAAWxyB,SAAS+E,EAAa5Q,OAAS,KACzFq+B,EAAWxyB,SAAS,IAAMwyB,EAAWxyB,SAAS+E,EAAa5Q,OAAS,KAMtEw3C,GAAU,EAEX,OAAOA,MACPu0B,CAAA,iq9BCn7DF,SAASkL,GAAkCC,GAC1C,IAAMC,EAcP,WACC,IAAMA,EAAY,IAAIC,GAChBC,EAAe,0DACfC,EAAiB,4DAMvB,OALAH,EAAUI,UAAUC,GAAuBH,EAAe,+CAC1DF,EAAUI,UAAUE,GAAiBH,EAAiB,oCACtDH,EAAUI,UAAUG,GAAoBJ,EAAiB,uCACzDH,EAAUI,UAAUI,GAAmBL,EAAiB,qCACxDH,EAAUI,UAAUK,GAA4BN,EAAiB,0DAC1DH,CACR,CAxBmBU,IAMnB,SAA+Br8D,EAAM06B,EAAQpsC,EAAMqtE,GAClD,IAAMW,EAAYX,EAAUY,SAASv8D,EAAM06B,EAAQ,CAAE8hC,cAAgB,IAEjEF,GAAaA,EAAUG,QAAUH,EAAUG,OAAOj4E,OAAS,GAC9Dk4E,QAAQn2D,MAAM+1D,EAEhB,CAXCK,CAAsBjB,EAAcM,GAAuB,EAAgBL,EAC5E,yaCF8D,IAGxDiB,YAAW90E,GAAAC,EAAA60E,EAAS50E,GAAT,IAAAC,EAAAC,GAAA00E,GAChB,SAAAA,EAAYn0E,GAAO,IAAAwG,EAgB+D,OAhB/D9G,OAAAy0E,IAClB3tE,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,CACZuwE,SAAS,EACTC,gBAAiB,MAElB7tE,EAAK8tE,sBAAwB9tE,EAAK8tE,sBAAsB1tE,KAAIC,EAAAL,IAC5DA,EAAK+tE,iBAAmB/tE,EAAK+tE,iBAAiB3tE,KAAIC,EAAAL,IAClDA,EAAK6B,GAAK0G,IACVvI,EAAKguE,aAAe5zE,EAAM6zE,YAC1BjuE,EAAK0uC,UAAYnmC,EAA4B/O,EAAM+D,WAAWiL,eAC7DC,GAAaylE,oBACdluE,EAAKmuE,iBAAmBnuE,EAAKmuE,iBAAiB/tE,KAAIC,EAAAL,IAClDA,EAAKouE,gBAAkBpuE,EAAKouE,gBAAgBhuE,KAAIC,EAAAL,IAChDA,EAAKquE,eAAiBruE,EAAKxG,MAAM80E,cAAgBtuE,EAAKxG,MAAMsqB,SAAW9jB,EAAKxG,MAAMmR,MAClF3K,EAAKuuE,kBAAoBvuE,EAAKuuE,kBAAkBnuE,KAAIC,EAAAL,IACpDA,EAAK2hE,mBAAqB3hE,EAAKxG,MAAM+D,WAAW+R,cAAcqyD,mBAAmB3hE,EA6JjF,OA5JA3G,EAAAs0E,IAAAr0E,sBAAA5D,MAED,SAAgBkT,GACD,UAAVA,EAAEtP,KACLC,KAAKy0E,aAAa5d,QAAQyC,UAE3Bv5D,4BAAA5D,MAED,WACC6D,KAAKy0E,aAAa5d,QAAQ2B,WAC1Bz4D,uBAAA5D,MAED,WACK6D,KAAKC,MAAMu0E,kBACdx0E,KAAKC,MAAMu0E,iBACVx0E,KAAKC,MAAM+D,WAAWmc,UAAU+W,YAChCl3B,KAAKC,MAAMkqB,KAAK3S,KAChBxX,KAAKC,MAAM+D,WAAWuT,iBAExBxX,uBAAA5D,MACD,WACC6D,KAAKyH,SAAS,CAAE4sE,SAAS,OACzBt0E,sBAAA5D,MAED,WACC6D,KAAKyH,SAAS,CAAE4sE,SAAS,OACzBt0E,wBAAA5D,MAED,SAAkB4O,GAAK,IAAAjD,OAEa,OAA/B9H,KAAK8D,MAAMwwE,iBACdt0E,KAAKyH,SAAS,CAAE6sE,gBAAiB,OAElC,IAAMW,EAAWlqE,EAAIo1B,OAAOhkC,MACW,mBAA5B6D,KAAKooE,oBACfpoE,KAAKooE,mBAAmB6M,GAAU,SAACX,GAC9BA,GAA+C,WAA3Bv9C,EAAOu9C,IAAiCA,EAAgBxuE,MAAQwuE,EAAgBt9C,QACvGlvB,EAAKL,SAAS,CAAE6sE,gBAAiBA,IAGjCxsE,EAAKL,SAAS,CAAE6sE,gBAAiB,UAIpCt0E,KAAKC,MAAM4F,SAASovE,MACpBl1E,aAAA5D,MAED,WAAS,IAAAqiB,OACF02D,EAAiClmE,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAaylE,oBAChHQ,EAAkBnmE,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAakmE,+BACjGC,EAAmBrmE,EAA4BhP,KAAKC,MAAM+D,WAAWiL,eAAgBC,GAAaomE,kCAClGC,EAAuB,CAAC7kE,GAAuBE,MAAOF,GAAuBC,SAC7E6kE,EAAmB53D,GAAI5d,KAAK8D,MAAMwwE,gBAAiB,OAAQ,QAAU5jE,GAAuBC,QAC5F8kE,EAAkB73D,GAAI5d,KAAK8D,MAAMwwE,gBAAiB,OAAQ,QAAU5jE,GAAuBE,MAE3F8kE,GAAmD,IAA7B11E,KAAKC,MAAMiqB,eAA2BlqB,KAAK8D,MAAMuwE,QAAUxzE,EAAAC,0BACnFD,EAAAC,cAACyQ,IACHE,KAAK,QACLxQ,UAAU,mCACV,UAAQ,OACRuQ,QAASxR,KAAKu0E,sBACd/8B,gBAAgB,SAChBC,iBAAiB,MACjB/lC,WAAY+vC,GACZz/C,KAAK,QACL6zC,gBAAiBq/B,EACjBx9B,iBAGIi+B,EAAa31E,KAAKC,MAAMkqB,KAC1BtpB,EAAAC,cAACyQ,IACHE,KAAK,QACLxQ,UAAU,mCACV,UAAQ,OACRuQ,QAASxR,KAAKw0E,iBACdh9B,gBAAgB,SAChB9lC,WAAYkkE,GACZ5zE,KAAK,QACL6zC,gBAAiBs/B,EACjBz9B,iBAEC,KAEGm+B,EAAc71E,KAAKC,MAAM61E,aAC3Bj1E,EAAAC,qBAAKG,UAAU,2BACjBJ,EAAAC,cAACyQ,IACAE,KAAK,QACLzP,KAAK,QACL,UAAQ,QACRwP,QAASxR,KAAKC,MAAM61E,aACpBt+B,gBAAgB,OAChB9lC,WAAYqkE,GACZlgC,gBAAiBw/B,EACjB39B,kBAGA,KAECntB,EAAU,KACd,GAAIvqB,KAAK80E,eAAgB,CACxB,IAAM5nE,EAAQlN,KAAKC,MAAMsqB,QACrB1pB,EAAAC,qBAAKG,UAAU,kCAChBjB,KAAKC,MAAMsqB,SAEX,KACGnZ,EAAOpR,KAAKC,MAAMmR,MAAmC,iBAApBpR,KAAKC,MAAMmR,KAC/CvQ,EAAAC,cAAC20C,IAAKx0C,UAAU,gCAAgCqX,IAAKtY,KAAKC,MAAMmR,OAChE,MACClE,GAASkE,KACZmZ,EAAW1pB,EAAAC,qBAAKG,UAAU,4BACxBmQ,EACAlE,EACAyoE,IAKJ,OACC90E,EAAAC,qBAAKG,UAAWC,GAAW,0BAC1B,CAAE,gCAAiClB,KAAK80E,kBAEvCe,EACAtrD,EACD1pB,EAAAC,qBAAKG,UAAWC,GACf,gCACA,CACC,oCAAqClB,KAAKC,MAAMkqB,OAASnqB,KAAK80E,iBAAmBS,EAAqB1tE,SAAS+V,GAAI5d,KAAK8D,MAAMwwE,gBAAiB,SAC/I,uCAAwCkB,EACxC,qCAAsCC,KAIvC50E,EAAAC,cAACg0C,GAASz8B,IACT/P,GAAItI,KAAKsI,GACTJ,IAAKlI,KAAKy0E,aACVt4E,MAAO6D,KAAKC,MAAMsB,MAClB0zC,SAAUj1C,KAAKg1E,kBACfgB,WAAY,SAAC3mE,GAAC,OAAKmP,EAAKy3D,gBAAgB5mE,IACxC4kC,UAAuC,IAA7Bj0C,KAAKC,MAAMiqB,cACrBirB,UAAWn1C,KAAKm1C,UAChBC,aACApzC,KAAK,KACLk0E,QAASl2E,KAAK40E,iBACdxjB,OAAQpxD,KAAK60E,gBACb1sE,MAAOnI,KAAKC,MAAM+D,WAAW+N,WAC7B1H,QAASorE,EACTnrE,YAAasT,GAAI5d,KAAK8D,MAAMwwE,gBAAiB,WAC7C/pE,KAAMirE,EACNhrE,SAAUoT,GAAI5d,KAAK8D,MAAMwwE,gBAAiB,YACrCt0E,KAAK8D,MAAMuwE,SAAW,CAAEpzE,UAAW,qCAExCs0E,EAAqB1tE,SAAS+V,GAAI5d,KAAK8D,MAAMwwE,gBAAiB,SAAW,KAAOoB,GAEhF11E,KAAK80E,gBAAmBS,EAAqB1tE,SAAS+V,GAAI5d,KAAK8D,MAAMwwE,gBAAiB,SAAwB,KAAbqB,OAGrGvB,CAAA,OA0BavwE,IAVS,SAACC,EAAOC,GAAQ,MAAM,CAC7CxC,MAAOuC,EAAMwc,yBAAyB/e,MACtC,IAE0B,SAACif,EAAUzc,GAAQ,MAAM,CACnD8B,SAAU,SAACtE,GACVif,EAAS3a,GAAStE,KAEnB,GAEcsC,CAA6CuwE,kpCC5L5D,IAAM+B,GAAqB3tC,SAAS4tC,GAAOC,iBAAkB,IACvDC,GAAsB9tC,SAAS4tC,GAAOG,kBAAmB,IACzDC,GAAqBhuC,SAAS4tC,GAAOK,iBAAkB,IACvDC,GAAmBluC,SAAS4tC,GAAOO,eAAgB,IAEnDC,YAAc1wE,GAAA3G,EAAAq3E,EAAA1wE,GAAA,IAAAzG,EAAAC,GAAAk3E,GACnB,SAAAA,EAAY32E,GAAO,IAAAwG,EAAA9G,OAAAi3E,IAClBnwE,EAAAhH,EAAArB,UAAM6B,IACD42E,qBAAuB,IAAI9O,GAChCthE,EAAKowE,qBAAqBC,oBAAoBrwE,EAAKxG,MAAM8lC,kBAErDt/B,EAAKxG,MAAM82E,eAAeC,mBAC7BvwE,EAAKowE,qBAAqBI,cAAcxwE,EAAKxG,MAAM82E,eAAeC,mBAEnEvwE,EAAKowE,qBAAqBK,kBAAkBj3E,EAAM0oE,gBAClDliE,EAAKowE,qBAAqBM,gBAAgBl3E,EAAMm3E,oBAChD3wE,EAAKowE,qBAAqBQ,SAASp3E,EAAMkI,OACzC1B,EAAKowE,qBAAqBS,WAAWr3E,EAAM82E,eAAex+C,SAC1D9xB,EAAKowE,qBAAqBx2C,kBAAkBpgC,EAAM82E,eAAet2C,gBACjEh6B,EAAKowE,qBAAqBU,YAAY,CACrCpP,kBAAmBloE,EAAMu3E,UAAUrP,kBACnCD,iBAAkBjoE,EAAMu3E,UAAUtP,iBAClC5wD,cAAerX,EAAMu3E,UAAUlgE,cAC/BgiC,cAAer5C,EAAMu3E,UAAUl+B,cAC/BF,kBAAmBn5C,EAAMu3E,UAAUp+B,kBACnC+f,kBAAmBl5D,EAAMu3E,UAAUre,kBACnCiP,mBAAoBnoE,EAAMu3E,UAAUpP,mBACpCtyD,mBAAoB7V,EAAMu3E,UAAU1hE,qBAErCrP,EAAKojE,QAAQ5pE,EAAM82E,gBACnBtwE,EAAKgxE,sBAAwB,GAG7BhxE,EAAKowE,qBAAqBnuC,0BAAyB,GAC/CzoC,EAAM82E,eAAez9D,WACxB7S,EAAKowE,qBAAqBnuC,0BAAyB,GACnDjiC,EAAKgxE,sBAAwBhxE,EAAKowE,qBAAqB/qE,uBAGpDrF,EAAKxG,MAAMu3E,UAAUtP,kBACxBzhE,EAAKxG,MAAMu3E,UAAUtP,iBAAiB,CAAEtxD,OAAQu3D,GAAQuJ,oBAEzDjxE,EAAKgxB,kBAAoBhxB,EAAKowE,qBAAqBhrE,oBACnD,IAAMme,EAAavjB,EAAKkxE,gBAYa,OAXrClxE,EAAK3C,MAAQ,CACZ1C,uBAAuB,EACvB4oB,WAAYA,GAEbvjB,EAAKmxE,uBAAyBnxE,EAAKmxE,uBAAuB/wE,KAAIC,EAAAL,IAC9DA,EAAKrF,sBAAwBqF,EAAKrF,sBAAsByF,KAAIC,EAAAL,IAC5DA,EAAKoxE,iBAAmBpxE,EAAKoxE,iBAAiBhxE,KAAIC,EAAAL,IAClDA,EAAK1E,cAAgB0E,EAAK1E,cAAc8E,KAAIC,EAAAL,IAC5CA,EAAKqxE,iBAAmBrxE,EAAKqxE,iBAAiBjxE,KAAIC,EAAAL,IAClDA,EAAKsxE,iBAAmBtxE,EAAKsxE,iBAAiBlxE,KAAIC,EAAAL,IAClDA,EAAKuxE,wBAA0BvxE,EAAKuxE,wBAAwBnxE,KAAIC,EAAAL,IAChEA,EAAK2qD,OAAS3qD,EAAK2qD,OAAOvqD,KAAIC,EAAAL,IAAOA,EAifrC,OAhfA3G,EAAA82E,IAAA72E,wBAAA5D,MAED,WACC6D,KAAKC,MAAMu3E,UAAUS,6BACrBl4E,uCAAA5D,MAED,SAAiC+7E,GAChC,GAAIA,EAASnB,kBACPp6C,EAAQ5+B,OAAO0F,KAAKy0E,EAASnB,gBAAiBh5E,OAAO0F,KAAKzD,KAAKC,MAAM82E,kBACxEmB,EAASnB,eAAepN,WAAahtC,EAAQu7C,EAASnB,eAAepN,SAAU3pE,KAAKC,MAAM82E,eAAepN,WACzGuO,EAASnB,eAAe7D,eAAiBv2C,EAAQu7C,EAASnB,eAAe7D,aAAclzE,KAAKC,MAAM82E,eAAe7D,eACjHgF,EAASnB,eAAex+C,UAAYoE,EAAQu7C,EAASnB,eAAex+C,QAASv4B,KAAKC,MAAM82E,eAAex+C,UAAW,CACnHv4B,KAAK6pE,QAAQqO,EAASnB,gBACtB,IAAMoB,EAAgBn4E,KAAK62E,qBAAqB12D,UAAU6J,WACtDhqB,KAAK8D,MAAMkmB,aAAemuD,GAC7Bn4E,KAAKyH,SAAS,CAAEuiB,WAAYmuD,IAE7Bn4E,KAAKy3B,kBAAoBz3B,KAAK62E,qBAAqBhrE,oBACnD7L,KAAK62E,qBAAqBS,WAAWY,EAASnB,eAAex+C,SAC7Dv4B,KAAK62E,qBAAqBK,kBAAkBgB,EAASvP,gBACrD3oE,KAAK62E,qBAAqBM,gBAAgBe,EAASd,oBACnDp3E,KAAKy3E,sBAAwB,GACzBS,EAASnB,eAAez9D,WAC3BtZ,KAAK62E,qBAAqBnuC,2BAC1B1oC,KAAKy3E,sBAAwBz3E,KAAK62E,qBAAqB/qE,2BAI1D/L,aAAA5D,MAED,SAAOkT,IAGFrP,KAAKC,MAAM8lC,iBAAiBpjC,cAC/B3C,KAAKqH,kBAAqBrH,KAAKqH,iBAAiBmrD,SAASnjD,EAAEojD,gBAC1DzyD,KAAK62E,qBAAqB58D,yBAA4Bja,KAAK62E,qBAAqB38D,sBACjFla,KAAK43E,wBAAuB,MAE7B73E,cAAA5D,MAED,SAAQ46E,GACP,IAAIpN,EAAW,KAEXoN,EAAepN,UAA4D,IAAhD5rE,OAAO0F,KAAKszE,EAAepN,UAAU3tE,OACnE2tE,EAAWoN,EAAepN,SAChBoN,EAAe7D,eACrBlzE,KAAKC,MAAM8lC,iBAAiBqyC,kBAC/BnF,GAAkC8D,EAAe7D,cAElDvJ,EAAW1yC,GAAK2yC,SAASmN,EAAe7D,aAAclzE,KAAKC,MAAM8lC,iBAAiBxY,cAAevtB,KAAKC,MAAM8lC,iBAAiBrO,wBAG1HiyC,GAAYA,EAASnyD,MAAQmyD,EAASnyD,KAAK6gE,iBAAmB1O,EAASnyD,KAAKogB,kBAC/E+xC,EAASnyD,KAAKogB,gBAAkB5oB,EAAoC26D,EAASnyD,KAAK6gE,iBAGnFr4E,KAAK62E,qBAAqBhN,QAAQF,EAAU3pE,KAAKC,MAAMi9B,MACnDysC,IACH3pE,KAAKs4E,cAAgB3O,EAASz8D,OAI/BlN,KAAKu4E,iBAAmB,CAAE9qD,eAAgB,CAAEnU,SAAU,IAAMqf,SAAU,IACtE34B,KAAKw4E,gBAAkBx4E,KAAKy4E,iBAC5Bz4E,KAAKu4E,iBAAmBv4E,KAAK04E,yBAAyB14E,KAAKu4E,kBACvDxB,EAAez9D,WAClBtZ,KAAKu4E,iBAAiB9qD,eAAenU,SAAWuD,EAAUk6D,EAAez9D,WAE1EtZ,KAAKu4E,iBAAiB5/C,SAASD,WAAa14B,KAAK62E,qBAAqBhrE,oBACtE7L,KAAKu4E,iBAAiB5/C,SAASrf,SAAWtZ,KAAK62E,qBAAqB/qE,sBACpE9L,KAAKu4E,iBAAiB9qD,eAAelsB,MAAQvB,KAAK62E,qBAAqBhL,cACvE9rE,0BAAA5D,MAED,WACC,OAAI6D,KAAKC,MAAM8lC,iBAAiB4yC,cAAgB34E,KAAKC,MAAM8lC,iBAAiB4yC,aAAaC,QACjF54E,KAAKC,MAAM8lC,iBAAiB4yC,aAAaC,QAE1C5pE,EAA4BhP,KAAKC,MAAMi9B,KAAMhuB,GAAa2pE,qCACjE94E,2BAAA5D,MAED,WACC,OAAI6D,KAAKC,MAAM8lC,iBAAiB4yC,cAAgB34E,KAAKC,MAAM8lC,iBAAiB4yC,aAAaG,UACjF94E,KAAKC,MAAM8lC,iBAAiB4yC,aAAaG,UAE1C9pE,EAA4BhP,KAAKC,MAAMi9B,KAAMhuB,GAAa6pE,sCACjEh5E,+BAAA5D,MAED,WACC,GAAI6D,KAAKC,MAAMu3E,UAAUwB,6BAA8B,CACtD,IAAM9rE,EAAQlN,KAAKC,MAAMu3E,UAAUwB,+BACnC,GAAI9rE,EACH,OAAOA,EAGT,OAAO8B,EAA4BhP,KAAKC,MAAMi9B,KAAMhuB,GAAa+pE,wBAAyB,CAAEC,WAAYl5E,KAAK62E,qBAAqBhL,gBAClI9rE,oBAAA5D,MAED,WAEC,IAAMg9E,EAAoBn5E,KAAK62E,qBAAqB12D,UAAU6J,WACxDgtD,EAAoBh3E,KAAKC,MAAM82E,eAAeC,kBAIpD,OAAImC,IAAsBh5E,EAAKC,OAAU42E,IAAsB72E,EAAKG,OAAS02E,IAAsB72E,EAAKI,OAE7F44E,IAAsBh5E,EAAKM,QAAWu2E,IAAsB72E,EAAKC,OAAS42E,IAAsB72E,EAAKI,OAErG44E,IAAsBh5E,EAAKG,OAAU02E,IAAsB72E,EAAKC,OAAS42E,IAAsB72E,EAAKM,QAEpG04E,IAAsBh5E,EAAKI,IAC9B44E,EAEAnC,GAAwCmC,EARxCA,KASRp5E,uBAAA5D,MAED,WACC,IAAM8tB,EAAajqB,KAAK62E,qBAAqB12D,UAAU8J,WACjDmvD,EAAmBp5E,KAAK62E,qBAAqB12D,UAAU6J,WACzDqvD,EAAe,KA+BnB,OA7BIpvD,IACCmvD,IAAqBj5E,EAAKC,MACzBJ,KAAK8D,MAAMkmB,aAAe7pB,EAAKC,OAAS6pB,EAAWwZ,IACtD41C,EAAepvD,EAAWwZ,IAEhBzjC,KAAK8D,MAAMkmB,aAAe7pB,EAAKM,QAAUwpB,EAAWmtB,MAC9DiiC,EAAepvD,EAAWmtB,KAGjBgiC,IAAqBj5E,EAAKM,OAChCT,KAAK8D,MAAMkmB,aAAe7pB,EAAKM,QAAUwpB,EAAWwZ,IACvD41C,EAAepvD,EAAWwZ,IAEhBzjC,KAAK8D,MAAMkmB,aAAe7pB,EAAKG,OAAS2pB,EAAWmtB,MAC7DiiC,EAAepvD,EAAWmtB,KAGjBgiC,IAAqBj5E,EAAKG,MAChCN,KAAK8D,MAAMkmB,aAAe7pB,EAAKG,OAAS2pB,EAAWwZ,IACtD41C,EAAepvD,EAAWwZ,IAEhBzjC,KAAK8D,MAAMkmB,aAAe7pB,EAAKI,KAAO0pB,EAAWmtB,MAC3DiiC,EAAepvD,EAAWmtB,KAGjBgiC,IAAqBj5E,EAAKI,KAAO0pB,EAAWmtB,MACtDiiC,EAAepvD,EAAWmtB,MAGrBiiC,KACPt5E,uBAAA5D,MAED,WACC,IAAIm9E,EAAez4E,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAasF,cAAc89D,KAAMt4E,UAAU,iCAc1E,OAbIjB,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKC,MACvDJ,KAAK8D,MAAMkmB,aAAe7pB,EAAKM,SAClC64E,EAAez4E,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAasF,cAAc+9D,MAAOv4E,UAAU,mCAE9DjB,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKM,OAC9DT,KAAK8D,MAAMkmB,aAAe7pB,EAAKG,QAClCg5E,EAAez4E,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAasF,cAAc+9D,MAAOv4E,UAAU,mCAE9DjB,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKG,OAC9DN,KAAK8D,MAAMkmB,aAAe7pB,EAAKI,MAClC+4E,EAAez4E,EAAAC,cAACqQ,IAAKrL,KAAMqQ,GAAasF,cAAc+9D,MAAOv4E,UAAU,mCAGlEq4E,KACPv5E,8BAAA5D,MAED,WACC,IAAM8tB,EAAajqB,KAAK62E,qBAAqB12D,UAAU8J,WAEvD,IAAiD,IAA7CjqB,KAAKC,MAAM8lC,iBAAiB0zC,aAAwB,CACvD,GAAIxvD,EAAY,CACf,IAAKA,EAAWwZ,MAAQxZ,EAAWmtB,IAElC,OADAxjC,EAAOrJ,KAAK,yEACL,EAED,GAAIvK,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKC,MAAO,CACzE,GAAI6pB,EAAWwZ,MAAQxZ,EAAWmtB,KAAOntB,EAAWwZ,KAAO6yC,GAE1D,OADA1iE,EAAOrJ,KAAK,8FAAgG+rE,KACrG,EACD,IAAKrsD,EAAWwZ,KAAOxZ,EAAWmtB,KAAOntB,EAAWmtB,KAAO++B,GAEjE,OADAviE,EAAOrJ,KAAK,2FAA6F4rE,KAClG,EACD,GAAIlsD,EAAWwZ,KAAOxZ,EAAWmtB,IAEvC,OADAxjC,EAAOrJ,KAAK,mGACL,OAGF,GAAIvK,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKM,OAAQ,CAC1E,GAAIwpB,EAAWwZ,MAAQxZ,EAAWmtB,KAAOntB,EAAWwZ,KAAO+yC,GAE1D,OADA5iE,EAAOrJ,KAAK,8FAAgGisE,KACrG,EACD,IAAKvsD,EAAWwZ,KAAOxZ,EAAWmtB,KAAOntB,EAAWmtB,KAAOk/B,GAEjE,OADA1iE,EAAOrJ,KAAK,2FAA6F+rE,KAClG,EACD,GAAIrsD,EAAWwZ,KAAOxZ,EAAWmtB,IAEvC,OADAxjC,EAAOrJ,KAAK,+FACL,OAGF,GAAIvK,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKG,MAAO,CACzE,GAAI2pB,EAAWwZ,MAAQxZ,EAAWmtB,KAAOntB,EAAWwZ,KAAOizC,GAE1D,OADA9iE,EAAOrJ,KAAK,8FAAgGmsE,KACrG,EACD,IAAKzsD,EAAWwZ,KAAOxZ,EAAWmtB,KAAOntB,EAAWmtB,KAAOo/B,GAEjE,OADA5iE,EAAOrJ,KAAK,2FAA6FisE,KAClG,EACD,GAAIvsD,EAAWwZ,KAAOxZ,EAAWmtB,IAEvC,OADAxjC,EAAOrJ,KAAK,+FACL,OAGF,GAAIvK,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKI,IAClE,QAAI0pB,EAAWwZ,MACd7vB,EAAOrJ,KAAK,0DACL,QAKH,GAAIvK,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKI,IAClE,OAAO,EAER,OAAO,EAGR,OAAO,KAIRR,+BAAA5D,MACA,SAAyBu9E,EAAW5zC,GACnC,IAAM8oC,EAAkB9oC,IAAuC,IAA5BA,EAAQ8oC,gBACrC/hE,EAAuB7M,KAAKC,MAAM8lC,iBAAiB4zC,+BAAiCC,GAAgCC,KACpHnhD,EAAa14B,KAAK62E,qBAAqBhrE,kBAAkB,CAAEgB,qBAAsBA,EAAsB+hE,gBAAiBA,IAO9H,OANI5uE,KAAKw4E,gBAAgBx8E,OAAS,GACjC09E,EAAUhhD,WAAaohD,GAAKphD,EAAY14B,KAAKw4E,iBAC7CkB,EAAU9gD,aAAemhD,GAAKrhD,EAAY14B,KAAKw4E,kBAE/CkB,EAAUhhD,WAAaA,EAEjBghD,KAGR35E,qBAAA5D,MACA,WACC,IAAM69E,EAAa,GACb9pE,EAAWlQ,KAAK62E,qBAAqBjuC,cAC3C,GAAI7qC,OAAO0F,KAAKyM,GAAUlU,OAAS,EAClC,IAAK,IAAM6sC,KAAc34B,EAAU,CAClC,GAAKuG,GAAIvG,EAAU24B,GAGH34B,EAAS24B,GACbxjB,QACX20D,EAAW1rE,KAAKu6B,GAInB,OAAOmxC,KAGRj6E,oBAAA5D,MACA,SAAc89E,GACTj6E,KAAKC,MAAMu3E,UAAU0C,uBACxBl6E,KAAKC,MAAMu3E,UAAU0C,sBAAsBD,MAE5Cl6E,6BAAA5D,MAED,SAAuBg+E,GAEtBn6E,KAAK62E,qBAAqBnuC,2BAC1B,IAAM0xC,EAAmBp6E,KAAK62E,qBAAqB/qE,sBAGnD,GAAI9L,KAAKs4E,gBAAkBt4E,KAAK62E,qBAAqBhL,YAClD7rE,KAAKy3B,mBAAqBvpB,KAAKC,UAAUnO,KAAKy3B,qBAC/CvpB,KAAKC,UAAUnO,KAAK62E,qBAAqBhrE,sBACxCqC,KAAKC,UAAUnO,KAAKy3E,yBAA2BvpE,KAAKC,UAAUisE,IAC/Dp6E,KAAKC,MAAM8lC,iBAAiBs0C,2BAA4B,CAGzD,IAAIX,EAAY,CAAEjsD,eAAgB,GAAIkL,SAAU,KAChD+gD,EAAY15E,KAAK04E,yBAAyBgB,EAAW,CAAE9K,iBAAiB,KAC9Dj2C,SAASD,WAAa14B,KAAK62E,qBAAqBhrE,oBAC1D,IAAMyuE,EAAgBt6E,KAAK62E,qBAAqBt2D,kBAAiB,GAAM,GAAM,GAAM,GAC/E+5D,IACHZ,EAAUjsD,eAAenU,SAAWghE,GAErCZ,EAAU/gD,SAASrf,SAAWtZ,KAAK62E,qBAAqB/qE,sBACpD9L,KAAK62E,qBAAqBhL,aAC7B6N,EAAUjsD,eAAelsB,MAAQvB,KAAK62E,qBAAqBhL,YAE5D,IAAMpzC,EAAwBz4B,KAAKu6E,2BAC7BC,EAAU,IAAIriD,GAAuBuhD,EAAW15E,KAAKu4E,iBAC1Dv4E,KAAKC,MAAM82E,eAAex+C,QAASv4B,KAAKC,MAAMu3E,UAAUh/C,qBAAsBC,GAC/Ez4B,KAAK62E,qBAAqB4D,qBAAqBD,GAI/Cx6E,KAAKy3B,kBAAoBz3B,KAAK62E,qBAAqBhrE,oBAEnD7L,KAAKu4E,iBAAmB17D,EAAU68D,GAClC15E,KAAKy3E,sBAAwBz3E,KAAK62E,qBAAqB/qE,sBAEpDquE,GACHn6E,KAAK+B,cAAc24E,OAEpB36E,4BAAA5D,MAED,SAAsB2H,GACrB9D,KAAKyH,SAAS,CAAErG,sBAAuB0C,OACvC/D,uBAAA5D,MAED,SAAiBg8E,GAChBn4E,KAAKyH,SAAS,CACbuiB,WAAYmuD,IAEbn4E,KAAK62E,qBAAqBI,cAAckB,MACxCp4E,aAAA5D,MAED,WACK6D,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKC,MACvDJ,KAAK8D,MAAMkmB,aAAe7pB,EAAKC,MAClCJ,KAAK63E,iBAAiB13E,EAAKM,QAE3BT,KAAK63E,iBAAiB13E,EAAKC,OAElBJ,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKM,OAC9DT,KAAK8D,MAAMkmB,aAAe7pB,EAAKM,OAClCT,KAAK63E,iBAAiB13E,EAAKG,OAE3BN,KAAK63E,iBAAiB13E,EAAKM,QAElBT,KAAK62E,qBAAqB12D,UAAU6J,aAAe7pB,EAAKG,QAC9DN,KAAK8D,MAAMkmB,aAAe7pB,EAAKG,MAClCN,KAAK63E,iBAAiB13E,EAAKI,KAE3BP,KAAK63E,iBAAiB13E,EAAKG,WAG7BP,aAAA5D,MAED,WAAS,IAAA2L,OACF6yE,EAAqB36E,KAAKC,MAAM8lC,iBAAiBpjC,aAAe3C,KAAKC,MAAM8lC,iBAAiBxyB,YAC9FxR,EAAgB/B,KAAK+B,cAAc8E,KAAK7G,KAAM46E,IAE9CD,IACH54E,EAAgB,MAEjB,IAAMN,EAAazB,KAAK66E,sBAClBl5E,EAAc3B,KAAK86E,uBAEnBnR,EAAW3pE,KAAK62E,qBAAqB12D,UAC3C,GAAiB,OAAbwpD,EAAmB,CACtB,IAAIr2D,EAAmB,GACnBynE,EAAkBl6E,EAAAC,0BAClBk6E,EAAmBn6E,EAAAC,0BACnBm6E,EAAY,KACZC,GAAa,EAEjB,GAAIl7E,KAAKC,MAAM8lC,iBAAiBxyB,cAC/BwnE,EAAmBl6E,EAAAC,cAACszE,IACnBlqD,cAAey/C,EAASz/C,cACxBC,KAAMw/C,EAASx/C,KACfnmB,WAAYhE,KAAK62E,qBACjBrC,iBAAkBx0E,KAAKC,MAAMu3E,UAAUhD,iBACvCsB,aAAc6E,EAAqB36E,KAAK43E,uBAAuB/wE,KAAK7G,MAAM,GAAQ,KAClFoR,KAAMu4D,EAASv4D,KACfmZ,QAASo/C,EAASp/C,QAClBwqD,YAAa/0E,KAAKC,MAAM8lC,iBAAiBxb,UAG1C2wD,EAAal7E,KAAKC,MAAM8lC,iBAAiBxb,UAAYo/C,EAASv4D,MAAQu4D,EAASp/C,SAE/EywD,EAAoBn6E,EAAAC,cAACwC,IACpBU,WAAYhE,KAAK62E,qBACjBh1E,UAAY84E,EAAoE,KAA/C36E,KAAK43E,uBAAuB/wE,KAAK7G,MAAM,GACxE+B,cAAeA,EACfN,WAAYA,EACZE,YAAaA,EACbP,sBAAuBpB,KAAK8D,MAAM1C,sBAClCoC,4BAA6BxD,KAAKC,MAAM8lC,iBAAiBviC,8BAEtDxD,KAAKg4E,2BAA2B,CACnC,IAAMmD,EAAan7E,KAAK+3E,mBAElBqD,EAAkBD,EAAWl7E,OAAwC,iCAA/Bk7E,EAAWl7E,MAAMgB,UAC1D+N,EAA4BhP,KAAKC,MAAMi9B,KAAMhuB,GAAamsE,0CAC1DrsE,EAA4BhP,KAAKC,MAAMi9B,KAAMhuB,GAAaosE,4CAC7DL,EACCp6E,EAAAC,cAACyQ,IAAOE,KAAK,QAAQxQ,UAAU,wBAAwBuQ,QAASxR,KAAKu7E,OAAO10E,KAAK7G,MAAO,aAAYo7E,GAClGD,GAML,IAAMK,EAAc36E,EAAAC,cAACgY,IACpB/Y,IAAI,kBACJiE,WAAYhE,KAAK62E,qBACjBt7D,qBAAsBvb,KAAKC,MAAM82E,eAAex7D,qBAChDna,sBAAuBpB,KAAKoB,sBAC5Bsc,aAAc1d,KAAKC,MAAMyd,aACzBnK,YAAavT,KAAKC,MAAM8lC,iBAAiBxyB,cAIzCD,EADiD,YAA9CtT,KAAKC,MAAM8lC,iBAAiBxY,cACX1sB,EAAAC,cAACoB,IACpBT,WAAYA,EACZE,YAAaA,EACbzB,OAAQF,KAAK8D,MAAMkmB,WACnBzoB,MAAOvB,KAAK62E,qBAAqBhL,WACjChqE,UAAW7B,KAAK43E,uBAAuB/wE,KAAK7G,MAAM,GAClD+B,cAAeA,EACfX,sBAAuBpB,KAAK8D,MAAM1C,uBAEjCo6E,GAEsD,WAA9Cx7E,KAAKC,MAAM8lC,iBAAiBxY,cAErC1sB,EAAAC,qBAAKG,UAAWC,GAAW,8BAC1B,CACC,4CAA6Cy5E,GAAsBO,EACnE,0CAA2CP,IAAuBO,EAClE,uDAAwDP,GAAsBO,KAI9EM,GAEqD,cAA9Cx7E,KAAKC,MAAM8lC,iBAAiBxY,cAClB1sB,EAAAC,cAACwB,IACpBjB,QACA6B,gBAAiBlD,KAAKC,MAAM8lC,iBAAiBpjC,YAAc3C,KAAK43E,uBAAuB/wE,KAAK7G,MAAM,GAAQ,KAC1GuC,UAAW,CACVhB,MAAOvB,KAAK62E,qBAAqBhL,WACjCppE,QAAS+4E,GAEV/5E,WAAYA,EACZE,YAAaA,EACbE,UAAW7B,KAAK43E,uBAAuB/wE,KAAK7G,MAAM,GAClD+B,cAAeA,EACfX,sBAAuBpB,KAAK8D,MAAM1C,sBAClCuB,YAAa3C,KAAKC,MAAM8lC,iBAAiBpjC,cAGtB9B,EAAAC,cAACzB,IACpBo8E,OAAQz7E,KAAKC,MAAMu3E,UAAU0C,sBAC7B34E,MAAOvB,KAAK62E,qBAAqBhL,WACjC3rE,OAAQF,KAAK8D,MAAMkmB,WACnBnoB,UAAW7B,KAAK43E,uBAAuB/wE,KAAK7G,MAAM,GAClD+B,cAAeA,EACfX,sBAAuBpB,KAAK8D,MAAM1C,sBAClCK,WAAYA,EACZE,YAAaA,GAEZ65E,GAGH,IAAMv6E,EAAYC,GAAW,qBAC5B,CACC,0BAA2BlB,KAAKC,MAAM8lC,iBAAiBxyB,YACvD,2BAA4BvT,KAAKC,MAAMkI,MACvC,6BAA8BnI,KAAKC,MAAMkI,qBACzCM,OACazI,KAAK8D,MAAMkmB,aACpBqvD,EAAer5E,KAAK83E,mBACtB4D,EAAgB,KAIpB,OAHqB,OAAjBrC,IACHqC,EAAgB,CAAEntE,MAAO8qE,EAAe,OAGxCx4E,EAAAC,cAAC66E,IAASz/C,MAAOl8B,KAAK62E,qBAAqBrN,YAC1C3oE,EAAAC,uBACC,aAAYkO,EAA4BhP,KAAKC,MAAMi9B,KAAMhuB,GAAa0sE,kBACtE9sE,KAAK,gBACL5G,IAAM,SAACA,GAAG,OAAMJ,EAAKT,iBAAmBa,GACxCjH,UAAWA,EACXmU,SAAS,IACTg8C,OAAQpxD,KAAKoxD,OACb1qD,MAAOg1E,GAENT,EACAF,EACAznE,EACA0nE,IAKL,OAAOn6E,EAAAC,8BACP81E,CAAA,EAniB2B/1E,EAAMrB,cAklBpB6zD,GAAWujB,GAAgB,CAAEiF,YAAY,4aCvmBhB,IAGlCC,YAAgB51E,GAAA3G,EAAAu8E,EAAA51E,GAAA,IAAAzG,EAAAC,GAAAo8E,GAErB,SAAAA,EAAY77E,GAAO,IAAAwG,EAWmD,OAXnD9G,OAAAm8E,IAClBr1E,EAAAhH,EAAArB,UAAM6B,IACD6D,MAAQ,CACZi4E,UAAU,EACVh+D,MAAO,KACPlK,KAAM,MAEPpN,EAAKu1E,8BAAgCv1E,EAAKu1E,8BAA8Bn1E,KAAIC,EAAAL,IAC5EA,EAAKw1E,YAAcx1E,EAAKw1E,YAAYp1E,KAAIC,EAAAL,IACxCA,EAAKy1E,0BAA2B,EAChCz1E,EAAKwxE,wBAA0BxxE,EAAKwxE,wBAAwBpxE,KAAIC,EAAAL,IAChEA,EAAKmxE,uBAAyBnxE,EAAKmxE,uBAAuB/wE,KAAIC,EAAAL,IAAOA,EAwLrE,OAvLA3G,EAAAg8E,IAAA/7E,wBAAA5D,MAED,SAAkB4hB,EAAOlK,GACxB7T,KAAKyH,SAAS,CACbs0E,UAAU,EACVh+D,MAAOA,EACPlK,KAAMA,OAEP9T,8BAAA5D,MAED,WACC6D,KAAKk8E,0BAA2B,KAChCn8E,6BAAA5D,MAED,SAAuBggF,GACtBn8E,KAAK42E,eAAegB,uBAAuBuE,MAC3Cp8E,oCAAA5D,MAED,WAAgC,IAAA2L,OAiB/B,OAhBA/J,OAAOgyB,OAAO/vB,KAAKC,MAAMu3E,UAAW,CAAES,wBAA2Bj4E,KAAKi4E,0BAErEp3E,EAAAC,cAAC81E,IACA1uE,IACC,SAACk0E,GACAt0E,EAAK8uE,eAAiBwF,GAGxBrF,eAAgB/2E,KAAKC,MAAM82E,eAC3BhxC,iBAAkB/lC,KAAKC,MAAM8lC,iBAC7BroB,aAAc1d,KAAKC,MAAMyd,aACzB85D,UAAYx3E,KAAKC,MAAMu3E,UACvB7O,eAAgB3oE,KAAKC,MAAM0oE,eAC3ByO,mBAAoBp3E,KAAKC,MAAMm3E,mBAC/BjvE,MAAOnI,KAAKC,MAAMkI,WAGpBpI,kBAAA5D,MAED,WACC6D,KAAKyH,SAAS,CACbs0E,UAAU,EACVh+D,MAAO,KACPlK,KAAM,UAEP9T,mCAAA5D,MAED,WACC,IASI6wC,EAOAqvC,EAhBEC,EAAY,CACjBnzE,KAAM4K,EAAc/T,KAAKC,MAAMi9B,KAAMhuB,GAAaqtE,+BAClDz2E,KAAM,SAED02E,EACL37E,EAAAC,qBAAKG,UAAU,4BACdJ,EAAAC,cAACuxC,IAAkBnoC,YAAaoyE,KAI5BG,EAAiB1oE,EAAc/T,KAAKC,MAAMi9B,KAAMhuB,GAAawtE,4BAC7DC,EAAY5oE,EAAc/T,KAAKC,MAAMi9B,KAAMhuB,GAAaomE,kCACxDsH,EAAgB58E,KAAKC,MAAMu3E,UAAU0C,sBACrC2C,EAAa9oE,EAAc/T,KAAKC,MAAMi9B,KAAMhuB,GAAa4tE,mCACzDC,EAAiB/8E,KAAKi8E,YACtBe,EAA8BjpE,EAAc/T,KAAKC,MAAMi9B,KAAMhuB,GAAa0sE,kBAEhF,MAAkD,WAA9C57E,KAAKC,MAAM8lC,iBAAiBxY,gBACO,IAAlCvtB,KAAKk8E,0BACRlvC,EAAej5B,EAAc/T,KAAKC,MAAMi9B,KAAMhuB,GAAa+tE,2BAC3DZ,EACCx7E,EAAAC,qBAAKG,UAAU,4BACdJ,EAAAC,cAACuB,GACApB,UAAU,wCACVY,UAAW+6E,EACX76E,cAAeg7E,EACf37E,yBACAK,WAAYk7E,EACZh7E,YAAak7E,OAKhB7vC,EAAej5B,EAAc/T,KAAKC,MAAMi9B,KAAMhuB,GAAaguE,0BAC3Db,EACCx7E,EAAAC,qBAAKG,UAAU,4BACdJ,EAAAC,cAACuB,GACApB,UAAU,wCACVY,UAAW+6E,EACXx7E,yBACAK,WAAYk7E,MAKZ38E,KAAKC,MAAM8lC,iBAAiBxyB,YAE9B1S,EAAAC,uBACC,aAAYk8E,EACZluE,KAAK,gBACL7N,UAAU,+DAEVJ,EAAAC,qBAAKG,UAAU,qCACbu7E,EACD37E,EAAAC,yBACAD,EAAAC,yBACAD,EAAAC,qBAAKG,UAAU,4BACb+rC,EACDnsC,EAAAC,yBACC27E,IAGFJ,GAKHx7E,EAAAC,uBACC,aAAYk8E,EACZluE,KAAK,gBACL7N,UAAU,kDAEVJ,EAAAC,qBAAKG,UAAW,qCACbu7E,EACF37E,EAAAC,yBACAD,EAAAC,yBACAD,EAAAC,qBAAKG,UAAU,4BACb+rC,EACDnsC,EAAAC,yBACC27E,IAGFJ,MAKkC,IAAlCr8E,KAAKk8E,0BACRlvC,EAAej5B,EAAc/T,KAAKC,MAAMi9B,KAAMhuB,GAAa+tE,2BAC3DZ,EACCx7E,EAAAC,cAACzB,IACAa,OAAO,QACPkB,yBACAK,WAAYk7E,EACZh7E,YAAak7E,EACbh7E,UAAW+6E,EACX76E,cAAeg7E,EACfx7E,MAAQi7E,GAER37E,EAAAC,qBAAKG,UAAU,uDACb+rC,EACDnsC,EAAAC,yBACC27E,MAKJzvC,EAAej5B,EAAc/T,KAAKC,MAAMi9B,KAAMhuB,GAAaguE,0BAC3Db,EACCx7E,EAAAC,qBAAKG,UAAY,0BAChBJ,EAAAC,cAACzB,IACAwC,UAAW+6E,EACX18E,OAAO,QACPkB,yBACAK,WAAYk7E,EACZh7E,YAAY,OACZJ,MAAQi7E,GAER37E,EAAAC,qBAAKG,UAAU,uDACb+rC,EACDnsC,EAAAC,yBACC27E,YAQN18E,aAAA5D,MAED,WACC,OAAI6D,KAAK8D,MAAMi4E,SACP/7E,KAAKm9E,+BAENn9E,KAAKg8E,oCACZF,CAAA,EArM6Bj7E,EAAMrB,WAoPrCs8E,GAAiBz4E,aAAe,CAC/B0iC,iBAAkB,CACjBxY,cAAe,SACfha,aAAa,EACb5Q,aAAa,EACbqjE,YAAY,EACZxiE,6BAA6B,EAC7Bi2E,cAAc,EACdE,6BAA8B,QAC9BvB,kBAAkB,EAClBiC,4BAA4B,EAC5BnI,8BAA+B,KAC/BC,+BAAgC,IAChCz6C,uBAAuB,GAExB8/C,UAAW,GAEXrvE,OAAO,GAGR,OAAekrD,GAAWyoB,GAAkB,CAAED,YAAY"}